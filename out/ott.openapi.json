{
  "basePath": "/api_v3",
  "definitions": {
    "KalturaAccessControlBlockAction": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaAssetRuleAction"
        }
      ],
      "properties": {},
      "title": "KalturaAccessControlBlockAction",
      "type": "object"
    },
    "KalturaAccessControlMessage": {
      "properties": {
        "code": {
          "description": "Code",
          "type": "string"
        },
        "message": {
          "description": "Message",
          "type": "string"
        }
      },
      "title": "KalturaAccessControlMessage",
      "type": "object"
    },
    "KalturaActionPermissionItem": {
      "properties": {
        "action": {
          "description": "Action - separated with comma",
          "type": "string"
        },
        "actionPrivacy": {
          "description": "Enum Type: `KalturaSocialActionPrivacy`\n\nAction privacy",
          "enum": [
            "ALLOW",
            "DONT_ALLOW"
          ],
          "type": "string",
          "x-enumLabels": [
            "ALLOW",
            "DONT_ALLOW"
          ],
          "x-enumType": "KalturaSocialActionPrivacy"
        },
        "network": {
          "description": "Enum Type: `KalturaSocialNetwork`\n\nSocial network",
          "enum": [
            "facebook"
          ],
          "type": "string",
          "x-enumLabels": [
            "FACEBOOK"
          ],
          "x-enumType": "KalturaSocialNetwork"
        },
        "privacy": {
          "description": "Enum Type: `KalturaSocialPrivacy`\n\nSocial privacy",
          "enum": [
            "UNKNOWN",
            "EVERYONE",
            "ALL_FRIENDS",
            "FRIENDS_OF_FRIENDS",
            "SELF",
            "CUSTOM"
          ],
          "type": "string",
          "x-enumLabels": [
            "UNKNOWN",
            "EVERYONE",
            "ALL_FRIENDS",
            "FRIENDS_OF_FRIENDS",
            "SELF",
            "CUSTOM"
          ],
          "x-enumType": "KalturaSocialPrivacy"
        }
      },
      "title": "KalturaActionPermissionItem",
      "type": "object"
    },
    "KalturaActionResult": {
      "description": "Result of action performed on entity with Id",
      "properties": {
        "id": {
          "description": "`readOnly`\n\nIdentifier of entity",
          "readOnly": true,
          "type": "integer"
        },
        "result": {
          "$ref": "#/definitions/KalturaMessage"
        }
      },
      "title": "KalturaActionResult",
      "type": "object"
    },
    "KalturaAddDefaultIfEmptyResponseProfile": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaRelatedObjectFilter"
        }
      ],
      "description": "Kaltura add default if empty ResponseProfile Filter",
      "properties": {},
      "title": "KalturaAddDefaultIfEmptyResponseProfile",
      "type": "object"
    },
    "KalturaAdsContext": {
      "properties": {
        "sources": {
          "items": {
            "$ref": "#/definitions/KalturaAdsSource"
          },
          "type": "array"
        }
      },
      "title": "KalturaAdsContext",
      "type": "object"
    },
    "KalturaAdsSource": {
      "properties": {
        "adsParam": {
          "description": "The parameters to pass to the ads server",
          "type": "string"
        },
        "adsPolicy": {
          "description": "Enum Type: `KalturaAdsPolicy`\n\nAds policy",
          "enum": [
            "NO_ADS",
            "KEEP_ADS"
          ],
          "type": "string",
          "x-enumLabels": [
            "NO_ADS",
            "KEEP_ADS"
          ],
          "x-enumType": "KalturaAdsPolicy"
        },
        "id": {
          "description": "`readOnly`\n\nFile unique identifier",
          "readOnly": true,
          "type": "integer"
        },
        "type": {
          "description": "Device types as defined in the system",
          "type": "string"
        }
      },
      "title": "KalturaAdsSource",
      "type": "object"
    },
    "KalturaAggregatedIngestInfo": {
      "properties": {
        "partialFailureCount": {
          "description": "Number of results that include no error with severity TotalFailure but at at least one error of severity PartialFailure",
          "type": "integer"
        },
        "resultsCount": {
          "description": "Number of results",
          "type": "integer"
        },
        "totalFailureCount": {
          "description": "Number of results that include at least one error of severity TotalFailure",
          "type": "integer"
        },
        "warningsCount": {
          "description": "Number of results that include at least one warning",
          "type": "integer"
        }
      },
      "title": "KalturaAggregatedIngestInfo",
      "type": "object"
    },
    "KalturaAggregatedPropertySkipCondition": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaPropertySkipCondition"
        }
      ],
      "description": "Skips current request according to aggregation condition on given property",
      "properties": {
        "aggregationType": {
          "description": "Enum Type: `KalturaAggregationType`\n\nThe aggregation type on which the condition is based on",
          "enum": [
            "Count",
            "Sum",
            "Avg"
          ],
          "type": "string",
          "x-enumLabels": [
            "COUNT",
            "SUM",
            "AVG"
          ],
          "x-enumType": "KalturaAggregationType"
        }
      },
      "title": "KalturaAggregatedPropertySkipCondition",
      "type": "object"
    },
    "KalturaAggregationCountFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaRelatedObjectFilter"
        }
      ],
      "description": "Kaltura Aggregation CountFilter",
      "properties": {
        "orderBy": {
          "enum": [
            "NONE"
          ],
          "type": "string",
          "x-enumLabels": [
            "NONE"
          ],
          "x-enumType": "KalturaAggregationCountOrderBy"
        }
      },
      "title": "KalturaAggregationCountFilter",
      "type": "object"
    },
    "KalturaAllowPlaybackAction": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaAssetRuleAction"
        }
      ],
      "properties": {},
      "title": "KalturaAllowPlaybackAction",
      "type": "object"
    },
    "KalturaAnnouncement": {
      "properties": {
        "enabled": {
          "description": "Announcement enabled",
          "type": "boolean"
        },
        "id": {
          "description": "`readOnly`\n\nAnnouncement id",
          "readOnly": true,
          "type": "integer"
        },
        "imageUrl": {
          "description": "Announcement image URL, relevant for system announcements",
          "type": "string"
        },
        "includeIot": {
          "description": "Include IOT",
          "type": "boolean"
        },
        "includeMail": {
          "description": "Include Mail",
          "type": "boolean"
        },
        "includeSms": {
          "description": "Include SMS",
          "type": "boolean"
        },
        "includeUserInbox": {
          "description": "Should add to user inbox",
          "type": "boolean"
        },
        "mailSubject": {
          "description": "Mail Subject",
          "type": "string"
        },
        "mailTemplate": {
          "description": "Mail Template",
          "type": "string"
        },
        "message": {
          "description": "Announcement message",
          "type": "string"
        },
        "name": {
          "description": "Announcement name",
          "type": "string"
        },
        "recipients": {
          "description": "Enum Type: `KalturaAnnouncementRecipientsType`\n\nAnnouncement recipients: All=0/LoggedIn=1/Guests=2/Other=3",
          "enum": [
            "All",
            "LoggedIn",
            "Guests",
            "Other"
          ],
          "type": "string",
          "x-enumLabels": [
            "ALL",
            "LOGGEDIN",
            "GUESTS",
            "OTHER"
          ],
          "x-enumType": "KalturaAnnouncementRecipientsType"
        },
        "startTime": {
          "description": "Announcement start time",
          "type": "integer"
        },
        "status": {
          "description": "`readOnly`\n\nEnum Type: `KalturaAnnouncementStatus`\n\nAnnouncement status: NotSent=0/Sending=1/Sent=2/Aborted=3",
          "enum": [
            "NotSent",
            "Sending",
            "Sent",
            "Aborted"
          ],
          "readOnly": true,
          "type": "string",
          "x-enumLabels": [
            "NOTSENT",
            "SENDING",
            "SENT",
            "ABORTED"
          ],
          "x-enumType": "KalturaAnnouncementStatus"
        },
        "timezone": {
          "description": "Announcement time zone",
          "type": "string"
        }
      },
      "title": "KalturaAnnouncement",
      "type": "object"
    },
    "KalturaAnnouncementFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "description": "order announcements",
      "properties": {
        "idIn": {
          "description": "A list of comma separated announcement ids.",
          "type": "string"
        },
        "orderBy": {
          "enum": [
            "NONE"
          ],
          "type": "string",
          "x-enumLabels": [
            "NONE"
          ],
          "x-enumType": "KalturaAnnouncementOrderBy"
        }
      },
      "title": "KalturaAnnouncementFilter",
      "type": "object"
    },
    "KalturaAnnouncementListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "List of message announcements from DB.",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaAnnouncement"
          },
          "type": "array"
        }
      },
      "title": "KalturaAnnouncementListResponse",
      "type": "object"
    },
    "KalturaApiActionPermissionItem": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaPermissionItem"
        }
      ],
      "properties": {
        "action": {
          "description": "API action name",
          "type": "string"
        },
        "service": {
          "description": "API service name",
          "type": "string"
        }
      },
      "title": "KalturaApiActionPermissionItem",
      "type": "object"
    },
    "KalturaApiArgumentPermissionItem": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaPermissionItem"
        }
      ],
      "properties": {
        "action": {
          "description": "API action name",
          "type": "string"
        },
        "parameter": {
          "description": "API parameter name",
          "type": "string"
        },
        "service": {
          "description": "API service name",
          "type": "string"
        }
      },
      "title": "KalturaApiArgumentPermissionItem",
      "type": "object"
    },
    "KalturaApiExceptionArg": {
      "properties": {
        "name": {
          "description": "Argument name",
          "type": "string"
        },
        "value": {
          "description": "Argument value",
          "type": "string"
        }
      },
      "title": "KalturaApiExceptionArg",
      "type": "object"
    },
    "KalturaApiParameterPermissionItem": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaPermissionItem"
        }
      ],
      "properties": {
        "action": {
          "description": "Enum Type: `KalturaApiParameterPermissionItemAction`\n\nAPI action type",
          "enum": [
            "READ",
            "INSERT",
            "UPDATE",
            "WRITE",
            "ALL"
          ],
          "type": "string",
          "x-enumLabels": [
            "READ",
            "INSERT",
            "UPDATE",
            "WRITE",
            "ALL"
          ],
          "x-enumType": "KalturaApiParameterPermissionItemAction"
        },
        "object": {
          "description": "API object name",
          "type": "string"
        },
        "parameter": {
          "description": "API parameter name",
          "type": "string"
        }
      },
      "title": "KalturaApiParameterPermissionItem",
      "type": "object"
    },
    "KalturaApiPriviligesPermissionItem": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaPermissionItem"
        }
      ],
      "properties": {
        "object": {
          "description": "API object name",
          "type": "string"
        },
        "parameter": {
          "description": "API parameter name",
          "type": "string"
        }
      },
      "title": "KalturaApiPriviligesPermissionItem",
      "type": "object"
    },
    "KalturaAppToken": {
      "description": "Application token",
      "properties": {
        "createDate": {
          "description": "`readOnly`\n\nCreate date",
          "readOnly": true,
          "type": "integer",
          "x-inputType": "datetime"
        },
        "expiry": {
          "description": "Expiry time of current token (unix timestamp in seconds)",
          "type": "integer"
        },
        "hashType": {
          "description": "Enum Type: `KalturaAppTokenHashType`\n\nThe hash type of the token",
          "enum": [
            "SHA1",
            "SHA256",
            "SHA512",
            "MD5"
          ],
          "type": "string",
          "x-enumLabels": [
            "SHA1",
            "SHA256",
            "SHA512",
            "MD5"
          ],
          "x-enumType": "KalturaAppTokenHashType"
        },
        "id": {
          "description": "`readOnly`\n\nThe id of the application token",
          "readOnly": true,
          "type": "string"
        },
        "partnerId": {
          "description": "`readOnly`\n\nPartner identifier",
          "readOnly": true,
          "type": "integer"
        },
        "sessionDuration": {
          "description": "Expiry duration of KS (Kaltura Session) that created using the current token (in seconds)",
          "type": "integer"
        },
        "sessionPrivileges": {
          "description": "Comma separated privileges to be applied on KS (Kaltura Session) that created using the current token",
          "type": "string"
        },
        "sessionUserId": {
          "description": "User id of KS (Kaltura Session) that created using the current token",
          "type": "string"
        },
        "token": {
          "description": "`readOnly`\n\nThe application token",
          "readOnly": true,
          "type": "string"
        },
        "updateDate": {
          "description": "`readOnly`\n\nUpdate date",
          "readOnly": true,
          "type": "integer",
          "x-inputType": "datetime"
        }
      },
      "title": "KalturaAppToken",
      "type": "object"
    },
    "KalturaApplyDiscountModuleAction": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBusinessModuleRuleAction"
        }
      ],
      "properties": {
        "discountModuleId": {
          "description": "Discount module ID",
          "type": "integer"
        }
      },
      "title": "KalturaApplyDiscountModuleAction",
      "type": "object"
    },
    "KalturaApplyFreePlaybackAction": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBusinessModuleRuleAction"
        }
      ],
      "properties": {},
      "title": "KalturaApplyFreePlaybackAction",
      "type": "object"
    },
    "KalturaApplyPlaybackAdapterAction": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaAssetRuleAction"
        }
      ],
      "properties": {
        "adapterId": {
          "description": "Playback Adapter Identifier",
          "type": "integer"
        }
      },
      "title": "KalturaApplyPlaybackAdapterAction",
      "type": "object"
    },
    "KalturaAsset": {
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaMediaAsset"
        },
        {
          "$ref": "#/definitions/KalturaProgramAsset"
        },
        {
          "$ref": "#/definitions/KalturaLiveAsset"
        },
        {
          "$ref": "#/definitions/KalturaLineupChannelAsset"
        },
        {
          "$ref": "#/definitions/KalturaRecordingAsset"
        },
        {
          "$ref": "#/definitions/KalturaEpg"
        }
      ],
      "description": "`abstract`\n\nAsset info",
      "discriminator": "objectType",
      "properties": {
        "createDate": {
          "description": "`readOnly`\n\nSpecifies when was the Asset was created. Date and time represented as epoch.",
          "readOnly": true,
          "type": "integer",
          "x-inputType": "datetime"
        },
        "description": {
          "description": "`readOnly`\n\nAsset description",
          "readOnly": true,
          "type": "string"
        },
        "endDate": {
          "description": "Date and time represented as epoch. For VOD - till when the asset be available in the catalog. For EPG/Linear - program end time and date",
          "type": "integer",
          "x-inputType": "datetime"
        },
        "externalId": {
          "description": "External identifier for the asset",
          "type": "string"
        },
        "id": {
          "description": "`readOnly`\n\nUnique identifier for the asset",
          "readOnly": true,
          "type": "integer"
        },
        "images": {
          "items": {
            "$ref": "#/definitions/KalturaMediaImage"
          },
          "type": "array"
        },
        "indexStatus": {
          "description": "`readOnly`\n\nEnum Type: `KalturaAssetIndexStatus`\n\nThe media asset index status",
          "enum": [
            "Ok",
            "Deleted",
            "NotUpdated"
          ],
          "readOnly": true,
          "type": "string",
          "x-enumLabels": [
            "OK",
            "DELETED",
            "NOTUPDATED"
          ],
          "x-enumType": "KalturaAssetIndexStatus"
        },
        "mediaFiles": {
          "items": {
            "$ref": "#/definitions/KalturaMediaFile"
          },
          "type": "array"
        },
        "metas": {
          "items": {
            "$ref": "#/definitions/KalturaValue"
          },
          "type": "array"
        },
        "multilingualDescription": {
          "items": {
            "$ref": "#/definitions/KalturaTranslationToken"
          },
          "type": "array"
        },
        "multilingualName": {
          "items": {
            "$ref": "#/definitions/KalturaTranslationToken"
          },
          "type": "array"
        },
        "name": {
          "description": "`readOnly`\n\nAsset name",
          "readOnly": true,
          "type": "string"
        },
        "objectType": {
          "enum": [
            "KalturaMediaAsset",
            "KalturaProgramAsset",
            "KalturaLiveAsset",
            "KalturaLineupChannelAsset",
            "KalturaRecordingAsset",
            "KalturaEpg"
          ],
          "type": "string"
        },
        "relatedEntities": {
          "items": {
            "$ref": "#/definitions/KalturaRelatedEntityArray"
          },
          "type": "array"
        },
        "startDate": {
          "description": "Date and time represented as epoch. For VOD - since when the asset is available in the catalog. For EPG/Linear - when the program is aired (can be in the future).",
          "type": "integer",
          "x-inputType": "datetime"
        },
        "tags": {
          "items": {
            "$ref": "#/definitions/KalturaMultilingualStringValueArray"
          },
          "type": "array"
        },
        "type": {
          "description": "`insertOnly`\n\nIdentifies the asset type (EPG, Recording, Movie, TV Series, etc). \r\n            Possible values: 0 - EPG linear programs, 1 - Recording; or any asset type ID according to the asset types IDs defined in the system.",
          "type": "integer"
        },
        "updateDate": {
          "description": "`readOnly`\n\nSpecifies when was the Asset last updated. Date and time represented as epoch.",
          "readOnly": true,
          "type": "integer",
          "x-inputType": "datetime"
        }
      },
      "title": "KalturaAsset",
      "type": "object",
      "x-abstract": true
    },
    "KalturaAssetComment": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaSocialComment"
        }
      ],
      "description": "Asset Comment",
      "properties": {
        "assetId": {
          "description": "Asset identifier",
          "type": "integer"
        },
        "assetType": {
          "description": "Enum Type: `KalturaAssetType`\n\nAsset Type",
          "enum": [
            "media",
            "recording",
            "epg"
          ],
          "type": "string",
          "x-enumLabels": [
            "MEDIA",
            "RECORDING",
            "EPG"
          ],
          "x-enumType": "KalturaAssetType"
        },
        "id": {
          "description": "Comment ID",
          "type": "integer"
        },
        "subHeader": {
          "description": "Sub Header",
          "type": "string"
        }
      },
      "title": "KalturaAssetComment",
      "type": "object"
    },
    "KalturaAssetCommentFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "properties": {
        "assetIdEqual": {
          "description": "Asset Id",
          "type": "integer"
        },
        "assetTypeEqual": {
          "description": "Enum Type: `KalturaAssetType`\n\nAsset Type",
          "enum": [
            "media",
            "recording",
            "epg"
          ],
          "type": "string",
          "x-enumLabels": [
            "MEDIA",
            "RECORDING",
            "EPG"
          ],
          "x-enumType": "KalturaAssetType"
        },
        "orderBy": {
          "enum": [
            "CREATE_DATE_DESC"
          ],
          "type": "string",
          "x-enumLabels": [
            "CREATE_DATE_DESC"
          ],
          "x-enumType": "KalturaAssetCommentOrderBy"
        }
      },
      "title": "KalturaAssetCommentFilter",
      "type": "object"
    },
    "KalturaAssetCommentListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "Asset Comment Response",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaAssetComment"
          },
          "type": "array"
        }
      },
      "title": "KalturaAssetCommentListResponse",
      "type": "object"
    },
    "KalturaAssetCondition": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaAssetConditionBase"
        }
      ],
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaAssetCondition"
        },
        {
          "$ref": "#/definitions/KalturaConcurrencyCondition"
        }
      ],
      "description": "Asset Condition",
      "discriminator": "objectType",
      "properties": {
        "ksql": {
          "description": "KSQL",
          "type": "string"
        },
        "objectType": {
          "enum": [
            "KalturaAssetCondition",
            "KalturaConcurrencyCondition"
          ],
          "type": "string"
        }
      },
      "title": "KalturaAssetCondition",
      "type": "object"
    },
    "KalturaAssetConditionBase": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaCondition"
        }
      ],
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaAssetCondition"
        },
        {
          "$ref": "#/definitions/KalturaAssetShopCondition"
        },
        {
          "$ref": "#/definitions/KalturaConcurrencyCondition"
        }
      ],
      "description": "`abstract`",
      "discriminator": "objectType",
      "properties": {
        "objectType": {
          "enum": [
            "KalturaAssetCondition",
            "KalturaAssetShopCondition",
            "KalturaConcurrencyCondition"
          ],
          "type": "string"
        }
      },
      "title": "KalturaAssetConditionBase",
      "type": "object",
      "x-abstract": true
    },
    "KalturaAssetCount": {
      "description": "Asset count - represents a specific value of the field, its count and its sub groups.",
      "properties": {
        "count": {
          "description": "Count",
          "type": "integer"
        },
        "subs": {
          "items": {
            "$ref": "#/definitions/KalturaAssetsCount"
          },
          "type": "array"
        },
        "value": {
          "description": "Value",
          "type": "string"
        }
      },
      "title": "KalturaAssetCount",
      "type": "object"
    },
    "KalturaAssetCountListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "Asset counts wrapper - represents a group",
      "properties": {
        "assetsCount": {
          "description": "Count of assets that match filter result, regardless of group by result",
          "type": "integer"
        },
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaAssetsCount"
          },
          "type": "array"
        }
      },
      "title": "KalturaAssetCountListResponse",
      "type": "object"
    },
    "KalturaAssetDynamicOrder": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBaseAssetOrder"
        }
      ],
      "properties": {
        "name": {
          "description": "order by name",
          "type": "string"
        },
        "orderBy": {
          "description": "Enum Type: `KalturaMetaTagOrderBy`\n\norder by meta asc/desc",
          "enum": [
            "META_ASC",
            "META_DESC"
          ],
          "type": "string",
          "x-enumLabels": [
            "META_ASC",
            "META_DESC"
          ],
          "x-enumType": "KalturaMetaTagOrderBy"
        }
      },
      "title": "KalturaAssetDynamicOrder",
      "type": "object"
    },
    "KalturaAssetEvent": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaEventObject"
        }
      ],
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaAssetEvent"
        },
        {
          "$ref": "#/definitions/KalturaProgramAssetEvent"
        }
      ],
      "discriminator": "objectType",
      "properties": {
        "assetId": {
          "description": "`readOnly`\n\nAsset Id",
          "readOnly": true,
          "type": "integer"
        },
        "externalId": {
          "description": "`readOnly`\n\nExternal identifier for the asset",
          "readOnly": true,
          "type": "string"
        },
        "objectType": {
          "enum": [
            "KalturaAssetEvent",
            "KalturaProgramAssetEvent"
          ],
          "type": "string"
        },
        "type": {
          "description": "`readOnly`\n\nIdentifies the asset type (EPG, Recording, Movie, TV Series, etc). \r\n            Possible values: 0 – EPG linear programs, 1 - Recording; or any asset type ID according to the asset types IDs defined in the system.",
          "readOnly": true,
          "type": "integer"
        },
        "userId": {
          "description": "`readOnly`\n\nUser Id",
          "readOnly": true,
          "type": "integer"
        }
      },
      "title": "KalturaAssetEvent",
      "type": "object"
    },
    "KalturaAssetFieldGroupBy": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaAssetGroupBy"
        }
      ],
      "description": "Group by a field that is defined in enum",
      "properties": {
        "value": {
          "description": "Enum Type: `KalturaGroupByField`\n\nGroup by a specific field that is defined in enum",
          "enum": [
            "media_type_id",
            "suppressed",
            "crid",
            "linear_media_id",
            "name"
          ],
          "type": "string",
          "x-enumLabels": [
            "MEDIA_TYPE_ID",
            "SUPPRESSED",
            "CRID",
            "LINEAR_MEDIA_ID",
            "NAME"
          ],
          "x-enumType": "KalturaGroupByField"
        }
      },
      "title": "KalturaAssetFieldGroupBy",
      "type": "object"
    },
    "KalturaAssetFile": {
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaAssetFile"
        },
        {
          "$ref": "#/definitions/KalturaMediaFile"
        },
        {
          "$ref": "#/definitions/KalturaPlaybackSource"
        },
        {
          "$ref": "#/definitions/KalturaDiscoveryMediaFile"
        }
      ],
      "description": "Asset file details",
      "discriminator": "objectType",
      "properties": {
        "objectType": {
          "enum": [
            "KalturaAssetFile",
            "KalturaMediaFile",
            "KalturaPlaybackSource",
            "KalturaDiscoveryMediaFile"
          ],
          "type": "string"
        },
        "url": {
          "description": "URL of the media file to be played",
          "type": "string"
        }
      },
      "title": "KalturaAssetFile",
      "type": "object"
    },
    "KalturaAssetFileContext": {
      "properties": {
        "fullLifeCycle": {
          "description": "`readOnly`\n\nfullLifeCycle",
          "readOnly": true,
          "type": "string"
        },
        "isLivePlayBack": {
          "description": "`readOnly`\n\nIs Live PlayBack",
          "readOnly": true,
          "type": "boolean"
        },
        "isOfflinePlayBack": {
          "description": "`readOnly`\n\nisOfflinePlayBack",
          "readOnly": true,
          "type": "boolean"
        },
        "viewLifeCycle": {
          "description": "`readOnly`\n\nviewLifeCycle",
          "readOnly": true,
          "type": "string"
        }
      },
      "title": "KalturaAssetFileContext",
      "type": "object"
    },
    "KalturaAssetFilePpv": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaOTTObjectSupportNullable"
        }
      ],
      "description": "Asset file ppv",
      "properties": {
        "assetFileId": {
          "description": "Asset file identifier",
          "type": "integer"
        },
        "endDate": {
          "description": "End date and time represented as epoch.",
          "type": "integer",
          "x-inputType": "datetime"
        },
        "ppvModuleId": {
          "description": "Ppv module identifier",
          "type": "integer"
        },
        "startDate": {
          "description": "Start date and time represented as epoch.",
          "type": "integer",
          "x-inputType": "datetime"
        }
      },
      "title": "KalturaAssetFilePpv",
      "type": "object"
    },
    "KalturaAssetFilePpvFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "description": "Filtering Asset Struct Metas",
      "properties": {
        "assetFileIdEqual": {
          "description": "Filter Asset file ppvs that contain a specific asset file id",
          "type": "integer"
        },
        "assetIdEqual": {
          "description": "Filter Asset file ppvs that contain a specific asset id",
          "type": "integer"
        },
        "orderBy": {
          "enum": [
            "NONE"
          ],
          "type": "string",
          "x-enumLabels": [
            "NONE"
          ],
          "x-enumType": "KalturaAssetFilePpvOrderBy"
        }
      },
      "title": "KalturaAssetFilePpvFilter",
      "type": "object"
    },
    "KalturaAssetFilePpvListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "Asset file ppv list",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaAssetFilePpv"
          },
          "type": "array"
        }
      },
      "title": "KalturaAssetFilePpvListResponse",
      "type": "object"
    },
    "KalturaAssetFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaPersistedFilter"
        }
      ],
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaAssetFilter"
        },
        {
          "$ref": "#/definitions/KalturaBundleFilter"
        },
        {
          "$ref": "#/definitions/KalturaChannelExternalFilter"
        },
        {
          "$ref": "#/definitions/KalturaRelatedExternalFilter"
        },
        {
          "$ref": "#/definitions/KalturaScheduledRecordingProgramFilter"
        },
        {
          "$ref": "#/definitions/KalturaSearchExternalFilter"
        },
        {
          "$ref": "#/definitions/KalturaChannelFilter"
        },
        {
          "$ref": "#/definitions/KalturaPersonalListSearchFilter"
        },
        {
          "$ref": "#/definitions/KalturaRelatedFilter"
        },
        {
          "$ref": "#/definitions/KalturaSearchAssetFilter"
        },
        {
          "$ref": "#/definitions/KalturaSearchAssetListFilter"
        }
      ],
      "discriminator": "objectType",
      "properties": {
        "dynamicOrderBy": {
          "$ref": "#/definitions/KalturaDynamicOrderBy"
        },
        "objectType": {
          "enum": [
            "KalturaAssetFilter",
            "KalturaBundleFilter",
            "KalturaChannelExternalFilter",
            "KalturaRelatedExternalFilter",
            "KalturaScheduledRecordingProgramFilter",
            "KalturaSearchExternalFilter",
            "KalturaChannelFilter",
            "KalturaPersonalListSearchFilter",
            "KalturaRelatedFilter",
            "KalturaSearchAssetFilter",
            "KalturaSearchAssetListFilter"
          ],
          "type": "string"
        },
        "orderBy": {
          "enum": [
            "RELEVANCY_DESC",
            "NAME_ASC",
            "NAME_DESC",
            "VIEWS_DESC",
            "RATINGS_DESC",
            "VOTES_DESC",
            "START_DATE_DESC",
            "START_DATE_ASC",
            "LIKES_DESC",
            "CREATE_DATE_ASC",
            "CREATE_DATE_DESC"
          ],
          "type": "string",
          "x-enumLabels": [
            "RELEVANCY_DESC",
            "NAME_ASC",
            "NAME_DESC",
            "VIEWS_DESC",
            "RATINGS_DESC",
            "VOTES_DESC",
            "START_DATE_DESC",
            "START_DATE_ASC",
            "LIKES_DESC",
            "CREATE_DATE_ASC",
            "CREATE_DATE_DESC"
          ],
          "x-enumType": "KalturaAssetOrderBy"
        },
        "orderingParameters": {
          "items": {
            "$ref": "#/definitions/KalturaBaseAssetOrder"
          },
          "type": "array"
        },
        "shouldApplyPriorityGroupsEqual": {
          "description": "Should apply priority groups filter or not.",
          "type": "boolean"
        },
        "trendingDaysEqual": {
          "description": "Trending Days Equal",
          "type": "integer"
        }
      },
      "title": "KalturaAssetFilter",
      "type": "object"
    },
    "KalturaAssetGroupBy": {
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaAssetFieldGroupBy"
        },
        {
          "$ref": "#/definitions/KalturaAssetMetaOrTagGroupBy"
        }
      ],
      "description": "`abstract`\n\nAbstarct class - represents an asset parameter that can be used for grouping",
      "discriminator": "objectType",
      "properties": {
        "objectType": {
          "enum": [
            "KalturaAssetFieldGroupBy",
            "KalturaAssetMetaOrTagGroupBy"
          ],
          "type": "string"
        }
      },
      "title": "KalturaAssetGroupBy",
      "type": "object",
      "x-abstract": true
    },
    "KalturaAssetHistory": {
      "description": "Watch history asset info",
      "properties": {
        "assetId": {
          "description": "`readOnly`\n\nAsset identifier",
          "readOnly": true,
          "type": "integer"
        },
        "assetType": {
          "description": "`readOnly`\n\nEnum Type: `KalturaAssetType`\n\nAsset identifier",
          "enum": [
            "media",
            "recording",
            "epg"
          ],
          "readOnly": true,
          "type": "string",
          "x-enumLabels": [
            "MEDIA",
            "RECORDING",
            "EPG"
          ],
          "x-enumType": "KalturaAssetType"
        },
        "duration": {
          "description": "`readOnly`\n\nDuration in seconds of the relevant asset",
          "readOnly": true,
          "type": "integer"
        },
        "finishedWatching": {
          "description": "`readOnly`\n\nBoolean which specifies whether the user finished watching the movie or not",
          "readOnly": true,
          "type": "boolean"
        },
        "position": {
          "description": "`readOnly`\n\nPosition in seconds of the relevant asset",
          "readOnly": true,
          "type": "integer"
        },
        "watchedDate": {
          "description": "`readOnly`\n\nThe date when the media was last watched",
          "readOnly": true,
          "type": "integer",
          "x-inputType": "datetime"
        }
      },
      "title": "KalturaAssetHistory",
      "type": "object"
    },
    "KalturaAssetHistoryFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "properties": {
        "assetIdIn": {
          "description": "Comma separated list of asset identifiers.",
          "type": "string"
        },
        "daysLessThanOrEqual": {
          "description": "How many days back to return the watched media. If omitted, default to 7 days",
          "type": "integer"
        },
        "kSql": {
          "description": "KSQL expression",
          "type": "string"
        },
        "orderBy": {
          "enum": [
            "NONE"
          ],
          "type": "string",
          "x-enumLabels": [
            "NONE"
          ],
          "x-enumType": "KalturaAssetHistoryOrderBy"
        },
        "statusEqual": {
          "description": "Enum Type: `KalturaWatchStatus`\n\nWhich type of recently watched media to include in the result - those that finished watching, those that are in progress or both.\r\n            If omitted or specified filter = all - return all types.\r\n            Allowed values: progress - return medias that are in-progress, done - return medias that finished watching.",
          "enum": [
            "progress",
            "done",
            "all"
          ],
          "type": "string",
          "x-enumLabels": [
            "PROGRESS",
            "DONE",
            "ALL"
          ],
          "x-enumType": "KalturaWatchStatus"
        },
        "typeIn": {
          "description": "Comma separated list of asset types to search within.\r\n            Possible values: 0 - EPG linear programs entries, any media type ID (according to media type IDs defined dynamically in the system).\r\n            If omitted - all types should be included.",
          "type": "string"
        }
      },
      "title": "KalturaAssetHistoryFilter",
      "type": "object"
    },
    "KalturaAssetHistoryListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "Watch history asset wrapper",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaAssetHistory"
          },
          "type": "array"
        }
      },
      "title": "KalturaAssetHistoryListResponse",
      "type": "object"
    },
    "KalturaAssetHistorySuppressFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaRelatedObjectFilter"
        }
      ],
      "description": "Kaltura asset image per ratio filter",
      "properties": {},
      "title": "KalturaAssetHistorySuppressFilter",
      "type": "object"
    },
    "KalturaAssetImagePerRatioFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaRelatedObjectFilter"
        }
      ],
      "description": "Kaltura asset image per ratio filter",
      "properties": {
        "orderBy": {
          "enum": [
            "NONE"
          ],
          "type": "string",
          "x-enumLabels": [
            "NONE"
          ],
          "x-enumType": "KalturaAssetImagePerRatioOrderBy"
        }
      },
      "title": "KalturaAssetImagePerRatioFilter",
      "type": "object"
    },
    "KalturaAssetLifeCycleBuisnessModuleTransitionAction": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaAssetLifeCycleTransitionAction"
        }
      ],
      "properties": {
        "fileTypeIds": {
          "description": "Comma separated list of fileType Ids.",
          "type": "string"
        },
        "ppvIds": {
          "description": "Comma separated list of ppv Ids.",
          "type": "string"
        }
      },
      "title": "KalturaAssetLifeCycleBuisnessModuleTransitionAction",
      "type": "object"
    },
    "KalturaAssetLifeCycleTagTransitionAction": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaAssetLifeCycleTransitionAction"
        }
      ],
      "properties": {
        "tagIds": {
          "description": "Comma separated list of tag Ids.",
          "type": "string"
        }
      },
      "title": "KalturaAssetLifeCycleTagTransitionAction",
      "type": "object"
    },
    "KalturaAssetLifeCycleTransitionAction": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaAssetRuleAction"
        }
      ],
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaAssetLifeCycleBuisnessModuleTransitionAction"
        },
        {
          "$ref": "#/definitions/KalturaAssetLifeCycleTagTransitionAction"
        }
      ],
      "description": "`abstract`",
      "discriminator": "objectType",
      "properties": {
        "assetLifeCycleRuleActionType": {
          "description": "Enum Type: `KalturaAssetLifeCycleRuleActionType`\n\nAsset LifeCycle Rule Action Type",
          "enum": [
            "ADD",
            "REMOVE"
          ],
          "type": "string",
          "x-enumLabels": [
            "ADD",
            "REMOVE"
          ],
          "x-enumType": "KalturaAssetLifeCycleRuleActionType"
        },
        "assetLifeCycleRuleTransitionType": {
          "description": "`readOnly`\n\nEnum Type: `KalturaAssetLifeCycleRuleTransitionType`\n\nAsset LifeCycle Rule Transition Type",
          "enum": [
            "TAG",
            "BUSINESS_MODEL"
          ],
          "readOnly": true,
          "type": "string",
          "x-enumLabels": [
            "TAG",
            "BUSINESS_MODEL"
          ],
          "x-enumType": "KalturaAssetLifeCycleRuleTransitionType"
        },
        "objectType": {
          "enum": [
            "KalturaAssetLifeCycleBuisnessModuleTransitionAction",
            "KalturaAssetLifeCycleTagTransitionAction"
          ],
          "type": "string"
        }
      },
      "title": "KalturaAssetLifeCycleTransitionAction",
      "type": "object",
      "x-abstract": true
    },
    "KalturaAssetListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "Asset wrapper",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaAsset"
          },
          "type": "array"
        }
      },
      "title": "KalturaAssetListResponse",
      "type": "object"
    },
    "KalturaAssetMetaOrTagGroupBy": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaAssetGroupBy"
        }
      ],
      "description": "Group by a tag or meta - according to the name that appears in the system (similar to KSQL)",
      "properties": {
        "value": {
          "description": "Group by a tag or meta - according to the name that appears in the system (similar to KSQL)",
          "type": "string"
        }
      },
      "title": "KalturaAssetMetaOrTagGroupBy",
      "type": "object"
    },
    "KalturaAssetOrder": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBaseAssetOrder"
        }
      ],
      "properties": {
        "orderBy": {
          "description": "Enum Type: `KalturaAssetOrderByType`\n\nOrder By",
          "enum": [
            "RELEVANCY_DESC",
            "NAME_ASC",
            "NAME_DESC",
            "RATINGS_DESC",
            "VOTES_DESC",
            "START_DATE_DESC",
            "START_DATE_ASC",
            "LIKES_DESC",
            "CREATE_DATE_ASC",
            "CREATE_DATE_DESC"
          ],
          "type": "string",
          "x-enumLabels": [
            "RELEVANCY_DESC",
            "NAME_ASC",
            "NAME_DESC",
            "RATINGS_DESC",
            "VOTES_DESC",
            "START_DATE_DESC",
            "START_DATE_ASC",
            "LIKES_DESC",
            "CREATE_DATE_ASC",
            "CREATE_DATE_DESC"
          ],
          "x-enumType": "KalturaAssetOrderByType"
        }
      },
      "title": "KalturaAssetOrder",
      "type": "object"
    },
    "KalturaAssetOrderSegmentAction": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBaseSegmentAction"
        }
      ],
      "description": "Asset order segment action",
      "properties": {
        "name": {
          "description": "Action name",
          "type": "string"
        },
        "values": {
          "items": {
            "$ref": "#/definitions/KalturaStringValue"
          },
          "type": "array"
        }
      },
      "title": "KalturaAssetOrderSegmentAction",
      "type": "object"
    },
    "KalturaAssetPersonalMarkup": {
      "description": "Asset Personal Markup",
      "properties": {
        "assetId": {
          "description": "`readOnly`\n\nAsset Id",
          "readOnly": true,
          "type": "integer"
        },
        "assetType": {
          "description": "`readOnly`\n\nEnum Type: `KalturaAssetType`\n\nAsset Type",
          "enum": [
            "media",
            "recording",
            "epg"
          ],
          "readOnly": true,
          "type": "string",
          "x-enumLabels": [
            "MEDIA",
            "RECORDING",
            "EPG"
          ],
          "x-enumType": "KalturaAssetType"
        },
        "products": {
          "items": {
            "$ref": "#/definitions/KalturaProductMarkup"
          },
          "type": "array"
        }
      },
      "title": "KalturaAssetPersonalMarkup",
      "type": "object"
    },
    "KalturaAssetPersonalMarkupListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "Asset Personal Markup",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaAssetPersonalMarkup"
          },
          "type": "array"
        }
      },
      "title": "KalturaAssetPersonalMarkupListResponse",
      "type": "object"
    },
    "KalturaAssetPersonalMarkupSearchFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "description": "Asset Personal Markup search filter",
      "properties": {
        "assetsIn": {
          "items": {
            "$ref": "#/definitions/KalturaSlimAsset"
          },
          "type": "array"
        },
        "orderBy": {
          "enum": [
            "NONE",
            "REQUEST_ORDER"
          ],
          "type": "string",
          "x-enumLabels": [
            "NONE",
            "REQUEST_ORDER"
          ],
          "x-enumType": "KalturaAssetPersonalMarkupSearchOrderBy"
        }
      },
      "title": "KalturaAssetPersonalMarkupSearchFilter",
      "type": "object"
    },
    "KalturaAssetPersonalSelection": {
      "description": "Asset personal selection",
      "properties": {
        "assetId": {
          "description": "`readOnly`\n\nAsset Id",
          "readOnly": true,
          "type": "integer"
        },
        "assetType": {
          "description": "`readOnly`\n\nEnum Type: `KalturaAssetType`\n\nAsset Type",
          "enum": [
            "media",
            "recording",
            "epg"
          ],
          "readOnly": true,
          "type": "string",
          "x-enumLabels": [
            "MEDIA",
            "RECORDING",
            "EPG"
          ],
          "x-enumType": "KalturaAssetType"
        },
        "updateDate": {
          "description": "`readOnly`\n\nUpdate Date",
          "readOnly": true,
          "type": "integer",
          "x-inputType": "datetime"
        }
      },
      "title": "KalturaAssetPersonalSelection",
      "type": "object"
    },
    "KalturaAssetReminder": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaReminder"
        }
      ],
      "properties": {
        "assetId": {
          "description": "Asset id",
          "type": "integer"
        }
      },
      "title": "KalturaAssetReminder",
      "type": "object"
    },
    "KalturaAssetReminderFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaReminderFilter"
        }
      ],
      "properties": {
        "orderBy": {
          "enum": [
            "RELEVANCY_DESC",
            "NAME_ASC",
            "NAME_DESC",
            "VIEWS_DESC",
            "RATINGS_DESC",
            "VOTES_DESC",
            "START_DATE_DESC",
            "START_DATE_ASC",
            "LIKES_DESC"
          ],
          "type": "string",
          "x-enumLabels": [
            "RELEVANCY_DESC",
            "NAME_ASC",
            "NAME_DESC",
            "VIEWS_DESC",
            "RATINGS_DESC",
            "VOTES_DESC",
            "START_DATE_DESC",
            "START_DATE_ASC",
            "LIKES_DESC"
          ],
          "x-enumType": "KalturaAssetReminderOrderBy"
        }
      },
      "title": "KalturaAssetReminderFilter",
      "type": "object"
    },
    "KalturaAssetRule": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaAssetRuleBase"
        }
      ],
      "description": "Asset rule",
      "properties": {
        "actions": {
          "items": {
            "$ref": "#/definitions/KalturaAssetRuleAction"
          },
          "type": "array"
        },
        "conditions": {
          "items": {
            "$ref": "#/definitions/KalturaCondition"
          },
          "type": "array"
        },
        "status": {
          "description": "`readOnly`\n\nEnum Type: `KalturaAssetRuleStatus`\n\nList of actions for the rule",
          "enum": [
            "READY",
            "IN_PROGRESS"
          ],
          "readOnly": true,
          "type": "string",
          "x-enumLabels": [
            "READY",
            "IN_PROGRESS"
          ],
          "x-enumType": "KalturaAssetRuleStatus"
        }
      },
      "title": "KalturaAssetRule",
      "type": "object"
    },
    "KalturaAssetRuleAction": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaRuleAction"
        }
      ],
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaAccessControlBlockAction"
        },
        {
          "$ref": "#/definitions/KalturaAllowPlaybackAction"
        },
        {
          "$ref": "#/definitions/KalturaApplyPlaybackAdapterAction"
        },
        {
          "$ref": "#/definitions/KalturaBlockPlaybackAction"
        },
        {
          "$ref": "#/definitions/KalturaAssetLifeCycleBuisnessModuleTransitionAction"
        },
        {
          "$ref": "#/definitions/KalturaAssetLifeCycleTagTransitionAction"
        },
        {
          "$ref": "#/definitions/KalturaEndDateOffsetRuleAction"
        },
        {
          "$ref": "#/definitions/KalturaStartDateOffsetRuleAction"
        },
        {
          "$ref": "#/definitions/KalturaFilterAssetByKsqlAction"
        },
        {
          "$ref": "#/definitions/KalturaFilterFileByAudioCodecInDiscoveryAction"
        },
        {
          "$ref": "#/definitions/KalturaFilterFileByAudioCodecInPlaybackAction"
        },
        {
          "$ref": "#/definitions/KalturaFilterFileByDynamicDataInDiscoveryAction"
        },
        {
          "$ref": "#/definitions/KalturaFilterFileByDynamicDataInPlaybackAction"
        },
        {
          "$ref": "#/definitions/KalturaFilterFileByFileTypeIdInDiscoveryAction"
        },
        {
          "$ref": "#/definitions/KalturaFilterFileByFileTypeIdInPlaybackAction"
        },
        {
          "$ref": "#/definitions/KalturaFilterFileByFileTypeIdForAssetTypeInDiscoveryAction"
        },
        {
          "$ref": "#/definitions/KalturaFilterFileByFileTypeIdForAssetTypeInPlaybackAction"
        },
        {
          "$ref": "#/definitions/KalturaFilterFileByLabelInDiscoveryAction"
        },
        {
          "$ref": "#/definitions/KalturaFilterFileByLabelInPlaybackAction"
        },
        {
          "$ref": "#/definitions/KalturaFilterFileByQualityInDiscoveryAction"
        },
        {
          "$ref": "#/definitions/KalturaFilterFileByQualityInPlaybackAction"
        },
        {
          "$ref": "#/definitions/KalturaFilterFileByStreamerTypeInDiscovery"
        },
        {
          "$ref": "#/definitions/KalturaFilterFileByStreamerTypeInPlayback"
        },
        {
          "$ref": "#/definitions/KalturaFilterFileByVideoCodecInDiscoveryAction"
        },
        {
          "$ref": "#/definitions/KalturaFilterFileByVideoCodecInPlayback"
        }
      ],
      "description": "`abstract`",
      "discriminator": "objectType",
      "properties": {
        "objectType": {
          "enum": [
            "KalturaAccessControlBlockAction",
            "KalturaAllowPlaybackAction",
            "KalturaApplyPlaybackAdapterAction",
            "KalturaBlockPlaybackAction",
            "KalturaAssetLifeCycleBuisnessModuleTransitionAction",
            "KalturaAssetLifeCycleTagTransitionAction",
            "KalturaEndDateOffsetRuleAction",
            "KalturaStartDateOffsetRuleAction",
            "KalturaFilterAssetByKsqlAction",
            "KalturaFilterFileByAudioCodecInDiscoveryAction",
            "KalturaFilterFileByAudioCodecInPlaybackAction",
            "KalturaFilterFileByDynamicDataInDiscoveryAction",
            "KalturaFilterFileByDynamicDataInPlaybackAction",
            "KalturaFilterFileByFileTypeIdInDiscoveryAction",
            "KalturaFilterFileByFileTypeIdInPlaybackAction",
            "KalturaFilterFileByFileTypeIdForAssetTypeInDiscoveryAction",
            "KalturaFilterFileByFileTypeIdForAssetTypeInPlaybackAction",
            "KalturaFilterFileByLabelInDiscoveryAction",
            "KalturaFilterFileByLabelInPlaybackAction",
            "KalturaFilterFileByQualityInDiscoveryAction",
            "KalturaFilterFileByQualityInPlaybackAction",
            "KalturaFilterFileByStreamerTypeInDiscovery",
            "KalturaFilterFileByStreamerTypeInPlayback",
            "KalturaFilterFileByVideoCodecInDiscoveryAction",
            "KalturaFilterFileByVideoCodecInPlayback"
          ],
          "type": "string"
        }
      },
      "title": "KalturaAssetRuleAction",
      "type": "object",
      "x-abstract": true
    },
    "KalturaAssetRuleBase": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaRule"
        }
      ],
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaAssetRule"
        },
        {
          "$ref": "#/definitions/KalturaAssetUserRule"
        }
      ],
      "description": "`abstract`\n\nAsset rule base",
      "discriminator": "objectType",
      "properties": {
        "objectType": {
          "enum": [
            "KalturaAssetRule",
            "KalturaAssetUserRule"
          ],
          "type": "string"
        }
      },
      "title": "KalturaAssetRuleBase",
      "type": "object",
      "x-abstract": true
    },
    "KalturaAssetRuleFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "description": "Asset rule filter",
      "properties": {
        "actionsContainType": {
          "description": "Enum Type: `KalturaRuleActionType`\n\nIndicates which asset rule list to return by this KalturaRuleActionType.",
          "enum": [
            "BLOCK",
            "START_DATE_OFFSET",
            "END_DATE_OFFSET",
            "USER_BLOCK",
            "ALLOW_PLAYBACK",
            "BLOCK_PLAYBACK",
            "APPLY_DISCOUNT_MODULE",
            "APPLY_PLAYBACK_ADAPTER",
            "FILTER",
            "ASSET_LIFE_CYCLE_TRANSITION",
            "APPLY_FREE_PLAYBACK",
            "FilterAssetByKsql",
            "FilterFileByQualityInDiscovery",
            "FilterFileByQualityInPlayback",
            "FilterFileByFileTypeIdForAssetTypeInDiscovery",
            "FilterFileByFileTypeIdForAssetTypeInPlayback",
            "FilterFileByFileTypeIdInDiscovery",
            "FilterFileByFileTypeIdInPlayback",
            "FilterFileByAudioCodecInDiscovery",
            "FilterFileByAudioCodecInPlayback",
            "FilterFileByVideoCodecInDiscovery",
            "FilterFileByVideoCodecInPlayback",
            "FilterFileByStreamerTypeInDiscovery",
            "FilterFileByStreamerTypeInPlayback",
            "FilterFileByLabelInDiscovery",
            "FilterFileByLabelInPlayback",
            "FilterFileByDynamicDataInDiscovery",
            "FilterFileByDynamicDataInPlayback"
          ],
          "type": "string",
          "x-enumLabels": [
            "BLOCK",
            "START_DATE_OFFSET",
            "END_DATE_OFFSET",
            "USER_BLOCK",
            "ALLOW_PLAYBACK",
            "BLOCK_PLAYBACK",
            "APPLY_DISCOUNT_MODULE",
            "APPLY_PLAYBACK_ADAPTER",
            "FILTER",
            "ASSET_LIFE_CYCLE_TRANSITION",
            "APPLY_FREE_PLAYBACK",
            "FILTERASSETBYKSQL",
            "FILTERFILEBYQUALITYINDISCOVERY",
            "FILTERFILEBYQUALITYINPLAYBACK",
            "FILTERFILEBYFILETYPEIDFORASSETTYPEINDISCOVERY",
            "FILTERFILEBYFILETYPEIDFORASSETTYPEINPLAYBACK",
            "FILTERFILEBYFILETYPEIDINDISCOVERY",
            "FILTERFILEBYFILETYPEIDINPLAYBACK",
            "FILTERFILEBYAUDIOCODECINDISCOVERY",
            "FILTERFILEBYAUDIOCODECINPLAYBACK",
            "FILTERFILEBYVIDEOCODECINDISCOVERY",
            "FILTERFILEBYVIDEOCODECINPLAYBACK",
            "FILTERFILEBYSTREAMERTYPEINDISCOVERY",
            "FILTERFILEBYSTREAMERTYPEINPLAYBACK",
            "FILTERFILEBYLABELINDISCOVERY",
            "FILTERFILEBYLABELINPLAYBACK",
            "FILTERFILEBYDYNAMICDATAINDISCOVERY",
            "FILTERFILEBYDYNAMICDATAINPLAYBACK"
          ],
          "x-enumType": "KalturaRuleActionType"
        },
        "assetApplied": {
          "$ref": "#/definitions/KalturaSlimAsset"
        },
        "assetRuleIdEqual": {
          "description": "Asset rule id",
          "type": "integer"
        },
        "conditionsContainType": {
          "description": "Enum Type: `KalturaRuleConditionType`\n\nIndicates which asset rule list to return by it KalturaRuleConditionType.\r\n            Default value: KalturaRuleConditionType.COUNTRY",
          "enum": [
            "ASSET",
            "COUNTRY",
            "CONCURRENCY",
            "IP_RANGE",
            "BUSINESS_MODULE",
            "SEGMENTS",
            "DATE",
            "OR",
            "HEADER",
            "USER_SUBSCRIPTION",
            "ASSET_SUBSCRIPTION",
            "USER_ROLE",
            "DEVICE_BRAND",
            "DEVICE_FAMILY",
            "DEVICE_MANUFACTURER",
            "DEVICE_MODEL",
            "DEVICE_UDID_DYNAMIC_LIST",
            "DYNAMIC_KEYS",
            "USER_SESSION_PROFILE",
            "DEVICE_DYNAMIC_DATA",
            "IP_V6_RANGE",
            "ASSET_SHOP",
            "CHANNEL",
            "FILE_TYPE"
          ],
          "type": "string",
          "x-enumLabels": [
            "ASSET",
            "COUNTRY",
            "CONCURRENCY",
            "IP_RANGE",
            "BUSINESS_MODULE",
            "SEGMENTS",
            "DATE",
            "OR",
            "HEADER",
            "USER_SUBSCRIPTION",
            "ASSET_SUBSCRIPTION",
            "USER_ROLE",
            "DEVICE_BRAND",
            "DEVICE_FAMILY",
            "DEVICE_MANUFACTURER",
            "DEVICE_MODEL",
            "DEVICE_UDID_DYNAMIC_LIST",
            "DYNAMIC_KEYS",
            "USER_SESSION_PROFILE",
            "DEVICE_DYNAMIC_DATA",
            "IP_V6_RANGE",
            "ASSET_SHOP",
            "CHANNEL",
            "FILE_TYPE"
          ],
          "x-enumType": "KalturaRuleConditionType"
        },
        "nameContains": {
          "description": "Name",
          "type": "string"
        },
        "orderBy": {
          "enum": [
            "NONE",
            "NAME_ASC",
            "NAME_DESC"
          ],
          "type": "string",
          "x-enumLabels": [
            "NONE",
            "NAME_ASC",
            "NAME_DESC"
          ],
          "x-enumType": "KalturaAssetRuleOrderBy"
        }
      },
      "title": "KalturaAssetRuleFilter",
      "type": "object"
    },
    "KalturaAssetRuleListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaAssetRule"
          },
          "type": "array"
        }
      },
      "title": "KalturaAssetRuleListResponse",
      "type": "object"
    },
    "KalturaAssetShopCondition": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaAssetConditionBase"
        }
      ],
      "properties": {
        "value": {
          "description": "Shop marker&#39;s value",
          "type": "string"
        },
        "values": {
          "$ref": "#/definitions/KalturaStringValueArray"
        }
      },
      "title": "KalturaAssetShopCondition",
      "type": "object"
    },
    "KalturaAssetStatistics": {
      "description": "Asset statistics",
      "properties": {
        "assetId": {
          "description": "Unique identifier for the asset",
          "type": "integer"
        },
        "buzzScore": {
          "$ref": "#/definitions/KalturaBuzzScore"
        },
        "likes": {
          "description": "Total number of likes for this asset",
          "type": "integer"
        },
        "rating": {
          "description": "Average rating for the asset",
          "type": "number"
        },
        "ratingCount": {
          "description": "Number of people that rated the asset",
          "type": "integer"
        },
        "views": {
          "description": "Total number of views for this asset",
          "type": "integer"
        }
      },
      "title": "KalturaAssetStatistics",
      "type": "object"
    },
    "KalturaAssetStatisticsListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "List of assets statistics",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaAssetStatistics"
          },
          "type": "array"
        }
      },
      "title": "KalturaAssetStatisticsListResponse",
      "type": "object"
    },
    "KalturaAssetStatisticsOrder": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBaseAssetOrder"
        }
      ],
      "properties": {
        "orderBy": {
          "description": "Enum Type: `KalturaAssetOrderByStatistics`\n\norder by meta asc/desc",
          "enum": [
            "VIEWS_DESC"
          ],
          "type": "string",
          "x-enumLabels": [
            "VIEWS_DESC"
          ],
          "x-enumType": "KalturaAssetOrderByStatistics"
        },
        "trendingDaysEqual": {
          "description": "Trending Days Equal",
          "type": "integer"
        }
      },
      "title": "KalturaAssetStatisticsOrder",
      "type": "object"
    },
    "KalturaAssetStatisticsQuery": {
      "properties": {
        "assetIdIn": {
          "description": "Comma separated list of asset identifiers.",
          "type": "string"
        },
        "assetTypeEqual": {
          "description": "Enum Type: `KalturaAssetType`\n\nAsset type",
          "enum": [
            "media",
            "recording",
            "epg"
          ],
          "type": "string",
          "x-enumLabels": [
            "MEDIA",
            "RECORDING",
            "EPG"
          ],
          "x-enumType": "KalturaAssetType"
        },
        "endDateGreaterThanOrEqual": {
          "description": "/// The end of the time window to get the statistics for (in epoch).",
          "type": "integer"
        },
        "startDateGreaterThanOrEqual": {
          "description": "The beginning of the time window to get the statistics for (in epoch).",
          "type": "integer"
        }
      },
      "title": "KalturaAssetStatisticsQuery",
      "type": "object"
    },
    "KalturaAssetStruct": {
      "properties": {
        "connectedParentMetaId": {
          "description": "connectedParentMetaId",
          "type": "integer"
        },
        "connectingMetaId": {
          "description": "connectingMetaId",
          "type": "integer"
        },
        "createDate": {
          "description": "`readOnly`\n\nSpecifies when was the Asset Struct was created. Date and time represented as epoch.",
          "readOnly": true,
          "type": "integer",
          "x-inputType": "datetime"
        },
        "dynamicData": {
          "items": {
            "$ref": "#/definitions/KalturaStringValue"
          },
          "type": "array"
        },
        "features": {
          "description": "List of supported features",
          "type": "string"
        },
        "id": {
          "description": "`readOnly`\n\nAsset Struct id",
          "readOnly": true,
          "type": "integer"
        },
        "isProtected": {
          "description": "Is the Asset Struct protected by the system",
          "type": "boolean"
        },
        "metaIds": {
          "description": "A list of comma separated meta ids associated with this asset struct, returned according to the order.",
          "type": "string"
        },
        "multilingualName": {
          "items": {
            "$ref": "#/definitions/KalturaTranslationToken"
          },
          "type": "array"
        },
        "name": {
          "description": "`readOnly`\n\nAsset struct name for the partner",
          "readOnly": true,
          "type": "string"
        },
        "parentId": {
          "description": "AssetStruct parent Id",
          "type": "integer"
        },
        "pluralName": {
          "description": "Plural Name",
          "type": "string"
        },
        "systemName": {
          "description": "Asset Struct system name for the partner",
          "type": "string"
        },
        "updateDate": {
          "description": "`readOnly`\n\nSpecifies when was the Asset Struct last updated. Date and time represented as epoch.",
          "readOnly": true,
          "type": "integer",
          "x-inputType": "datetime"
        }
      },
      "title": "KalturaAssetStruct",
      "type": "object"
    },
    "KalturaAssetStructFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBaseAssetStructFilter"
        }
      ],
      "description": "Filtering Asset Structs",
      "properties": {
        "idIn": {
          "description": "Comma separated identifiers, id = 0 is identified as program AssetStruct",
          "type": "string"
        },
        "isProtectedEqual": {
          "description": "Filter Asset Structs by isProtectedEqual value",
          "type": "boolean"
        },
        "metaIdEqual": {
          "description": "Filter Asset Structs that contain a specific meta id",
          "type": "integer"
        },
        "objectVirtualAssetInfoTypeEqual": {
          "description": "Enum Type: `KalturaObjectVirtualAssetInfoType`\n\nFilter Asset Structs by object virtual asset info type value",
          "enum": [
            "Subscription",
            "Segment",
            "Category",
            "Tvod",
            "Boxset",
            "PAGO"
          ],
          "type": "string",
          "x-enumLabels": [
            "SUBSCRIPTION",
            "SEGMENT",
            "CATEGORY",
            "TVOD",
            "BOXSET",
            "PAGO"
          ],
          "x-enumType": "KalturaObjectVirtualAssetInfoType"
        },
        "orderBy": {
          "enum": [
            "NAME_ASC",
            "NAME_DESC",
            "SYSTEM_NAME_ASC",
            "SYSTEM_NAME_DESC",
            "CREATE_DATE_ASC",
            "CREATE_DATE_DESC",
            "UPDATE_DATE_ASC",
            "UPDATE_DATE_DESC"
          ],
          "type": "string",
          "x-enumLabels": [
            "NAME_ASC",
            "NAME_DESC",
            "SYSTEM_NAME_ASC",
            "SYSTEM_NAME_DESC",
            "CREATE_DATE_ASC",
            "CREATE_DATE_DESC",
            "UPDATE_DATE_ASC",
            "UPDATE_DATE_DESC"
          ],
          "x-enumType": "KalturaAssetStructOrderBy"
        }
      },
      "title": "KalturaAssetStructFilter",
      "type": "object"
    },
    "KalturaAssetStructListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "Asset Structs list",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaAssetStruct"
          },
          "type": "array"
        }
      },
      "title": "KalturaAssetStructListResponse",
      "type": "object"
    },
    "KalturaAssetStructMeta": {
      "description": "Asset statistics",
      "properties": {
        "aliasName": {
          "description": "Case sensitive alias value",
          "type": "string"
        },
        "assetStructId": {
          "description": "`readOnly`\n\nAsset Struct id (template_id)",
          "readOnly": true,
          "type": "integer"
        },
        "createDate": {
          "description": "`readOnly`\n\nSpecifies when was the Asset Struct Meta was created. Date and time represented as epoch.",
          "readOnly": true,
          "type": "integer",
          "x-inputType": "datetime"
        },
        "defaultIngestValue": {
          "description": "DefaultIngestValue",
          "type": "string"
        },
        "ingestReferencePath": {
          "description": "IngestReferencePath",
          "type": "string"
        },
        "isInherited": {
          "description": "Is inherited",
          "type": "boolean"
        },
        "isLocationTag": {
          "description": "Is Location Tag",
          "type": "boolean"
        },
        "metaId": {
          "description": "`readOnly`\n\nMeta id (topic_id)",
          "readOnly": true,
          "type": "integer"
        },
        "protectFromIngest": {
          "description": "ProtectFromIngest",
          "type": "boolean"
        },
        "suppressedOrder": {
          "description": "suppressed Order, ascending",
          "type": "integer"
        },
        "updateDate": {
          "description": "`readOnly`\n\nSpecifies when was the Asset Struct Meta last updated. Date and time represented as epoch.",
          "readOnly": true,
          "type": "integer",
          "x-inputType": "datetime"
        }
      },
      "title": "KalturaAssetStructMeta",
      "type": "object"
    },
    "KalturaAssetStructMetaFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "description": "Filtering Asset Struct Metas",
      "properties": {
        "assetStructIdEqual": {
          "description": "Filter Asset Struct metas that contain a specific asset struct id",
          "type": "integer"
        },
        "metaIdEqual": {
          "description": "Filter Asset Struct metas that contain a specific meta id",
          "type": "integer"
        },
        "orderBy": {
          "enum": [
            "NONE"
          ],
          "type": "string",
          "x-enumLabels": [
            "NONE"
          ],
          "x-enumType": "KalturaAssetStructMetaOrderBy"
        }
      },
      "title": "KalturaAssetStructMetaFilter",
      "type": "object"
    },
    "KalturaAssetStructMetaListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "Asset Struct Metas list",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaAssetStructMeta"
          },
          "type": "array"
        }
      },
      "title": "KalturaAssetStructMetaListResponse",
      "type": "object"
    },
    "KalturaAssetSubscriptionCondition": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaSubscriptionCondition"
        }
      ],
      "description": "AssetSubscription Condition - indicates which assets this rule is applied on by their subscriptions",
      "properties": {},
      "title": "KalturaAssetSubscriptionCondition",
      "type": "object"
    },
    "KalturaAssetUserRule": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaAssetRuleBase"
        }
      ],
      "description": "Asset user rule",
      "properties": {
        "actions": {
          "items": {
            "$ref": "#/definitions/KalturaAssetUserRuleAction"
          },
          "type": "array"
        },
        "conditions": {
          "items": {
            "$ref": "#/definitions/KalturaAssetConditionBase"
          },
          "type": "array"
        }
      },
      "title": "KalturaAssetUserRule",
      "type": "object"
    },
    "KalturaAssetUserRuleAction": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaRuleAction"
        }
      ],
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaAssetUserRuleBlockAction"
        },
        {
          "$ref": "#/definitions/KalturaAssetUserRuleFilterAction"
        }
      ],
      "description": "`abstract`",
      "discriminator": "objectType",
      "properties": {
        "objectType": {
          "enum": [
            "KalturaAssetUserRuleBlockAction",
            "KalturaAssetUserRuleFilterAction"
          ],
          "type": "string"
        }
      },
      "title": "KalturaAssetUserRuleAction",
      "type": "object",
      "x-abstract": true
    },
    "KalturaAssetUserRuleBlockAction": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaAssetUserRuleAction"
        }
      ],
      "properties": {},
      "title": "KalturaAssetUserRuleBlockAction",
      "type": "object"
    },
    "KalturaAssetUserRuleFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "description": "Asset user rule filter",
      "properties": {
        "actionsContainType": {
          "description": "Enum Type: `KalturaRuleActionType`\n\nIndicates which asset rule list to return by this KalturaRuleActionType.",
          "enum": [
            "BLOCK",
            "START_DATE_OFFSET",
            "END_DATE_OFFSET",
            "USER_BLOCK",
            "ALLOW_PLAYBACK",
            "BLOCK_PLAYBACK",
            "APPLY_DISCOUNT_MODULE",
            "APPLY_PLAYBACK_ADAPTER",
            "FILTER",
            "ASSET_LIFE_CYCLE_TRANSITION",
            "APPLY_FREE_PLAYBACK",
            "FilterAssetByKsql",
            "FilterFileByQualityInDiscovery",
            "FilterFileByQualityInPlayback",
            "FilterFileByFileTypeIdForAssetTypeInDiscovery",
            "FilterFileByFileTypeIdForAssetTypeInPlayback",
            "FilterFileByFileTypeIdInDiscovery",
            "FilterFileByFileTypeIdInPlayback",
            "FilterFileByAudioCodecInDiscovery",
            "FilterFileByAudioCodecInPlayback",
            "FilterFileByVideoCodecInDiscovery",
            "FilterFileByVideoCodecInPlayback",
            "FilterFileByStreamerTypeInDiscovery",
            "FilterFileByStreamerTypeInPlayback",
            "FilterFileByLabelInDiscovery",
            "FilterFileByLabelInPlayback",
            "FilterFileByDynamicDataInDiscovery",
            "FilterFileByDynamicDataInPlayback"
          ],
          "type": "string",
          "x-enumLabels": [
            "BLOCK",
            "START_DATE_OFFSET",
            "END_DATE_OFFSET",
            "USER_BLOCK",
            "ALLOW_PLAYBACK",
            "BLOCK_PLAYBACK",
            "APPLY_DISCOUNT_MODULE",
            "APPLY_PLAYBACK_ADAPTER",
            "FILTER",
            "ASSET_LIFE_CYCLE_TRANSITION",
            "APPLY_FREE_PLAYBACK",
            "FILTERASSETBYKSQL",
            "FILTERFILEBYQUALITYINDISCOVERY",
            "FILTERFILEBYQUALITYINPLAYBACK",
            "FILTERFILEBYFILETYPEIDFORASSETTYPEINDISCOVERY",
            "FILTERFILEBYFILETYPEIDFORASSETTYPEINPLAYBACK",
            "FILTERFILEBYFILETYPEIDINDISCOVERY",
            "FILTERFILEBYFILETYPEIDINPLAYBACK",
            "FILTERFILEBYAUDIOCODECINDISCOVERY",
            "FILTERFILEBYAUDIOCODECINPLAYBACK",
            "FILTERFILEBYVIDEOCODECINDISCOVERY",
            "FILTERFILEBYVIDEOCODECINPLAYBACK",
            "FILTERFILEBYSTREAMERTYPEINDISCOVERY",
            "FILTERFILEBYSTREAMERTYPEINPLAYBACK",
            "FILTERFILEBYLABELINDISCOVERY",
            "FILTERFILEBYLABELINPLAYBACK",
            "FILTERFILEBYDYNAMICDATAINDISCOVERY",
            "FILTERFILEBYDYNAMICDATAINPLAYBACK"
          ],
          "x-enumType": "KalturaRuleActionType"
        },
        "attachedUserIdEqualCurrent": {
          "description": "Indicates if to get the asset user rule list for the attached user or for the entire group",
          "type": "boolean"
        },
        "conditionsContainType": {
          "description": "Enum Type: `KalturaRuleConditionType`\n\nIndicates that only asset rules are returned that have exactly one and not more associated condition.",
          "enum": [
            "ASSET",
            "COUNTRY",
            "CONCURRENCY",
            "IP_RANGE",
            "BUSINESS_MODULE",
            "SEGMENTS",
            "DATE",
            "OR",
            "HEADER",
            "USER_SUBSCRIPTION",
            "ASSET_SUBSCRIPTION",
            "USER_ROLE",
            "DEVICE_BRAND",
            "DEVICE_FAMILY",
            "DEVICE_MANUFACTURER",
            "DEVICE_MODEL",
            "DEVICE_UDID_DYNAMIC_LIST",
            "DYNAMIC_KEYS",
            "USER_SESSION_PROFILE",
            "DEVICE_DYNAMIC_DATA",
            "IP_V6_RANGE",
            "ASSET_SHOP",
            "CHANNEL",
            "FILE_TYPE"
          ],
          "type": "string",
          "x-enumLabels": [
            "ASSET",
            "COUNTRY",
            "CONCURRENCY",
            "IP_RANGE",
            "BUSINESS_MODULE",
            "SEGMENTS",
            "DATE",
            "OR",
            "HEADER",
            "USER_SUBSCRIPTION",
            "ASSET_SUBSCRIPTION",
            "USER_ROLE",
            "DEVICE_BRAND",
            "DEVICE_FAMILY",
            "DEVICE_MANUFACTURER",
            "DEVICE_MODEL",
            "DEVICE_UDID_DYNAMIC_LIST",
            "DYNAMIC_KEYS",
            "USER_SESSION_PROFILE",
            "DEVICE_DYNAMIC_DATA",
            "IP_V6_RANGE",
            "ASSET_SHOP",
            "CHANNEL",
            "FILE_TYPE"
          ],
          "x-enumType": "KalturaRuleConditionType"
        },
        "orderBy": {
          "enum": [
            "NONE"
          ],
          "type": "string",
          "x-enumLabels": [
            "NONE"
          ],
          "x-enumType": "KalturaAssetUserRuleOrderBy"
        }
      },
      "title": "KalturaAssetUserRuleFilter",
      "type": "object"
    },
    "KalturaAssetUserRuleFilterAction": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaAssetUserRuleAction"
        }
      ],
      "properties": {
        "applyOnChannel": {
          "description": "Indicates whether to apply on channel",
          "type": "boolean"
        }
      },
      "title": "KalturaAssetUserRuleFilterAction",
      "type": "object"
    },
    "KalturaAssetUserRuleListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaAssetUserRule"
          },
          "type": "array"
        }
      },
      "title": "KalturaAssetUserRuleListResponse",
      "type": "object"
    },
    "KalturaAssetsCount": {
      "description": "Single aggregation objects",
      "properties": {
        "field": {
          "description": "Field name",
          "type": "string"
        },
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaAssetCount"
          },
          "type": "array"
        }
      },
      "title": "KalturaAssetsCount",
      "type": "object"
    },
    "KalturaBaseAssetOrder": {
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaAssetDynamicOrder"
        },
        {
          "$ref": "#/definitions/KalturaAssetOrder"
        },
        {
          "$ref": "#/definitions/KalturaAssetStatisticsOrder"
        }
      ],
      "description": "`abstract`",
      "discriminator": "objectType",
      "properties": {
        "objectType": {
          "enum": [
            "KalturaAssetDynamicOrder",
            "KalturaAssetOrder",
            "KalturaAssetStatisticsOrder"
          ],
          "type": "string"
        }
      },
      "title": "KalturaBaseAssetOrder",
      "type": "object",
      "x-abstract": true
    },
    "KalturaBaseAssetStructFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaAssetStructFilter"
        },
        {
          "$ref": "#/definitions/KalturaLinearAssetStructFilter"
        }
      ],
      "description": "`abstract`",
      "discriminator": "objectType",
      "properties": {
        "objectType": {
          "enum": [
            "KalturaAssetStructFilter",
            "KalturaLinearAssetStructFilter"
          ],
          "type": "string"
        }
      },
      "title": "KalturaBaseAssetStructFilter",
      "type": "object",
      "x-abstract": true
    },
    "KalturaBaseChannel": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaOTTObjectSupportNullable"
        }
      ],
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaBaseChannel"
        },
        {
          "$ref": "#/definitions/KalturaChannel"
        },
        {
          "$ref": "#/definitions/KalturaDynamicChannel"
        },
        {
          "$ref": "#/definitions/KalturaManualChannel"
        }
      ],
      "description": "Slim channel",
      "discriminator": "objectType",
      "properties": {
        "id": {
          "description": "Unique identifier for the channel",
          "type": "integer"
        },
        "objectType": {
          "enum": [
            "KalturaBaseChannel",
            "KalturaChannel",
            "KalturaDynamicChannel",
            "KalturaManualChannel"
          ],
          "type": "string"
        }
      },
      "title": "KalturaBaseChannel",
      "type": "object"
    },
    "KalturaBaseChannelOrder": {
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaChannelDynamicOrder"
        },
        {
          "$ref": "#/definitions/KalturaChannelFieldOrder"
        },
        {
          "$ref": "#/definitions/KalturaChannelSlidingWindowOrder"
        }
      ],
      "description": "`abstract`",
      "discriminator": "objectType",
      "properties": {
        "objectType": {
          "enum": [
            "KalturaChannelDynamicOrder",
            "KalturaChannelFieldOrder",
            "KalturaChannelSlidingWindowOrder"
          ],
          "type": "string"
        }
      },
      "title": "KalturaBaseChannelOrder",
      "type": "object",
      "x-abstract": true
    },
    "KalturaBaseOTTUser": {
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaBaseOTTUser"
        },
        {
          "$ref": "#/definitions/KalturaOTTUser"
        }
      ],
      "description": "Slim user data",
      "discriminator": "objectType",
      "properties": {
        "firstName": {
          "description": "First name",
          "type": "string"
        },
        "id": {
          "description": "`readOnly`\n\nUser identifier",
          "readOnly": true,
          "type": "string"
        },
        "lastName": {
          "description": "Last name",
          "type": "string"
        },
        "objectType": {
          "enum": [
            "KalturaBaseOTTUser",
            "KalturaOTTUser"
          ],
          "type": "string"
        },
        "username": {
          "description": "Username",
          "type": "string"
        }
      },
      "title": "KalturaBaseOTTUser",
      "type": "object"
    },
    "KalturaBasePartnerConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaPartnerConfiguration"
        }
      ],
      "properties": {
        "anonymousKSExpirationSeconds": {
          "description": "AnonymousKSExpirationSeconds",
          "type": "integer"
        },
        "appTokenMaxExpirySeconds": {
          "description": "AppTokenMaxExpirySeconds",
          "type": "integer"
        },
        "appTokenSessionMaxDurationSeconds": {
          "description": "AppTokenSessionMaxDurationSeconds",
          "type": "integer"
        },
        "apptokenUserValidationDisabled": {
          "description": "apptokenUserValidationDisabled",
          "type": "boolean"
        },
        "autoRefreshAppToken": {
          "description": "AutoRefreshAppToken",
          "type": "boolean"
        },
        "epgFeatureVersion": {
          "description": "epgFeatureVersion\r\n            defines the epg feature version from version 1 to version 3\r\n            if not provided v2 will be used",
          "type": "integer"
        },
        "ksExpirationSeconds": {
          "description": "KSExpirationSeconds",
          "type": "integer"
        },
        "refreshExpirationForPinLoginSeconds": {
          "description": "RefreshExpirationForPinLoginSeconds",
          "type": "integer"
        },
        "uploadTokenExpirySeconds": {
          "description": "uploadTokenExpirySeconds",
          "type": "integer"
        }
      },
      "title": "KalturaBasePartnerConfiguration",
      "type": "object"
    },
    "KalturaBasePermissionFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaBasePermissionFilter"
        },
        {
          "$ref": "#/definitions/KalturaPermissionFilter"
        },
        {
          "$ref": "#/definitions/KalturaPermissionByIdInFilter"
        }
      ],
      "discriminator": "objectType",
      "properties": {
        "objectType": {
          "enum": [
            "KalturaBasePermissionFilter",
            "KalturaPermissionFilter",
            "KalturaPermissionByIdInFilter"
          ],
          "type": "string"
        }
      },
      "title": "KalturaBasePermissionFilter",
      "type": "object"
    },
    "KalturaBasePreActionCondition": {
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaNoShopPreActionCondition"
        },
        {
          "$ref": "#/definitions/KalturaShopPreActionCondition"
        }
      ],
      "description": "`abstract`",
      "discriminator": "objectType",
      "properties": {
        "objectType": {
          "enum": [
            "KalturaNoShopPreActionCondition",
            "KalturaShopPreActionCondition"
          ],
          "type": "string"
        }
      },
      "title": "KalturaBasePreActionCondition",
      "type": "object",
      "x-abstract": true
    },
    "KalturaBasePromotion": {
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaCouponPromotion"
        },
        {
          "$ref": "#/definitions/KalturaPromotion"
        }
      ],
      "description": "`abstract`\n\nBase Promotion",
      "discriminator": "objectType",
      "properties": {
        "conditions": {
          "items": {
            "$ref": "#/definitions/KalturaCondition"
          },
          "type": "array"
        },
        "objectType": {
          "enum": [
            "KalturaCouponPromotion",
            "KalturaPromotion"
          ],
          "type": "string"
        }
      },
      "title": "KalturaBasePromotion",
      "type": "object",
      "x-abstract": true
    },
    "KalturaBaseRegionFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaRegionFilter"
        },
        {
          "$ref": "#/definitions/KalturaDefaultRegionFilter"
        }
      ],
      "description": "`abstract`",
      "discriminator": "objectType",
      "properties": {
        "objectType": {
          "enum": [
            "KalturaRegionFilter",
            "KalturaDefaultRegionFilter"
          ],
          "type": "string"
        }
      },
      "title": "KalturaBaseRegionFilter",
      "type": "object",
      "x-abstract": true
    },
    "KalturaBaseResponseProfile": {
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaDetachedResponseProfile"
        },
        {
          "$ref": "#/definitions/KalturaOnDemandResponseProfile"
        }
      ],
      "description": "`abstract`\n\nDefine base profile response -  optional configurations",
      "discriminator": "objectType",
      "properties": {
        "objectType": {
          "enum": [
            "KalturaDetachedResponseProfile",
            "KalturaOnDemandResponseProfile"
          ],
          "type": "string"
        }
      },
      "title": "KalturaBaseResponseProfile",
      "type": "object",
      "x-abstract": true
    },
    "KalturaBaseSearchAssetFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaAssetFilter"
        }
      ],
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaChannelFilter"
        },
        {
          "$ref": "#/definitions/KalturaPersonalListSearchFilter"
        },
        {
          "$ref": "#/definitions/KalturaRelatedFilter"
        },
        {
          "$ref": "#/definitions/KalturaSearchAssetFilter"
        },
        {
          "$ref": "#/definitions/KalturaSearchAssetListFilter"
        }
      ],
      "description": "`abstract`\n\nKaltura Base Search Asset Filter",
      "discriminator": "objectType",
      "properties": {
        "groupBy": {
          "items": {
            "$ref": "#/definitions/KalturaAssetGroupBy"
          },
          "type": "array"
        },
        "groupOrderBy": {
          "description": "Enum Type: `KalturaGroupByOrder`\n\norder by of grouping",
          "enum": [
            "defaultOrder",
            "count_asc",
            "count_desc",
            "value_asc",
            "value_desc"
          ],
          "type": "string",
          "x-enumLabels": [
            "DEFAULTORDER",
            "COUNT_ASC",
            "COUNT_DESC",
            "VALUE_ASC",
            "VALUE_DESC"
          ],
          "x-enumType": "KalturaGroupByOrder"
        },
        "groupingOptionEqual": {
          "description": "Enum Type: `KalturaGroupingOption`\n\nGrouping Option, Omit if not specified otherwise",
          "enum": [
            "Omit",
            "Include"
          ],
          "type": "string",
          "x-enumLabels": [
            "OMIT",
            "INCLUDE"
          ],
          "x-enumType": "KalturaGroupingOption"
        },
        "kSql": {
          "description": "Search assets using dynamic criteria. Provided collection of nested expressions with key, comparison operators, value, and logical conjunction.\r\n            Possible keys: any Tag or Meta defined in the system and the following reserved keys: start_date, end_date. \r\n            epg_id, media_id - for specific asset IDs.\r\n            geo_block - only valid value is &quot;true&quot;: When enabled, only assets that are not restricted to the user by geo-block rules will return.\r\n            parental_rules - only valid value is &quot;true&quot;: When enabled, only assets that the user doesn&#39;t need to provide PIN code will return.\r\n            user_interests - only valid value is &quot;true&quot;. When enabled, only assets that the user defined as his interests (by tags and metas) will return.\r\n            epg_channel_id - the channel identifier of the EPG program.\r\n            entitled_assets - valid values: &quot;free&quot;, &quot;entitled&quot;, &quot;not_entitled&quot;, &quot;both&quot;. free - gets only free to watch assets. entitled - only those that the user is implicitly entitled to watch.\r\n            asset_type - valid values: &quot;media&quot;, &quot;epg&quot;, &quot;recording&quot; or any number that represents media type in group.\r\n            Comparison operators: for numerical fields =, &gt;, &gt;=, &lt;, &lt;=, : (in). \r\n            For alpha-numerical fields =, != (not), ~ (like), !~, ^ (any word starts with), ^= (phrase starts with), + (exists), !+ (not exists).\r\n            Logical conjunction: and, or. \r\n            Search values are limited to 20 characters each for the next operators: ~, !~, ^, ^=\r\n            (maximum length of entire filter is 4096 characters)",
          "type": "string"
        },
        "objectType": {
          "enum": [
            "KalturaChannelFilter",
            "KalturaPersonalListSearchFilter",
            "KalturaRelatedFilter",
            "KalturaSearchAssetFilter",
            "KalturaSearchAssetListFilter"
          ],
          "type": "string"
        }
      },
      "title": "KalturaBaseSearchAssetFilter",
      "type": "object",
      "x-abstract": true
    },
    "KalturaBaseSegmentAction": {
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaBaseSegmentAction"
        },
        {
          "$ref": "#/definitions/KalturaAssetOrderSegmentAction"
        },
        {
          "$ref": "#/definitions/KalturaSegmentBlockCancelSubscriptionAction"
        },
        {
          "$ref": "#/definitions/KalturaSegmentBlockPlaybackSubscriptionAction"
        },
        {
          "$ref": "#/definitions/KalturaSegmentBlockPurchaseSubscriptionAction"
        },
        {
          "$ref": "#/definitions/KalturaSegmentAssetFilterSegmentAction"
        },
        {
          "$ref": "#/definitions/KalturaSegmentAssetFilterSubscriptionAction"
        }
      ],
      "description": "Base class that defines segment action",
      "discriminator": "objectType",
      "properties": {
        "objectType": {
          "enum": [
            "KalturaBaseSegmentAction",
            "KalturaAssetOrderSegmentAction",
            "KalturaSegmentBlockCancelSubscriptionAction",
            "KalturaSegmentBlockPlaybackSubscriptionAction",
            "KalturaSegmentBlockPurchaseSubscriptionAction",
            "KalturaSegmentAssetFilterSegmentAction",
            "KalturaSegmentAssetFilterSubscriptionAction"
          ],
          "type": "string"
        }
      },
      "title": "KalturaBaseSegmentAction",
      "type": "object"
    },
    "KalturaBaseSegmentCondition": {
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaBaseSegmentCondition"
        },
        {
          "$ref": "#/definitions/KalturaContentScoreCondition"
        },
        {
          "$ref": "#/definitions/KalturaMonetizationCondition"
        },
        {
          "$ref": "#/definitions/KalturaUserDataCondition"
        }
      ],
      "description": "Base class that defines segment condition",
      "discriminator": "objectType",
      "properties": {
        "objectType": {
          "enum": [
            "KalturaBaseSegmentCondition",
            "KalturaContentScoreCondition",
            "KalturaMonetizationCondition",
            "KalturaUserDataCondition"
          ],
          "type": "string"
        }
      },
      "title": "KalturaBaseSegmentCondition",
      "type": "object"
    },
    "KalturaBaseSegmentValue": {
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaBaseSegmentValue"
        },
        {
          "$ref": "#/definitions/KalturaSegmentValues"
        },
        {
          "$ref": "#/definitions/KalturaSegmentRanges"
        },
        {
          "$ref": "#/definitions/KalturaSingleSegmentValue"
        },
        {
          "$ref": "#/definitions/KalturaSegmentAllValues"
        }
      ],
      "description": "Base class that defines segment value",
      "discriminator": "objectType",
      "properties": {
        "objectType": {
          "enum": [
            "KalturaBaseSegmentValue",
            "KalturaSegmentValues",
            "KalturaSegmentRanges",
            "KalturaSingleSegmentValue",
            "KalturaSegmentAllValues"
          ],
          "type": "string"
        }
      },
      "title": "KalturaBaseSegmentValue",
      "type": "object"
    },
    "KalturaBaseSegmentationTypeFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaSegmentationTypeFilter"
        },
        {
          "$ref": "#/definitions/KalturaSegmentValueFilter"
        }
      ],
      "description": "`abstract`",
      "discriminator": "objectType",
      "properties": {
        "objectType": {
          "enum": [
            "KalturaSegmentationTypeFilter",
            "KalturaSegmentValueFilter"
          ],
          "type": "string"
        }
      },
      "title": "KalturaBaseSegmentationTypeFilter",
      "type": "object",
      "x-abstract": true
    },
    "KalturaBatchCampaign": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaCampaign"
        }
      ],
      "description": "Campaign",
      "properties": {
        "populationConditions": {
          "items": {
            "$ref": "#/definitions/KalturaCondition"
          },
          "type": "array"
        }
      },
      "title": "KalturaBatchCampaign",
      "type": "object"
    },
    "KalturaBatchCampaignSearchFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaCampaignSearchFilter"
        }
      ],
      "properties": {},
      "title": "KalturaBatchCampaignSearchFilter",
      "type": "object"
    },
    "KalturaBillingPartnerConfig": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaPartnerConfiguration"
        }
      ],
      "description": "Partner billing configuration",
      "properties": {
        "type": {
          "description": "Enum Type: `KalturaPartnerConfigurationType`\n\npartner configuration type",
          "enum": [
            "DefaultPaymentGateway",
            "EnablePaymentGatewaySelection",
            "OSSAdapter",
            "Concurrency",
            "General",
            "ObjectVirtualAsset",
            "Commerce",
            "Playback",
            "Payment",
            "Catalog",
            "Security",
            "Opc",
            "Base",
            "CustomFields",
            "DefaultParentalSettings"
          ],
          "type": "string",
          "x-enumLabels": [
            "DEFAULTPAYMENTGATEWAY",
            "ENABLEPAYMENTGATEWAYSELECTION",
            "OSSADAPTER",
            "CONCURRENCY",
            "GENERAL",
            "OBJECTVIRTUALASSET",
            "COMMERCE",
            "PLAYBACK",
            "PAYMENT",
            "CATALOG",
            "SECURITY",
            "OPC",
            "BASE",
            "CUSTOMFIELDS",
            "DEFAULTPARENTALSETTINGS"
          ],
          "x-enumType": "KalturaPartnerConfigurationType"
        },
        "value": {
          "description": "configuration value",
          "type": "string"
        }
      },
      "title": "KalturaBillingPartnerConfig",
      "type": "object"
    },
    "KalturaBillingResponse": {
      "description": "Billing response",
      "properties": {
        "externalReceiptCode": {
          "description": "External receipt Code",
          "type": "string"
        },
        "receiptCode": {
          "description": "Receipt Code",
          "type": "string"
        }
      },
      "title": "KalturaBillingResponse",
      "type": "object"
    },
    "KalturaBillingTransaction": {
      "description": "Billing Transaction",
      "properties": {
        "actionDate": {
          "description": "`readOnly`\n\nAction Date",
          "readOnly": true,
          "type": "integer",
          "x-inputType": "datetime"
        },
        "billingAction": {
          "description": "`readOnly`\n\nEnum Type: `KalturaBillingAction`\n\nBilling Action",
          "enum": [
            "unknown",
            "purchase",
            "renew_payment",
            "renew_canceled_subscription",
            "cancel_subscription_order",
            "subscription_date_changed",
            "pending"
          ],
          "readOnly": true,
          "type": "string",
          "x-enumLabels": [
            "UNKNOWN",
            "PURCHASE",
            "RENEW_PAYMENT",
            "RENEW_CANCELED_SUBSCRIPTION",
            "CANCEL_SUBSCRIPTION_ORDER",
            "SUBSCRIPTION_DATE_CHANGED",
            "PENDING"
          ],
          "x-enumType": "KalturaBillingAction"
        },
        "billingPriceType": {
          "description": "`readOnly`\n\nEnum Type: `KalturaBillingPriceType`\n\nBilling Price Info",
          "enum": [
            "FullPeriod",
            "PartialPeriod"
          ],
          "readOnly": true,
          "type": "string",
          "x-enumLabels": [
            "FULLPERIOD",
            "PARTIALPERIOD"
          ],
          "x-enumType": "KalturaBillingPriceType"
        },
        "billingProviderRef": {
          "description": "`readOnly`\n\nBilling Provider Ref",
          "readOnly": true,
          "type": "integer"
        },
        "endDate": {
          "description": "`readOnly`\n\nEnd Date",
          "readOnly": true,
          "type": "integer",
          "x-inputType": "datetime"
        },
        "externalTransactionId": {
          "description": "`readOnly`\n\nExternal Transaction Id",
          "readOnly": true,
          "type": "string"
        },
        "isRecurring": {
          "description": "`readOnly`\n\nIs Recurring",
          "readOnly": true,
          "type": "boolean"
        },
        "itemType": {
          "description": "`readOnly`\n\nEnum Type: `KalturaBillingItemsType`\n\nItem Type",
          "enum": [
            "unknown",
            "ppv",
            "subscription",
            "pre_paid",
            "pre_paid_expired",
            "collection",
            "program_asset_group_offer"
          ],
          "readOnly": true,
          "type": "string",
          "x-enumLabels": [
            "UNKNOWN",
            "PPV",
            "SUBSCRIPTION",
            "PRE_PAID",
            "PRE_PAID_EXPIRED",
            "COLLECTION",
            "PROGRAM_ASSET_GROUP_OFFER"
          ],
          "x-enumType": "KalturaBillingItemsType"
        },
        "paymentMethod": {
          "description": "`readOnly`\n\nEnum Type: `KalturaPaymentMethodType`\n\nPayment Method",
          "enum": [
            "unknown",
            "credit_card",
            "sms",
            "pay_pal",
            "debit_card",
            "ideal",
            "incaso",
            "gift",
            "visa",
            "master_card",
            "in_app",
            "m1",
            "change_subscription",
            "offline"
          ],
          "readOnly": true,
          "type": "string",
          "x-enumLabels": [
            "UNKNOWN",
            "CREDIT_CARD",
            "SMS",
            "PAY_PAL",
            "DEBIT_CARD",
            "IDEAL",
            "INCASO",
            "GIFT",
            "VISA",
            "MASTER_CARD",
            "IN_APP",
            "M1",
            "CHANGE_SUBSCRIPTION",
            "OFFLINE"
          ],
          "x-enumType": "KalturaPaymentMethodType"
        },
        "paymentMethodExtraDetails": {
          "description": "`readOnly`\n\nPayment Method Extra Details",
          "readOnly": true,
          "type": "string"
        },
        "price": {
          "$ref": "#/definitions/KalturaPrice"
        },
        "purchaseId": {
          "description": "`readOnly`\n\nPurchase ID",
          "readOnly": true,
          "type": "integer"
        },
        "purchasedItemCode": {
          "description": "`readOnly`\n\nPurchased Item Code",
          "readOnly": true,
          "type": "string"
        },
        "purchasedItemName": {
          "description": "`readOnly`\n\nPurchased Item Name",
          "readOnly": true,
          "type": "string"
        },
        "recieptCode": {
          "description": "`readOnly`\n\nReciept Code",
          "readOnly": true,
          "type": "string"
        },
        "remarks": {
          "description": "`readOnly`\n\nRemarks",
          "readOnly": true,
          "type": "string"
        },
        "startDate": {
          "description": "`readOnly`\n\nStart Date",
          "readOnly": true,
          "type": "integer",
          "x-inputType": "datetime"
        }
      },
      "title": "KalturaBillingTransaction",
      "type": "object"
    },
    "KalturaBillingTransactionListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "Billing Transactions",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaBillingTransaction"
          },
          "type": "array"
        }
      },
      "title": "KalturaBillingTransactionListResponse",
      "type": "object"
    },
    "KalturaBlockPlaybackAction": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaAssetRuleAction"
        }
      ],
      "properties": {},
      "title": "KalturaBlockPlaybackAction",
      "type": "object"
    },
    "KalturaBlockSubscriptionSegmentAction": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaKsqlSegmentAction"
        }
      ],
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaSegmentBlockCancelSubscriptionAction"
        },
        {
          "$ref": "#/definitions/KalturaSegmentBlockPlaybackSubscriptionAction"
        },
        {
          "$ref": "#/definitions/KalturaSegmentBlockPurchaseSubscriptionAction"
        }
      ],
      "description": "`abstract`\n\nsegment block subscription action",
      "discriminator": "objectType",
      "properties": {
        "objectType": {
          "enum": [
            "KalturaSegmentBlockCancelSubscriptionAction",
            "KalturaSegmentBlockPlaybackSubscriptionAction",
            "KalturaSegmentBlockPurchaseSubscriptionAction"
          ],
          "type": "string"
        }
      },
      "title": "KalturaBlockSubscriptionSegmentAction",
      "type": "object",
      "x-abstract": true
    },
    "KalturaBookmark": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaSlimAsset"
        }
      ],
      "properties": {
        "context": {
          "description": "Enum Type: `KalturaPlaybackContextType`\n\nPlayback context type",
          "enum": [
            "TRAILER",
            "CATCHUP",
            "START_OVER",
            "PLAYBACK",
            "DOWNLOAD"
          ],
          "type": "string",
          "x-enumLabels": [
            "TRAILER",
            "CATCHUP",
            "START_OVER",
            "PLAYBACK",
            "DOWNLOAD"
          ],
          "x-enumType": "KalturaPlaybackContextType"
        },
        "finishedWatching": {
          "description": "`readOnly`\n\nSpecifies whether the user&#39;s current position exceeded 95% of the duration\r\n            For external recordings will always be &#39;True&#39;",
          "readOnly": true,
          "type": "boolean"
        },
        "isReportingMode": {
          "description": "Indicates if the current request is in reporting mode (hit)",
          "type": "boolean"
        },
        "playerData": {
          "$ref": "#/definitions/KalturaBookmarkPlayerData"
        },
        "position": {
          "description": "`insertOnly`\n\nThe position of the user in the specific asset (in seconds)\r\n            For external recordings will always be &#39;0&#39;",
          "type": "integer"
        },
        "positionOwner": {
          "description": "`readOnly`\n\nEnum Type: `KalturaPositionOwner`\n\nIndicates who is the owner of this position",
          "enum": [
            "household",
            "user"
          ],
          "readOnly": true,
          "type": "string",
          "x-enumLabels": [
            "HOUSEHOLD",
            "USER"
          ],
          "x-enumType": "KalturaPositionOwner"
        },
        "programId": {
          "description": "Program Id",
          "type": "integer"
        },
        "userId": {
          "description": "`readOnly`\n\nUser identifier",
          "readOnly": true,
          "type": "string"
        }
      },
      "title": "KalturaBookmark",
      "type": "object"
    },
    "KalturaBookmarkEvent": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaEventObject"
        }
      ],
      "properties": {
        "action": {
          "description": "Enum Type: `KalturaBookmarkActionType`\n\nBookmark Action Type",
          "enum": [
            "HIT",
            "PLAY",
            "STOP",
            "PAUSE",
            "FIRST_PLAY",
            "SWOOSH",
            "FULL_SCREEN",
            "SEND_TO_FRIEND",
            "LOAD",
            "FULL_SCREEN_EXIT",
            "FINISH",
            "ERROR",
            "BITRATE_CHANGE",
            "NONE"
          ],
          "type": "string",
          "x-enumLabels": [
            "HIT",
            "PLAY",
            "STOP",
            "PAUSE",
            "FIRST_PLAY",
            "SWOOSH",
            "FULL_SCREEN",
            "SEND_TO_FRIEND",
            "LOAD",
            "FULL_SCREEN_EXIT",
            "FINISH",
            "ERROR",
            "BITRATE_CHANGE",
            "NONE"
          ],
          "x-enumType": "KalturaBookmarkActionType"
        },
        "assetId": {
          "description": "Asset Id",
          "type": "integer"
        },
        "fileId": {
          "description": "File Id",
          "type": "integer"
        },
        "householdId": {
          "description": "Household Id",
          "type": "integer"
        },
        "position": {
          "description": "position",
          "type": "integer"
        },
        "productId": {
          "description": "Product Id",
          "type": "integer"
        },
        "productType": {
          "description": "Enum Type: `KalturaTransactionType`\n\nProduct Type",
          "enum": [
            "ppv",
            "subscription",
            "collection",
            "programAssetGroupOffer"
          ],
          "type": "string",
          "x-enumLabels": [
            "PPV",
            "SUBSCRIPTION",
            "COLLECTION",
            "PROGRAMASSETGROUPOFFER"
          ],
          "x-enumType": "KalturaTransactionType"
        },
        "userId": {
          "description": "User Id",
          "type": "integer"
        }
      },
      "title": "KalturaBookmarkEvent",
      "type": "object"
    },
    "KalturaBookmarkEventThreshold": {
      "properties": {
        "threshold": {
          "description": "event threshold in seconds",
          "type": "integer"
        },
        "transactionType": {
          "description": "Enum Type: `KalturaTransactionType`\n\nbookmark transaction type",
          "enum": [
            "ppv",
            "subscription",
            "collection",
            "programAssetGroupOffer"
          ],
          "type": "string",
          "x-enumLabels": [
            "PPV",
            "SUBSCRIPTION",
            "COLLECTION",
            "PROGRAMASSETGROUPOFFER"
          ],
          "x-enumType": "KalturaTransactionType"
        }
      },
      "title": "KalturaBookmarkEventThreshold",
      "type": "object"
    },
    "KalturaBookmarkFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "description": "Filtering Assets requests",
      "properties": {
        "assetIdIn": {
          "description": "Comma separated list of assets identifiers",
          "type": "string"
        },
        "assetTypeEqual": {
          "description": "Enum Type: `KalturaAssetType`\n\nAsset type",
          "enum": [
            "media",
            "recording",
            "epg"
          ],
          "type": "string",
          "x-enumLabels": [
            "MEDIA",
            "RECORDING",
            "EPG"
          ],
          "x-enumType": "KalturaAssetType"
        },
        "orderBy": {
          "enum": [
            "POSITION_ASC",
            "POSITION_DESC"
          ],
          "type": "string",
          "x-enumLabels": [
            "POSITION_ASC",
            "POSITION_DESC"
          ],
          "x-enumType": "KalturaBookmarkOrderBy"
        }
      },
      "title": "KalturaBookmarkFilter",
      "type": "object"
    },
    "KalturaBookmarkListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "List of assets and their bookmarks",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaBookmark"
          },
          "type": "array"
        }
      },
      "title": "KalturaBookmarkListResponse",
      "type": "object"
    },
    "KalturaBookmarkPlayerData": {
      "properties": {
        "action": {
          "description": "Enum Type: `KalturaBookmarkActionType`\n\nAction",
          "enum": [
            "HIT",
            "PLAY",
            "STOP",
            "PAUSE",
            "FIRST_PLAY",
            "SWOOSH",
            "FULL_SCREEN",
            "SEND_TO_FRIEND",
            "LOAD",
            "FULL_SCREEN_EXIT",
            "FINISH",
            "ERROR",
            "BITRATE_CHANGE",
            "NONE"
          ],
          "type": "string",
          "x-enumLabels": [
            "HIT",
            "PLAY",
            "STOP",
            "PAUSE",
            "FIRST_PLAY",
            "SWOOSH",
            "FULL_SCREEN",
            "SEND_TO_FRIEND",
            "LOAD",
            "FULL_SCREEN_EXIT",
            "FINISH",
            "ERROR",
            "BITRATE_CHANGE",
            "NONE"
          ],
          "x-enumType": "KalturaBookmarkActionType"
        },
        "averageBitrate": {
          "description": "Average Bitrate",
          "type": "integer"
        },
        "currentBitrate": {
          "description": "Current Bitrate",
          "type": "integer"
        },
        "fileId": {
          "description": "Identifier of the file",
          "type": "integer"
        },
        "totalBitrate": {
          "description": "Total Bitrate",
          "type": "integer"
        }
      },
      "title": "KalturaBookmarkPlayerData",
      "type": "object"
    },
    "KalturaBooleanValue": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaValue"
        }
      ],
      "description": "A string representation to return an array of booleans",
      "properties": {
        "value": {
          "description": "Value",
          "type": "boolean"
        }
      },
      "title": "KalturaBooleanValue",
      "type": "object"
    },
    "KalturaBulkUpload": {
      "description": "Bulk Upload",
      "properties": {
        "action": {
          "description": "`readOnly`\n\nEnum Type: `KalturaBulkUploadJobAction`\n\nAction",
          "enum": [
            "Upsert",
            "Delete"
          ],
          "readOnly": true,
          "type": "string",
          "x-enumLabels": [
            "UPSERT",
            "DELETE"
          ],
          "x-enumType": "KalturaBulkUploadJobAction"
        },
        "createDate": {
          "description": "`readOnly`\n\nSpecifies when was the bulk action created. Date and time represented as epoch",
          "readOnly": true,
          "type": "integer",
          "x-inputType": "datetime"
        },
        "errors": {
          "items": {
            "$ref": "#/definitions/KalturaMessage"
          },
          "type": "array"
        },
        "fileName": {
          "description": "`readOnly`\n\nFile Name",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "`readOnly`\n\nBulk identifier",
          "readOnly": true,
          "type": "integer"
        },
        "numOfObjects": {
          "description": "`readOnly`\n\nTotal number of objects in file",
          "readOnly": true,
          "type": "integer"
        },
        "results": {
          "items": {
            "$ref": "#/definitions/KalturaBulkUploadResult"
          },
          "type": "array"
        },
        "status": {
          "description": "`readOnly`\n\nEnum Type: `KalturaBulkUploadJobStatus`\n\nStatus",
          "enum": [
            "Pending",
            "Uploaded",
            "Queued",
            "Parsing",
            "Processing",
            "Processed",
            "Success",
            "Partial",
            "Failed",
            "Fatal"
          ],
          "readOnly": true,
          "type": "string",
          "x-enumLabels": [
            "PENDING",
            "UPLOADED",
            "QUEUED",
            "PARSING",
            "PROCESSING",
            "PROCESSED",
            "SUCCESS",
            "PARTIAL",
            "FAILED",
            "FATAL"
          ],
          "x-enumType": "KalturaBulkUploadJobStatus"
        },
        "updateDate": {
          "description": "`readOnly`\n\nSpecifies when was the bulk action last updated. Date and time represented as epoch",
          "readOnly": true,
          "type": "integer",
          "x-inputType": "datetime"
        },
        "uploadedByUserId": {
          "description": "`readOnly`\n\nThe user who uploaded this bulk",
          "readOnly": true,
          "type": "integer"
        }
      },
      "title": "KalturaBulkUpload",
      "type": "object"
    },
    "KalturaBulkUploadAssetData": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBulkUploadObjectData"
        }
      ],
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaBulkUploadMediaAssetData"
        },
        {
          "$ref": "#/definitions/KalturaBulkUploadProgramAssetData"
        },
        {
          "$ref": "#/definitions/KalturaBulkUploadLiveAssetData"
        }
      ],
      "description": "`abstract`\n\nindicates the asset object type in the bulk file",
      "discriminator": "objectType",
      "properties": {
        "objectType": {
          "enum": [
            "KalturaBulkUploadMediaAssetData",
            "KalturaBulkUploadProgramAssetData",
            "KalturaBulkUploadLiveAssetData"
          ],
          "type": "string"
        },
        "typeId": {
          "description": "Identifies the asset type (EPG, Recording, Movie, TV Series, etc). \r\n            Possible values: 0 - EPG linear programs, 1 - Recording; or any asset type ID according to the asset types IDs defined in the system.",
          "type": "integer"
        }
      },
      "title": "KalturaBulkUploadAssetData",
      "type": "object",
      "x-abstract": true
    },
    "KalturaBulkUploadAssetResult": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBulkUploadResult"
        }
      ],
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaBulkUploadMediaAssetResult"
        },
        {
          "$ref": "#/definitions/KalturaBulkUploadLiveAssetResult"
        }
      ],
      "description": "`abstract`",
      "discriminator": "objectType",
      "properties": {
        "externalId": {
          "description": "`readOnly`\n\nExternal identifier for the asset",
          "readOnly": true,
          "type": "string"
        },
        "objectType": {
          "enum": [
            "KalturaBulkUploadMediaAssetResult",
            "KalturaBulkUploadLiveAssetResult"
          ],
          "type": "string"
        },
        "type": {
          "description": "`readOnly`\n\nIdentifies the asset type (EPG, Recording, Movie, TV Series, etc). \r\n            Possible values: 0 – EPG linear programs, 1 - Recording; or any asset type ID according to the asset types IDs defined in the system.",
          "readOnly": true,
          "type": "integer"
        }
      },
      "title": "KalturaBulkUploadAssetResult",
      "type": "object",
      "x-abstract": true
    },
    "KalturaBulkUploadDynamicListData": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBulkUploadObjectData"
        }
      ],
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaBulkUploadUdidDynamicListData"
        }
      ],
      "description": "`abstract`\n\nindicates the DynamicList object type in the bulk file",
      "discriminator": "objectType",
      "properties": {
        "dynamicListId": {
          "description": "Identifies the dynamicList Id",
          "type": "integer"
        },
        "objectType": {
          "enum": [
            "KalturaBulkUploadUdidDynamicListData"
          ],
          "type": "string"
        }
      },
      "title": "KalturaBulkUploadDynamicListData",
      "type": "object",
      "x-abstract": true
    },
    "KalturaBulkUploadDynamicListResult": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBulkUploadResult"
        }
      ],
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaBulkUploadUdidDynamicListResult"
        }
      ],
      "description": "`abstract`",
      "discriminator": "objectType",
      "properties": {
        "objectType": {
          "enum": [
            "KalturaBulkUploadUdidDynamicListResult"
          ],
          "type": "string"
        }
      },
      "title": "KalturaBulkUploadDynamicListResult",
      "type": "object",
      "x-abstract": true
    },
    "KalturaBulkUploadExcelJobData": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBulkUploadJobData"
        }
      ],
      "description": "instructions for upload data type with Excel",
      "properties": {},
      "title": "KalturaBulkUploadExcelJobData",
      "type": "object"
    },
    "KalturaBulkUploadFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "description": "Bulk Upload Filter",
      "properties": {
        "bulkObjectTypeEqual": {
          "description": "bulk objects Type name (must be type of KalturaOTTObject)",
          "type": "string"
        },
        "createDateGreaterThanOrEqual": {
          "description": "upload date to search within (search in the last 60 days)",
          "type": "integer"
        },
        "orderBy": {
          "enum": [
            "NONE",
            "UPDATE_DATE_ASC",
            "UPDATE_DATE_DESC"
          ],
          "type": "string",
          "x-enumLabels": [
            "NONE",
            "UPDATE_DATE_ASC",
            "UPDATE_DATE_DESC"
          ],
          "x-enumType": "KalturaBulkUploadOrderBy"
        },
        "statusIn": {
          "description": "Comma separated list of BulkUpload Statuses to search\\filter",
          "type": "string"
        },
        "uploadedByUserIdEqualCurrent": {
          "description": "Indicates if to get the BulkUpload list that created by current user or by the entire group.",
          "type": "boolean"
        }
      },
      "title": "KalturaBulkUploadFilter",
      "type": "object"
    },
    "KalturaBulkUploadIngestJobData": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBulkUploadJobData"
        }
      ],
      "description": "instructions for upload data type with xml",
      "properties": {
        "disableEpgNotification": {
          "description": "By default, after the successful ingest, devices will be notified about changes in epg channels.\r\n            This parameter disables this notification.",
          "type": "boolean"
        },
        "ingestProfileId": {
          "description": "Identifies the ingest profile that will handle the ingest of programs\r\n            Ingest profiles are created separately using the ingest profile service",
          "type": "integer"
        }
      },
      "title": "KalturaBulkUploadIngestJobData",
      "type": "object"
    },
    "KalturaBulkUploadJobData": {
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaBulkUploadExcelJobData"
        },
        {
          "$ref": "#/definitions/KalturaBulkUploadIngestJobData"
        }
      ],
      "description": "`abstract`\n\ninstructions for upload data (the data file type, how to read the file, etc)",
      "discriminator": "objectType",
      "properties": {
        "objectType": {
          "enum": [
            "KalturaBulkUploadExcelJobData",
            "KalturaBulkUploadIngestJobData"
          ],
          "type": "string"
        }
      },
      "title": "KalturaBulkUploadJobData",
      "type": "object",
      "x-abstract": true
    },
    "KalturaBulkUploadListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "Asset wrapper",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaBulkUpload"
          },
          "type": "array"
        }
      },
      "title": "KalturaBulkUploadListResponse",
      "type": "object"
    },
    "KalturaBulkUploadLiveAssetData": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBulkUploadMediaAssetData"
        }
      ],
      "description": "indicates the media asset object type in the bulk file",
      "properties": {},
      "title": "KalturaBulkUploadLiveAssetData",
      "type": "object"
    },
    "KalturaBulkUploadLiveAssetResult": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBulkUploadMediaAssetResult"
        }
      ],
      "properties": {},
      "title": "KalturaBulkUploadLiveAssetResult",
      "type": "object"
    },
    "KalturaBulkUploadMediaAssetData": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBulkUploadAssetData"
        }
      ],
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaBulkUploadMediaAssetData"
        },
        {
          "$ref": "#/definitions/KalturaBulkUploadLiveAssetData"
        }
      ],
      "description": "indicates the media asset object type in the bulk file",
      "discriminator": "objectType",
      "properties": {
        "objectType": {
          "enum": [
            "KalturaBulkUploadMediaAssetData",
            "KalturaBulkUploadLiveAssetData"
          ],
          "type": "string"
        }
      },
      "title": "KalturaBulkUploadMediaAssetData",
      "type": "object"
    },
    "KalturaBulkUploadMediaAssetResult": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBulkUploadAssetResult"
        }
      ],
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaBulkUploadMediaAssetResult"
        },
        {
          "$ref": "#/definitions/KalturaBulkUploadLiveAssetResult"
        }
      ],
      "discriminator": "objectType",
      "properties": {
        "objectType": {
          "enum": [
            "KalturaBulkUploadMediaAssetResult",
            "KalturaBulkUploadLiveAssetResult"
          ],
          "type": "string"
        }
      },
      "title": "KalturaBulkUploadMediaAssetResult",
      "type": "object"
    },
    "KalturaBulkUploadObjectData": {
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaBulkUploadMediaAssetData"
        },
        {
          "$ref": "#/definitions/KalturaBulkUploadProgramAssetData"
        },
        {
          "$ref": "#/definitions/KalturaBulkUploadLiveAssetData"
        },
        {
          "$ref": "#/definitions/KalturaBulkUploadUdidDynamicListData"
        }
      ],
      "description": "`abstract`\n\nindicates the object type in the bulk file",
      "discriminator": "objectType",
      "properties": {
        "objectType": {
          "enum": [
            "KalturaBulkUploadMediaAssetData",
            "KalturaBulkUploadProgramAssetData",
            "KalturaBulkUploadLiveAssetData",
            "KalturaBulkUploadUdidDynamicListData"
          ],
          "type": "string"
        }
      },
      "title": "KalturaBulkUploadObjectData",
      "type": "object",
      "x-abstract": true
    },
    "KalturaBulkUploadProgramAssetData": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBulkUploadAssetData"
        }
      ],
      "description": "indicates the epg asset object type in the bulk file",
      "properties": {},
      "title": "KalturaBulkUploadProgramAssetData",
      "type": "object"
    },
    "KalturaBulkUploadProgramAssetResult": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBulkUploadResult"
        }
      ],
      "properties": {
        "liveAssetId": {
          "description": "`readOnly`\n\nThe  live asset Id that was identified according liveAssetExternalId that was sent in bulk xml file",
          "readOnly": true,
          "type": "integer"
        },
        "programExternalId": {
          "description": "`readOnly`\n\nThe external program Id as was sent in the bulk xml file",
          "readOnly": true,
          "type": "string"
        },
        "programId": {
          "description": "`readOnly`\n\nThe programID that was created",
          "readOnly": true,
          "type": "integer"
        }
      },
      "title": "KalturaBulkUploadProgramAssetResult",
      "type": "object"
    },
    "KalturaBulkUploadResult": {
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaBulkUploadProgramAssetResult"
        },
        {
          "$ref": "#/definitions/KalturaBulkUploadMediaAssetResult"
        },
        {
          "$ref": "#/definitions/KalturaBulkUploadLiveAssetResult"
        },
        {
          "$ref": "#/definitions/KalturaBulkUploadUdidDynamicListResult"
        }
      ],
      "description": "`abstract`\n\nBulk Upload Result",
      "discriminator": "objectType",
      "properties": {
        "bulkUploadId": {
          "description": "`readOnly`\n\nBulk upload identifier",
          "readOnly": true,
          "type": "integer"
        },
        "errors": {
          "items": {
            "$ref": "#/definitions/KalturaMessage"
          },
          "type": "array"
        },
        "index": {
          "description": "`readOnly`\n\nresult index",
          "readOnly": true,
          "type": "integer"
        },
        "objectId": {
          "description": "`readOnly`\n\nthe result ObjectId (assetId, userId etc)",
          "readOnly": true,
          "type": "integer"
        },
        "objectType": {
          "enum": [
            "KalturaBulkUploadProgramAssetResult",
            "KalturaBulkUploadMediaAssetResult",
            "KalturaBulkUploadLiveAssetResult",
            "KalturaBulkUploadUdidDynamicListResult"
          ],
          "type": "string"
        },
        "status": {
          "description": "`readOnly`\n\nEnum Type: `KalturaBulkUploadResultStatus`\n\nstatus",
          "enum": [
            "Error",
            "Ok",
            "InProgress"
          ],
          "readOnly": true,
          "type": "string",
          "x-enumLabels": [
            "ERROR",
            "OK",
            "INPROGRESS"
          ],
          "x-enumType": "KalturaBulkUploadResultStatus"
        },
        "warnings": {
          "items": {
            "$ref": "#/definitions/KalturaMessage"
          },
          "type": "array"
        }
      },
      "title": "KalturaBulkUploadResult",
      "type": "object",
      "x-abstract": true
    },
    "KalturaBulkUploadStatistics": {
      "description": "Bulk Upload Statistics",
      "properties": {
        "failed": {
          "description": "count of bulk upload in failed status",
          "type": "integer"
        },
        "fatal": {
          "description": "count of bulk upload in fatal status",
          "type": "integer"
        },
        "parsing": {
          "description": "count of bulk upload in parsing status",
          "type": "integer"
        },
        "partial": {
          "description": "count of bulk upload in partial status",
          "type": "integer"
        },
        "pending": {
          "description": "count of bulk upload in pending status",
          "type": "integer"
        },
        "processed": {
          "description": "count of bulk upload in processed status",
          "type": "integer"
        },
        "processing": {
          "description": "count of bulk upload in processing status",
          "type": "integer"
        },
        "queued": {
          "description": "count of bulk upload in queued status",
          "type": "integer"
        },
        "success": {
          "description": "count of bulk upload in success status",
          "type": "integer"
        },
        "uploaded": {
          "description": "count of bulk Uploaded in uploaded status",
          "type": "integer"
        }
      },
      "title": "KalturaBulkUploadStatistics",
      "type": "object"
    },
    "KalturaBulkUploadUdidDynamicListData": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBulkUploadDynamicListData"
        }
      ],
      "description": "indicates the UDID DynamicList object type in the bulk file",
      "properties": {},
      "title": "KalturaBulkUploadUdidDynamicListData",
      "type": "object"
    },
    "KalturaBulkUploadUdidDynamicListResult": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBulkUploadDynamicListResult"
        }
      ],
      "properties": {
        "udid": {
          "description": "`readOnly`\n\nThe udid from the excel to add to DynamicLis values",
          "readOnly": true,
          "type": "string"
        }
      },
      "title": "KalturaBulkUploadUdidDynamicListResult",
      "type": "object"
    },
    "KalturaBumpersPlaybackPluginData": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaPlaybackPluginData"
        }
      ],
      "properties": {
        "streamertype": {
          "description": "Streamer type: hls, dash, progressive.",
          "type": "string"
        },
        "url": {
          "description": "url",
          "type": "string"
        }
      },
      "title": "KalturaBumpersPlaybackPluginData",
      "type": "object"
    },
    "KalturaBundleFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaAssetFilter"
        }
      ],
      "properties": {
        "bundleTypeEqual": {
          "description": "Enum Type: `KalturaBundleType`\n\nbundleType - possible values: Subscription or Collection",
          "enum": [
            "subscription",
            "collection",
            "pago"
          ],
          "type": "string",
          "x-enumLabels": [
            "SUBSCRIPTION",
            "COLLECTION",
            "PAGO"
          ],
          "x-enumType": "KalturaBundleType"
        },
        "idEqual": {
          "description": "Bundle Id.",
          "type": "integer"
        },
        "typeIn": {
          "description": "Comma separated list of asset types to search within.\r\n            Possible values: 0 - EPG linear programs entries, any media type ID (according to media type IDs defined dynamically in the system).\r\n            If omitted - all types should be included.",
          "type": "string"
        }
      },
      "title": "KalturaBundleFilter",
      "type": "object"
    },
    "KalturaBusinessModuleCondition": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaCondition"
        }
      ],
      "description": "Business module condition",
      "properties": {
        "businessModuleId": {
          "description": "Business module ID",
          "type": "integer"
        },
        "businessModuleType": {
          "description": "Enum Type: `KalturaTransactionType`\n\nBusiness module type",
          "enum": [
            "ppv",
            "subscription",
            "collection",
            "programAssetGroupOffer"
          ],
          "type": "string",
          "x-enumLabels": [
            "PPV",
            "SUBSCRIPTION",
            "COLLECTION",
            "PROGRAMASSETGROUPOFFER"
          ],
          "x-enumType": "KalturaTransactionType"
        }
      },
      "title": "KalturaBusinessModuleCondition",
      "type": "object"
    },
    "KalturaBusinessModuleDetails": {
      "properties": {
        "businessModuleId": {
          "description": "BusinessModuleId",
          "type": "integer"
        },
        "businessModuleType": {
          "description": "Enum Type: `KalturaTransactionType`\n\nBusinessModuleType",
          "enum": [
            "ppv",
            "subscription",
            "collection",
            "programAssetGroupOffer"
          ],
          "type": "string",
          "x-enumLabels": [
            "PPV",
            "SUBSCRIPTION",
            "COLLECTION",
            "PROGRAMASSETGROUPOFFER"
          ],
          "x-enumType": "KalturaTransactionType"
        }
      },
      "title": "KalturaBusinessModuleDetails",
      "type": "object"
    },
    "KalturaBusinessModuleRule": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaRule"
        }
      ],
      "description": "Business module rule",
      "properties": {
        "actions": {
          "items": {
            "$ref": "#/definitions/KalturaBusinessModuleRuleAction"
          },
          "type": "array"
        },
        "conditions": {
          "items": {
            "$ref": "#/definitions/KalturaCondition"
          },
          "type": "array"
        },
        "createDate": {
          "description": "`readOnly`\n\nCreate date of the rule",
          "readOnly": true,
          "type": "integer",
          "x-inputType": "datetime"
        },
        "updateDate": {
          "description": "`readOnly`\n\nUpdate date of the rule",
          "readOnly": true,
          "type": "integer",
          "x-inputType": "datetime"
        }
      },
      "title": "KalturaBusinessModuleRule",
      "type": "object"
    },
    "KalturaBusinessModuleRuleAction": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaRuleAction"
        }
      ],
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaApplyDiscountModuleAction"
        },
        {
          "$ref": "#/definitions/KalturaApplyFreePlaybackAction"
        }
      ],
      "description": "`abstract`",
      "discriminator": "objectType",
      "properties": {
        "objectType": {
          "enum": [
            "KalturaApplyDiscountModuleAction",
            "KalturaApplyFreePlaybackAction"
          ],
          "type": "string"
        }
      },
      "title": "KalturaBusinessModuleRuleAction",
      "type": "object",
      "x-abstract": true
    },
    "KalturaBusinessModuleRuleFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "description": "Business module rule filter",
      "properties": {
        "actionsContainType": {
          "description": "Enum Type: `KalturaRuleActionType`\n\nIndicates which business module rule list to return by their action.",
          "enum": [
            "BLOCK",
            "START_DATE_OFFSET",
            "END_DATE_OFFSET",
            "USER_BLOCK",
            "ALLOW_PLAYBACK",
            "BLOCK_PLAYBACK",
            "APPLY_DISCOUNT_MODULE",
            "APPLY_PLAYBACK_ADAPTER",
            "FILTER",
            "ASSET_LIFE_CYCLE_TRANSITION",
            "APPLY_FREE_PLAYBACK",
            "FilterAssetByKsql",
            "FilterFileByQualityInDiscovery",
            "FilterFileByQualityInPlayback",
            "FilterFileByFileTypeIdForAssetTypeInDiscovery",
            "FilterFileByFileTypeIdForAssetTypeInPlayback",
            "FilterFileByFileTypeIdInDiscovery",
            "FilterFileByFileTypeIdInPlayback",
            "FilterFileByAudioCodecInDiscovery",
            "FilterFileByAudioCodecInPlayback",
            "FilterFileByVideoCodecInDiscovery",
            "FilterFileByVideoCodecInPlayback",
            "FilterFileByStreamerTypeInDiscovery",
            "FilterFileByStreamerTypeInPlayback",
            "FilterFileByLabelInDiscovery",
            "FilterFileByLabelInPlayback",
            "FilterFileByDynamicDataInDiscovery",
            "FilterFileByDynamicDataInPlayback"
          ],
          "type": "string",
          "x-enumLabels": [
            "BLOCK",
            "START_DATE_OFFSET",
            "END_DATE_OFFSET",
            "USER_BLOCK",
            "ALLOW_PLAYBACK",
            "BLOCK_PLAYBACK",
            "APPLY_DISCOUNT_MODULE",
            "APPLY_PLAYBACK_ADAPTER",
            "FILTER",
            "ASSET_LIFE_CYCLE_TRANSITION",
            "APPLY_FREE_PLAYBACK",
            "FILTERASSETBYKSQL",
            "FILTERFILEBYQUALITYINDISCOVERY",
            "FILTERFILEBYQUALITYINPLAYBACK",
            "FILTERFILEBYFILETYPEIDFORASSETTYPEINDISCOVERY",
            "FILTERFILEBYFILETYPEIDFORASSETTYPEINPLAYBACK",
            "FILTERFILEBYFILETYPEIDINDISCOVERY",
            "FILTERFILEBYFILETYPEIDINPLAYBACK",
            "FILTERFILEBYAUDIOCODECINDISCOVERY",
            "FILTERFILEBYAUDIOCODECINPLAYBACK",
            "FILTERFILEBYVIDEOCODECINDISCOVERY",
            "FILTERFILEBYVIDEOCODECINPLAYBACK",
            "FILTERFILEBYSTREAMERTYPEINDISCOVERY",
            "FILTERFILEBYSTREAMERTYPEINPLAYBACK",
            "FILTERFILEBYLABELINDISCOVERY",
            "FILTERFILEBYLABELINPLAYBACK",
            "FILTERFILEBYDYNAMICDATAINDISCOVERY",
            "FILTERFILEBYDYNAMICDATAINPLAYBACK"
          ],
          "x-enumType": "KalturaRuleActionType"
        },
        "businessModuleIdApplied": {
          "description": "Business module ID the rules applied on",
          "type": "integer"
        },
        "businessModuleTypeApplied": {
          "description": "Enum Type: `KalturaTransactionType`\n\nBusiness module type the rules applied on",
          "enum": [
            "ppv",
            "subscription",
            "collection",
            "programAssetGroupOffer"
          ],
          "type": "string",
          "x-enumLabels": [
            "PPV",
            "SUBSCRIPTION",
            "COLLECTION",
            "PROGRAMASSETGROUPOFFER"
          ],
          "x-enumType": "KalturaTransactionType"
        },
        "segmentIdsApplied": {
          "description": "Comma separated segment IDs the rules applied on",
          "type": "string"
        }
      },
      "title": "KalturaBusinessModuleRuleFilter",
      "type": "object"
    },
    "KalturaBusinessModuleRuleListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaBusinessModuleRule"
          },
          "type": "array"
        }
      },
      "title": "KalturaBusinessModuleRuleListResponse",
      "type": "object"
    },
    "KalturaBuzzScore": {
      "description": "Buzz score",
      "properties": {
        "avgScore": {
          "description": "Average score",
          "type": "number"
        },
        "normalizedAvgScore": {
          "description": "Normalized average score",
          "type": "number"
        },
        "updateDate": {
          "description": "Update date",
          "type": "integer",
          "x-inputType": "datetime"
        }
      },
      "title": "KalturaBuzzScore",
      "type": "object"
    },
    "KalturaCDNAdapterProfile": {
      "description": "CDN Adapter",
      "properties": {
        "adapterUrl": {
          "description": "CDN adapter URL",
          "type": "string"
        },
        "baseUrl": {
          "description": "CDN adapter base URL",
          "type": "string"
        },
        "id": {
          "description": "`readOnly`\n\nCDN adapter identifier",
          "readOnly": true,
          "type": "integer"
        },
        "isActive": {
          "description": "CDN adapter active status",
          "type": "boolean"
        },
        "name": {
          "description": "CDNR adapter name",
          "type": "string"
        },
        "settings": {
          "items": {
            "$ref": "#/definitions/KalturaStringValue"
          },
          "type": "array"
        },
        "sharedSecret": {
          "description": "`readOnly`\n\nCDN shared secret",
          "readOnly": true,
          "type": "string"
        },
        "systemName": {
          "description": "CDN adapter alias",
          "type": "string"
        }
      },
      "title": "KalturaCDNAdapterProfile",
      "type": "object"
    },
    "KalturaCDNAdapterProfileListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaCDNAdapterProfile"
          },
          "type": "array"
        }
      },
      "title": "KalturaCDNAdapterProfileListResponse",
      "type": "object"
    },
    "KalturaCDNPartnerSettings": {
      "properties": {
        "defaultAdapterId": {
          "description": "Default CDN adapter identifier",
          "type": "integer"
        },
        "defaultRecordingAdapterId": {
          "description": "Default recording CDN adapter identifier",
          "type": "integer"
        }
      },
      "title": "KalturaCDNPartnerSettings",
      "type": "object"
    },
    "KalturaCDVRAdapterProfile": {
      "description": "C-DVR Adapter",
      "properties": {
        "adapterUrl": {
          "description": "C-DVR adapter adapter URL",
          "type": "string"
        },
        "dynamicLinksSupport": {
          "description": "Indicates whether the C-DVR adapter supports dynamic URLs",
          "type": "boolean"
        },
        "externalIdentifier": {
          "description": "C-DVR adapter external identifier",
          "type": "string"
        },
        "id": {
          "description": "`readOnly`\n\nC-DVR adapter identifier",
          "readOnly": true,
          "type": "integer"
        },
        "isActive": {
          "description": "C-DVR adapter active status",
          "type": "boolean"
        },
        "name": {
          "description": "C-DVR adapter name",
          "type": "string"
        },
        "settings": {
          "items": {
            "$ref": "#/definitions/KalturaStringValue"
          },
          "type": "array"
        },
        "sharedSecret": {
          "description": "`readOnly`\n\nC-DVR shared secret",
          "readOnly": true,
          "type": "string"
        }
      },
      "title": "KalturaCDVRAdapterProfile",
      "type": "object"
    },
    "KalturaCDVRAdapterProfileListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "C-DVR adapter profiles",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaCDVRAdapterProfile"
          },
          "type": "array"
        }
      },
      "title": "KalturaCDVRAdapterProfileListResponse",
      "type": "object"
    },
    "KalturaCampaign": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaOTTObjectSupportNullable"
        }
      ],
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaCampaign"
        },
        {
          "$ref": "#/definitions/KalturaBatchCampaign"
        },
        {
          "$ref": "#/definitions/KalturaTriggerCampaign"
        }
      ],
      "description": "Campaign",
      "discriminator": "objectType",
      "properties": {
        "assetUserRuleId": {
          "description": "Asset user rule identifier",
          "type": "integer"
        },
        "collectionIdIn": {
          "description": "Comma separated collection IDs list",
          "type": "string"
        },
        "createDate": {
          "description": "`readOnly`\n\nCreate date of the rule",
          "readOnly": true,
          "type": "integer",
          "x-inputType": "datetime"
        },
        "description": {
          "description": "Description",
          "type": "string"
        },
        "endDate": {
          "description": "End date of the rule",
          "type": "integer",
          "x-inputType": "datetime"
        },
        "id": {
          "description": "`readOnly`\n\nID",
          "readOnly": true,
          "type": "integer"
        },
        "message": {
          "description": "Free text message to the user that gives information about the campaign.",
          "type": "string"
        },
        "name": {
          "description": "Name",
          "type": "string"
        },
        "objectType": {
          "enum": [
            "KalturaCampaign",
            "KalturaBatchCampaign",
            "KalturaTriggerCampaign"
          ],
          "type": "string"
        },
        "promotion": {
          "$ref": "#/definitions/KalturaBasePromotion"
        },
        "startDate": {
          "description": "Start date of the rule",
          "type": "integer",
          "x-inputType": "datetime"
        },
        "state": {
          "description": "`readOnly`\n\nEnum Type: `KalturaObjectState`\n\nstate",
          "enum": [
            "INACTIVE",
            "ACTIVE",
            "ARCHIVE"
          ],
          "readOnly": true,
          "type": "string",
          "x-enumLabels": [
            "INACTIVE",
            "ACTIVE",
            "ARCHIVE"
          ],
          "x-enumType": "KalturaObjectState"
        },
        "systemName": {
          "description": "systemName",
          "type": "string"
        },
        "updateDate": {
          "description": "`readOnly`\n\nUpdate date of the rule",
          "readOnly": true,
          "type": "integer",
          "x-inputType": "datetime"
        }
      },
      "title": "KalturaCampaign",
      "type": "object"
    },
    "KalturaCampaignEntitlementDiscountDetails": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaEntitlementDiscountDetailsIdentifier"
        }
      ],
      "description": "Campaign entitlement discount details",
      "properties": {},
      "title": "KalturaCampaignEntitlementDiscountDetails",
      "type": "object"
    },
    "KalturaCampaignFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaCampaignFilter"
        },
        {
          "$ref": "#/definitions/KalturaCampaignSearchFilter"
        },
        {
          "$ref": "#/definitions/KalturaCampaignIdInFilter"
        },
        {
          "$ref": "#/definitions/KalturaBatchCampaignSearchFilter"
        },
        {
          "$ref": "#/definitions/KalturaCampaignSegmentFilter"
        },
        {
          "$ref": "#/definitions/KalturaTriggerCampaignSearchFilter"
        }
      ],
      "description": "Campaign filter (same as KalturaCampaignSearchFilter with no parameters)",
      "discriminator": "objectType",
      "properties": {
        "objectType": {
          "enum": [
            "KalturaCampaignFilter",
            "KalturaCampaignSearchFilter",
            "KalturaCampaignIdInFilter",
            "KalturaBatchCampaignSearchFilter",
            "KalturaCampaignSegmentFilter",
            "KalturaTriggerCampaignSearchFilter"
          ],
          "type": "string"
        },
        "orderBy": {
          "enum": [
            "START_DATE_DESC",
            "START_DATE_ASC",
            "UPDATE_DATE_DESC",
            "UPDATE_DATE_ASC",
            "END_DATE_DESC",
            "END_DATE_ASC"
          ],
          "type": "string",
          "x-enumLabels": [
            "START_DATE_DESC",
            "START_DATE_ASC",
            "UPDATE_DATE_DESC",
            "UPDATE_DATE_ASC",
            "END_DATE_DESC",
            "END_DATE_ASC"
          ],
          "x-enumType": "KalturaCampaignOrderBy"
        }
      },
      "title": "KalturaCampaignFilter",
      "type": "object"
    },
    "KalturaCampaignIdInFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaCampaignFilter"
        }
      ],
      "properties": {
        "idIn": {
          "description": "campaign identifiers",
          "type": "string"
        }
      },
      "title": "KalturaCampaignIdInFilter",
      "type": "object"
    },
    "KalturaCampaignListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaCampaign"
          },
          "type": "array"
        }
      },
      "title": "KalturaCampaignListResponse",
      "type": "object"
    },
    "KalturaCampaignSearchFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaCampaignFilter"
        }
      ],
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaCampaignSearchFilter"
        },
        {
          "$ref": "#/definitions/KalturaBatchCampaignSearchFilter"
        },
        {
          "$ref": "#/definitions/KalturaCampaignSegmentFilter"
        },
        {
          "$ref": "#/definitions/KalturaTriggerCampaignSearchFilter"
        }
      ],
      "discriminator": "objectType",
      "properties": {
        "assetUserRuleIdIn": {
          "description": "Comma separated AssetUserRule Ids to filter by",
          "type": "string"
        },
        "endDateLessThanOrEqual": {
          "description": "end Date Greater Than Or Equal",
          "type": "integer"
        },
        "hasPromotion": {
          "description": "has Promotion",
          "type": "boolean"
        },
        "nameContains": {
          "description": "A string that is included in the Campaign name",
          "type": "string"
        },
        "nameEqual": {
          "description": "Filter the Campaign with this name.",
          "type": "string"
        },
        "objectType": {
          "enum": [
            "KalturaCampaignSearchFilter",
            "KalturaBatchCampaignSearchFilter",
            "KalturaCampaignSegmentFilter",
            "KalturaTriggerCampaignSearchFilter"
          ],
          "type": "string"
        },
        "startDateGreaterThanOrEqual": {
          "description": "start Date Greater Than Or Equal",
          "type": "integer"
        },
        "stateEqual": {
          "description": "Enum Type: `KalturaObjectState`\n\nstate Equal",
          "enum": [
            "INACTIVE",
            "ACTIVE",
            "ARCHIVE"
          ],
          "type": "string",
          "x-enumLabels": [
            "INACTIVE",
            "ACTIVE",
            "ARCHIVE"
          ],
          "x-enumType": "KalturaObjectState"
        },
        "stateIn": {
          "description": "Comma separated Campaign State list",
          "type": "string"
        }
      },
      "title": "KalturaCampaignSearchFilter",
      "type": "object"
    },
    "KalturaCampaignSegmentFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaCampaignSearchFilter"
        }
      ],
      "properties": {
        "segmentIdEqual": {
          "description": "segment id to be searched inside campaigns",
          "type": "integer"
        }
      },
      "title": "KalturaCampaignSegmentFilter",
      "type": "object"
    },
    "KalturaCaptionPlaybackPluginData": {
      "properties": {
        "format": {
          "description": "Format",
          "type": "string"
        },
        "label": {
          "description": "Label",
          "type": "string"
        },
        "language": {
          "description": "Language",
          "type": "string"
        },
        "url": {
          "description": "url",
          "type": "string"
        }
      },
      "title": "KalturaCaptionPlaybackPluginData",
      "type": "object"
    },
    "KalturaCatalogPartnerConfig": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaPartnerConfiguration"
        }
      ],
      "description": "Partner catalog configuration",
      "properties": {
        "categoryManagement": {
          "$ref": "#/definitions/KalturaCategoryManagement"
        },
        "epgMultilingualFallbackSupport": {
          "description": "EPG Multilingual Fallback Support",
          "type": "boolean"
        },
        "shopMarkerMetaId": {
          "description": "Shop Marker&#39;s identifier",
          "type": "integer"
        },
        "singleMultilingualMode": {
          "description": "Single multilingual mode",
          "type": "boolean"
        },
        "uploadExportDatalake": {
          "description": "Upload Export Datalake",
          "type": "boolean"
        }
      },
      "title": "KalturaCatalogPartnerConfig",
      "type": "object"
    },
    "KalturaCategoryItem": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaOTTObjectSupportNullable"
        }
      ],
      "description": "Category details",
      "properties": {
        "childrenIds": {
          "description": "Comma separated list of child categories&#39; Ids.",
          "type": "string"
        },
        "dynamicData": {
          "items": {
            "$ref": "#/definitions/KalturaStringValue"
          },
          "type": "array"
        },
        "endDateInSeconds": {
          "description": "End date in seconds",
          "type": "integer"
        },
        "id": {
          "description": "`readOnly`\n\nUnique identifier for the category",
          "readOnly": true,
          "type": "integer"
        },
        "isActive": {
          "description": "Category active status",
          "type": "boolean"
        },
        "multilingualName": {
          "items": {
            "$ref": "#/definitions/KalturaTranslationToken"
          },
          "type": "array"
        },
        "name": {
          "description": "`readOnly`\n\nCategory name",
          "readOnly": true,
          "type": "string"
        },
        "parentId": {
          "description": "`readOnly`\n\nCategory parent identifier",
          "readOnly": true,
          "type": "integer"
        },
        "referenceId": {
          "description": "Category reference identifier",
          "type": "string"
        },
        "startDateInSeconds": {
          "description": "Start date in seconds",
          "type": "integer"
        },
        "type": {
          "description": "`insertOnly`\n\nCategory type",
          "type": "string"
        },
        "unifiedChannels": {
          "items": {
            "$ref": "#/definitions/KalturaUnifiedChannel"
          },
          "type": "array"
        },
        "updateDate": {
          "description": "`readOnly`\n\nSpecifies when was the Category last updated. Date and time represented as epoch.",
          "readOnly": true,
          "type": "integer",
          "x-inputType": "datetime"
        },
        "versionId": {
          "description": "`readOnly`\n\nUnique identifier for the category version",
          "readOnly": true,
          "type": "integer"
        },
        "virtualAssetId": {
          "description": "`readOnly`\n\nVirtual asset id",
          "readOnly": true,
          "type": "integer"
        }
      },
      "title": "KalturaCategoryItem",
      "type": "object"
    },
    "KalturaCategoryItemAncestorsFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaCategoryItemFilter"
        }
      ],
      "properties": {
        "id": {
          "description": "KSQL expression",
          "type": "integer"
        }
      },
      "title": "KalturaCategoryItemAncestorsFilter",
      "type": "object"
    },
    "KalturaCategoryItemByIdInFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaCategoryItemFilter"
        }
      ],
      "properties": {
        "idIn": {
          "description": "Category item identifiers",
          "type": "string"
        }
      },
      "title": "KalturaCategoryItemByIdInFilter",
      "type": "object"
    },
    "KalturaCategoryItemFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaCategoryItemFilter"
        },
        {
          "$ref": "#/definitions/KalturaCategoryItemAncestorsFilter"
        },
        {
          "$ref": "#/definitions/KalturaCategoryItemByIdInFilter"
        },
        {
          "$ref": "#/definitions/KalturaCategoryItemSearchFilter"
        }
      ],
      "discriminator": "objectType",
      "properties": {
        "objectType": {
          "enum": [
            "KalturaCategoryItemFilter",
            "KalturaCategoryItemAncestorsFilter",
            "KalturaCategoryItemByIdInFilter",
            "KalturaCategoryItemSearchFilter"
          ],
          "type": "string"
        },
        "orderBy": {
          "enum": [
            "NAME_ASC",
            "NAME_DESC",
            "CREATE_DATE_ASC",
            "CREATE_DATE_DESC",
            "NONE",
            "UPDATE_DATE_ASC",
            "UPDATE_DATE_DESC"
          ],
          "type": "string",
          "x-enumLabels": [
            "NAME_ASC",
            "NAME_DESC",
            "CREATE_DATE_ASC",
            "CREATE_DATE_DESC",
            "NONE",
            "UPDATE_DATE_ASC",
            "UPDATE_DATE_DESC"
          ],
          "x-enumType": "KalturaCategoryItemOrderBy"
        }
      },
      "title": "KalturaCategoryItemFilter",
      "type": "object"
    },
    "KalturaCategoryItemListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaCategoryItem"
          },
          "type": "array"
        }
      },
      "title": "KalturaCategoryItemListResponse",
      "type": "object"
    },
    "KalturaCategoryItemSearchFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaCategoryItemFilter"
        }
      ],
      "properties": {
        "kSql": {
          "description": "KSQL expression",
          "type": "string"
        },
        "rootOnly": {
          "description": "Root only",
          "type": "boolean"
        },
        "typeEqual": {
          "description": "Indicates which category to return by their type.",
          "type": "string"
        }
      },
      "title": "KalturaCategoryItemSearchFilter",
      "type": "object"
    },
    "KalturaCategoryManagement": {
      "description": "Category management",
      "properties": {
        "defaultTreeId": {
          "description": "Default CategoryVersion tree id",
          "type": "integer"
        },
        "deviceFamilyToCategoryTree": {
          "items": {
            "$ref": "#/definitions/KalturaLongValue"
          },
          "type": "array"
        }
      },
      "title": "KalturaCategoryManagement",
      "type": "object"
    },
    "KalturaCategoryTree": {
      "description": "Category details",
      "properties": {
        "children": {
          "items": {
            "$ref": "#/definitions/KalturaCategoryTree"
          },
          "type": "array"
        },
        "dynamicData": {
          "items": {
            "$ref": "#/definitions/KalturaStringValue"
          },
          "type": "array"
        },
        "endDateInSeconds": {
          "description": "End date in seconds",
          "type": "integer"
        },
        "id": {
          "description": "`readOnly`\n\nUnique identifier for the category item",
          "readOnly": true,
          "type": "integer"
        },
        "images": {
          "items": {
            "$ref": "#/definitions/KalturaImage"
          },
          "type": "array"
        },
        "isActive": {
          "description": "Category active status",
          "type": "boolean"
        },
        "multilingualName": {
          "items": {
            "$ref": "#/definitions/KalturaTranslationToken"
          },
          "type": "array"
        },
        "name": {
          "description": "`readOnly`\n\nCategory name",
          "readOnly": true,
          "type": "string"
        },
        "referenceId": {
          "description": "`readOnly`\n\nCategory reference identifier",
          "readOnly": true,
          "type": "string"
        },
        "startDateInSeconds": {
          "description": "Start date in seconds",
          "type": "integer"
        },
        "type": {
          "description": "`insertOnly`\n\nCategory type",
          "type": "string"
        },
        "unifiedChannels": {
          "items": {
            "$ref": "#/definitions/KalturaUnifiedChannelInfo"
          },
          "type": "array"
        },
        "versionId": {
          "description": "`readOnly`\n\nUnique identifier for the category version",
          "readOnly": true,
          "type": "integer"
        },
        "virtualAssetId": {
          "description": "`readOnly`\n\nVirtual asset id",
          "readOnly": true,
          "type": "integer"
        }
      },
      "title": "KalturaCategoryTree",
      "type": "object"
    },
    "KalturaCategoryVersion": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaOTTObjectSupportNullable"
        }
      ],
      "description": "Category details",
      "properties": {
        "baseVersionId": {
          "description": "`insertOnly`\n\nThe version id that this version was created from",
          "type": "integer"
        },
        "categoryRootId": {
          "description": "`readOnly`\n\nThe root of category item id that was created for this version",
          "readOnly": true,
          "type": "integer"
        },
        "comment": {
          "description": "Comment.",
          "type": "string"
        },
        "createDate": {
          "description": "`readOnly`\n\nThe date that this version was created represented as epoch.",
          "readOnly": true,
          "type": "integer",
          "x-inputType": "datetime"
        },
        "defaultDate": {
          "description": "`readOnly`\n\nThe date that this version became default represented as epoch.",
          "readOnly": true,
          "type": "integer",
          "x-inputType": "datetime"
        },
        "id": {
          "description": "`readOnly`\n\nUnique identifier for the category version",
          "readOnly": true,
          "type": "integer"
        },
        "name": {
          "description": "Category version name",
          "type": "string"
        },
        "state": {
          "description": "`readOnly`\n\nEnum Type: `KalturaCategoryVersionState`\n\nThe category version state",
          "enum": [
            "DRAFT",
            "DEFAULT",
            "RELEASED"
          ],
          "readOnly": true,
          "type": "string",
          "x-enumLabels": [
            "DRAFT",
            "DEFAULT",
            "RELEASED"
          ],
          "x-enumType": "KalturaCategoryVersionState"
        },
        "treeId": {
          "description": "`readOnly`\n\nCategory tree identifier",
          "readOnly": true,
          "type": "integer"
        },
        "updateDate": {
          "description": "`readOnly`\n\nThe date that this version was last updated represented as epoch.",
          "readOnly": true,
          "type": "integer",
          "x-inputType": "datetime"
        },
        "updaterId": {
          "description": "`readOnly`\n\nLast updater user id.",
          "readOnly": true,
          "type": "integer"
        }
      },
      "title": "KalturaCategoryVersion",
      "type": "object"
    },
    "KalturaCategoryVersionFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaCategoryVersionFilter"
        },
        {
          "$ref": "#/definitions/KalturaCategoryVersionFilterByTree"
        }
      ],
      "discriminator": "objectType",
      "properties": {
        "objectType": {
          "enum": [
            "KalturaCategoryVersionFilter",
            "KalturaCategoryVersionFilterByTree"
          ],
          "type": "string"
        },
        "orderBy": {
          "enum": [
            "UPDATE_DATE_DESC",
            "NONE"
          ],
          "type": "string",
          "x-enumLabels": [
            "UPDATE_DATE_DESC",
            "NONE"
          ],
          "x-enumType": "KalturaCategoryVersionOrderBy"
        }
      },
      "title": "KalturaCategoryVersionFilter",
      "type": "object"
    },
    "KalturaCategoryVersionFilterByTree": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaCategoryVersionFilter"
        }
      ],
      "properties": {
        "stateEqual": {
          "description": "Enum Type: `KalturaCategoryVersionState`\n\nCategory version state",
          "enum": [
            "DRAFT",
            "DEFAULT",
            "RELEASED"
          ],
          "type": "string",
          "x-enumLabels": [
            "DRAFT",
            "DEFAULT",
            "RELEASED"
          ],
          "x-enumType": "KalturaCategoryVersionState"
        },
        "treeIdEqual": {
          "description": "Category version tree identifier",
          "type": "integer"
        }
      },
      "title": "KalturaCategoryVersionFilterByTree",
      "type": "object"
    },
    "KalturaCategoryVersionListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaCategoryVersion"
          },
          "type": "array"
        }
      },
      "title": "KalturaCategoryVersionListResponse",
      "type": "object"
    },
    "KalturaChannel": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBaseChannel"
        }
      ],
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaChannel"
        },
        {
          "$ref": "#/definitions/KalturaDynamicChannel"
        },
        {
          "$ref": "#/definitions/KalturaManualChannel"
        }
      ],
      "description": "Channel details",
      "discriminator": "objectType",
      "properties": {
        "assetUserRuleId": {
          "description": "Asset user rule identifier",
          "type": "integer"
        },
        "createDate": {
          "description": "`readOnly`\n\nSpecifies when was the Channel was created. Date and time represented as epoch.",
          "readOnly": true,
          "type": "integer",
          "x-inputType": "datetime"
        },
        "description": {
          "description": "`readOnly`\n\nCannel description",
          "readOnly": true,
          "type": "string"
        },
        "isActive": {
          "description": "active status",
          "type": "boolean"
        },
        "metaData": {
          "items": {
            "$ref": "#/definitions/KalturaStringValue"
          },
          "type": "array"
        },
        "multilingualDescription": {
          "items": {
            "$ref": "#/definitions/KalturaTranslationToken"
          },
          "type": "array"
        },
        "multilingualName": {
          "items": {
            "$ref": "#/definitions/KalturaTranslationToken"
          },
          "type": "array"
        },
        "name": {
          "description": "`readOnly`\n\nChannel name",
          "readOnly": true,
          "type": "string"
        },
        "objectType": {
          "enum": [
            "KalturaChannel",
            "KalturaDynamicChannel",
            "KalturaManualChannel"
          ],
          "type": "string"
        },
        "oldDescription": {
          "description": "Cannel description",
          "type": "string"
        },
        "oldName": {
          "description": "Channel name",
          "type": "string"
        },
        "orderBy": {
          "$ref": "#/definitions/KalturaChannelOrder"
        },
        "orderingParametersEqual": {
          "items": {
            "$ref": "#/definitions/KalturaBaseChannelOrder"
          },
          "type": "array"
        },
        "supportSegmentBasedOrdering": {
          "description": "Specifies whether the assets in this channel will be ordered based on their match to the user&#39;s segments (see BEO-5524)",
          "type": "boolean"
        },
        "systemName": {
          "description": "Channel system name",
          "type": "string"
        },
        "updateDate": {
          "description": "`readOnly`\n\nSpecifies when was the Channel last updated. Date and time represented as epoch.",
          "readOnly": true,
          "type": "integer",
          "x-inputType": "datetime"
        },
        "virtualAssetId": {
          "description": "`readOnly`\n\nVirtual asset id",
          "readOnly": true,
          "type": "integer"
        }
      },
      "title": "KalturaChannel",
      "type": "object"
    },
    "KalturaChannelAggregatedIngestInfo": {
      "properties": {
        "aggregatedErrors": {
          "$ref": "#/definitions/KalturaAggregatedIngestInfo"
        },
        "linearChannelId": {
          "description": "The linear channel asset id",
          "type": "integer"
        }
      },
      "title": "KalturaChannelAggregatedIngestInfo",
      "type": "object"
    },
    "KalturaChannelCondition": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaCondition"
        }
      ],
      "properties": {
        "idIn": {
          "description": "Comma separated channel IDs list",
          "type": "string"
        }
      },
      "title": "KalturaChannelCondition",
      "type": "object"
    },
    "KalturaChannelDynamicOrder": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBaseChannelOrder"
        }
      ],
      "properties": {
        "name": {
          "description": "Value",
          "type": "string"
        },
        "orderBy": {
          "description": "Enum Type: `KalturaMetaTagOrderBy`\n\nOrder By",
          "enum": [
            "META_ASC",
            "META_DESC"
          ],
          "type": "string",
          "x-enumLabels": [
            "META_ASC",
            "META_DESC"
          ],
          "x-enumType": "KalturaMetaTagOrderBy"
        }
      },
      "title": "KalturaChannelDynamicOrder",
      "type": "object"
    },
    "KalturaChannelEnrichmentHolder": {
      "description": "Holder object for channel enrichment enum",
      "properties": {
        "type": {
          "description": "Enum Type: `KalturaChannelEnrichment`\n\nEnrichment type",
          "enum": [
            "ClientLocation",
            "UserId",
            "HouseholdId",
            "DeviceId",
            "DeviceType",
            "UTCOffset",
            "Language",
            "DTTRegion"
          ],
          "type": "string",
          "x-enumLabels": [
            "CLIENTLOCATION",
            "USERID",
            "HOUSEHOLDID",
            "DEVICEID",
            "DEVICETYPE",
            "UTCOFFSET",
            "LANGUAGE",
            "DTTREGION"
          ],
          "x-enumType": "KalturaChannelEnrichment"
        }
      },
      "title": "KalturaChannelEnrichmentHolder",
      "type": "object"
    },
    "KalturaChannelExternalFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaAssetFilter"
        }
      ],
      "properties": {
        "alias": {
          "description": "Alias for External Channel Id.",
          "type": "string"
        },
        "freeText": {
          "description": "FreeTextEqual",
          "type": "string"
        },
        "idEqual": {
          "description": "External Channel Id.",
          "type": "integer"
        },
        "utcOffsetEqual": {
          "description": "UtcOffsetEqual",
          "type": "number"
        }
      },
      "title": "KalturaChannelExternalFilter",
      "type": "object"
    },
    "KalturaChannelFieldOrder": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBaseChannelOrder"
        }
      ],
      "properties": {
        "orderBy": {
          "description": "Enum Type: `KalturaChannelFieldOrderByType`\n\nOrder By",
          "enum": [
            "NAME_ASC",
            "NAME_DESC",
            "START_DATE_DESC",
            "START_DATE_ASC",
            "CREATE_DATE_ASC",
            "CREATE_DATE_DESC",
            "RELEVANCY_DESC",
            "ORDER_NUM"
          ],
          "type": "string",
          "x-enumLabels": [
            "NAME_ASC",
            "NAME_DESC",
            "START_DATE_DESC",
            "START_DATE_ASC",
            "CREATE_DATE_ASC",
            "CREATE_DATE_DESC",
            "RELEVANCY_DESC",
            "ORDER_NUM"
          ],
          "x-enumType": "KalturaChannelFieldOrderByType"
        }
      },
      "title": "KalturaChannelFieldOrder",
      "type": "object"
    },
    "KalturaChannelFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBaseSearchAssetFilter"
        }
      ],
      "properties": {
        "excludeWatched": {
          "description": "Exclude watched asset.",
          "type": "boolean"
        },
        "idEqual": {
          "description": "Channel Id",
          "type": "integer"
        },
        "orderBy": {
          "enum": [
            "ORDER_NUM",
            "RELEVANCY_DESC",
            "NAME_ASC",
            "NAME_DESC",
            "VIEWS_DESC",
            "RATINGS_DESC",
            "VOTES_DESC",
            "START_DATE_DESC",
            "START_DATE_ASC",
            "LIKES_DESC",
            "CREATE_DATE_ASC",
            "CREATE_DATE_DESC"
          ],
          "type": "string",
          "x-enumLabels": [
            "ORDER_NUM",
            "RELEVANCY_DESC",
            "NAME_ASC",
            "NAME_DESC",
            "VIEWS_DESC",
            "RATINGS_DESC",
            "VOTES_DESC",
            "START_DATE_DESC",
            "START_DATE_ASC",
            "LIKES_DESC",
            "CREATE_DATE_ASC",
            "CREATE_DATE_DESC"
          ],
          "x-enumType": "KalturaChannelOrderBy"
        }
      },
      "title": "KalturaChannelFilter",
      "type": "object"
    },
    "KalturaChannelListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaChannel"
          },
          "type": "array"
        }
      },
      "title": "KalturaChannelListResponse",
      "type": "object"
    },
    "KalturaChannelOrder": {
      "description": "Channel order details",
      "properties": {
        "dynamicOrderBy": {
          "$ref": "#/definitions/KalturaDynamicOrderBy"
        },
        "orderBy": {
          "description": "Enum Type: `KalturaChannelOrderBy`\n\nChannel order by",
          "enum": [
            "ORDER_NUM",
            "RELEVANCY_DESC",
            "NAME_ASC",
            "NAME_DESC",
            "VIEWS_DESC",
            "RATINGS_DESC",
            "VOTES_DESC",
            "START_DATE_DESC",
            "START_DATE_ASC",
            "LIKES_DESC",
            "CREATE_DATE_ASC",
            "CREATE_DATE_DESC"
          ],
          "type": "string",
          "x-enumLabels": [
            "ORDER_NUM",
            "RELEVANCY_DESC",
            "NAME_ASC",
            "NAME_DESC",
            "VIEWS_DESC",
            "RATINGS_DESC",
            "VOTES_DESC",
            "START_DATE_DESC",
            "START_DATE_ASC",
            "LIKES_DESC",
            "CREATE_DATE_ASC",
            "CREATE_DATE_DESC"
          ],
          "x-enumType": "KalturaChannelOrderBy"
        },
        "period": {
          "description": "Sliding window period in minutes, used only when ordering by LIKES_DESC / VOTES_DESC / RATINGS_DESC / VIEWS_DESC",
          "type": "integer"
        }
      },
      "title": "KalturaChannelOrder",
      "type": "object"
    },
    "KalturaChannelSearchByKsqlFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaChannelsBaseFilter"
        }
      ],
      "properties": {
        "channelStructEqual": {
          "description": "Enum Type: `KalturaChannelStruct`\n\nchannel struct",
          "enum": [
            "Manual",
            "Dynamic"
          ],
          "type": "string",
          "x-enumLabels": [
            "MANUAL",
            "DYNAMIC"
          ],
          "x-enumType": "KalturaChannelStruct"
        },
        "kSql": {
          "description": "KSQL expression",
          "type": "string"
        }
      },
      "title": "KalturaChannelSearchByKsqlFilter",
      "type": "object"
    },
    "KalturaChannelSlidingWindowOrder": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBaseChannelOrder"
        }
      ],
      "properties": {
        "orderBy": {
          "description": "Enum Type: `KalturaChannelSlidingWindowOrderByType`\n\nOrder By",
          "enum": [
            "LIKES_DESC",
            "RATINGS_DESC",
            "VOTES_DESC",
            "VIEWS_DESC"
          ],
          "type": "string",
          "x-enumLabels": [
            "LIKES_DESC",
            "RATINGS_DESC",
            "VOTES_DESC",
            "VIEWS_DESC"
          ],
          "x-enumType": "KalturaChannelSlidingWindowOrderByType"
        },
        "period": {
          "description": "Sliding window period in minutes",
          "type": "integer"
        }
      },
      "title": "KalturaChannelSlidingWindowOrder",
      "type": "object"
    },
    "KalturaChannelsBaseFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaChannelsFilter"
        },
        {
          "$ref": "#/definitions/KalturaChannelSearchByKsqlFilter"
        }
      ],
      "description": "`abstract`",
      "discriminator": "objectType",
      "properties": {
        "objectType": {
          "enum": [
            "KalturaChannelsFilter",
            "KalturaChannelSearchByKsqlFilter"
          ],
          "type": "string"
        }
      },
      "title": "KalturaChannelsBaseFilter",
      "type": "object",
      "x-abstract": true
    },
    "KalturaChannelsFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaChannelsBaseFilter"
        }
      ],
      "properties": {
        "assetUserRuleIdIn": {
          "description": "comma-separated list of KalturaChannel.assetUserRuleId values.  Matching KalturaChannel objects will be returned by the filter.",
          "type": "string"
        },
        "idEqual": {
          "description": "channel identifier to filter by",
          "type": "integer"
        },
        "idIn": {
          "description": "Comma separated channel ids",
          "type": "string"
        },
        "mediaIdEqual": {
          "description": "media identifier to filter by",
          "type": "integer"
        },
        "nameEqual": {
          "description": "Exact channel name to filter by",
          "type": "string"
        },
        "nameStartsWith": {
          "description": "Channel name starts with (auto-complete)",
          "type": "string"
        },
        "orderBy": {
          "enum": [
            "NONE",
            "NAME_ASC",
            "NAME_DESC",
            "CREATE_DATE_ASC",
            "CREATE_DATE_DESC",
            "UPDATE_DATE_ASC",
            "UPDATE_DATE_DESC"
          ],
          "type": "string",
          "x-enumLabels": [
            "NONE",
            "NAME_ASC",
            "NAME_DESC",
            "CREATE_DATE_ASC",
            "CREATE_DATE_DESC",
            "UPDATE_DATE_ASC",
            "UPDATE_DATE_DESC"
          ],
          "x-enumType": "KalturaChannelsOrderBy"
        }
      },
      "title": "KalturaChannelsFilter",
      "type": "object"
    },
    "KalturaClientConfiguration": {
      "description": "Define client optional configurations",
      "properties": {
        "apiVersion": {
          "description": "API client version",
          "type": "string"
        },
        "clientTag": {
          "description": "Client Tag",
          "type": "string"
        }
      },
      "title": "KalturaClientConfiguration",
      "type": "object"
    },
    "KalturaCloudRecordingFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaExternalRecordingFilter"
        }
      ],
      "description": "Filtering cloud external recordings",
      "properties": {
        "adapterData": {
          "items": {
            "$ref": "#/definitions/KalturaStringValue"
          },
          "type": "array"
        }
      },
      "title": "KalturaCloudRecordingFilter",
      "type": "object"
    },
    "KalturaCloudSeriesRecordingFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaSeriesRecordingFilter"
        }
      ],
      "description": "Cloud series filtering recordings",
      "properties": {
        "adapterData": {
          "items": {
            "$ref": "#/definitions/KalturaStringValue"
          },
          "type": "array"
        }
      },
      "title": "KalturaCloudSeriesRecordingFilter",
      "type": "object"
    },
    "KalturaCollection": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaOTTObjectSupportNullable"
        }
      ],
      "description": "Collection",
      "properties": {
        "assetUserRuleId": {
          "description": "Asset user rule identifier",
          "type": "integer"
        },
        "channels": {
          "items": {
            "$ref": "#/definitions/KalturaBaseChannel"
          },
          "type": "array"
        },
        "channelsIds": {
          "description": "Comma separated channels Ids associated with this collection",
          "type": "string"
        },
        "collectionCouponGroup": {
          "items": {
            "$ref": "#/definitions/KalturaCollectionCouponGroup"
          },
          "type": "array"
        },
        "couponsGroups": {
          "items": {
            "$ref": "#/definitions/KalturaCouponsGroup"
          },
          "type": "array"
        },
        "createDate": {
          "description": "`readOnly`\n\nSpecifies when was the collection created. Date and time represented as epoch.",
          "readOnly": true,
          "type": "integer",
          "x-inputType": "datetime"
        },
        "description": {
          "description": "`readOnly`\n\ndescription of the collection",
          "readOnly": true,
          "type": "string"
        },
        "discountModule": {
          "$ref": "#/definitions/KalturaDiscountModule"
        },
        "discountModuleId": {
          "description": "The internal discount module identifier for the collection",
          "type": "integer"
        },
        "endDate": {
          "description": "The last date the collection is available for purchasing",
          "type": "integer",
          "x-inputType": "datetime"
        },
        "externalId": {
          "description": "External ID",
          "type": "string"
        },
        "fileTypes": {
          "items": {
            "$ref": "#/definitions/KalturaIntegerValue"
          },
          "type": "array"
        },
        "fileTypesIds": {
          "description": "Comma separated file types identifiers that are supported in this collection",
          "type": "string"
        },
        "id": {
          "description": "Collection identifier",
          "type": "string"
        },
        "isActive": {
          "description": "Is active collection",
          "type": "boolean"
        },
        "multilingualDescription": {
          "items": {
            "$ref": "#/definitions/KalturaTranslationToken"
          },
          "type": "array"
        },
        "multilingualName": {
          "items": {
            "$ref": "#/definitions/KalturaTranslationToken"
          },
          "type": "array"
        },
        "name": {
          "description": "`readOnly`\n\nName of the collection",
          "readOnly": true,
          "type": "string"
        },
        "priceDetailsId": {
          "description": "The ID of the price details associated with this collection",
          "type": "integer"
        },
        "productCodes": {
          "items": {
            "$ref": "#/definitions/KalturaProductCode"
          },
          "type": "array"
        },
        "startDate": {
          "description": "The first date the collection is available for purchasing",
          "type": "integer",
          "x-inputType": "datetime"
        },
        "updateDate": {
          "description": "`readOnly`\n\nSpecifies when was the collection last updated. Date and time represented as epoch.",
          "readOnly": true,
          "type": "integer",
          "x-inputType": "datetime"
        },
        "usageModule": {
          "$ref": "#/definitions/KalturaUsageModule"
        },
        "usageModuleId": {
          "description": "The internal usage module identifier for the collection",
          "type": "integer"
        },
        "virtualAssetId": {
          "description": "`readOnly`\n\nVirtual asset id",
          "readOnly": true,
          "type": "integer"
        }
      },
      "title": "KalturaCollection",
      "type": "object"
    },
    "KalturaCollectionCouponGroup": {
      "description": "Coupons group details",
      "properties": {
        "endDate": {
          "description": "The last date the coupons in this coupons group are valid",
          "type": "integer",
          "x-inputType": "datetime"
        },
        "id": {
          "description": "Coupon group identifier",
          "type": "integer"
        },
        "startDate": {
          "description": "The first date the coupons in this coupons group are valid",
          "type": "integer",
          "x-inputType": "datetime"
        }
      },
      "title": "KalturaCollectionCouponGroup",
      "type": "object"
    },
    "KalturaCollectionEntitlement": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaEntitlement"
        }
      ],
      "properties": {},
      "title": "KalturaCollectionEntitlement",
      "type": "object"
    },
    "KalturaCollectionFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "description": "Collection Filter",
      "properties": {
        "alsoInactive": {
          "description": "return also inactive",
          "type": "boolean"
        },
        "assetUserRuleIdIn": {
          "description": "comma-separated list of KalturaCollection.assetUserRuleId values.  Matching KalturaCollection objects will be returned by the filter.",
          "type": "string"
        },
        "collectionIdIn": {
          "description": "Comma separated collection IDs",
          "type": "string"
        },
        "couponGroupIdEqual": {
          "description": "couponGroupIdEqual",
          "type": "integer"
        },
        "mediaFileIdEqual": {
          "description": "Media-file ID to get the collections by",
          "type": "integer"
        },
        "nameContains": {
          "description": "A string that is included in the collection name",
          "type": "string"
        },
        "orderBy": {
          "enum": [
            "NONE",
            "NAME_ASC",
            "NAME_DESC",
            "UPDATE_DATE_ASC",
            "UPDATE_DATE_DESC"
          ],
          "type": "string",
          "x-enumLabels": [
            "NONE",
            "NAME_ASC",
            "NAME_DESC",
            "UPDATE_DATE_ASC",
            "UPDATE_DATE_DESC"
          ],
          "x-enumType": "KalturaCollectionOrderBy"
        }
      },
      "title": "KalturaCollectionFilter",
      "type": "object"
    },
    "KalturaCollectionListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "Collections list",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaCollection"
          },
          "type": "array"
        }
      },
      "title": "KalturaCollectionListResponse",
      "type": "object"
    },
    "KalturaCollectionPrice": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaProductPrice"
        }
      ],
      "description": "Collection price details",
      "properties": {},
      "title": "KalturaCollectionPrice",
      "type": "object"
    },
    "KalturaCommercePartnerConfig": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaPartnerConfiguration"
        }
      ],
      "description": "partner configuration for commerce",
      "properties": {
        "bookmarkEventThresholds": {
          "items": {
            "$ref": "#/definitions/KalturaBookmarkEventThreshold"
          },
          "type": "array"
        },
        "keepSubscriptionAddOns": {
          "description": "configuration for keep add-ons after subscription deletion",
          "type": "boolean"
        },
        "programAssetEntitlementPaddingEnd": {
          "description": "configuration for asset end entitlement padding e.g. asset end time + padding still relevant for asset",
          "type": "integer"
        },
        "programAssetEntitlementPaddingStart": {
          "description": "configuration for asset start entitlement padding e.g. asset start time - padding still relevant for asset",
          "type": "integer"
        }
      },
      "title": "KalturaCommercePartnerConfig",
      "type": "object"
    },
    "KalturaCompensation": {
      "description": "Compensation request parameters",
      "properties": {
        "amount": {
          "description": "Compensation amount",
          "type": "number"
        },
        "appliedRenewalIterations": {
          "description": "`readOnly`\n\nThe number of renewals the compensation was already applied on",
          "readOnly": true,
          "type": "integer"
        },
        "compensationType": {
          "description": "Enum Type: `KalturaCompensationType`\n\nCompensation type",
          "enum": [
            "PERCENTAGE",
            "FIXED_AMOUNT"
          ],
          "type": "string",
          "x-enumLabels": [
            "PERCENTAGE",
            "FIXED_AMOUNT"
          ],
          "x-enumType": "KalturaCompensationType"
        },
        "id": {
          "description": "`readOnly`\n\nCompensation identifier",
          "readOnly": true,
          "type": "integer"
        },
        "purchaseId": {
          "description": "Purchase identifier",
          "type": "integer"
        },
        "subscriptionId": {
          "description": "`readOnly`\n\nSubscription identifier",
          "readOnly": true,
          "type": "integer"
        },
        "totalRenewalIterations": {
          "description": "The number of renewals for compensation",
          "type": "integer"
        }
      },
      "title": "KalturaCompensation",
      "type": "object"
    },
    "KalturaCompensationEntitlementDiscountDetails": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaEntitlementDiscountDetailsIdentifier"
        }
      ],
      "description": "Compensation entitlement discount details",
      "properties": {},
      "title": "KalturaCompensationEntitlementDiscountDetails",
      "type": "object"
    },
    "KalturaConcurrencyCondition": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaAssetCondition"
        }
      ],
      "description": "Asset Condition",
      "properties": {
        "concurrencyLimitationType": {
          "description": "Enum Type: `KalturaConcurrencyLimitationType`\n\nConcurrency limitation type",
          "enum": [
            "Single",
            "Group"
          ],
          "type": "string",
          "x-enumLabels": [
            "SINGLE",
            "GROUP"
          ],
          "x-enumType": "KalturaConcurrencyLimitationType"
        },
        "limit": {
          "description": "Concurrency limitation",
          "type": "integer"
        }
      },
      "title": "KalturaConcurrencyCondition",
      "type": "object"
    },
    "KalturaConcurrencyPartnerConfig": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaPartnerConfiguration"
        }
      ],
      "description": "Partner concurrency configuration",
      "properties": {
        "concurrencyThresholdInSeconds": {
          "description": "Concurrency threshold in seconds",
          "type": "integer"
        },
        "deviceFamilyIds": {
          "description": "Comma separated list of device Family Ids order by their priority.",
          "type": "string"
        },
        "evictionPolicy": {
          "description": "Enum Type: `KalturaEvictionPolicyType`\n\nPolicy of eviction devices",
          "enum": [
            "FIFO",
            "LIFO"
          ],
          "type": "string",
          "x-enumLabels": [
            "FIFO",
            "LIFO"
          ],
          "x-enumType": "KalturaEvictionPolicyType"
        },
        "excludeFreeContentFromConcurrency": {
          "description": "If set to true then for all concurrency checks in all APIs, system shall exclude free content from counting towards the use of a concurrency slot",
          "type": "boolean"
        },
        "revokeOnDeviceDelete": {
          "description": "Revoke on device delete",
          "type": "boolean"
        }
      },
      "title": "KalturaConcurrencyPartnerConfig",
      "type": "object"
    },
    "KalturaConcurrencyViolation": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaEventObject"
        }
      ],
      "properties": {
        "assetId": {
          "description": "Asset Id",
          "type": "string"
        },
        "householdId": {
          "description": "Household Id",
          "type": "string"
        },
        "timestamp": {
          "description": "Timestamp",
          "type": "integer"
        },
        "udid": {
          "description": "UDID",
          "type": "string"
        },
        "userId": {
          "description": "User Id",
          "type": "string"
        },
        "violationRule": {
          "description": "Violation Rule",
          "type": "string"
        }
      },
      "title": "KalturaConcurrencyViolation",
      "type": "object"
    },
    "KalturaCondition": {
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaBusinessModuleCondition"
        },
        {
          "$ref": "#/definitions/KalturaChannelCondition"
        },
        {
          "$ref": "#/definitions/KalturaDeviceBrandCondition"
        },
        {
          "$ref": "#/definitions/KalturaDeviceDynamicDataCondition"
        },
        {
          "$ref": "#/definitions/KalturaDeviceFamilyCondition"
        },
        {
          "$ref": "#/definitions/KalturaDeviceManufacturerCondition"
        },
        {
          "$ref": "#/definitions/KalturaDeviceModelCondition"
        },
        {
          "$ref": "#/definitions/KalturaDynamicKeysCondition"
        },
        {
          "$ref": "#/definitions/KalturaFileTypeCondition"
        },
        {
          "$ref": "#/definitions/KalturaIpRangeCondition"
        },
        {
          "$ref": "#/definitions/KalturaIpV6RangeCondition"
        },
        {
          "$ref": "#/definitions/KalturaSegmentsCondition"
        },
        {
          "$ref": "#/definitions/KalturaUdidDynamicListCondition"
        },
        {
          "$ref": "#/definitions/KalturaUserRoleCondition"
        },
        {
          "$ref": "#/definitions/KalturaUserSessionProfileCondition"
        },
        {
          "$ref": "#/definitions/KalturaAssetCondition"
        },
        {
          "$ref": "#/definitions/KalturaAssetShopCondition"
        },
        {
          "$ref": "#/definitions/KalturaConcurrencyCondition"
        },
        {
          "$ref": "#/definitions/KalturaAssetSubscriptionCondition"
        },
        {
          "$ref": "#/definitions/KalturaUserSubscriptionCondition"
        },
        {
          "$ref": "#/definitions/KalturaCountryCondition"
        },
        {
          "$ref": "#/definitions/KalturaDateCondition"
        },
        {
          "$ref": "#/definitions/KalturaHeaderCondition"
        },
        {
          "$ref": "#/definitions/KalturaOrCondition"
        }
      ],
      "description": "`abstract`\n\nCondition",
      "discriminator": "objectType",
      "properties": {
        "description": {
          "description": "Description",
          "type": "string"
        },
        "objectType": {
          "enum": [
            "KalturaBusinessModuleCondition",
            "KalturaChannelCondition",
            "KalturaDeviceBrandCondition",
            "KalturaDeviceDynamicDataCondition",
            "KalturaDeviceFamilyCondition",
            "KalturaDeviceManufacturerCondition",
            "KalturaDeviceModelCondition",
            "KalturaDynamicKeysCondition",
            "KalturaFileTypeCondition",
            "KalturaIpRangeCondition",
            "KalturaIpV6RangeCondition",
            "KalturaSegmentsCondition",
            "KalturaUdidDynamicListCondition",
            "KalturaUserRoleCondition",
            "KalturaUserSessionProfileCondition",
            "KalturaAssetCondition",
            "KalturaAssetShopCondition",
            "KalturaConcurrencyCondition",
            "KalturaAssetSubscriptionCondition",
            "KalturaUserSubscriptionCondition",
            "KalturaCountryCondition",
            "KalturaDateCondition",
            "KalturaHeaderCondition",
            "KalturaOrCondition"
          ],
          "type": "string"
        },
        "type": {
          "description": "`readOnly`\n\nEnum Type: `KalturaRuleConditionType`\n\nThe type of the condition",
          "enum": [
            "ASSET",
            "COUNTRY",
            "CONCURRENCY",
            "IP_RANGE",
            "BUSINESS_MODULE",
            "SEGMENTS",
            "DATE",
            "OR",
            "HEADER",
            "USER_SUBSCRIPTION",
            "ASSET_SUBSCRIPTION",
            "USER_ROLE",
            "DEVICE_BRAND",
            "DEVICE_FAMILY",
            "DEVICE_MANUFACTURER",
            "DEVICE_MODEL",
            "DEVICE_UDID_DYNAMIC_LIST",
            "DYNAMIC_KEYS",
            "USER_SESSION_PROFILE",
            "DEVICE_DYNAMIC_DATA",
            "IP_V6_RANGE",
            "ASSET_SHOP",
            "CHANNEL",
            "FILE_TYPE"
          ],
          "readOnly": true,
          "type": "string",
          "x-enumLabels": [
            "ASSET",
            "COUNTRY",
            "CONCURRENCY",
            "IP_RANGE",
            "BUSINESS_MODULE",
            "SEGMENTS",
            "DATE",
            "OR",
            "HEADER",
            "USER_SUBSCRIPTION",
            "ASSET_SUBSCRIPTION",
            "USER_ROLE",
            "DEVICE_BRAND",
            "DEVICE_FAMILY",
            "DEVICE_MANUFACTURER",
            "DEVICE_MODEL",
            "DEVICE_UDID_DYNAMIC_LIST",
            "DYNAMIC_KEYS",
            "USER_SESSION_PROFILE",
            "DEVICE_DYNAMIC_DATA",
            "IP_V6_RANGE",
            "ASSET_SHOP",
            "CHANNEL",
            "FILE_TYPE"
          ],
          "x-enumType": "KalturaRuleConditionType"
        }
      },
      "title": "KalturaCondition",
      "type": "object",
      "x-abstract": true
    },
    "KalturaConfigurationGroup": {
      "properties": {
        "configurationIdentifiers": {
          "items": {
            "$ref": "#/definitions/KalturaConfigurationIdentifier"
          },
          "type": "array"
        },
        "id": {
          "description": "`readOnly`\n\nConfiguration group identifier",
          "readOnly": true,
          "type": "string"
        },
        "isDefault": {
          "description": "`insertOnly`\n\nIs default",
          "type": "boolean"
        },
        "name": {
          "description": "Configuration group name",
          "type": "string"
        },
        "numberOfDevices": {
          "description": "`readOnly`\n\nNumber of devices",
          "readOnly": true,
          "type": "integer"
        },
        "partnerId": {
          "description": "`readOnly`\n\nPartner id",
          "readOnly": true,
          "type": "integer"
        },
        "tags": {
          "items": {
            "$ref": "#/definitions/KalturaStringValue"
          },
          "type": "array"
        }
      },
      "title": "KalturaConfigurationGroup",
      "type": "object"
    },
    "KalturaConfigurationGroupDevice": {
      "properties": {
        "configurationGroupId": {
          "description": "Configuration group id",
          "type": "string"
        },
        "partnerId": {
          "description": "`readOnly`\n\nPartner id",
          "readOnly": true,
          "type": "integer"
        },
        "udid": {
          "description": "Device UDID",
          "type": "string"
        }
      },
      "title": "KalturaConfigurationGroupDevice",
      "type": "object"
    },
    "KalturaConfigurationGroupDeviceFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "description": "Configuration group device filter",
      "properties": {
        "configurationGroupIdEqual": {
          "description": "the ID of the configuration group for which to return related configurations group devices",
          "type": "string"
        },
        "orderBy": {
          "enum": [
            "NONE"
          ],
          "type": "string",
          "x-enumLabels": [
            "NONE"
          ],
          "x-enumType": "KalturaConfigurationGroupDeviceOrderBy"
        }
      },
      "title": "KalturaConfigurationGroupDeviceFilter",
      "type": "object"
    },
    "KalturaConfigurationGroupDeviceListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "Configuration group devices info wrapper",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaConfigurationGroupDevice"
          },
          "type": "array"
        }
      },
      "title": "KalturaConfigurationGroupDeviceListResponse",
      "type": "object"
    },
    "KalturaConfigurationGroupListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "Configuration groups info wrapper",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaConfigurationGroup"
          },
          "type": "array"
        }
      },
      "title": "KalturaConfigurationGroupListResponse",
      "type": "object"
    },
    "KalturaConfigurationGroupTag": {
      "properties": {
        "configurationGroupId": {
          "description": "Configuration group identifier",
          "type": "string"
        },
        "partnerId": {
          "description": "`readOnly`\n\nPartner identifier",
          "readOnly": true,
          "type": "integer"
        },
        "tag": {
          "description": "Tag",
          "type": "string"
        }
      },
      "title": "KalturaConfigurationGroupTag",
      "type": "object"
    },
    "KalturaConfigurationGroupTagFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "description": "Configuration group tag filter",
      "properties": {
        "configurationGroupIdEqual": {
          "description": "the ID of the configuration group for which to return related configurations group tags",
          "type": "string"
        },
        "orderBy": {
          "enum": [
            "NONE"
          ],
          "type": "string",
          "x-enumLabels": [
            "NONE"
          ],
          "x-enumType": "KalturaConfigurationGroupTagOrderBy"
        }
      },
      "title": "KalturaConfigurationGroupTagFilter",
      "type": "object"
    },
    "KalturaConfigurationGroupTagListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "Configurations group tags info wrapper",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaConfigurationGroupTag"
          },
          "type": "array"
        }
      },
      "title": "KalturaConfigurationGroupTagListResponse",
      "type": "object"
    },
    "KalturaConfigurationIdentifier": {
      "properties": {
        "id": {
          "description": "Identifier",
          "type": "string"
        },
        "name": {
          "description": "Name",
          "type": "string"
        }
      },
      "title": "KalturaConfigurationIdentifier",
      "type": "object"
    },
    "KalturaConfigurations": {
      "properties": {
        "appName": {
          "description": "Application name",
          "type": "string"
        },
        "clientVersion": {
          "description": "Client version",
          "type": "string"
        },
        "configurationGroupId": {
          "description": "Configuration group id",
          "type": "string"
        },
        "content": {
          "description": "Content",
          "type": "string"
        },
        "externalPushId": {
          "description": "External push id",
          "type": "string"
        },
        "id": {
          "description": "`readOnly`\n\nConfiguration id",
          "readOnly": true,
          "type": "string"
        },
        "isForceUpdate": {
          "description": "The default value for &quot;isForceUpdate&quot; is &quot;FALSE&quot;. When &quot;isForceUpdate&quot; is not populated it will revert to its default value.",
          "type": "boolean"
        },
        "partnerId": {
          "description": "`readOnly`\n\nPartner id",
          "readOnly": true,
          "type": "integer"
        },
        "platform": {
          "description": "Enum Type: `KalturaPlatform`\n\nPlatform: Android/iOS/WindowsPhone/Blackberry/STB/CTV/Other",
          "enum": [
            "Android",
            "iOS",
            "WindowsPhone",
            "Blackberry",
            "STB",
            "CTV",
            "Other"
          ],
          "type": "string",
          "x-enumLabels": [
            "ANDROID",
            "IOS",
            "WINDOWSPHONE",
            "BLACKBERRY",
            "STB",
            "CTV",
            "OTHER"
          ],
          "x-enumType": "KalturaPlatform"
        }
      },
      "title": "KalturaConfigurations",
      "type": "object"
    },
    "KalturaConfigurationsFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "description": "Configuration filter",
      "properties": {
        "configurationGroupIdEqual": {
          "description": "the ID of the configuration group for which to return related configurations",
          "type": "string"
        },
        "orderBy": {
          "enum": [
            "NONE"
          ],
          "type": "string",
          "x-enumLabels": [
            "NONE"
          ],
          "x-enumType": "KalturaConfigurationsOrderBy"
        }
      },
      "title": "KalturaConfigurationsFilter",
      "type": "object"
    },
    "KalturaConfigurationsListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "Configurations info wrapper",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaConfigurations"
          },
          "type": "array"
        }
      },
      "title": "KalturaConfigurationsListResponse",
      "type": "object"
    },
    "KalturaContentActionCondition": {
      "description": "Segmentation condition regarding content actions",
      "properties": {
        "action": {
          "description": "Enum Type: `KalturaContentAction`\n\nThe relevant action to be examined",
          "enum": [
            "watch_linear",
            "watch_vod",
            "catchup",
            "npvr",
            "favorite",
            "recording",
            "social_action"
          ],
          "type": "string",
          "x-enumLabels": [
            "WATCH_LINEAR",
            "WATCH_VOD",
            "CATCHUP",
            "NPVR",
            "FAVORITE",
            "RECORDING",
            "SOCIAL_ACTION"
          ],
          "x-enumType": "KalturaContentAction"
        },
        "length": {
          "description": "Optional - if action required specific length to be considered (in percentage or minutes)",
          "type": "integer"
        },
        "lengthType": {
          "description": "Enum Type: `KalturaContentActionConditionLengthType`\n\nOptional - if action required specific length to be considered (in percentage or minutes)",
          "enum": [
            "minutes",
            "percentage"
          ],
          "type": "string",
          "x-enumLabels": [
            "MINUTES",
            "PERCENTAGE"
          ],
          "x-enumType": "KalturaContentActionConditionLengthType"
        },
        "multiplier": {
          "description": "Score multiplier - how much is a single action worth when considering the action",
          "type": "integer"
        }
      },
      "title": "KalturaContentActionCondition",
      "type": "object"
    },
    "KalturaContentResource": {
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaUploadedFileTokenResource"
        },
        {
          "$ref": "#/definitions/KalturaUrlResource"
        }
      ],
      "description": "`abstract`",
      "discriminator": "objectType",
      "properties": {
        "objectType": {
          "enum": [
            "KalturaUploadedFileTokenResource",
            "KalturaUrlResource"
          ],
          "type": "string"
        }
      },
      "title": "KalturaContentResource",
      "type": "object",
      "x-abstract": true
    },
    "KalturaContentScoreCondition": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBaseSegmentCondition"
        }
      ],
      "description": "Defines a condition which is essentially a combination of several content-based actions, each has their own score multiplier",
      "properties": {
        "actions": {
          "items": {
            "$ref": "#/definitions/KalturaContentActionCondition"
          },
          "type": "array"
        },
        "days": {
          "description": "How many days back should the actions be considered",
          "type": "integer"
        },
        "field": {
          "description": "If condition should be applied on specific field (and not the one of the segment value)",
          "type": "string"
        },
        "maxScore": {
          "description": "The maximum score to be met",
          "type": "integer"
        },
        "minScore": {
          "description": "The minimum score to be met",
          "type": "integer"
        },
        "values": {
          "items": {
            "$ref": "#/definitions/KalturaStringValue"
          },
          "type": "array"
        }
      },
      "title": "KalturaContentScoreCondition",
      "type": "object"
    },
    "KalturaContentSource": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaSegmentSource"
        }
      ],
      "description": "Content based source (meta, tag etc.)",
      "properties": {
        "field": {
          "description": "Topic (meta or tag) name",
          "type": "string"
        }
      },
      "title": "KalturaContentSource",
      "type": "object"
    },
    "KalturaCountry": {
      "description": "Country details",
      "properties": {
        "code": {
          "description": "Country code",
          "type": "string"
        },
        "currency": {
          "description": "Currency code",
          "type": "string"
        },
        "currencySign": {
          "description": "Currency Sign",
          "type": "string"
        },
        "id": {
          "description": "`readOnly`\n\nCountry identifier",
          "readOnly": true,
          "type": "integer"
        },
        "languagesCode": {
          "description": "All the languages code that are supported in the country",
          "type": "string"
        },
        "mainLanguageCode": {
          "description": "The main language code in the country",
          "type": "string"
        },
        "name": {
          "description": "Country name",
          "type": "string"
        },
        "timeZoneId": {
          "description": "Time zone ID",
          "type": "string"
        },
        "vatPercent": {
          "description": "Vat Percent in the country",
          "type": "number"
        }
      },
      "title": "KalturaCountry",
      "type": "object"
    },
    "KalturaCountryCondition": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaNotCondition"
        }
      ],
      "description": "Country condition",
      "properties": {
        "countries": {
          "description": "Comma separated countries IDs list",
          "type": "string"
        }
      },
      "title": "KalturaCountryCondition",
      "type": "object"
    },
    "KalturaCountryFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "description": "Country filter",
      "properties": {
        "idIn": {
          "description": "Country identifiers",
          "type": "string"
        },
        "ipEqual": {
          "description": "Ip to identify the country",
          "type": "string"
        },
        "ipEqualCurrent": {
          "description": "Indicates if to get the IP from the request",
          "type": "boolean"
        },
        "orderBy": {
          "enum": [
            "NAME_ASC"
          ],
          "type": "string",
          "x-enumLabels": [
            "NAME_ASC"
          ],
          "x-enumType": "KalturaCountryOrderBy"
        }
      },
      "title": "KalturaCountryFilter",
      "type": "object"
    },
    "KalturaCountryListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaCountry"
          },
          "type": "array"
        }
      },
      "title": "KalturaCountryListResponse",
      "type": "object"
    },
    "KalturaCoupon": {
      "description": "Coupon details container",
      "properties": {
        "couponCode": {
          "description": "`readOnly`\n\nCoupon code",
          "readOnly": true,
          "type": "string"
        },
        "couponsGroup": {
          "$ref": "#/definitions/KalturaCouponsGroup"
        },
        "leftUses": {
          "description": "`readOnly`\n\nLeft coupon uses",
          "readOnly": true,
          "type": "integer"
        },
        "status": {
          "description": "`readOnly`\n\nEnum Type: `KalturaCouponStatus`\n\nCoupon status",
          "enum": [
            "VALID",
            "NOT_EXISTS",
            "ALREADY_USED",
            "EXPIRED",
            "INACTIVE"
          ],
          "readOnly": true,
          "type": "string",
          "x-enumLabels": [
            "VALID",
            "NOT_EXISTS",
            "ALREADY_USED",
            "EXPIRED",
            "INACTIVE"
          ],
          "x-enumType": "KalturaCouponStatus"
        },
        "totalUses": {
          "description": "`readOnly`\n\nTotal available coupon uses",
          "readOnly": true,
          "type": "integer"
        }
      },
      "title": "KalturaCoupon",
      "type": "object"
    },
    "KalturaCouponEntitlementDiscountDetails": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaEntitlementDiscountDetails"
        }
      ],
      "description": "Coupon discount details",
      "properties": {
        "couponCode": {
          "description": "`readOnly`\n\nCoupon Code",
          "readOnly": true,
          "type": "string"
        },
        "endlessCoupon": {
          "description": "`readOnly`\n\nEndless coupon",
          "readOnly": true,
          "type": "boolean"
        }
      },
      "title": "KalturaCouponEntitlementDiscountDetails",
      "type": "object"
    },
    "KalturaCouponGenerationOptions": {
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaCouponGenerationOptions"
        },
        {
          "$ref": "#/definitions/KalturaPublicCouponGenerationOptions"
        },
        {
          "$ref": "#/definitions/KalturaRandomCouponGenerationOptions"
        }
      ],
      "description": "Coupon generation options",
      "discriminator": "objectType",
      "properties": {
        "objectType": {
          "enum": [
            "KalturaCouponGenerationOptions",
            "KalturaPublicCouponGenerationOptions",
            "KalturaRandomCouponGenerationOptions"
          ],
          "type": "string"
        }
      },
      "title": "KalturaCouponGenerationOptions",
      "type": "object"
    },
    "KalturaCouponListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaCoupon"
          },
          "type": "array"
        }
      },
      "title": "KalturaCouponListResponse",
      "type": "object"
    },
    "KalturaCouponPromotion": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBasePromotion"
        }
      ],
      "description": "Coupon promotion",
      "properties": {
        "couponGroupId": {
          "description": "CouponGroup identifier",
          "type": "integer"
        }
      },
      "title": "KalturaCouponPromotion",
      "type": "object"
    },
    "KalturaCouponsGroup": {
      "description": "Coupons group details",
      "properties": {
        "couponGroupType": {
          "description": "Enum Type: `KalturaCouponGroupType`\n\nType of the coupon group",
          "enum": [
            "COUPON",
            "GIFT_CARD"
          ],
          "type": "string",
          "x-enumLabels": [
            "COUPON",
            "GIFT_CARD"
          ],
          "x-enumType": "KalturaCouponGroupType"
        },
        "discountId": {
          "description": "Discount ID",
          "type": "integer"
        },
        "endDate": {
          "description": "The last date the coupons in this coupons group are valid",
          "type": "integer",
          "x-inputType": "datetime"
        },
        "id": {
          "description": "Coupon group identifier",
          "type": "string"
        },
        "maxHouseholdUses": {
          "description": "Maximum number of uses per household for each coupon in the group",
          "type": "integer"
        },
        "maxUsesNumber": {
          "description": "Maximum number of uses for each coupon in the group",
          "type": "integer"
        },
        "maxUsesNumberOnRenewableSub": {
          "description": "Maximum number of uses for each coupon in the group on a renewable subscription",
          "type": "integer"
        },
        "name": {
          "description": "Coupon group name",
          "type": "string"
        },
        "startDate": {
          "description": "The first date the coupons in this coupons group are valid",
          "type": "integer",
          "x-inputType": "datetime"
        }
      },
      "title": "KalturaCouponsGroup",
      "type": "object"
    },
    "KalturaCouponsGroupListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "Coupons group list",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaCouponsGroup"
          },
          "type": "array"
        }
      },
      "title": "KalturaCouponsGroupListResponse",
      "type": "object"
    },
    "KalturaCurrency": {
      "description": "Currency details",
      "properties": {
        "code": {
          "description": "Currency code",
          "type": "string"
        },
        "id": {
          "description": "Identifier",
          "type": "integer"
        },
        "isDefault": {
          "description": "Is the default Currency of the account",
          "type": "boolean"
        },
        "name": {
          "description": "Currency name",
          "type": "string"
        },
        "sign": {
          "description": "Currency Sign",
          "type": "string"
        }
      },
      "title": "KalturaCurrency",
      "type": "object"
    },
    "KalturaCurrencyFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "description": "Currency filter",
      "properties": {
        "codeIn": {
          "description": "Currency codes",
          "type": "string"
        },
        "excludePartner": {
          "description": "Exclude partner",
          "type": "boolean"
        },
        "orderBy": {
          "enum": [
            "NAME_ASC",
            "NAME_DESC",
            "CODE_ASC",
            "CODE_DESC"
          ],
          "type": "string",
          "x-enumLabels": [
            "NAME_ASC",
            "NAME_DESC",
            "CODE_ASC",
            "CODE_DESC"
          ],
          "x-enumType": "KalturaCurrencyOrderBy"
        }
      },
      "title": "KalturaCurrencyFilter",
      "type": "object"
    },
    "KalturaCurrencyListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaCurrency"
          },
          "type": "array"
        }
      },
      "title": "KalturaCurrencyListResponse",
      "type": "object"
    },
    "KalturaCustomDrmPlaybackPluginData": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaDrmPlaybackPluginData"
        }
      ],
      "properties": {
        "data": {
          "description": "Custom DRM license data",
          "type": "string"
        }
      },
      "title": "KalturaCustomDrmPlaybackPluginData",
      "type": "object"
    },
    "KalturaCustomFieldsPartnerConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaPartnerConfiguration"
        }
      ],
      "description": "Custom Fields Partner Configuration",
      "properties": {
        "metaSystemNameInsteadOfAliasList": {
          "description": "Array of clientTag values",
          "type": "string"
        }
      },
      "title": "KalturaCustomFieldsPartnerConfiguration",
      "type": "object"
    },
    "KalturaDataEncryption": {
      "properties": {
        "username": {
          "$ref": "#/definitions/KalturaEncryption"
        }
      },
      "title": "KalturaDataEncryption",
      "type": "object"
    },
    "KalturaDateAggregatedIngestInfo": {
      "properties": {
        "aggregatedErrors": {
          "$ref": "#/definitions/KalturaAggregatedIngestInfo"
        },
        "date": {
          "description": "00:00 UTC of the date in question",
          "type": "integer"
        }
      },
      "title": "KalturaDateAggregatedIngestInfo",
      "type": "object"
    },
    "KalturaDateCondition": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaNotCondition"
        }
      ],
      "description": "Date condition",
      "properties": {
        "endDate": {
          "description": "End date",
          "type": "integer",
          "x-inputType": "datetime"
        },
        "startDate": {
          "description": "Start date",
          "type": "integer",
          "x-inputType": "datetime"
        }
      },
      "title": "KalturaDateCondition",
      "type": "object"
    },
    "KalturaDateTrigger": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaTrigger"
        }
      ],
      "properties": {
        "date": {
          "description": "Trigger date",
          "type": "integer"
        }
      },
      "title": "KalturaDateTrigger",
      "type": "object"
    },
    "KalturaDefaultParentalSettingsPartnerConfig": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaPartnerConfiguration"
        }
      ],
      "properties": {
        "defaultMoviesParentalRuleId": {
          "description": "defaultTvSeriesParentalRuleId",
          "type": "integer"
        },
        "defaultParentalPin": {
          "description": "defaultParentalPin",
          "type": "string"
        },
        "defaultPurchasePin": {
          "description": "defaultPurchasePin",
          "type": "string"
        },
        "defaultPurchaseSettings": {
          "description": "defaultPurchaseSettings",
          "type": "integer"
        },
        "defaultTvSeriesParentalRuleId": {
          "description": "defaultTvSeriesParentalRuleId",
          "type": "integer"
        }
      },
      "title": "KalturaDefaultParentalSettingsPartnerConfig",
      "type": "object"
    },
    "KalturaDefaultPlaybackAdapters": {
      "properties": {
        "epgAdapterId": {
          "description": "Default adapter identifier for epg",
          "type": "integer"
        },
        "mediaAdapterId": {
          "description": "Default adapter identifier for media",
          "type": "integer"
        },
        "recordingAdapterId": {
          "description": "Default adapter identifier for recording",
          "type": "integer"
        }
      },
      "title": "KalturaDefaultPlaybackAdapters",
      "type": "object"
    },
    "KalturaDefaultRegionFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBaseRegionFilter"
        }
      ],
      "properties": {},
      "title": "KalturaDefaultRegionFilter",
      "type": "object"
    },
    "KalturaDetachedResponseProfile": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBaseResponseProfile"
        }
      ],
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaDetachedResponseProfile"
        },
        {
          "$ref": "#/definitions/KalturaOnDemandResponseProfile"
        }
      ],
      "description": "Define specific base profile response",
      "discriminator": "objectType",
      "properties": {
        "filter": {
          "$ref": "#/definitions/KalturaRelatedObjectFilter"
        },
        "name": {
          "description": "name",
          "type": "string"
        },
        "objectType": {
          "enum": [
            "KalturaDetachedResponseProfile",
            "KalturaOnDemandResponseProfile"
          ],
          "type": "string"
        },
        "relatedProfiles": {
          "items": {
            "$ref": "#/definitions/KalturaDetachedResponseProfile"
          },
          "type": "array"
        }
      },
      "title": "KalturaDetachedResponseProfile",
      "type": "object"
    },
    "KalturaDeviceBrand": {
      "description": "Device brand details",
      "properties": {
        "deviceFamilyid": {
          "description": "Device family identifier",
          "type": "integer"
        },
        "id": {
          "description": "Device brand identifier",
          "type": "integer"
        },
        "name": {
          "description": "Device brand name",
          "type": "string"
        },
        "type": {
          "description": "`readOnly`\n\nEnum Type: `KalturaDeviceBrandType`\n\nType of device family.\r\n             if this device family belongs only to this group,\r\n             otherwise.",
          "enum": [
            "System",
            "Custom"
          ],
          "readOnly": true,
          "type": "string",
          "x-enumLabels": [
            "SYSTEM",
            "CUSTOM"
          ],
          "x-enumType": "KalturaDeviceBrandType"
        }
      },
      "title": "KalturaDeviceBrand",
      "type": "object"
    },
    "KalturaDeviceBrandCondition": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaCondition"
        }
      ],
      "properties": {
        "idIn": {
          "description": "Comma separated Device Brand IDs list",
          "type": "string"
        }
      },
      "title": "KalturaDeviceBrandCondition",
      "type": "object"
    },
    "KalturaDeviceBrandFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "properties": {
        "deviceFamilyIdEqual": {
          "description": "Filter the device brands with this device family&#39;s identifier.",
          "type": "integer"
        },
        "idEqual": {
          "description": "Filter the device brand with this identifier.",
          "type": "integer"
        },
        "nameEqual": {
          "description": "Filter the device brand with this name.",
          "type": "string"
        },
        "orderBy": {
          "enum": [
            "ID_ASC",
            "ID_DESC"
          ],
          "type": "string",
          "x-enumLabels": [
            "ID_ASC",
            "ID_DESC"
          ],
          "x-enumType": "KalturaDeviceBrandOrderBy"
        },
        "typeEqual": {
          "description": "Enum Type: `KalturaDeviceBrandType`\n\nFilter device brands of this type",
          "enum": [
            "System",
            "Custom"
          ],
          "type": "string",
          "x-enumLabels": [
            "SYSTEM",
            "CUSTOM"
          ],
          "x-enumType": "KalturaDeviceBrandType"
        }
      },
      "title": "KalturaDeviceBrandFilter",
      "type": "object"
    },
    "KalturaDeviceBrandListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaDeviceBrand"
          },
          "type": "array"
        }
      },
      "title": "KalturaDeviceBrandListResponse",
      "type": "object"
    },
    "KalturaDeviceDynamicDataCondition": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaCondition"
        }
      ],
      "properties": {
        "key": {
          "description": "key",
          "type": "string"
        },
        "value": {
          "description": "value",
          "type": "string"
        }
      },
      "title": "KalturaDeviceDynamicDataCondition",
      "type": "object"
    },
    "KalturaDeviceFamily": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaDeviceFamilyBase"
        }
      ],
      "description": "Device family details",
      "properties": {},
      "title": "KalturaDeviceFamily",
      "type": "object"
    },
    "KalturaDeviceFamilyBase": {
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaDeviceFamilyBase"
        },
        {
          "$ref": "#/definitions/KalturaHouseholdDeviceFamilyLimitations"
        },
        {
          "$ref": "#/definitions/KalturaDeviceFamily"
        }
      ],
      "description": "Device family details",
      "discriminator": "objectType",
      "properties": {
        "id": {
          "description": "Device family identifier",
          "type": "integer"
        },
        "name": {
          "description": "Device family name",
          "type": "string"
        },
        "objectType": {
          "enum": [
            "KalturaDeviceFamilyBase",
            "KalturaHouseholdDeviceFamilyLimitations",
            "KalturaDeviceFamily"
          ],
          "type": "string"
        },
        "type": {
          "description": "`readOnly`\n\nEnum Type: `KalturaDeviceFamilyType`\n\nType of device family.\r\n             if this device family belongs only to this group,\r\n             otherwise.",
          "enum": [
            "System",
            "Custom"
          ],
          "readOnly": true,
          "type": "string",
          "x-enumLabels": [
            "SYSTEM",
            "CUSTOM"
          ],
          "x-enumType": "KalturaDeviceFamilyType"
        }
      },
      "title": "KalturaDeviceFamilyBase",
      "type": "object"
    },
    "KalturaDeviceFamilyCondition": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaCondition"
        }
      ],
      "properties": {
        "idIn": {
          "description": "Comma separated Device Family IDs list",
          "type": "string"
        }
      },
      "title": "KalturaDeviceFamilyCondition",
      "type": "object"
    },
    "KalturaDeviceFamilyFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "properties": {
        "idEqual": {
          "description": "Filter the device family with this identifier.",
          "type": "integer"
        },
        "nameEqual": {
          "description": "Filter the device family with this name.",
          "type": "string"
        },
        "orderBy": {
          "enum": [
            "ID_ASC",
            "ID_DESC"
          ],
          "type": "string",
          "x-enumLabels": [
            "ID_ASC",
            "ID_DESC"
          ],
          "x-enumType": "KalturaDeviceFamilyOrderBy"
        },
        "typeEqual": {
          "description": "Enum Type: `KalturaDeviceFamilyType`\n\nFilter device families of this type",
          "enum": [
            "System",
            "Custom"
          ],
          "type": "string",
          "x-enumLabels": [
            "SYSTEM",
            "CUSTOM"
          ],
          "x-enumType": "KalturaDeviceFamilyType"
        }
      },
      "title": "KalturaDeviceFamilyFilter",
      "type": "object"
    },
    "KalturaDeviceFamilyListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaDeviceFamily"
          },
          "type": "array"
        }
      },
      "title": "KalturaDeviceFamilyListResponse",
      "type": "object"
    },
    "KalturaDeviceManufacturerCondition": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaCondition"
        }
      ],
      "properties": {
        "idIn": {
          "description": "Comma separated Device Manufacturer IDs list",
          "type": "string"
        }
      },
      "title": "KalturaDeviceManufacturerCondition",
      "type": "object"
    },
    "KalturaDeviceManufacturerInformation": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaDeviceReferenceData"
        }
      ],
      "description": "Device Manufacturer Information",
      "properties": {},
      "title": "KalturaDeviceManufacturerInformation",
      "type": "object"
    },
    "KalturaDeviceManufacturersReferenceDataFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaDeviceReferenceDataFilter"
        }
      ],
      "properties": {
        "nameEqual": {
          "description": "name equal",
          "type": "string"
        }
      },
      "title": "KalturaDeviceManufacturersReferenceDataFilter",
      "type": "object"
    },
    "KalturaDeviceModelCondition": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaCondition"
        }
      ],
      "properties": {
        "regexEqual": {
          "description": "regex of device model that is compared to",
          "type": "string"
        }
      },
      "title": "KalturaDeviceModelCondition",
      "type": "object"
    },
    "KalturaDevicePin": {
      "description": "Device pin",
      "properties": {
        "pin": {
          "description": "Device pin",
          "type": "string"
        }
      },
      "title": "KalturaDevicePin",
      "type": "object"
    },
    "KalturaDeviceReferenceData": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaOTTObjectSupportNullable"
        }
      ],
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaDeviceReferenceData"
        },
        {
          "$ref": "#/definitions/KalturaDeviceManufacturerInformation"
        }
      ],
      "description": "Device Information",
      "discriminator": "objectType",
      "properties": {
        "id": {
          "description": "`readOnly`\n\nid",
          "readOnly": true,
          "type": "integer"
        },
        "name": {
          "description": "Name",
          "type": "string"
        },
        "objectType": {
          "enum": [
            "KalturaDeviceReferenceData",
            "KalturaDeviceManufacturerInformation"
          ],
          "type": "string"
        },
        "status": {
          "description": "Status",
          "type": "boolean"
        }
      },
      "title": "KalturaDeviceReferenceData",
      "type": "object"
    },
    "KalturaDeviceReferenceDataFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaDeviceReferenceDataFilter"
        },
        {
          "$ref": "#/definitions/KalturaDeviceManufacturersReferenceDataFilter"
        }
      ],
      "description": "Device Reference Data Filter",
      "discriminator": "objectType",
      "properties": {
        "idIn": {
          "description": "IdIn",
          "type": "string"
        },
        "objectType": {
          "enum": [
            "KalturaDeviceReferenceDataFilter",
            "KalturaDeviceManufacturersReferenceDataFilter"
          ],
          "type": "string"
        },
        "orderBy": {
          "enum": [
            "NONE"
          ],
          "type": "string",
          "x-enumLabels": [
            "NONE"
          ],
          "x-enumType": "KalturaDeviceReferenceDataOrderBy"
        }
      },
      "title": "KalturaDeviceReferenceDataFilter",
      "type": "object"
    },
    "KalturaDeviceReferenceDataListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaDeviceReferenceData"
          },
          "type": "array"
        }
      },
      "title": "KalturaDeviceReferenceDataListResponse",
      "type": "object"
    },
    "KalturaDeviceRegistrationStatusHolder": {
      "description": "Holder object for household device registration status enum",
      "properties": {
        "status": {
          "description": "Enum Type: `KalturaDeviceRegistrationStatus`\n\nHousehold device registration status",
          "enum": [
            "not_registered",
            "registered",
            "registered_to_another_household"
          ],
          "type": "string",
          "x-enumLabels": [
            "NOT_REGISTERED",
            "REGISTERED",
            "REGISTERED_TO_ANOTHER_HOUSEHOLD"
          ],
          "x-enumType": "KalturaDeviceRegistrationStatus"
        }
      },
      "title": "KalturaDeviceRegistrationStatusHolder",
      "type": "object"
    },
    "KalturaDeviceReport": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaReport"
        }
      ],
      "properties": {
        "configurationGroupId": {
          "description": "Configuration group identifier which the version configuration the device last received belongs to",
          "type": "string"
        },
        "lastAccessDate": {
          "description": "Last device configuration request date",
          "type": "integer",
          "x-inputType": "datetime"
        },
        "lastAccessIP": {
          "description": "Last access IP",
          "type": "string"
        },
        "operationSystem": {
          "description": "Request header property\r\n            Incase value cannot be found - returns &quot;Unknown 0.0&quot;",
          "type": "string"
        },
        "partnerId": {
          "description": "Partner unique identifier",
          "type": "integer"
        },
        "pushParameters": {
          "$ref": "#/definitions/KalturaPushParams"
        },
        "udid": {
          "description": "Device unique identifier",
          "type": "string"
        },
        "userAgent": {
          "description": "request header property",
          "type": "string"
        },
        "versionAppName": {
          "description": "Application version name",
          "type": "string"
        },
        "versionNumber": {
          "description": "Application version number",
          "type": "string"
        },
        "versionPlatform": {
          "description": "Enum Type: `KalturaPlatform`\n\nApplication version type",
          "enum": [
            "Android",
            "iOS",
            "WindowsPhone",
            "Blackberry",
            "STB",
            "CTV",
            "Other"
          ],
          "type": "string",
          "x-enumLabels": [
            "ANDROID",
            "IOS",
            "WINDOWSPHONE",
            "BLACKBERRY",
            "STB",
            "CTV",
            "OTHER"
          ],
          "x-enumType": "KalturaPlatform"
        }
      },
      "title": "KalturaDeviceReport",
      "type": "object"
    },
    "KalturaDeviceReportFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaReportFilter"
        }
      ],
      "description": "Report filter",
      "properties": {
        "lastAccessDateGreaterThanOrEqual": {
          "description": "Filter device configuration later than specific date",
          "type": "integer"
        }
      },
      "title": "KalturaDeviceReportFilter",
      "type": "object"
    },
    "KalturaDiscount": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaPrice"
        }
      ],
      "description": "Discount",
      "properties": {
        "percentage": {
          "description": "The discount percentage",
          "type": "number"
        }
      },
      "title": "KalturaDiscount",
      "type": "object"
    },
    "KalturaDiscountDetails": {
      "description": "Discount details",
      "properties": {
        "endDate": {
          "description": "End date represented as epoch",
          "type": "integer",
          "x-inputType": "datetime"
        },
        "id": {
          "description": "`readOnly`\n\nThe discount ID",
          "readOnly": true,
          "type": "integer"
        },
        "multiCurrencyDiscount": {
          "items": {
            "$ref": "#/definitions/KalturaDiscount"
          },
          "type": "array"
        },
        "name": {
          "description": "The price code name",
          "type": "string"
        },
        "startDate": {
          "description": "Start date represented as epoch",
          "type": "integer",
          "x-inputType": "datetime"
        },
        "whenAlgoTimes": {
          "description": "End date represented as epoch",
          "type": "integer"
        },
        "whenAlgoType": {
          "description": "End date represented as epoch",
          "type": "integer"
        }
      },
      "title": "KalturaDiscountDetails",
      "type": "object"
    },
    "KalturaDiscountDetailsFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "properties": {
        "idIn": {
          "description": "Comma separated discount codes",
          "type": "string"
        }
      },
      "title": "KalturaDiscountDetailsFilter",
      "type": "object"
    },
    "KalturaDiscountDetailsListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaDiscountDetails"
          },
          "type": "array"
        }
      },
      "title": "KalturaDiscountDetailsListResponse",
      "type": "object"
    },
    "KalturaDiscountEntitlementDiscountDetails": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaEntitlementDiscountDetailsIdentifier"
        }
      ],
      "description": "Discount entitlement discount details",
      "properties": {},
      "title": "KalturaDiscountEntitlementDiscountDetails",
      "type": "object"
    },
    "KalturaDiscountModule": {
      "description": "Discount module",
      "properties": {
        "endDate": {
          "description": "The last date the discount is available",
          "type": "integer",
          "x-inputType": "datetime"
        },
        "id": {
          "description": "Discount module identifier",
          "type": "integer"
        },
        "percent": {
          "description": "The discount percentage",
          "type": "number"
        },
        "startDate": {
          "description": "The first date the discount is available",
          "type": "integer",
          "x-inputType": "datetime"
        }
      },
      "title": "KalturaDiscountModule",
      "type": "object"
    },
    "KalturaDiscoveryMediaFile": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaMediaFile"
        }
      ],
      "description": "Media file in discovery context",
      "properties": {
        "isPlaybackable": {
          "description": "show, if file could be played",
          "type": "boolean"
        }
      },
      "title": "KalturaDiscoveryMediaFile",
      "type": "object"
    },
    "KalturaDispatcher": {
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaDispatcher"
        },
        {
          "$ref": "#/definitions/KalturaSmsDispatcher"
        },
        {
          "$ref": "#/definitions/KalturaMailDispatcher"
        }
      ],
      "discriminator": "objectType",
      "properties": {
        "objectType": {
          "enum": [
            "KalturaDispatcher",
            "KalturaSmsDispatcher",
            "KalturaMailDispatcher"
          ],
          "type": "string"
        }
      },
      "title": "KalturaDispatcher",
      "type": "object"
    },
    "KalturaDoubleValue": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaValue"
        }
      ],
      "description": "A string representation to return an array of doubles",
      "properties": {
        "value": {
          "description": "Value",
          "type": "number"
        }
      },
      "title": "KalturaDoubleValue",
      "type": "object"
    },
    "KalturaDrmPlaybackPluginData": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaPluginData"
        }
      ],
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaDrmPlaybackPluginData"
        },
        {
          "$ref": "#/definitions/KalturaCustomDrmPlaybackPluginData"
        },
        {
          "$ref": "#/definitions/KalturaFairPlayPlaybackPluginData"
        }
      ],
      "discriminator": "objectType",
      "properties": {
        "dynamicData": {
          "items": {
            "$ref": "#/definitions/KalturaStringValue"
          },
          "type": "array"
        },
        "licenseURL": {
          "description": "License URL",
          "type": "string"
        },
        "objectType": {
          "enum": [
            "KalturaDrmPlaybackPluginData",
            "KalturaCustomDrmPlaybackPluginData",
            "KalturaFairPlayPlaybackPluginData"
          ],
          "type": "string"
        },
        "scheme": {
          "description": "Enum Type: `KalturaDrmSchemeName`\n\nScheme",
          "enum": [
            "PLAYREADY_CENC",
            "WIDEVINE_CENC",
            "FAIRPLAY",
            "WIDEVINE",
            "PLAYREADY",
            "CUSTOM_DRM"
          ],
          "type": "string",
          "x-enumLabels": [
            "PLAYREADY_CENC",
            "WIDEVINE_CENC",
            "FAIRPLAY",
            "WIDEVINE",
            "PLAYREADY",
            "CUSTOM_DRM"
          ],
          "x-enumType": "KalturaDrmSchemeName"
        }
      },
      "title": "KalturaDrmPlaybackPluginData",
      "type": "object"
    },
    "KalturaDrmProfile": {
      "description": "DRM Adapter",
      "properties": {
        "adapterUrl": {
          "description": "DRM adapter URL",
          "type": "string"
        },
        "id": {
          "description": "`readOnly`\n\nDRM adapter identifier",
          "readOnly": true,
          "type": "integer"
        },
        "isActive": {
          "description": "DRM adapter active status",
          "type": "boolean"
        },
        "name": {
          "description": "DRM adapter name",
          "type": "string"
        },
        "settings": {
          "description": "DRM adapter settings",
          "type": "string"
        },
        "sharedSecret": {
          "description": "`readOnly`\n\nDRM shared secret",
          "readOnly": true,
          "type": "string"
        },
        "systemName": {
          "description": "DRM adapter alias",
          "type": "string"
        }
      },
      "title": "KalturaDrmProfile",
      "type": "object"
    },
    "KalturaDrmProfileListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaDrmProfile"
          },
          "type": "array"
        }
      },
      "title": "KalturaDrmProfileListResponse",
      "type": "object"
    },
    "KalturaDuration": {
      "description": "representation of duration time unit and value",
      "properties": {
        "code": {
          "description": "`readOnly`\n\nduration code - the canculat time in minutes except from years and months that have specific code",
          "readOnly": true,
          "type": "integer"
        },
        "unit": {
          "description": "Enum Type: `KalturaDurationUnit`\n\nduration unit",
          "enum": [
            "Minutes",
            "Hours",
            "Days",
            "Months",
            "Years"
          ],
          "type": "string",
          "x-enumLabels": [
            "MINUTES",
            "HOURS",
            "DAYS",
            "MONTHS",
            "YEARS"
          ],
          "x-enumType": "KalturaDurationUnit"
        },
        "value": {
          "description": "duration value",
          "type": "integer"
        }
      },
      "title": "KalturaDuration",
      "type": "object"
    },
    "KalturaDurationListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaDuration"
          },
          "type": "array"
        }
      },
      "title": "KalturaDurationListResponse",
      "type": "object"
    },
    "KalturaDynamicChannel": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaChannel"
        }
      ],
      "properties": {
        "assetTypes": {
          "items": {
            "$ref": "#/definitions/KalturaIntegerValue"
          },
          "type": "array"
        },
        "groupBy": {
          "$ref": "#/definitions/KalturaAssetGroupBy"
        },
        "kSql": {
          "description": "Search assets using dynamic criteria. Provided collection of nested expressions with key, comparison operators, value, and logical conjunction.\r\n            Possible keys: any Tag or Meta defined in the system and the following reserved keys: start_date, end_date. \r\n            epg_id, media_id - for specific asset IDs.\r\n            geo_block - only valid value is &quot;true&quot;: When enabled, only assets that are not restriced to the user by geo-block rules will return.\r\n            parental_rules - only valid value is &quot;true&quot;: When enabled, only assets that the user doesn&#39;t need to provide PIN code will return.\r\n            user_interests - only valid value is &quot;true&quot;. When enabled, only assets that the user defined as his interests (by tags and metas) will return.\r\n            epg_channel_id – the channel identifier of the EPG program. *****Deprecated, please use linear_media_id instead*****\r\n            linear_media_id – the linear media identifier of the EPG program.\r\n            entitled_assets - valid values: &quot;free&quot;, &quot;entitled&quot;, &quot;both&quot;. free - gets only free to watch assets. entitled - only those that the user is implicitly entitled to watch.\r\n            Comparison operators: for numerical fields =, &gt;, &gt;=, &lt;, &lt;=, : (in). \r\n            For alpha-numerical fields =, != (not), ~ (like), !~, ^ (any word starts with), ^= (phrase starts with), + (exists), !+ (not exists).\r\n            Logical conjunction: and, or. \r\n            Search values are limited to 20 characters each.\r\n            (maximum length of entire filter is 4096 characters)",
          "type": "string"
        }
      },
      "title": "KalturaDynamicChannel",
      "type": "object"
    },
    "KalturaDynamicData": {
      "properties": {
        "key": {
          "description": "Key",
          "type": "string"
        },
        "value": {
          "$ref": "#/definitions/KalturaValue"
        }
      },
      "title": "KalturaDynamicData",
      "type": "object"
    },
    "KalturaDynamicKeysCondition": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaCondition"
        }
      ],
      "properties": {
        "key": {
          "description": "key",
          "type": "string"
        },
        "values": {
          "description": "comma-separated values",
          "type": "string"
        }
      },
      "title": "KalturaDynamicKeysCondition",
      "type": "object"
    },
    "KalturaDynamicList": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaOTTObjectSupportNullable"
        }
      ],
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaDynamicList"
        },
        {
          "$ref": "#/definitions/KalturaUdidDynamicList"
        }
      ],
      "discriminator": "objectType",
      "properties": {
        "createDate": {
          "description": "`readOnly`\n\nCreate date of the DynamicList",
          "readOnly": true,
          "type": "integer",
          "x-inputType": "datetime"
        },
        "id": {
          "description": "`readOnly`\n\nID",
          "readOnly": true,
          "type": "integer"
        },
        "name": {
          "description": "Name",
          "type": "string"
        },
        "objectType": {
          "enum": [
            "KalturaDynamicList",
            "KalturaUdidDynamicList"
          ],
          "type": "string"
        },
        "updateDate": {
          "description": "`readOnly`\n\nUpdate date of the DynamicList",
          "readOnly": true,
          "type": "integer",
          "x-inputType": "datetime"
        }
      },
      "title": "KalturaDynamicList",
      "type": "object"
    },
    "KalturaDynamicListFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaDynamicListFilter"
        },
        {
          "$ref": "#/definitions/KalturaDynamicListIdInFilter"
        },
        {
          "$ref": "#/definitions/KalturaUdidDynamicListSearchFilter"
        }
      ],
      "description": "DynamicListFilter",
      "discriminator": "objectType",
      "properties": {
        "objectType": {
          "enum": [
            "KalturaDynamicListFilter",
            "KalturaDynamicListIdInFilter",
            "KalturaUdidDynamicListSearchFilter"
          ],
          "type": "string"
        },
        "orderBy": {
          "enum": [
            "NONE"
          ],
          "type": "string",
          "x-enumLabels": [
            "NONE"
          ],
          "x-enumType": "KalturaDynamicListOrderBy"
        }
      },
      "title": "KalturaDynamicListFilter",
      "type": "object"
    },
    "KalturaDynamicListIdInFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaDynamicListFilter"
        }
      ],
      "description": "DynamicListIdInFilter",
      "properties": {
        "idIn": {
          "description": "DynamicList identifiers",
          "type": "string"
        }
      },
      "title": "KalturaDynamicListIdInFilter",
      "type": "object"
    },
    "KalturaDynamicListListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaDynamicList"
          },
          "type": "array"
        }
      },
      "title": "KalturaDynamicListListResponse",
      "type": "object"
    },
    "KalturaDynamicListSearchFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaDynamicListFilter"
        }
      ],
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaUdidDynamicListSearchFilter"
        }
      ],
      "description": "`abstract`\n\nDynamicListSearchFilter",
      "discriminator": "objectType",
      "properties": {
        "idEqual": {
          "description": "DynamicList id to search by",
          "type": "integer"
        },
        "objectType": {
          "enum": [
            "KalturaUdidDynamicListSearchFilter"
          ],
          "type": "string"
        },
        "valueEqual": {
          "description": "udid value that should be in the DynamicList",
          "type": "string"
        }
      },
      "title": "KalturaDynamicListSearchFilter",
      "type": "object",
      "x-abstract": true
    },
    "KalturaDynamicOrderBy": {
      "description": "Kaltura Asset Order",
      "properties": {
        "name": {
          "description": "order by name",
          "type": "string"
        },
        "orderBy": {
          "description": "Enum Type: `KalturaMetaTagOrderBy`\n\norder by meta asc/desc",
          "enum": [
            "META_ASC",
            "META_DESC"
          ],
          "type": "string",
          "x-enumLabels": [
            "META_ASC",
            "META_DESC"
          ],
          "x-enumType": "KalturaMetaTagOrderBy"
        }
      },
      "title": "KalturaDynamicOrderBy",
      "type": "object"
    },
    "KalturaEmailMessage": {
      "properties": {
        "bccAddress": {
          "description": "bcc address - seperated by comma",
          "type": "string"
        },
        "extraParameters": {
          "items": {
            "$ref": "#/definitions/KalturaKeyValue"
          },
          "type": "array"
        },
        "firstName": {
          "description": "first name",
          "type": "string"
        },
        "lastName": {
          "description": "last name",
          "type": "string"
        },
        "senderFrom": {
          "description": "sender from",
          "type": "string"
        },
        "senderName": {
          "description": "sender name",
          "type": "string"
        },
        "senderTo": {
          "description": "sender to",
          "type": "string"
        },
        "subject": {
          "description": "email subject",
          "type": "string"
        },
        "templateName": {
          "description": "email template name",
          "type": "string"
        }
      },
      "title": "KalturaEmailMessage",
      "type": "object"
    },
    "KalturaEncryption": {
      "properties": {
        "encryptionType": {
          "description": "Enum Type: `KalturaEncryptionType`\n\nEncryption type",
          "enum": [
            "AES256"
          ],
          "type": "string",
          "x-enumLabels": [
            "AES256"
          ],
          "x-enumType": "KalturaEncryptionType"
        }
      },
      "title": "KalturaEncryption",
      "type": "object"
    },
    "KalturaEndDateOffsetRuleAction": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaTimeOffsetRuleAction"
        }
      ],
      "description": "End date offset action",
      "properties": {},
      "title": "KalturaEndDateOffsetRuleAction",
      "type": "object"
    },
    "KalturaEngagement": {
      "description": "Engagement",
      "properties": {
        "adapterDynamicData": {
          "description": "Engagement adapter dynamic data",
          "type": "string"
        },
        "adapterId": {
          "description": "Engagement adapter id",
          "type": "integer"
        },
        "couponGroupId": {
          "description": "Coupon GroupId",
          "type": "integer"
        },
        "id": {
          "description": "`readOnly`\n\nEngagement id",
          "readOnly": true,
          "type": "integer"
        },
        "intervalSeconds": {
          "description": "Interval (seconds)",
          "type": "integer"
        },
        "sendTimeInSeconds": {
          "description": "Send time (seconds)",
          "type": "integer"
        },
        "totalNumberOfRecipients": {
          "description": "`readOnly`\n\nTotal number of recipients",
          "readOnly": true,
          "type": "integer"
        },
        "type": {
          "description": "Enum Type: `KalturaEngagementType`\n\nEngagement type",
          "enum": [
            "Churn"
          ],
          "type": "string",
          "x-enumLabels": [
            "CHURN"
          ],
          "x-enumType": "KalturaEngagementType"
        },
        "userList": {
          "description": "Manual User list",
          "type": "string"
        }
      },
      "title": "KalturaEngagement",
      "type": "object"
    },
    "KalturaEngagementAdapter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaEngagementAdapterBase"
        }
      ],
      "description": "Engagement Adapter",
      "properties": {
        "adapterUrl": {
          "description": "Engagement adapter adapter URL",
          "type": "string"
        },
        "engagementAdapterSettings": {
          "items": {
            "$ref": "#/definitions/KalturaStringValue"
          },
          "type": "array"
        },
        "isActive": {
          "description": "Engagement adapter active status",
          "type": "boolean"
        },
        "providerUrl": {
          "description": "Engagement provider adapter URL",
          "type": "string"
        },
        "sharedSecret": {
          "description": "`readOnly`\n\nShared Secret",
          "readOnly": true,
          "type": "string"
        }
      },
      "title": "KalturaEngagementAdapter",
      "type": "object"
    },
    "KalturaEngagementAdapterBase": {
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaEngagementAdapterBase"
        },
        {
          "$ref": "#/definitions/KalturaEngagementAdapter"
        }
      ],
      "description": "Engagement adapter basic",
      "discriminator": "objectType",
      "properties": {
        "id": {
          "description": "`readOnly`\n\nEngagement adapter id",
          "readOnly": true,
          "type": "integer"
        },
        "name": {
          "description": "Engagement adapter name",
          "type": "string"
        },
        "objectType": {
          "enum": [
            "KalturaEngagementAdapterBase",
            "KalturaEngagementAdapter"
          ],
          "type": "string"
        }
      },
      "title": "KalturaEngagementAdapterBase",
      "type": "object"
    },
    "KalturaEngagementAdapterListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "Engagement adapter list",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaEngagementAdapter"
          },
          "type": "array"
        }
      },
      "title": "KalturaEngagementAdapterListResponse",
      "type": "object"
    },
    "KalturaEngagementFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "properties": {
        "orderBy": {
          "enum": [
            "NONE"
          ],
          "type": "string",
          "x-enumLabels": [
            "NONE"
          ],
          "x-enumType": "KalturaEngagementOrderBy"
        },
        "sendTimeGreaterThanOrEqual": {
          "description": "SendTime GreaterThanOrEqual",
          "type": "integer"
        },
        "typeIn": {
          "description": "List of inbox message types to search within.",
          "type": "string"
        }
      },
      "title": "KalturaEngagementFilter",
      "type": "object"
    },
    "KalturaEngagementListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "Engagement adapter list",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaEngagement"
          },
          "type": "array"
        }
      },
      "title": "KalturaEngagementListResponse",
      "type": "object"
    },
    "KalturaEntitlement": {
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaEntitlement"
        },
        {
          "$ref": "#/definitions/KalturaCollectionEntitlement"
        },
        {
          "$ref": "#/definitions/KalturaPpvEntitlement"
        },
        {
          "$ref": "#/definitions/KalturaProgramAssetGroupOfferEntitlement"
        },
        {
          "$ref": "#/definitions/KalturaSubscriptionEntitlement"
        }
      ],
      "description": "Entitlement",
      "discriminator": "objectType",
      "properties": {
        "currentDate": {
          "description": "`readOnly`\n\nCurrent date",
          "readOnly": true,
          "type": "integer",
          "x-inputType": "datetime"
        },
        "currentUses": {
          "description": "`readOnly`\n\nThe current number of uses",
          "readOnly": true,
          "type": "integer"
        },
        "deviceName": {
          "description": "`readOnly`\n\nThe name of the device from which the purchase was made",
          "readOnly": true,
          "type": "string"
        },
        "deviceUdid": {
          "description": "`readOnly`\n\nThe UDID of the device from which the purchase was made",
          "readOnly": true,
          "type": "string"
        },
        "endDate": {
          "description": "The end date of the entitlement",
          "type": "integer",
          "x-inputType": "datetime"
        },
        "householdId": {
          "description": "`readOnly`\n\nThe Identifier of the purchasing household",
          "readOnly": true,
          "type": "integer"
        },
        "id": {
          "description": "`readOnly`\n\nPurchase identifier (for subscriptions and collections only)",
          "readOnly": true,
          "type": "integer"
        },
        "isCancelationWindowEnabled": {
          "description": "`readOnly`\n\nIndicates whether a cancelation window period is enabled",
          "readOnly": true,
          "type": "boolean"
        },
        "isPending": {
          "description": "Indicates whether the asynchronous purchase is pending",
          "type": "boolean"
        },
        "lastViewDate": {
          "description": "`readOnly`\n\nThe last date the item was viewed",
          "readOnly": true,
          "type": "integer",
          "x-inputType": "datetime"
        },
        "maxUses": {
          "description": "`readOnly`\n\nThe maximum number of uses available for this item (only for subscription and PPV)",
          "readOnly": true,
          "type": "integer"
        },
        "objectType": {
          "enum": [
            "KalturaEntitlement",
            "KalturaCollectionEntitlement",
            "KalturaPpvEntitlement",
            "KalturaProgramAssetGroupOfferEntitlement",
            "KalturaSubscriptionEntitlement"
          ],
          "type": "string"
        },
        "paymentMethod": {
          "description": "`readOnly`\n\nEnum Type: `KalturaPaymentMethodType`\n\nPayment Method",
          "enum": [
            "unknown",
            "credit_card",
            "sms",
            "pay_pal",
            "debit_card",
            "ideal",
            "incaso",
            "gift",
            "visa",
            "master_card",
            "in_app",
            "m1",
            "change_subscription",
            "offline"
          ],
          "readOnly": true,
          "type": "string",
          "x-enumLabels": [
            "UNKNOWN",
            "CREDIT_CARD",
            "SMS",
            "PAY_PAL",
            "DEBIT_CARD",
            "IDEAL",
            "INCASO",
            "GIFT",
            "VISA",
            "MASTER_CARD",
            "IN_APP",
            "M1",
            "CHANGE_SUBSCRIPTION",
            "OFFLINE"
          ],
          "x-enumType": "KalturaPaymentMethodType"
        },
        "productId": {
          "description": "`readOnly`\n\nProduct identifier",
          "readOnly": true,
          "type": "string"
        },
        "purchaseDate": {
          "description": "`readOnly`\n\nPurchase date",
          "readOnly": true,
          "type": "integer",
          "x-inputType": "datetime"
        },
        "userId": {
          "description": "`readOnly`\n\nThe Identifier of the purchasing user",
          "readOnly": true,
          "type": "string"
        }
      },
      "title": "KalturaEntitlement",
      "type": "object"
    },
    "KalturaEntitlementDiscountDetails": {
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaEntitlementDiscountDetails"
        },
        {
          "$ref": "#/definitions/KalturaEntitlementDiscountDetailsIdentifier"
        },
        {
          "$ref": "#/definitions/KalturaCouponEntitlementDiscountDetails"
        },
        {
          "$ref": "#/definitions/KalturaCampaignEntitlementDiscountDetails"
        },
        {
          "$ref": "#/definitions/KalturaCompensationEntitlementDiscountDetails"
        },
        {
          "$ref": "#/definitions/KalturaDiscountEntitlementDiscountDetails"
        },
        {
          "$ref": "#/definitions/KalturaTrailEntitlementDiscountDetails"
        }
      ],
      "description": "Entitlement discount details",
      "discriminator": "objectType",
      "properties": {
        "amount": {
          "description": "`readOnly`\n\nAmount",
          "readOnly": true,
          "type": "number"
        },
        "endDate": {
          "description": "`readOnly`\n\nEnd date",
          "readOnly": true,
          "type": "integer",
          "x-inputType": "datetime"
        },
        "objectType": {
          "enum": [
            "KalturaEntitlementDiscountDetails",
            "KalturaEntitlementDiscountDetailsIdentifier",
            "KalturaCouponEntitlementDiscountDetails",
            "KalturaCampaignEntitlementDiscountDetails",
            "KalturaCompensationEntitlementDiscountDetails",
            "KalturaDiscountEntitlementDiscountDetails",
            "KalturaTrailEntitlementDiscountDetails"
          ],
          "type": "string"
        },
        "startDate": {
          "description": "`readOnly`\n\nStart date",
          "readOnly": true,
          "type": "integer",
          "x-inputType": "datetime"
        }
      },
      "title": "KalturaEntitlementDiscountDetails",
      "type": "object"
    },
    "KalturaEntitlementDiscountDetailsIdentifier": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaEntitlementDiscountDetails"
        }
      ],
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaEntitlementDiscountDetailsIdentifier"
        },
        {
          "$ref": "#/definitions/KalturaCampaignEntitlementDiscountDetails"
        },
        {
          "$ref": "#/definitions/KalturaCompensationEntitlementDiscountDetails"
        },
        {
          "$ref": "#/definitions/KalturaDiscountEntitlementDiscountDetails"
        },
        {
          "$ref": "#/definitions/KalturaTrailEntitlementDiscountDetails"
        }
      ],
      "discriminator": "objectType",
      "properties": {
        "id": {
          "description": "`readOnly`\n\nIdentifier",
          "readOnly": true,
          "type": "integer"
        },
        "objectType": {
          "enum": [
            "KalturaEntitlementDiscountDetailsIdentifier",
            "KalturaCampaignEntitlementDiscountDetails",
            "KalturaCompensationEntitlementDiscountDetails",
            "KalturaDiscountEntitlementDiscountDetails",
            "KalturaTrailEntitlementDiscountDetails"
          ],
          "type": "string"
        }
      },
      "title": "KalturaEntitlementDiscountDetailsIdentifier",
      "type": "object"
    },
    "KalturaEntitlementFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaEntitlementFilter"
        },
        {
          "$ref": "#/definitions/KalturaProgramAssetGroupOfferEntitlementFilter"
        }
      ],
      "description": "Entitlements filter",
      "discriminator": "objectType",
      "properties": {
        "entityReferenceEqual": {
          "description": "Enum Type: `KalturaEntityReferenceBy`\n\nReference type to filter by",
          "enum": [
            "user",
            "household"
          ],
          "type": "string",
          "x-enumLabels": [
            "USER",
            "HOUSEHOLD"
          ],
          "x-enumType": "KalturaEntityReferenceBy"
        },
        "isExpiredEqual": {
          "description": "Is expired",
          "type": "boolean"
        },
        "objectType": {
          "enum": [
            "KalturaEntitlementFilter",
            "KalturaProgramAssetGroupOfferEntitlementFilter"
          ],
          "type": "string"
        },
        "orderBy": {
          "enum": [
            "PURCHASE_DATE_ASC",
            "PURCHASE_DATE_DESC"
          ],
          "type": "string",
          "x-enumLabels": [
            "PURCHASE_DATE_ASC",
            "PURCHASE_DATE_DESC"
          ],
          "x-enumType": "KalturaEntitlementOrderBy"
        },
        "productTypeEqual": {
          "description": "Enum Type: `KalturaTransactionType`\n\nThe type of the entitlements to return",
          "enum": [
            "ppv",
            "subscription",
            "collection",
            "programAssetGroupOffer"
          ],
          "type": "string",
          "x-enumLabels": [
            "PPV",
            "SUBSCRIPTION",
            "COLLECTION",
            "PROGRAMASSETGROUPOFFER"
          ],
          "x-enumType": "KalturaTransactionType"
        }
      },
      "title": "KalturaEntitlementFilter",
      "type": "object"
    },
    "KalturaEntitlementListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "Entitlements list",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaEntitlement"
          },
          "type": "array"
        }
      },
      "title": "KalturaEntitlementListResponse",
      "type": "object"
    },
    "KalturaEntitlementPriceDetails": {
      "description": "Entitlement price details",
      "properties": {
        "discountDetails": {
          "items": {
            "$ref": "#/definitions/KalturaEntitlementDiscountDetails"
          },
          "type": "array"
        },
        "fullPrice": {
          "$ref": "#/definitions/KalturaPrice"
        }
      },
      "title": "KalturaEntitlementPriceDetails",
      "type": "object"
    },
    "KalturaEntitlementRenewal": {
      "properties": {
        "date": {
          "description": "Next renewal date",
          "type": "integer"
        },
        "price": {
          "$ref": "#/definitions/KalturaPrice"
        },
        "purchaseId": {
          "description": "Puchase ID",
          "type": "integer"
        },
        "subscriptionId": {
          "description": "Subscription ID",
          "type": "integer"
        },
        "userId": {
          "description": "User ID",
          "type": "integer"
        }
      },
      "title": "KalturaEntitlementRenewal",
      "type": "object"
    },
    "KalturaEntitlementRenewalBase": {
      "properties": {
        "price": {
          "description": "Price that is going to be paid on the renewal",
          "type": "number"
        },
        "purchaseId": {
          "description": "Puchase ID",
          "type": "integer"
        },
        "subscriptionId": {
          "description": "Subscription ID",
          "type": "integer"
        }
      },
      "title": "KalturaEntitlementRenewalBase",
      "type": "object"
    },
    "KalturaEpg": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaProgramAsset"
        }
      ],
      "properties": {},
      "title": "KalturaEpg",
      "type": "object"
    },
    "KalturaEpgFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "properties": {
        "dateEqual": {
          "description": "date in unix timestamp, e.g. 1610928000(January 18, 2021 0:00:00), 1611014400(January 19, 2021 0:00:00)",
          "type": "integer"
        },
        "liveAssetIdEqual": {
          "description": "EPG live asset identifier",
          "type": "integer"
        },
        "orderBy": {
          "type": "string",
          "x-enumLabels": [],
          "x-enumType": "KalturaEpgOrderBy"
        }
      },
      "title": "KalturaEpgFilter",
      "type": "object"
    },
    "KalturaEpgIngestErrorMessage": {
      "description": "A Kaltura error message",
      "properties": {
        "args": {
          "items": {
            "$ref": "#/definitions/KalturaStringValue"
          },
          "type": "array"
        },
        "code": {
          "description": "The message code",
          "type": "string"
        },
        "message": {
          "description": "The message description with arguments place holders",
          "type": "string"
        }
      },
      "title": "KalturaEpgIngestErrorMessage",
      "type": "object"
    },
    "KalturaEpgListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "EPG wrapper",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaEpg"
          },
          "type": "array"
        }
      },
      "title": "KalturaEpgListResponse",
      "type": "object"
    },
    "KalturaEpgNotificationSettings": {
      "properties": {
        "backwardTimeRange": {
          "description": "The backward range (in hours), in which, EPG updates triggers a notification,\r\n            every program that is updated and it’s starts time falls within this range shall trigger a notification",
          "type": "integer"
        },
        "deviceFamilyIds": {
          "description": "Specify which devices should receive notifications",
          "type": "string"
        },
        "enabled": {
          "description": "EPG notification capability is enabled for the account",
          "type": "boolean"
        },
        "forwardTimeRange": {
          "description": "The forward range (in hours), in which, EPG updates triggers a notification,\r\n            every program that is updated and it’s starts time falls within this range shall trigger a notification",
          "type": "integer"
        },
        "liveAssetIds": {
          "description": "Specify which live assets should fire notifications",
          "type": "string"
        }
      },
      "title": "KalturaEpgNotificationSettings",
      "type": "object"
    },
    "KalturaEpgServicePartnerConfiguration": {
      "properties": {
        "firstSlotOffset": {
          "description": "The offset of the first slot from 00:00 UTC",
          "type": "integer"
        },
        "numberOfSlots": {
          "description": "The number of slots (NOS) that are supported (1, 2, 3, 4, 6, 8, 12, 24)",
          "type": "integer"
        }
      },
      "title": "KalturaEpgServicePartnerConfiguration",
      "type": "object"
    },
    "KalturaEventNotification": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaOTTObjectSupportNullable"
        }
      ],
      "description": "Household Coupon details",
      "properties": {
        "actionType": {
          "description": "Action type",
          "type": "string"
        },
        "createDate": {
          "description": "`readOnly`\n\nCreate date",
          "readOnly": true,
          "type": "integer",
          "x-inputType": "datetime"
        },
        "eventObjectType": {
          "description": "Event object type",
          "type": "string"
        },
        "id": {
          "description": "Identifier",
          "type": "string"
        },
        "message": {
          "description": "Message",
          "type": "string"
        },
        "objectId": {
          "description": "Object identifier",
          "type": "integer"
        },
        "status": {
          "description": "Enum Type: `KalturaEventNotificationStatus`\n\nStatus",
          "enum": [
            "SENT",
            "FAILED",
            "SUCCESS",
            "FAILED_TO_SEND"
          ],
          "type": "string",
          "x-enumLabels": [
            "SENT",
            "FAILED",
            "SUCCESS",
            "FAILED_TO_SEND"
          ],
          "x-enumType": "KalturaEventNotificationStatus"
        },
        "updateDate": {
          "description": "`readOnly`\n\nUpdate date",
          "readOnly": true,
          "type": "integer",
          "x-inputType": "datetime"
        }
      },
      "title": "KalturaEventNotification",
      "type": "object"
    },
    "KalturaEventNotificationFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "properties": {
        "eventObjectTypeEqual": {
          "description": "Indicates which objectType to return by their event notifications.",
          "type": "string"
        },
        "idEqual": {
          "description": "Indicates which event notification to return by their event notifications Id.",
          "type": "string"
        },
        "objectIdEqual": {
          "description": "Indicates which objectId to return by their event notifications.",
          "type": "integer"
        },
        "orderBy": {
          "enum": [
            "NONE"
          ],
          "type": "string",
          "x-enumLabels": [
            "NONE"
          ],
          "x-enumType": "KalturaEventNotificationOrderBy"
        }
      },
      "title": "KalturaEventNotificationFilter",
      "type": "object"
    },
    "KalturaEventNotificationListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaEventNotification"
          },
          "type": "array"
        }
      },
      "title": "KalturaEventNotificationListResponse",
      "type": "object"
    },
    "KalturaEventNotificationObjectScope": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaEventNotificationScope"
        }
      ],
      "description": "Kaltura event notification object scope",
      "properties": {
        "eventObject": {
          "$ref": "#/definitions/KalturaEventObject"
        }
      },
      "title": "KalturaEventNotificationObjectScope",
      "type": "object"
    },
    "KalturaEventNotificationScope": {
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaEventNotificationObjectScope"
        }
      ],
      "description": "`abstract`\n\nKaltura event notification scope",
      "discriminator": "objectType",
      "properties": {
        "objectType": {
          "enum": [
            "KalturaEventNotificationObjectScope"
          ],
          "type": "string"
        }
      },
      "title": "KalturaEventNotificationScope",
      "type": "object",
      "x-abstract": true
    },
    "KalturaEventObject": {
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaEventObject"
        },
        {
          "$ref": "#/definitions/KalturaAssetEvent"
        },
        {
          "$ref": "#/definitions/KalturaBookmarkEvent"
        },
        {
          "$ref": "#/definitions/KalturaConcurrencyViolation"
        },
        {
          "$ref": "#/definitions/KalturaTriggerCampaignEvent"
        },
        {
          "$ref": "#/definitions/KalturaProgramAssetEvent"
        }
      ],
      "discriminator": "objectType",
      "properties": {
        "objectType": {
          "enum": [
            "KalturaEventObject",
            "KalturaAssetEvent",
            "KalturaBookmarkEvent",
            "KalturaConcurrencyViolation",
            "KalturaTriggerCampaignEvent",
            "KalturaProgramAssetEvent"
          ],
          "type": "string"
        }
      },
      "title": "KalturaEventObject",
      "type": "object"
    },
    "KalturaExportTask": {
      "description": "Bulk export task",
      "properties": {
        "alias": {
          "description": "Alias for the task used to solicit an export using API",
          "type": "string"
        },
        "dataType": {
          "description": "Enum Type: `KalturaExportDataType`\n\nThe data type exported in this task",
          "enum": [
            "vod",
            "epg",
            "users"
          ],
          "type": "string",
          "x-enumLabels": [
            "VOD",
            "EPG",
            "USERS"
          ],
          "x-enumType": "KalturaExportDataType"
        },
        "exportType": {
          "description": "Enum Type: `KalturaExportType`\n\nType of export batch – full or incremental",
          "enum": [
            "full",
            "incremental"
          ],
          "type": "string",
          "x-enumLabels": [
            "FULL",
            "INCREMENTAL"
          ],
          "x-enumType": "KalturaExportType"
        },
        "filter": {
          "description": "Filter to apply on the export, utilize KSQL.\r\n            Note: KSQL currently applies to media assets only. It cannot be used for USERS filtering",
          "type": "string"
        },
        "frequency": {
          "description": "How often the export should occur, reasonable minimum threshold should apply, configurable in minutes",
          "type": "integer"
        },
        "id": {
          "description": "`readOnly`\n\nTask identifier",
          "readOnly": true,
          "type": "integer"
        },
        "isActive": {
          "description": "Indicates if the task is active or not",
          "type": "boolean"
        },
        "name": {
          "description": "Task display name",
          "type": "string"
        },
        "notificationUrl": {
          "description": "The URL for sending a notification when the task&#39;s export process is done",
          "type": "string"
        }
      },
      "title": "KalturaExportTask",
      "type": "object"
    },
    "KalturaExportTaskFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "description": "Bulk export tasks filter",
      "properties": {
        "idIn": {
          "description": "Comma separated tasks identifiers",
          "type": "string"
        },
        "orderBy": {
          "enum": [
            "CREATE_DATE_ASC",
            "CREATE_DATE_DESC"
          ],
          "type": "string",
          "x-enumLabels": [
            "CREATE_DATE_ASC",
            "CREATE_DATE_DESC"
          ],
          "x-enumType": "KalturaExportTaskOrderBy"
        }
      },
      "title": "KalturaExportTaskFilter",
      "type": "object"
    },
    "KalturaExportTaskListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "Export task list wrapper",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaExportTask"
          },
          "type": "array"
        }
      },
      "title": "KalturaExportTaskListResponse",
      "type": "object"
    },
    "KalturaExpressionAnd": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaUserSessionProfileExpression"
        }
      ],
      "description": "And Expression",
      "properties": {
        "expressions": {
          "items": {
            "$ref": "#/definitions/KalturaUserSessionProfileExpression"
          },
          "type": "array"
        }
      },
      "title": "KalturaExpressionAnd",
      "type": "object"
    },
    "KalturaExpressionNot": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaUserSessionProfileExpression"
        }
      ],
      "description": "Not Expression",
      "properties": {
        "expression": {
          "$ref": "#/definitions/KalturaUserSessionProfileExpression"
        }
      },
      "title": "KalturaExpressionNot",
      "type": "object"
    },
    "KalturaExpressionOr": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaUserSessionProfileExpression"
        }
      ],
      "description": "Or Expression",
      "properties": {
        "expressions": {
          "items": {
            "$ref": "#/definitions/KalturaUserSessionProfileExpression"
          },
          "type": "array"
        }
      },
      "title": "KalturaExpressionOr",
      "type": "object"
    },
    "KalturaExternalChannelProfile": {
      "description": "OSS Adapter",
      "properties": {
        "assetUserRuleId": {
          "description": "Asset user rule identifier",
          "type": "integer"
        },
        "enrichments": {
          "items": {
            "$ref": "#/definitions/KalturaChannelEnrichmentHolder"
          },
          "type": "array"
        },
        "externalIdentifier": {
          "description": "External channel external identifier",
          "type": "string"
        },
        "filterExpression": {
          "description": "Filter expression",
          "type": "string"
        },
        "id": {
          "description": "`readOnly`\n\nExternal channel id",
          "readOnly": true,
          "type": "integer"
        },
        "isActive": {
          "description": "External channel active status",
          "type": "boolean"
        },
        "metaData": {
          "items": {
            "$ref": "#/definitions/KalturaStringValue"
          },
          "type": "array"
        },
        "name": {
          "description": "External channel name",
          "type": "string"
        },
        "recommendationEngineId": {
          "description": "Recommendation engine id",
          "type": "integer"
        }
      },
      "title": "KalturaExternalChannelProfile",
      "type": "object"
    },
    "KalturaExternalChannelProfileByIdInFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaExternalChannelProfileFilter"
        }
      ],
      "properties": {
        "idIn": {
          "description": "Comma separated external channel profile ids",
          "type": "string"
        }
      },
      "title": "KalturaExternalChannelProfileByIdInFilter",
      "type": "object"
    },
    "KalturaExternalChannelProfileFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaExternalChannelProfileFilter"
        },
        {
          "$ref": "#/definitions/KalturaExternalChannelProfileByIdInFilter"
        }
      ],
      "description": "External channel profile filter",
      "discriminator": "objectType",
      "properties": {
        "objectType": {
          "enum": [
            "KalturaExternalChannelProfileFilter",
            "KalturaExternalChannelProfileByIdInFilter"
          ],
          "type": "string"
        },
        "orderBy": {
          "enum": [
            "NONE"
          ],
          "type": "string",
          "x-enumLabels": [
            "NONE"
          ],
          "x-enumType": "KalturaExternalChannelProfileOrderBy"
        }
      },
      "title": "KalturaExternalChannelProfileFilter",
      "type": "object"
    },
    "KalturaExternalChannelProfileListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "External channel profiles",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaExternalChannelProfile"
          },
          "type": "array"
        }
      },
      "title": "KalturaExternalChannelProfileListResponse",
      "type": "object"
    },
    "KalturaExternalReceipt": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaPurchaseBase"
        }
      ],
      "properties": {
        "paymentGatewayName": {
          "description": "The payment gateway name for the In-App billing service to be used. Possible values: Google/Apple",
          "type": "string"
        },
        "receiptId": {
          "description": "A unique identifier that was provided by the In-App billing service to validate the purchase",
          "type": "string"
        }
      },
      "title": "KalturaExternalReceipt",
      "type": "object"
    },
    "KalturaExternalRecording": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaRecording"
        }
      ],
      "properties": {
        "expiryDate": {
          "description": "`readOnly`\n\nSpecifies until when the recording is available. Date and time represented as epoch.",
          "readOnly": true,
          "type": "integer",
          "x-inputType": "datetime"
        },
        "externalId": {
          "description": "`insertOnly`\n\nExternal identifier for the recording",
          "type": "string"
        },
        "metaData": {
          "items": {
            "$ref": "#/definitions/KalturaStringValue"
          },
          "type": "array"
        }
      },
      "title": "KalturaExternalRecording",
      "type": "object"
    },
    "KalturaExternalRecordingFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaRecordingFilter"
        }
      ],
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaExternalRecordingFilter"
        },
        {
          "$ref": "#/definitions/KalturaCloudRecordingFilter"
        }
      ],
      "description": "Filtering external recordings",
      "discriminator": "objectType",
      "properties": {
        "metaData": {
          "items": {
            "$ref": "#/definitions/KalturaStringValue"
          },
          "type": "array"
        },
        "objectType": {
          "enum": [
            "KalturaExternalRecordingFilter",
            "KalturaCloudRecordingFilter"
          ],
          "type": "string"
        }
      },
      "title": "KalturaExternalRecordingFilter",
      "type": "object"
    },
    "KalturaExternalRecordingResponseProfileFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaRelatedObjectFilter"
        }
      ],
      "description": "Kaltura External Recording ResponseProfile Filter",
      "properties": {
        "orderBy": {
          "enum": [
            "NONE"
          ],
          "type": "string",
          "x-enumLabels": [
            "NONE"
          ],
          "x-enumType": "KalturaExternalRecordingResponseProfileOrderBy"
        }
      },
      "title": "KalturaExternalRecordingResponseProfileFilter",
      "type": "object"
    },
    "KalturaExternalSeriesRecording": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaSeriesRecording"
        }
      ],
      "properties": {
        "metaData": {
          "items": {
            "$ref": "#/definitions/KalturaStringValue"
          },
          "type": "array"
        }
      },
      "title": "KalturaExternalSeriesRecording",
      "type": "object"
    },
    "KalturaFacebookPost": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaSocialNetworkComment"
        }
      ],
      "properties": {
        "comments": {
          "items": {
            "$ref": "#/definitions/KalturaSocialNetworkComment"
          },
          "type": "array"
        },
        "link": {
          "description": "A link associated to the post",
          "type": "string"
        }
      },
      "title": "KalturaFacebookPost",
      "type": "object"
    },
    "KalturaFacebookSocial": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaSocial"
        }
      ],
      "properties": {},
      "title": "KalturaFacebookSocial",
      "type": "object"
    },
    "KalturaFairPlayPlaybackPluginData": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaDrmPlaybackPluginData"
        }
      ],
      "properties": {
        "certificate": {
          "description": "Custom data string",
          "type": "string"
        }
      },
      "title": "KalturaFairPlayPlaybackPluginData",
      "type": "object"
    },
    "KalturaFavorite": {
      "description": "Favorite details",
      "properties": {
        "assetId": {
          "description": "AssetInfo Model",
          "type": "integer"
        },
        "createDate": {
          "description": "`readOnly`\n\nSpecifies when was the favorite created. Date and time represented as epoch.",
          "readOnly": true,
          "type": "integer",
          "x-inputType": "datetime"
        },
        "extraData": {
          "description": "Extra Value",
          "type": "string"
        }
      },
      "title": "KalturaFavorite",
      "type": "object"
    },
    "KalturaFavoriteFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "description": "Favorite request filter",
      "properties": {
        "mediaIdIn": {
          "description": "Media identifiers from which to filter the favorite assets",
          "type": "string"
        },
        "mediaTypeEqual": {
          "description": "Media type to filter by the favorite assets",
          "type": "integer"
        },
        "orderBy": {
          "enum": [
            "CREATE_DATE_ASC",
            "CREATE_DATE_DESC"
          ],
          "type": "string",
          "x-enumLabels": [
            "CREATE_DATE_ASC",
            "CREATE_DATE_DESC"
          ],
          "x-enumType": "KalturaFavoriteOrderBy"
        },
        "udidEqualCurrent": {
          "description": "Indicates whether the results should be filtered by origin UDID using the current",
          "type": "boolean"
        }
      },
      "title": "KalturaFavoriteFilter",
      "type": "object"
    },
    "KalturaFavoriteListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "Favorite list",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaFavorite"
          },
          "type": "array"
        }
      },
      "title": "KalturaFavoriteListResponse",
      "type": "object"
    },
    "KalturaFeed": {
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaFeed"
        },
        {
          "$ref": "#/definitions/KalturaPersonalFeed"
        }
      ],
      "discriminator": "objectType",
      "properties": {
        "assetId": {
          "description": "`readOnly`\n\nAsset identifier",
          "readOnly": true,
          "type": "integer"
        },
        "objectType": {
          "enum": [
            "KalturaFeed",
            "KalturaPersonalFeed"
          ],
          "type": "string"
        }
      },
      "title": "KalturaFeed",
      "type": "object"
    },
    "KalturaFileTypeCondition": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaCondition"
        }
      ],
      "properties": {
        "idIn": {
          "description": "Comma separated filetype IDs list",
          "type": "string"
        }
      },
      "title": "KalturaFileTypeCondition",
      "type": "object"
    },
    "KalturaFilter": {
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaDeviceReferenceDataFilter"
        },
        {
          "$ref": "#/definitions/KalturaFavoriteFilter"
        },
        {
          "$ref": "#/definitions/KalturaOTTUserFilter"
        },
        {
          "$ref": "#/definitions/KalturaPartnerFilter"
        },
        {
          "$ref": "#/definitions/KalturaPasswordPolicyFilter"
        },
        {
          "$ref": "#/definitions/KalturaUserSessionProfileFilter"
        },
        {
          "$ref": "#/definitions/KalturaBulkUploadFilter"
        },
        {
          "$ref": "#/definitions/KalturaSocialActionFilter"
        },
        {
          "$ref": "#/definitions/KalturaSocialCommentFilter"
        },
        {
          "$ref": "#/definitions/KalturaSocialFriendActivityFilter"
        },
        {
          "$ref": "#/definitions/KalturaHouseholdSegmentFilter"
        },
        {
          "$ref": "#/definitions/KalturaUserSegmentFilter"
        },
        {
          "$ref": "#/definitions/KalturaAssetFilePpvFilter"
        },
        {
          "$ref": "#/definitions/KalturaCollectionFilter"
        },
        {
          "$ref": "#/definitions/KalturaDiscountDetailsFilter"
        },
        {
          "$ref": "#/definitions/KalturaPpvFilter"
        },
        {
          "$ref": "#/definitions/KalturaPreviewModuleFilter"
        },
        {
          "$ref": "#/definitions/KalturaPriceDetailsFilter"
        },
        {
          "$ref": "#/definitions/KalturaPricePlanFilter"
        },
        {
          "$ref": "#/definitions/KalturaProgramAssetGroupOfferFilter"
        },
        {
          "$ref": "#/definitions/KalturaSubscriptionSetFilter"
        },
        {
          "$ref": "#/definitions/KalturaSubscriptionFilter"
        },
        {
          "$ref": "#/definitions/KalturaUsageModuleFilter"
        },
        {
          "$ref": "#/definitions/KalturaPartnerConfigurationFilter"
        },
        {
          "$ref": "#/definitions/KalturaPersonalListFilter"
        },
        {
          "$ref": "#/definitions/KalturaAnnouncementFilter"
        },
        {
          "$ref": "#/definitions/KalturaEngagementFilter"
        },
        {
          "$ref": "#/definitions/KalturaFollowTvSeriesFilter"
        },
        {
          "$ref": "#/definitions/KalturaInboxMessageFilter"
        },
        {
          "$ref": "#/definitions/KalturaPersonalFeedFilter"
        },
        {
          "$ref": "#/definitions/KalturaSmsAdapterProfileFilter"
        },
        {
          "$ref": "#/definitions/KalturaTopicFilter"
        },
        {
          "$ref": "#/definitions/KalturaTopicNotificationFilter"
        },
        {
          "$ref": "#/definitions/KalturaTopicNotificationMessageFilter"
        },
        {
          "$ref": "#/definitions/KalturaIngestByCompoundFilter"
        },
        {
          "$ref": "#/definitions/KalturaIngestByIdsFilter"
        },
        {
          "$ref": "#/definitions/KalturaIngestEpgProgramResultFilter"
        },
        {
          "$ref": "#/definitions/KalturaVodIngestAssetResultFilter"
        },
        {
          "$ref": "#/definitions/KalturaDynamicListFilter"
        },
        {
          "$ref": "#/definitions/KalturaHouseholdCouponFilter"
        },
        {
          "$ref": "#/definitions/KalturaHouseholdDeviceFilter"
        },
        {
          "$ref": "#/definitions/KalturaHouseholdFilter"
        },
        {
          "$ref": "#/definitions/KalturaHouseholdUserFilter"
        },
        {
          "$ref": "#/definitions/KalturaConfigurationGroupDeviceFilter"
        },
        {
          "$ref": "#/definitions/KalturaConfigurationGroupTagFilter"
        },
        {
          "$ref": "#/definitions/KalturaConfigurationsFilter"
        },
        {
          "$ref": "#/definitions/KalturaRecordingFilter"
        },
        {
          "$ref": "#/definitions/KalturaSeriesRecordingFilter"
        },
        {
          "$ref": "#/definitions/KalturaEntitlementFilter"
        },
        {
          "$ref": "#/definitions/KalturaProductPriceFilter"
        },
        {
          "$ref": "#/definitions/KalturaRecordingContextFilter"
        },
        {
          "$ref": "#/definitions/KalturaTransactionHistoryFilter"
        },
        {
          "$ref": "#/definitions/KalturaAssetCommentFilter"
        },
        {
          "$ref": "#/definitions/KalturaAssetHistoryFilter"
        },
        {
          "$ref": "#/definitions/KalturaAssetStructMetaFilter"
        },
        {
          "$ref": "#/definitions/KalturaBookmarkFilter"
        },
        {
          "$ref": "#/definitions/KalturaCategoryItemFilter"
        },
        {
          "$ref": "#/definitions/KalturaCategoryVersionFilter"
        },
        {
          "$ref": "#/definitions/KalturaImageFilter"
        },
        {
          "$ref": "#/definitions/KalturaImageTypeFilter"
        },
        {
          "$ref": "#/definitions/KalturaLabelFilter"
        },
        {
          "$ref": "#/definitions/KalturaMediaFileFilter"
        },
        {
          "$ref": "#/definitions/KalturaPersonalAssetSelectionFilter"
        },
        {
          "$ref": "#/definitions/KalturaStreamingDeviceFilter"
        },
        {
          "$ref": "#/definitions/KalturaTagFilter"
        },
        {
          "$ref": "#/definitions/KalturaSearchPriorityGroupFilter"
        },
        {
          "$ref": "#/definitions/KalturaLineupRegionalChannelFilter"
        },
        {
          "$ref": "#/definitions/KalturaListGroupsRepresentativesFilter"
        },
        {
          "$ref": "#/definitions/KalturaPaymentMethodProfileFilter"
        },
        {
          "$ref": "#/definitions/KalturaAssetPersonalMarkupSearchFilter"
        },
        {
          "$ref": "#/definitions/KalturaAssetRuleFilter"
        },
        {
          "$ref": "#/definitions/KalturaAssetUserRuleFilter"
        },
        {
          "$ref": "#/definitions/KalturaCampaignFilter"
        },
        {
          "$ref": "#/definitions/KalturaBusinessModuleRuleFilter"
        },
        {
          "$ref": "#/definitions/KalturaCountryFilter"
        },
        {
          "$ref": "#/definitions/KalturaCurrencyFilter"
        },
        {
          "$ref": "#/definitions/KalturaDeviceBrandFilter"
        },
        {
          "$ref": "#/definitions/KalturaDeviceFamilyFilter"
        },
        {
          "$ref": "#/definitions/KalturaEventNotificationFilter"
        },
        {
          "$ref": "#/definitions/KalturaExportTaskFilter"
        },
        {
          "$ref": "#/definitions/KalturaExternalChannelProfileFilter"
        },
        {
          "$ref": "#/definitions/KalturaIotFilter"
        },
        {
          "$ref": "#/definitions/KalturaIotProfileFilter"
        },
        {
          "$ref": "#/definitions/KalturaLanguageFilter"
        },
        {
          "$ref": "#/definitions/KalturaMediaFileDynamicDataFilter"
        },
        {
          "$ref": "#/definitions/KalturaMetaFilter"
        },
        {
          "$ref": "#/definitions/KalturaParentalRuleFilter"
        },
        {
          "$ref": "#/definitions/KalturaBasePermissionFilter"
        },
        {
          "$ref": "#/definitions/KalturaPermissionItemFilter"
        },
        {
          "$ref": "#/definitions/KalturaPlaybackProfileFilter"
        },
        {
          "$ref": "#/definitions/KalturaSearchHistoryFilter"
        },
        {
          "$ref": "#/definitions/KalturaTvmRuleFilter"
        },
        {
          "$ref": "#/definitions/KalturaUserAssetRuleFilter"
        },
        {
          "$ref": "#/definitions/KalturaUserRoleFilter"
        },
        {
          "$ref": "#/definitions/KalturaEpgFilter"
        },
        {
          "$ref": "#/definitions/KalturaAggregationCountFilter"
        },
        {
          "$ref": "#/definitions/KalturaPriorityGroupFilter"
        },
        {
          "$ref": "#/definitions/KalturaHouseholdCouponCodeFilter"
        },
        {
          "$ref": "#/definitions/KalturaExternalRecordingResponseProfileFilter"
        },
        {
          "$ref": "#/definitions/KalturaAssetHistorySuppressFilter"
        },
        {
          "$ref": "#/definitions/KalturaAssetImagePerRatioFilter"
        },
        {
          "$ref": "#/definitions/KalturaAddDefaultIfEmptyResponseProfile"
        },
        {
          "$ref": "#/definitions/KalturaDeviceManufacturersReferenceDataFilter"
        },
        {
          "$ref": "#/definitions/KalturaSegmentationTypeFilter"
        },
        {
          "$ref": "#/definitions/KalturaSegmentValueFilter"
        },
        {
          "$ref": "#/definitions/KalturaProgramAssetGroupOfferIdInFilter"
        },
        {
          "$ref": "#/definitions/KalturaSubscriptionDependencySetFilter"
        },
        {
          "$ref": "#/definitions/KalturaAssetReminderFilter"
        },
        {
          "$ref": "#/definitions/KalturaSeasonsReminderFilter"
        },
        {
          "$ref": "#/definitions/KalturaSeriesReminderFilter"
        },
        {
          "$ref": "#/definitions/KalturaIngestProgramResultsByExternalIdsFilter"
        },
        {
          "$ref": "#/definitions/KalturaIngestProgramResultsByProgramIdsFilter"
        },
        {
          "$ref": "#/definitions/KalturaIngestProgramResultsByCombinedFieldsFilter"
        },
        {
          "$ref": "#/definitions/KalturaIngestProgramResultsByCompoundFilter"
        },
        {
          "$ref": "#/definitions/KalturaDynamicListIdInFilter"
        },
        {
          "$ref": "#/definitions/KalturaUdidDynamicListSearchFilter"
        },
        {
          "$ref": "#/definitions/KalturaAssetFilter"
        },
        {
          "$ref": "#/definitions/KalturaBundleFilter"
        },
        {
          "$ref": "#/definitions/KalturaChannelExternalFilter"
        },
        {
          "$ref": "#/definitions/KalturaRelatedExternalFilter"
        },
        {
          "$ref": "#/definitions/KalturaScheduledRecordingProgramFilter"
        },
        {
          "$ref": "#/definitions/KalturaSearchExternalFilter"
        },
        {
          "$ref": "#/definitions/KalturaChannelFilter"
        },
        {
          "$ref": "#/definitions/KalturaPersonalListSearchFilter"
        },
        {
          "$ref": "#/definitions/KalturaRelatedFilter"
        },
        {
          "$ref": "#/definitions/KalturaSearchAssetFilter"
        },
        {
          "$ref": "#/definitions/KalturaSearchAssetListFilter"
        },
        {
          "$ref": "#/definitions/KalturaDeviceReportFilter"
        },
        {
          "$ref": "#/definitions/KalturaExternalRecordingFilter"
        },
        {
          "$ref": "#/definitions/KalturaCloudRecordingFilter"
        },
        {
          "$ref": "#/definitions/KalturaCloudSeriesRecordingFilter"
        },
        {
          "$ref": "#/definitions/KalturaProgramAssetGroupOfferEntitlementFilter"
        },
        {
          "$ref": "#/definitions/KalturaAssetStructFilter"
        },
        {
          "$ref": "#/definitions/KalturaLinearAssetStructFilter"
        },
        {
          "$ref": "#/definitions/KalturaCategoryItemAncestorsFilter"
        },
        {
          "$ref": "#/definitions/KalturaCategoryItemByIdInFilter"
        },
        {
          "$ref": "#/definitions/KalturaCategoryItemSearchFilter"
        },
        {
          "$ref": "#/definitions/KalturaCategoryVersionFilterByTree"
        },
        {
          "$ref": "#/definitions/KalturaChannelsFilter"
        },
        {
          "$ref": "#/definitions/KalturaChannelSearchByKsqlFilter"
        },
        {
          "$ref": "#/definitions/KalturaCampaignSearchFilter"
        },
        {
          "$ref": "#/definitions/KalturaCampaignIdInFilter"
        },
        {
          "$ref": "#/definitions/KalturaBatchCampaignSearchFilter"
        },
        {
          "$ref": "#/definitions/KalturaCampaignSegmentFilter"
        },
        {
          "$ref": "#/definitions/KalturaTriggerCampaignSearchFilter"
        },
        {
          "$ref": "#/definitions/KalturaExternalChannelProfileByIdInFilter"
        },
        {
          "$ref": "#/definitions/KalturaPermissionFilter"
        },
        {
          "$ref": "#/definitions/KalturaPermissionByIdInFilter"
        },
        {
          "$ref": "#/definitions/KalturaPermissionItemByIdInFilter"
        },
        {
          "$ref": "#/definitions/KalturaPermissionItemByApiActionFilter"
        },
        {
          "$ref": "#/definitions/KalturaPermissionItemByParameterFilter"
        },
        {
          "$ref": "#/definitions/KalturaPermissionItemByArgumentFilter"
        },
        {
          "$ref": "#/definitions/KalturaRegionFilter"
        },
        {
          "$ref": "#/definitions/KalturaDefaultRegionFilter"
        }
      ],
      "description": "`abstract`",
      "discriminator": "objectType",
      "properties": {
        "objectType": {
          "enum": [
            "KalturaDeviceReferenceDataFilter",
            "KalturaFavoriteFilter",
            "KalturaOTTUserFilter",
            "KalturaPartnerFilter",
            "KalturaPasswordPolicyFilter",
            "KalturaUserSessionProfileFilter",
            "KalturaBulkUploadFilter",
            "KalturaSocialActionFilter",
            "KalturaSocialCommentFilter",
            "KalturaSocialFriendActivityFilter",
            "KalturaHouseholdSegmentFilter",
            "KalturaUserSegmentFilter",
            "KalturaAssetFilePpvFilter",
            "KalturaCollectionFilter",
            "KalturaDiscountDetailsFilter",
            "KalturaPpvFilter",
            "KalturaPreviewModuleFilter",
            "KalturaPriceDetailsFilter",
            "KalturaPricePlanFilter",
            "KalturaProgramAssetGroupOfferFilter",
            "KalturaSubscriptionSetFilter",
            "KalturaSubscriptionFilter",
            "KalturaUsageModuleFilter",
            "KalturaPartnerConfigurationFilter",
            "KalturaPersonalListFilter",
            "KalturaAnnouncementFilter",
            "KalturaEngagementFilter",
            "KalturaFollowTvSeriesFilter",
            "KalturaInboxMessageFilter",
            "KalturaPersonalFeedFilter",
            "KalturaSmsAdapterProfileFilter",
            "KalturaTopicFilter",
            "KalturaTopicNotificationFilter",
            "KalturaTopicNotificationMessageFilter",
            "KalturaIngestByCompoundFilter",
            "KalturaIngestByIdsFilter",
            "KalturaIngestEpgProgramResultFilter",
            "KalturaVodIngestAssetResultFilter",
            "KalturaDynamicListFilter",
            "KalturaHouseholdCouponFilter",
            "KalturaHouseholdDeviceFilter",
            "KalturaHouseholdFilter",
            "KalturaHouseholdUserFilter",
            "KalturaConfigurationGroupDeviceFilter",
            "KalturaConfigurationGroupTagFilter",
            "KalturaConfigurationsFilter",
            "KalturaRecordingFilter",
            "KalturaSeriesRecordingFilter",
            "KalturaEntitlementFilter",
            "KalturaProductPriceFilter",
            "KalturaRecordingContextFilter",
            "KalturaTransactionHistoryFilter",
            "KalturaAssetCommentFilter",
            "KalturaAssetHistoryFilter",
            "KalturaAssetStructMetaFilter",
            "KalturaBookmarkFilter",
            "KalturaCategoryItemFilter",
            "KalturaCategoryVersionFilter",
            "KalturaImageFilter",
            "KalturaImageTypeFilter",
            "KalturaLabelFilter",
            "KalturaMediaFileFilter",
            "KalturaPersonalAssetSelectionFilter",
            "KalturaStreamingDeviceFilter",
            "KalturaTagFilter",
            "KalturaSearchPriorityGroupFilter",
            "KalturaLineupRegionalChannelFilter",
            "KalturaListGroupsRepresentativesFilter",
            "KalturaPaymentMethodProfileFilter",
            "KalturaAssetPersonalMarkupSearchFilter",
            "KalturaAssetRuleFilter",
            "KalturaAssetUserRuleFilter",
            "KalturaCampaignFilter",
            "KalturaBusinessModuleRuleFilter",
            "KalturaCountryFilter",
            "KalturaCurrencyFilter",
            "KalturaDeviceBrandFilter",
            "KalturaDeviceFamilyFilter",
            "KalturaEventNotificationFilter",
            "KalturaExportTaskFilter",
            "KalturaExternalChannelProfileFilter",
            "KalturaIotFilter",
            "KalturaIotProfileFilter",
            "KalturaLanguageFilter",
            "KalturaMediaFileDynamicDataFilter",
            "KalturaMetaFilter",
            "KalturaParentalRuleFilter",
            "KalturaBasePermissionFilter",
            "KalturaPermissionItemFilter",
            "KalturaPlaybackProfileFilter",
            "KalturaSearchHistoryFilter",
            "KalturaTvmRuleFilter",
            "KalturaUserAssetRuleFilter",
            "KalturaUserRoleFilter",
            "KalturaEpgFilter",
            "KalturaAggregationCountFilter",
            "KalturaPriorityGroupFilter",
            "KalturaHouseholdCouponCodeFilter",
            "KalturaExternalRecordingResponseProfileFilter",
            "KalturaAssetHistorySuppressFilter",
            "KalturaAssetImagePerRatioFilter",
            "KalturaAddDefaultIfEmptyResponseProfile",
            "KalturaDeviceManufacturersReferenceDataFilter",
            "KalturaSegmentationTypeFilter",
            "KalturaSegmentValueFilter",
            "KalturaProgramAssetGroupOfferIdInFilter",
            "KalturaSubscriptionDependencySetFilter",
            "KalturaAssetReminderFilter",
            "KalturaSeasonsReminderFilter",
            "KalturaSeriesReminderFilter",
            "KalturaIngestProgramResultsByExternalIdsFilter",
            "KalturaIngestProgramResultsByProgramIdsFilter",
            "KalturaIngestProgramResultsByCombinedFieldsFilter",
            "KalturaIngestProgramResultsByCompoundFilter",
            "KalturaDynamicListIdInFilter",
            "KalturaUdidDynamicListSearchFilter",
            "KalturaAssetFilter",
            "KalturaBundleFilter",
            "KalturaChannelExternalFilter",
            "KalturaRelatedExternalFilter",
            "KalturaScheduledRecordingProgramFilter",
            "KalturaSearchExternalFilter",
            "KalturaChannelFilter",
            "KalturaPersonalListSearchFilter",
            "KalturaRelatedFilter",
            "KalturaSearchAssetFilter",
            "KalturaSearchAssetListFilter",
            "KalturaDeviceReportFilter",
            "KalturaExternalRecordingFilter",
            "KalturaCloudRecordingFilter",
            "KalturaCloudSeriesRecordingFilter",
            "KalturaProgramAssetGroupOfferEntitlementFilter",
            "KalturaAssetStructFilter",
            "KalturaLinearAssetStructFilter",
            "KalturaCategoryItemAncestorsFilter",
            "KalturaCategoryItemByIdInFilter",
            "KalturaCategoryItemSearchFilter",
            "KalturaCategoryVersionFilterByTree",
            "KalturaChannelsFilter",
            "KalturaChannelSearchByKsqlFilter",
            "KalturaCampaignSearchFilter",
            "KalturaCampaignIdInFilter",
            "KalturaBatchCampaignSearchFilter",
            "KalturaCampaignSegmentFilter",
            "KalturaTriggerCampaignSearchFilter",
            "KalturaExternalChannelProfileByIdInFilter",
            "KalturaPermissionFilter",
            "KalturaPermissionByIdInFilter",
            "KalturaPermissionItemByIdInFilter",
            "KalturaPermissionItemByApiActionFilter",
            "KalturaPermissionItemByParameterFilter",
            "KalturaPermissionItemByArgumentFilter",
            "KalturaRegionFilter",
            "KalturaDefaultRegionFilter"
          ],
          "type": "string"
        },
        "orderBy": {
          "description": "order by",
          "type": "string"
        }
      },
      "title": "KalturaFilter",
      "type": "object",
      "x-abstract": true
    },
    "KalturaFilterAction": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaAssetRuleAction"
        }
      ],
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaFilterAssetByKsqlAction"
        },
        {
          "$ref": "#/definitions/KalturaFilterFileByAudioCodecInDiscoveryAction"
        },
        {
          "$ref": "#/definitions/KalturaFilterFileByAudioCodecInPlaybackAction"
        },
        {
          "$ref": "#/definitions/KalturaFilterFileByDynamicDataInDiscoveryAction"
        },
        {
          "$ref": "#/definitions/KalturaFilterFileByDynamicDataInPlaybackAction"
        },
        {
          "$ref": "#/definitions/KalturaFilterFileByFileTypeIdInDiscoveryAction"
        },
        {
          "$ref": "#/definitions/KalturaFilterFileByFileTypeIdInPlaybackAction"
        },
        {
          "$ref": "#/definitions/KalturaFilterFileByFileTypeIdForAssetTypeInDiscoveryAction"
        },
        {
          "$ref": "#/definitions/KalturaFilterFileByFileTypeIdForAssetTypeInPlaybackAction"
        },
        {
          "$ref": "#/definitions/KalturaFilterFileByLabelInDiscoveryAction"
        },
        {
          "$ref": "#/definitions/KalturaFilterFileByLabelInPlaybackAction"
        },
        {
          "$ref": "#/definitions/KalturaFilterFileByQualityInDiscoveryAction"
        },
        {
          "$ref": "#/definitions/KalturaFilterFileByQualityInPlaybackAction"
        },
        {
          "$ref": "#/definitions/KalturaFilterFileByStreamerTypeInDiscovery"
        },
        {
          "$ref": "#/definitions/KalturaFilterFileByStreamerTypeInPlayback"
        },
        {
          "$ref": "#/definitions/KalturaFilterFileByVideoCodecInDiscoveryAction"
        },
        {
          "$ref": "#/definitions/KalturaFilterFileByVideoCodecInPlayback"
        }
      ],
      "description": "`abstract`",
      "discriminator": "objectType",
      "properties": {
        "objectType": {
          "enum": [
            "KalturaFilterAssetByKsqlAction",
            "KalturaFilterFileByAudioCodecInDiscoveryAction",
            "KalturaFilterFileByAudioCodecInPlaybackAction",
            "KalturaFilterFileByDynamicDataInDiscoveryAction",
            "KalturaFilterFileByDynamicDataInPlaybackAction",
            "KalturaFilterFileByFileTypeIdInDiscoveryAction",
            "KalturaFilterFileByFileTypeIdInPlaybackAction",
            "KalturaFilterFileByFileTypeIdForAssetTypeInDiscoveryAction",
            "KalturaFilterFileByFileTypeIdForAssetTypeInPlaybackAction",
            "KalturaFilterFileByLabelInDiscoveryAction",
            "KalturaFilterFileByLabelInPlaybackAction",
            "KalturaFilterFileByQualityInDiscoveryAction",
            "KalturaFilterFileByQualityInPlaybackAction",
            "KalturaFilterFileByStreamerTypeInDiscovery",
            "KalturaFilterFileByStreamerTypeInPlayback",
            "KalturaFilterFileByVideoCodecInDiscoveryAction",
            "KalturaFilterFileByVideoCodecInPlayback"
          ],
          "type": "string"
        },
        "preActionCondition": {
          "$ref": "#/definitions/KalturaBasePreActionCondition"
        }
      },
      "title": "KalturaFilterAction",
      "type": "object",
      "x-abstract": true
    },
    "KalturaFilterAssetByKsqlAction": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilterAction"
        }
      ],
      "properties": {
        "ksql": {
          "description": "ksql to filter assets by",
          "type": "string"
        }
      },
      "title": "KalturaFilterAssetByKsqlAction",
      "type": "object"
    },
    "KalturaFilterFileByAudioCodecAction": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilterAction"
        }
      ],
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaFilterFileByAudioCodecInDiscoveryAction"
        },
        {
          "$ref": "#/definitions/KalturaFilterFileByAudioCodecInPlaybackAction"
        }
      ],
      "description": "`abstract`\n\nFilterFile By AudioCodec",
      "discriminator": "objectType",
      "properties": {
        "audioCodecIn": {
          "description": "List of comma separated audioCodecs",
          "type": "string"
        },
        "objectType": {
          "enum": [
            "KalturaFilterFileByAudioCodecInDiscoveryAction",
            "KalturaFilterFileByAudioCodecInPlaybackAction"
          ],
          "type": "string"
        }
      },
      "title": "KalturaFilterFileByAudioCodecAction",
      "type": "object",
      "x-abstract": true
    },
    "KalturaFilterFileByAudioCodecInDiscoveryAction": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilterFileByAudioCodecAction"
        }
      ],
      "properties": {},
      "title": "KalturaFilterFileByAudioCodecInDiscoveryAction",
      "type": "object"
    },
    "KalturaFilterFileByAudioCodecInPlaybackAction": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilterFileByAudioCodecAction"
        }
      ],
      "properties": {},
      "title": "KalturaFilterFileByAudioCodecInPlaybackAction",
      "type": "object"
    },
    "KalturaFilterFileByDynamicDataAction": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilterAction"
        }
      ],
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaFilterFileByDynamicDataInDiscoveryAction"
        },
        {
          "$ref": "#/definitions/KalturaFilterFileByDynamicDataInPlaybackAction"
        }
      ],
      "description": "`abstract`\n\nFilter File By Dynamic Data",
      "discriminator": "objectType",
      "properties": {
        "key": {
          "description": "Key to be searched",
          "type": "string"
        },
        "objectType": {
          "enum": [
            "KalturaFilterFileByDynamicDataInDiscoveryAction",
            "KalturaFilterFileByDynamicDataInPlaybackAction"
          ],
          "type": "string"
        },
        "values": {
          "description": "Comma separated values to be searched",
          "type": "string"
        }
      },
      "title": "KalturaFilterFileByDynamicDataAction",
      "type": "object",
      "x-abstract": true
    },
    "KalturaFilterFileByDynamicDataInDiscoveryAction": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilterFileByDynamicDataAction"
        }
      ],
      "properties": {},
      "title": "KalturaFilterFileByDynamicDataInDiscoveryAction",
      "type": "object"
    },
    "KalturaFilterFileByDynamicDataInPlaybackAction": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilterFileByDynamicDataAction"
        }
      ],
      "properties": {},
      "title": "KalturaFilterFileByDynamicDataInPlaybackAction",
      "type": "object"
    },
    "KalturaFilterFileByFileTypeIdAction": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilterAction"
        }
      ],
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaFilterFileByFileTypeIdInDiscoveryAction"
        },
        {
          "$ref": "#/definitions/KalturaFilterFileByFileTypeIdInPlaybackAction"
        },
        {
          "$ref": "#/definitions/KalturaFilterFileByFileTypeIdForAssetTypeInDiscoveryAction"
        },
        {
          "$ref": "#/definitions/KalturaFilterFileByFileTypeIdForAssetTypeInPlaybackAction"
        }
      ],
      "description": "`abstract`\n\nFilterFile By FileType",
      "discriminator": "objectType",
      "properties": {
        "fileTypeIdIn": {
          "description": "List of comma separated fileTypesIds",
          "type": "string"
        },
        "objectType": {
          "enum": [
            "KalturaFilterFileByFileTypeIdInDiscoveryAction",
            "KalturaFilterFileByFileTypeIdInPlaybackAction",
            "KalturaFilterFileByFileTypeIdForAssetTypeInDiscoveryAction",
            "KalturaFilterFileByFileTypeIdForAssetTypeInPlaybackAction"
          ],
          "type": "string"
        }
      },
      "title": "KalturaFilterFileByFileTypeIdAction",
      "type": "object",
      "x-abstract": true
    },
    "KalturaFilterFileByFileTypeIdForAssetTypeAction": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilterFileByFileTypeIdAction"
        }
      ],
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaFilterFileByFileTypeIdForAssetTypeInDiscoveryAction"
        },
        {
          "$ref": "#/definitions/KalturaFilterFileByFileTypeIdForAssetTypeInPlaybackAction"
        }
      ],
      "description": "`abstract`\n\nFilter file By FileType For AssetType",
      "discriminator": "objectType",
      "properties": {
        "assetTypeIn": {
          "description": "List of comma separated assetTypes",
          "type": "string"
        },
        "objectType": {
          "enum": [
            "KalturaFilterFileByFileTypeIdForAssetTypeInDiscoveryAction",
            "KalturaFilterFileByFileTypeIdForAssetTypeInPlaybackAction"
          ],
          "type": "string"
        }
      },
      "title": "KalturaFilterFileByFileTypeIdForAssetTypeAction",
      "type": "object",
      "x-abstract": true
    },
    "KalturaFilterFileByFileTypeIdForAssetTypeInDiscoveryAction": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilterFileByFileTypeIdForAssetTypeAction"
        }
      ],
      "properties": {},
      "title": "KalturaFilterFileByFileTypeIdForAssetTypeInDiscoveryAction",
      "type": "object"
    },
    "KalturaFilterFileByFileTypeIdForAssetTypeInPlaybackAction": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilterFileByFileTypeIdForAssetTypeAction"
        }
      ],
      "properties": {},
      "title": "KalturaFilterFileByFileTypeIdForAssetTypeInPlaybackAction",
      "type": "object"
    },
    "KalturaFilterFileByFileTypeIdInDiscoveryAction": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilterFileByFileTypeIdAction"
        }
      ],
      "properties": {},
      "title": "KalturaFilterFileByFileTypeIdInDiscoveryAction",
      "type": "object"
    },
    "KalturaFilterFileByFileTypeIdInPlaybackAction": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilterFileByFileTypeIdAction"
        }
      ],
      "properties": {},
      "title": "KalturaFilterFileByFileTypeIdInPlaybackAction",
      "type": "object"
    },
    "KalturaFilterFileByLabelAction": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilterAction"
        }
      ],
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaFilterFileByLabelInDiscoveryAction"
        },
        {
          "$ref": "#/definitions/KalturaFilterFileByLabelInPlaybackAction"
        }
      ],
      "description": "`abstract`\n\nFilterFile By Label",
      "discriminator": "objectType",
      "properties": {
        "labelIn": {
          "description": "List of comma separated labels",
          "type": "string"
        },
        "objectType": {
          "enum": [
            "KalturaFilterFileByLabelInDiscoveryAction",
            "KalturaFilterFileByLabelInPlaybackAction"
          ],
          "type": "string"
        }
      },
      "title": "KalturaFilterFileByLabelAction",
      "type": "object",
      "x-abstract": true
    },
    "KalturaFilterFileByLabelInDiscoveryAction": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilterFileByLabelAction"
        }
      ],
      "properties": {},
      "title": "KalturaFilterFileByLabelInDiscoveryAction",
      "type": "object"
    },
    "KalturaFilterFileByLabelInPlaybackAction": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilterFileByLabelAction"
        }
      ],
      "properties": {},
      "title": "KalturaFilterFileByLabelInPlaybackAction",
      "type": "object"
    },
    "KalturaFilterFileByQualityAction": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilterAction"
        }
      ],
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaFilterFileByQualityInDiscoveryAction"
        },
        {
          "$ref": "#/definitions/KalturaFilterFileByQualityInPlaybackAction"
        }
      ],
      "description": "`abstract`\n\nFilter Files By their Quality",
      "discriminator": "objectType",
      "properties": {
        "objectType": {
          "enum": [
            "KalturaFilterFileByQualityInDiscoveryAction",
            "KalturaFilterFileByQualityInPlaybackAction"
          ],
          "type": "string"
        },
        "qualityIn": {
          "description": "List of comma separated qualities",
          "type": "string"
        }
      },
      "title": "KalturaFilterFileByQualityAction",
      "type": "object",
      "x-abstract": true
    },
    "KalturaFilterFileByQualityInDiscoveryAction": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilterFileByQualityAction"
        }
      ],
      "properties": {},
      "title": "KalturaFilterFileByQualityInDiscoveryAction",
      "type": "object"
    },
    "KalturaFilterFileByQualityInPlaybackAction": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilterFileByQualityAction"
        }
      ],
      "properties": {},
      "title": "KalturaFilterFileByQualityInPlaybackAction",
      "type": "object"
    },
    "KalturaFilterFileByStreamerTypeAction": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilterAction"
        }
      ],
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaFilterFileByStreamerTypeInDiscovery"
        },
        {
          "$ref": "#/definitions/KalturaFilterFileByStreamerTypeInPlayback"
        }
      ],
      "description": "`abstract`\n\nFilterFile By StreamerType",
      "discriminator": "objectType",
      "properties": {
        "objectType": {
          "enum": [
            "KalturaFilterFileByStreamerTypeInDiscovery",
            "KalturaFilterFileByStreamerTypeInPlayback"
          ],
          "type": "string"
        },
        "streamerTypeIn": {
          "description": "List of comma separated streamerTypes",
          "type": "string"
        }
      },
      "title": "KalturaFilterFileByStreamerTypeAction",
      "type": "object",
      "x-abstract": true
    },
    "KalturaFilterFileByStreamerTypeInDiscovery": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilterFileByStreamerTypeAction"
        }
      ],
      "properties": {},
      "title": "KalturaFilterFileByStreamerTypeInDiscovery",
      "type": "object"
    },
    "KalturaFilterFileByStreamerTypeInPlayback": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilterFileByStreamerTypeAction"
        }
      ],
      "properties": {},
      "title": "KalturaFilterFileByStreamerTypeInPlayback",
      "type": "object"
    },
    "KalturaFilterFileByVideoCodecAction": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilterAction"
        }
      ],
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaFilterFileByVideoCodecInDiscoveryAction"
        },
        {
          "$ref": "#/definitions/KalturaFilterFileByVideoCodecInPlayback"
        }
      ],
      "description": "`abstract`\n\nFilterFile By VideoCode",
      "discriminator": "objectType",
      "properties": {
        "objectType": {
          "enum": [
            "KalturaFilterFileByVideoCodecInDiscoveryAction",
            "KalturaFilterFileByVideoCodecInPlayback"
          ],
          "type": "string"
        },
        "videoCodecIn": {
          "description": "List of comma separated videoCodecs",
          "type": "string"
        }
      },
      "title": "KalturaFilterFileByVideoCodecAction",
      "type": "object",
      "x-abstract": true
    },
    "KalturaFilterFileByVideoCodecInDiscoveryAction": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilterFileByVideoCodecAction"
        }
      ],
      "properties": {},
      "title": "KalturaFilterFileByVideoCodecInDiscoveryAction",
      "type": "object"
    },
    "KalturaFilterFileByVideoCodecInPlayback": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilterFileByVideoCodecAction"
        }
      ],
      "properties": {},
      "title": "KalturaFilterFileByVideoCodecInPlayback",
      "type": "object"
    },
    "KalturaFilterPager": {
      "description": "The KalturaFilterPager object enables paging management to be applied upon service list actions",
      "properties": {
        "pageIndex": {
          "description": "The page number for which {pageSize} of objects should be retrieved",
          "type": "integer"
        },
        "pageSize": {
          "description": "The number of objects to retrieve. Possible range 1 ≤ value ≤ 50. If omitted or value &lt; 1 - will be set to 25. If a value &gt; 50 provided – will be set to 50",
          "type": "integer"
        }
      },
      "title": "KalturaFilterPager",
      "type": "object"
    },
    "KalturaFollowDataBase": {
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaFollowTvSeries"
        }
      ],
      "description": "`abstract`",
      "discriminator": "objectType",
      "properties": {
        "announcementId": {
          "description": "`readOnly`\n\nAnnouncement Id",
          "readOnly": true,
          "type": "integer"
        },
        "followPhrase": {
          "description": "`readOnly`\n\nFollow Phrase",
          "readOnly": true,
          "type": "string"
        },
        "objectType": {
          "enum": [
            "KalturaFollowTvSeries"
          ],
          "type": "string"
        },
        "status": {
          "description": "`readOnly`\n\nStatus",
          "readOnly": true,
          "type": "integer"
        },
        "timestamp": {
          "description": "`readOnly`\n\nTimestamp",
          "readOnly": true,
          "type": "integer"
        },
        "title": {
          "description": "`readOnly`\n\nTitle",
          "readOnly": true,
          "type": "string"
        }
      },
      "title": "KalturaFollowDataBase",
      "type": "object",
      "x-abstract": true
    },
    "KalturaFollowTvSeries": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFollowDataBase"
        }
      ],
      "properties": {
        "assetId": {
          "description": "Asset Id",
          "type": "integer"
        }
      },
      "title": "KalturaFollowTvSeries",
      "type": "object"
    },
    "KalturaFollowTvSeriesFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "properties": {
        "orderBy": {
          "enum": [
            "START_DATE_DESC",
            "START_DATE_ASC"
          ],
          "type": "string",
          "x-enumLabels": [
            "START_DATE_DESC",
            "START_DATE_ASC"
          ],
          "x-enumType": "KalturaFollowTvSeriesOrderBy"
        }
      },
      "title": "KalturaFollowTvSeriesFilter",
      "type": "object"
    },
    "KalturaFollowTvSeriesListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "List of message follow data.",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaFollowTvSeries"
          },
          "type": "array"
        }
      },
      "title": "KalturaFollowTvSeriesListResponse",
      "type": "object"
    },
    "KalturaGeneralPartnerConfig": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaPartnerConfiguration"
        }
      ],
      "description": "Partner General configuration",
      "properties": {
        "allowDeviceMobility": {
          "description": "Allow Device Mobility",
          "type": "boolean"
        },
        "dateFormat": {
          "description": "Default Date Format for Email notifications (default should be: DD Month YYYY)",
          "type": "string"
        },
        "defaultRegion": {
          "description": "Default Region",
          "type": "integer"
        },
        "deleteMediaPolicy": {
          "description": "Enum Type: `KalturaDeleteMediaPolicy`\n\nDelete media policy",
          "enum": [
            "Disable",
            "Delete"
          ],
          "type": "string",
          "x-enumLabels": [
            "DISABLE",
            "DELETE"
          ],
          "x-enumType": "KalturaDeleteMediaPolicy"
        },
        "downgradePolicy": {
          "description": "Enum Type: `KalturaDowngradePolicy`\n\nDowngrade policy",
          "enum": [
            "LIFO",
            "FIFO",
            "ACTIVE_DATE"
          ],
          "type": "string",
          "x-enumLabels": [
            "LIFO",
            "FIFO",
            "ACTIVE_DATE"
          ],
          "x-enumType": "KalturaDowngradePolicy"
        },
        "downgradePriorityFamilyIds": {
          "description": "Priority Family Ids to remove devices on downgrade (first in the list first to remove)",
          "type": "string"
        },
        "enableMultiLcns": {
          "description": "Enable multi LCNs per linear channel",
          "type": "boolean"
        },
        "enableRegionFiltering": {
          "description": "Enable Region Filtering",
          "type": "boolean"
        },
        "finishedPercentThreshold": {
          "description": "Finished PercentThreshold",
          "type": "integer"
        },
        "householdLimitationModule": {
          "description": "Household limitation&#160;module",
          "type": "integer"
        },
        "linearWatchHistoryThreshold": {
          "description": "minimum bookmark position of a linear channel to be included in a watch history",
          "type": "integer"
        },
        "mailSettings": {
          "description": "Mail settings",
          "type": "string"
        },
        "mainCurrency": {
          "description": "Main currency",
          "type": "integer"
        },
        "mainLanguage": {
          "description": "Main metadata language",
          "type": "integer"
        },
        "partnerName": {
          "description": "Partner name",
          "type": "string"
        },
        "rollingDeviceData": {
          "$ref": "#/definitions/KalturaRollingDeviceRemovalData"
        },
        "secondaryCurrencies": {
          "description": "A list of comma separated currency ids.",
          "type": "string"
        },
        "secondaryLanguages": {
          "description": "A list of comma separated languages ids.",
          "type": "string"
        },
        "suspensionProfileInheritanceType": {
          "description": "Enum Type: `KalturaSuspensionProfileInheritanceType`\n\nSuspension Profile Inheritance",
          "enum": [
            "ALWAYS",
            "NEVER",
            "DEFAULT"
          ],
          "type": "string",
          "x-enumLabels": [
            "ALWAYS",
            "NEVER",
            "DEFAULT"
          ],
          "x-enumType": "KalturaSuspensionProfileInheritanceType"
        }
      },
      "title": "KalturaGeneralPartnerConfig",
      "type": "object"
    },
    "KalturaGroupPermission": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaPermission"
        }
      ],
      "properties": {
        "group": {
          "description": "`readOnly`\n\nPermission identifier",
          "readOnly": true,
          "type": "string"
        }
      },
      "title": "KalturaGroupPermission",
      "type": "object"
    },
    "KalturaHeaderCondition": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaNotCondition"
        }
      ],
      "description": "Header condition",
      "properties": {
        "key": {
          "description": "Header key",
          "type": "string"
        },
        "value": {
          "description": "Header value",
          "type": "string"
        }
      },
      "title": "KalturaHeaderCondition",
      "type": "object"
    },
    "KalturaHomeNetwork": {
      "description": "Home network details",
      "properties": {
        "description": {
          "description": "Home network description",
          "type": "string"
        },
        "externalId": {
          "description": "`insertOnly`\n\nHome network identifier",
          "type": "string"
        },
        "isActive": {
          "description": "Is home network is active",
          "type": "boolean"
        },
        "name": {
          "description": "Home network name",
          "type": "string"
        }
      },
      "title": "KalturaHomeNetwork",
      "type": "object"
    },
    "KalturaHomeNetworkListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "Home networks",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaHomeNetwork"
          },
          "type": "array"
        }
      },
      "title": "KalturaHomeNetworkListResponse",
      "type": "object"
    },
    "KalturaHousehold": {
      "description": "Household details",
      "properties": {
        "concurrentLimit": {
          "description": "`readOnly`\n\nThe max number of concurrent streams in the household",
          "readOnly": true,
          "type": "integer"
        },
        "createDate": {
          "description": "`readOnly`\n\ncreate date",
          "readOnly": true,
          "type": "integer",
          "x-inputType": "datetime"
        },
        "description": {
          "description": "Household description",
          "type": "string"
        },
        "devicesLimit": {
          "description": "`readOnly`\n\nThe max number of the devices that can be added to the household",
          "readOnly": true,
          "type": "integer"
        },
        "externalId": {
          "description": "Household external identifier",
          "type": "string"
        },
        "frequencyNextDeviceAction": {
          "description": "`readOnly`\n\nThe next time a device is allowed to be removed from the household (epoch)",
          "readOnly": true,
          "type": "integer"
        },
        "frequencyNextUserAction": {
          "description": "`readOnly`\n\nThe next time a user is allowed to be removed from the household (epoch)",
          "readOnly": true,
          "type": "integer"
        },
        "householdLimitationsId": {
          "description": "`readOnly`\n\nHousehold limitation module identifier",
          "readOnly": true,
          "type": "integer"
        },
        "id": {
          "description": "`readOnly`\n\nHousehold identifier",
          "readOnly": true,
          "type": "integer"
        },
        "isFrequencyEnabled": {
          "description": "`readOnly`\n\nIs household frequency enabled",
          "readOnly": true,
          "type": "boolean"
        },
        "name": {
          "description": "Household name",
          "type": "string"
        },
        "regionId": {
          "description": "The households region identifier",
          "type": "integer"
        },
        "restriction": {
          "description": "`readOnly`\n\nEnum Type: `KalturaHouseholdRestriction`\n\nHousehold restriction",
          "enum": [
            "not_restricted",
            "user_master_restricted",
            "device_master_restricted",
            "device_user_master_restricted"
          ],
          "readOnly": true,
          "type": "string",
          "x-enumLabels": [
            "NOT_RESTRICTED",
            "USER_MASTER_RESTRICTED",
            "DEVICE_MASTER_RESTRICTED",
            "DEVICE_USER_MASTER_RESTRICTED"
          ],
          "x-enumType": "KalturaHouseholdRestriction"
        },
        "roleId": {
          "description": "`readOnly`\n\nsuspended roleId",
          "readOnly": true,
          "type": "integer"
        },
        "state": {
          "description": "`readOnly`\n\nEnum Type: `KalturaHouseholdState`\n\nHousehold state",
          "enum": [
            "ok",
            "created_without_npvr_account",
            "suspended",
            "no_users_in_household",
            "pending"
          ],
          "readOnly": true,
          "type": "string",
          "x-enumLabels": [
            "OK",
            "CREATED_WITHOUT_NPVR_ACCOUNT",
            "SUSPENDED",
            "NO_USERS_IN_HOUSEHOLD",
            "PENDING"
          ],
          "x-enumType": "KalturaHouseholdState"
        },
        "updateDate": {
          "description": "`readOnly`\n\nupdate date",
          "readOnly": true,
          "type": "integer",
          "x-inputType": "datetime"
        },
        "usersLimit": {
          "description": "`readOnly`\n\nThe max number of the users that can be added to the household",
          "readOnly": true,
          "type": "integer"
        }
      },
      "title": "KalturaHousehold",
      "type": "object"
    },
    "KalturaHouseholdCoupon": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaOTTObjectSupportNullable"
        }
      ],
      "description": "Household Coupon details",
      "properties": {
        "code": {
          "description": "Coupon code",
          "type": "string"
        },
        "lastUsageDate": {
          "description": "Last Usage Date",
          "type": "integer",
          "x-inputType": "datetime"
        }
      },
      "title": "KalturaHouseholdCoupon",
      "type": "object"
    },
    "KalturaHouseholdCouponCodeFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaRelatedObjectFilter"
        }
      ],
      "description": "Kaltura Houseold CouponCode Filter",
      "properties": {},
      "title": "KalturaHouseholdCouponCodeFilter",
      "type": "object"
    },
    "KalturaHouseholdCouponFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "properties": {
        "businessModuleIdEqual": {
          "description": "Indicates which household coupons list to return by their business module ID.",
          "type": "integer"
        },
        "businessModuleTypeEqual": {
          "description": "Enum Type: `KalturaTransactionType`\n\nIndicates which household coupons list to return by their business module type.",
          "enum": [
            "ppv",
            "subscription",
            "collection",
            "programAssetGroupOffer"
          ],
          "type": "string",
          "x-enumLabels": [
            "PPV",
            "SUBSCRIPTION",
            "COLLECTION",
            "PROGRAMASSETGROUPOFFER"
          ],
          "x-enumType": "KalturaTransactionType"
        },
        "couponCode": {
          "description": "Allow clients to inquiry if a specific coupon is part of an HH’s wallet or not",
          "type": "string"
        },
        "orderBy": {
          "enum": [
            "NONE"
          ],
          "type": "string",
          "x-enumLabels": [
            "NONE"
          ],
          "x-enumType": "KalturaHouseholdCouponOrderBy"
        },
        "status": {
          "description": "Enum Type: `KalturaCouponStatus`\n\nAllow clients to filter out coupons which are valid/invalid",
          "enum": [
            "VALID",
            "NOT_EXISTS",
            "ALREADY_USED",
            "EXPIRED",
            "INACTIVE"
          ],
          "type": "string",
          "x-enumLabels": [
            "VALID",
            "NOT_EXISTS",
            "ALREADY_USED",
            "EXPIRED",
            "INACTIVE"
          ],
          "x-enumType": "KalturaCouponStatus"
        }
      },
      "title": "KalturaHouseholdCouponFilter",
      "type": "object"
    },
    "KalturaHouseholdCouponListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaHouseholdCoupon"
          },
          "type": "array"
        }
      },
      "title": "KalturaHouseholdCouponListResponse",
      "type": "object"
    },
    "KalturaHouseholdDevice": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaOTTObjectSupportNullable"
        }
      ],
      "description": "Device details",
      "properties": {
        "activatedOn": {
          "description": "Device activation date (epoch)",
          "type": "integer"
        },
        "brandId": {
          "description": "Device brand identifier",
          "type": "integer"
        },
        "deviceFamilyId": {
          "description": "`readOnly`\n\nDevice family id",
          "readOnly": true,
          "type": "integer"
        },
        "drm": {
          "$ref": "#/definitions/KalturaCustomDrmPlaybackPluginData"
        },
        "dynamicData": {
          "items": {
            "$ref": "#/definitions/KalturaStringValue"
          },
          "type": "array"
        },
        "externalId": {
          "description": "external Id",
          "type": "string"
        },
        "householdId": {
          "description": "Household identifier",
          "type": "integer"
        },
        "lastActivityTime": {
          "description": "`readOnly`\n\nLast Activity Time, read only",
          "readOnly": true,
          "type": "integer"
        },
        "macAddress": {
          "description": "mac address",
          "type": "string"
        },
        "manufacturer": {
          "description": "manufacturer",
          "type": "string"
        },
        "manufacturerId": {
          "description": "`readOnly`\n\nmanufacturer Id, read only",
          "readOnly": true,
          "type": "integer"
        },
        "model": {
          "description": "model",
          "type": "string"
        },
        "name": {
          "description": "Device name",
          "type": "string"
        },
        "status": {
          "description": "`readOnly`\n\nEnum Type: `KalturaDeviceStatus`\n\nDevice state",
          "enum": [
            "PENDING",
            "ACTIVATED",
            "NOT_ACTIVATED"
          ],
          "readOnly": true,
          "type": "string",
          "x-enumLabels": [
            "PENDING",
            "ACTIVATED",
            "NOT_ACTIVATED"
          ],
          "x-enumType": "KalturaDeviceStatus"
        },
        "udid": {
          "description": "`insertOnly`\n\nDevice UDID",
          "type": "string"
        }
      },
      "title": "KalturaHouseholdDevice",
      "type": "object"
    },
    "KalturaHouseholdDeviceFamilyLimitations": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaDeviceFamilyBase"
        }
      ],
      "description": "Device family limitations details",
      "properties": {
        "concurrentLimit": {
          "description": "Max number of streams allowed for this family",
          "type": "integer"
        },
        "deviceLimit": {
          "description": "Max number of devices allowed for this family",
          "type": "integer"
        },
        "frequency": {
          "description": "Allowed device change frequency code",
          "type": "integer"
        },
        "isDefaultConcurrentLimit": {
          "description": "`readOnly`\n\nIs the Max number of streams allowed for this family is default value or not",
          "readOnly": true,
          "type": "boolean"
        },
        "isDefaultDeviceLimit": {
          "description": "`readOnly`\n\nIs the Max number of devices allowed for this family is default value or not",
          "readOnly": true,
          "type": "boolean"
        }
      },
      "title": "KalturaHouseholdDeviceFamilyLimitations",
      "type": "object"
    },
    "KalturaHouseholdDeviceFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "properties": {
        "deviceFamilyIdIn": {
          "description": "Device family Ids",
          "type": "string"
        },
        "externalIdEqual": {
          "description": "External Id",
          "type": "string"
        },
        "householdIdEqual": {
          "description": "The identifier of the household",
          "type": "integer"
        },
        "orderBy": {
          "enum": [
            "NONE",
            "CREATED_DATE_ASC",
            "CREATED_DATE_DESC"
          ],
          "type": "string",
          "x-enumLabels": [
            "NONE",
            "CREATED_DATE_ASC",
            "CREATED_DATE_DESC"
          ],
          "x-enumType": "KalturaHouseholdDeviceOrderBy"
        }
      },
      "title": "KalturaHouseholdDeviceFilter",
      "type": "object"
    },
    "KalturaHouseholdDeviceListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaHouseholdDevice"
          },
          "type": "array"
        }
      },
      "title": "KalturaHouseholdDeviceListResponse",
      "type": "object"
    },
    "KalturaHouseholdFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "description": "Household details",
      "properties": {
        "externalIdEqual": {
          "description": "Household external identifier to search by",
          "type": "string"
        },
        "orderBy": {
          "enum": [
            "CREATE_DATE_DESC"
          ],
          "type": "string",
          "x-enumLabels": [
            "CREATE_DATE_DESC"
          ],
          "x-enumType": "KalturaHouseholdOrderBy"
        }
      },
      "title": "KalturaHouseholdFilter",
      "type": "object"
    },
    "KalturaHouseholdLimitations": {
      "description": "Household limitations details",
      "properties": {
        "associatedDeviceFamiliesIdsIn": {
          "description": "Associated Device Families ids",
          "type": "string"
        },
        "concurrentLimit": {
          "description": "Max number of streams allowed for the household",
          "type": "integer"
        },
        "description": {
          "description": "Allowed device change frequency description",
          "type": "string"
        },
        "deviceFamiliesLimitations": {
          "items": {
            "$ref": "#/definitions/KalturaHouseholdDeviceFamilyLimitations"
          },
          "type": "array"
        },
        "deviceFrequency": {
          "description": "Allowed device change frequency code",
          "type": "integer"
        },
        "deviceFrequencyDescription": {
          "description": "`readOnly`\n\nAllowed device change frequency description",
          "readOnly": true,
          "type": "string"
        },
        "deviceLimit": {
          "description": "Max number of devices allowed for the household",
          "type": "integer"
        },
        "id": {
          "description": "`readOnly`\n\nHousehold limitation module identifier",
          "readOnly": true,
          "type": "integer"
        },
        "name": {
          "description": "Household limitation module name",
          "type": "string"
        },
        "npvrQuotaInSeconds": {
          "description": "`readOnly`\n\nAllowed NPVR Quota in Seconds",
          "readOnly": true,
          "type": "integer"
        },
        "userFrequency": {
          "description": "Allowed user change frequency code",
          "type": "integer"
        },
        "userFrequencyDescription": {
          "description": "`readOnly`\n\nAllowed user change frequency description",
          "readOnly": true,
          "type": "string"
        },
        "usersLimit": {
          "description": "Max number of users allowed for the household",
          "type": "integer"
        }
      },
      "title": "KalturaHouseholdLimitations",
      "type": "object"
    },
    "KalturaHouseholdLimitationsListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "Household limitations details",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaHouseholdLimitations"
          },
          "type": "array"
        }
      },
      "title": "KalturaHouseholdLimitationsListResponse",
      "type": "object"
    },
    "KalturaHouseholdListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaHousehold"
          },
          "type": "array"
        }
      },
      "title": "KalturaHouseholdListResponse",
      "type": "object"
    },
    "KalturaHouseholdPaymentGateway": {
      "properties": {
        "id": {
          "description": "`readOnly`\n\npayment gateway id",
          "readOnly": true,
          "type": "integer"
        },
        "isDefault": {
          "description": "Payment gateway default (true/false)",
          "type": "boolean"
        },
        "name": {
          "description": "payment gateway name",
          "type": "string"
        },
        "selectedBy": {
          "description": "Enum Type: `KalturaHouseholdPaymentGatewaySelectedBy`\n\ndistinction payment gateway selected by account or household",
          "enum": [
            "none",
            "account",
            "household"
          ],
          "type": "string",
          "x-enumLabels": [
            "NONE",
            "ACCOUNT",
            "HOUSEHOLD"
          ],
          "x-enumType": "KalturaHouseholdPaymentGatewaySelectedBy"
        },
        "suspendSettings": {
          "$ref": "#/definitions/KalturaSuspendSettings"
        }
      },
      "title": "KalturaHouseholdPaymentGateway",
      "type": "object"
    },
    "KalturaHouseholdPaymentGatewayListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "List of household payment gateways.",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaHouseholdPaymentGateway"
          },
          "type": "array"
        }
      },
      "title": "KalturaHouseholdPaymentGatewayListResponse",
      "type": "object"
    },
    "KalturaHouseholdPaymentMethod": {
      "properties": {
        "details": {
          "description": "Description of the payment method details",
          "type": "string"
        },
        "externalId": {
          "description": "`insertOnly`\n\nExternal identifier for the household payment method",
          "type": "string"
        },
        "id": {
          "description": "`readOnly`\n\nHousehold payment method identifier (internal)",
          "readOnly": true,
          "type": "integer"
        },
        "isDefault": {
          "description": "`readOnly`\n\nindicates whether the payment method is set as default for the household",
          "readOnly": true,
          "type": "boolean"
        },
        "paymentGatewayId": {
          "description": "Payment-gateway identifier",
          "type": "integer"
        },
        "paymentMethodProfileId": {
          "description": "Payment method profile identifier",
          "type": "integer"
        }
      },
      "title": "KalturaHouseholdPaymentMethod",
      "type": "object"
    },
    "KalturaHouseholdPaymentMethodListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "List of household payment methods.",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaHouseholdPaymentMethod"
          },
          "type": "array"
        }
      },
      "title": "KalturaHouseholdPaymentMethodListResponse",
      "type": "object"
    },
    "KalturaHouseholdPremiumService": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaPremiumService"
        }
      ],
      "description": "Houshold premium service",
      "properties": {},
      "title": "KalturaHouseholdPremiumService",
      "type": "object"
    },
    "KalturaHouseholdPremiumServiceListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "Premium services list",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaHouseholdPremiumService"
          },
          "type": "array"
        }
      },
      "title": "KalturaHouseholdPremiumServiceListResponse",
      "type": "object"
    },
    "KalturaHouseholdQuota": {
      "properties": {
        "availableQuota": {
          "description": "`readOnly`\n\nAvailable quota that household has remaining",
          "readOnly": true,
          "type": "integer"
        },
        "householdId": {
          "description": "`readOnly`\n\nHousehold identifier",
          "readOnly": true,
          "type": "integer"
        },
        "totalQuota": {
          "description": "`readOnly`\n\nTotal quota that is allocated to the household",
          "readOnly": true,
          "type": "integer"
        }
      },
      "title": "KalturaHouseholdQuota",
      "type": "object"
    },
    "KalturaHouseholdSegment": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaOTTObjectSupportNullable"
        }
      ],
      "description": "Indicates a segment of a household",
      "properties": {
        "householdId": {
          "description": "Segment Id",
          "type": "integer"
        },
        "segmentId": {
          "description": "Segment Id",
          "type": "integer"
        }
      },
      "title": "KalturaHouseholdSegment",
      "type": "object"
    },
    "KalturaHouseholdSegmentFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "properties": {
        "kSql": {
          "description": "KSQL expression",
          "type": "string"
        },
        "orderBy": {
          "enum": [
            "NONE"
          ],
          "type": "string",
          "x-enumLabels": [
            "NONE"
          ],
          "x-enumType": "KalturaHouseholdSegmentOrderBy"
        }
      },
      "title": "KalturaHouseholdSegmentFilter",
      "type": "object"
    },
    "KalturaHouseholdSegmentListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaHouseholdSegment"
          },
          "type": "array"
        }
      },
      "title": "KalturaHouseholdSegmentListResponse",
      "type": "object"
    },
    "KalturaHouseholdUser": {
      "description": "Household user",
      "properties": {
        "householdId": {
          "description": "The identifier of the household",
          "type": "integer"
        },
        "householdMasterUsername": {
          "description": "`insertOnly`\n\nThe username of the household master for adding a user in status pending for the household master to approve",
          "type": "string"
        },
        "isDefault": {
          "description": "`readOnly`\n\nTrue if the user is a default user",
          "readOnly": true,
          "type": "boolean"
        },
        "isMaster": {
          "description": "True if the user added as master use",
          "type": "boolean"
        },
        "status": {
          "description": "`readOnly`\n\nEnum Type: `KalturaHouseholdUserStatus`\n\nThe status of the user in the household",
          "enum": [
            "OK",
            "PENDING"
          ],
          "readOnly": true,
          "type": "string",
          "x-enumLabels": [
            "OK",
            "PENDING"
          ],
          "x-enumType": "KalturaHouseholdUserStatus"
        },
        "userId": {
          "description": "The identifier of the user",
          "type": "string"
        }
      },
      "title": "KalturaHouseholdUser",
      "type": "object"
    },
    "KalturaHouseholdUserFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "properties": {
        "householdIdEqual": {
          "description": "The identifier of the household",
          "type": "integer"
        },
        "orderBy": {
          "enum": [
            "NONE"
          ],
          "type": "string",
          "x-enumLabels": [
            "NONE"
          ],
          "x-enumType": "KalturaHouseholdUserOrderBy"
        }
      },
      "title": "KalturaHouseholdUserFilter",
      "type": "object"
    },
    "KalturaHouseholdUserListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "Household users list",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaHouseholdUser"
          },
          "type": "array"
        }
      },
      "title": "KalturaHouseholdUserListResponse",
      "type": "object"
    },
    "KalturaImage": {
      "properties": {
        "contentId": {
          "description": "`readOnly`\n\nImage content ID",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "`readOnly`\n\nImage ID",
          "readOnly": true,
          "type": "integer"
        },
        "imageObjectId": {
          "description": "ID of the object the image is related to",
          "type": "integer"
        },
        "imageObjectType": {
          "description": "Enum Type: `KalturaImageObjectType`\n\nType of the object the image is related to",
          "enum": [
            "MEDIA_ASSET",
            "PROGRAM_ASSET",
            "CHANNEL",
            "CATEGORY",
            "PARTNER",
            "IMAGE_TYPE",
            "PROGRAM_GROUP"
          ],
          "type": "string",
          "x-enumLabels": [
            "MEDIA_ASSET",
            "PROGRAM_ASSET",
            "CHANNEL",
            "CATEGORY",
            "PARTNER",
            "IMAGE_TYPE",
            "PROGRAM_GROUP"
          ],
          "x-enumType": "KalturaImageObjectType"
        },
        "imageTypeId": {
          "description": "Image type ID",
          "type": "integer"
        },
        "imageTypeName": {
          "description": "Image type Name",
          "type": "string"
        },
        "isDefault": {
          "description": "`readOnly`\n\nSpecifies if the image is default for atleast one image type.",
          "readOnly": true,
          "type": "boolean"
        },
        "status": {
          "description": "`readOnly`\n\nEnum Type: `KalturaImageStatus`\n\nImage content status",
          "enum": [
            "PENDING",
            "READY",
            "FAILED"
          ],
          "readOnly": true,
          "type": "string",
          "x-enumLabels": [
            "PENDING",
            "READY",
            "FAILED"
          ],
          "x-enumType": "KalturaImageStatus"
        },
        "url": {
          "description": "`readOnly`\n\nImage URL",
          "readOnly": true,
          "type": "string"
        },
        "version": {
          "description": "`readOnly`\n\nImage version",
          "readOnly": true,
          "type": "string"
        }
      },
      "title": "KalturaImage",
      "type": "object"
    },
    "KalturaImageFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "properties": {
        "idIn": {
          "description": "IDs to filter by",
          "type": "string"
        },
        "imageObjectIdEqual": {
          "description": "ID of the object the is related to, to filter by",
          "type": "integer"
        },
        "imageObjectIdIn": {
          "description": "Comma separated imageObject ids list",
          "type": "string"
        },
        "imageObjectTypeEqual": {
          "description": "Enum Type: `KalturaImageObjectType`\n\nType of the object the image is related to, to filter by",
          "enum": [
            "MEDIA_ASSET",
            "PROGRAM_ASSET",
            "CHANNEL",
            "CATEGORY",
            "PARTNER",
            "IMAGE_TYPE",
            "PROGRAM_GROUP"
          ],
          "type": "string",
          "x-enumLabels": [
            "MEDIA_ASSET",
            "PROGRAM_ASSET",
            "CHANNEL",
            "CATEGORY",
            "PARTNER",
            "IMAGE_TYPE",
            "PROGRAM_GROUP"
          ],
          "x-enumType": "KalturaImageObjectType"
        },
        "isDefaultEqual": {
          "description": "Filter images that are default on at least on image type or not default at any",
          "type": "boolean"
        },
        "orderBy": {
          "enum": [
            "NONE"
          ],
          "type": "string",
          "x-enumLabels": [
            "NONE"
          ],
          "x-enumType": "KalturaImageOrderBy"
        }
      },
      "title": "KalturaImageFilter",
      "type": "object"
    },
    "KalturaImageListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaImage"
          },
          "type": "array"
        }
      },
      "title": "KalturaImageListResponse",
      "type": "object"
    },
    "KalturaImageType": {
      "description": "Image type",
      "properties": {
        "defaultImageId": {
          "description": "Default image ID",
          "type": "integer"
        },
        "helpText": {
          "description": "Help text",
          "type": "string"
        },
        "id": {
          "description": "`readOnly`\n\nImage type ID",
          "readOnly": true,
          "type": "integer"
        },
        "name": {
          "description": "Name",
          "type": "string"
        },
        "ratioId": {
          "description": "Ration ID",
          "type": "integer"
        },
        "systemName": {
          "description": "System name",
          "type": "string"
        }
      },
      "title": "KalturaImageType",
      "type": "object"
    },
    "KalturaImageTypeFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "properties": {
        "idIn": {
          "description": "IDs to filter by",
          "type": "string"
        },
        "orderBy": {
          "enum": [
            "NONE"
          ],
          "type": "string",
          "x-enumLabels": [
            "NONE"
          ],
          "x-enumType": "KalturaImageTypeOrderBy"
        },
        "ratioIdIn": {
          "description": "Ratio IDs to filter by",
          "type": "string"
        }
      },
      "title": "KalturaImageTypeFilter",
      "type": "object"
    },
    "KalturaImageTypeListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaImageType"
          },
          "type": "array"
        }
      },
      "title": "KalturaImageTypeListResponse",
      "type": "object"
    },
    "KalturaImmediateRecording": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaRecording"
        }
      ],
      "properties": {
        "absoluteEnd": {
          "description": "`readOnly`\n\nHousehold absolute end time of the immediate recording, empty if till end of program",
          "readOnly": true,
          "type": "integer"
        },
        "absoluteStart": {
          "description": "`readOnly`\n\nHousehold absolute start time of the immediate recording",
          "readOnly": true,
          "type": "integer"
        },
        "endPadding": {
          "description": "Household specific end padding of the recording",
          "type": "integer"
        }
      },
      "title": "KalturaImmediateRecording",
      "type": "object"
    },
    "KalturaInboxMessage": {
      "properties": {
        "campaignId": {
          "description": "`readOnly`\n\ncampaignId",
          "readOnly": true,
          "type": "integer"
        },
        "createdAt": {
          "description": "`readOnly`\n\nCreated at",
          "readOnly": true,
          "type": "integer"
        },
        "id": {
          "description": "`readOnly`\n\nmessage id",
          "readOnly": true,
          "type": "string"
        },
        "message": {
          "description": "message",
          "type": "string"
        },
        "status": {
          "description": "`readOnly`\n\nEnum Type: `KalturaInboxMessageStatus`\n\nStatus",
          "enum": [
            "Unread",
            "Read",
            "Deleted"
          ],
          "readOnly": true,
          "type": "string",
          "x-enumLabels": [
            "UNREAD",
            "READ",
            "DELETED"
          ],
          "x-enumType": "KalturaInboxMessageStatus"
        },
        "type": {
          "description": "Enum Type: `KalturaInboxMessageType`\n\nType",
          "enum": [
            "SystemAnnouncement",
            "Followed",
            "Engagement",
            "Interest",
            "Campaign"
          ],
          "type": "string",
          "x-enumLabels": [
            "SYSTEMANNOUNCEMENT",
            "FOLLOWED",
            "ENGAGEMENT",
            "INTEREST",
            "CAMPAIGN"
          ],
          "x-enumType": "KalturaInboxMessageType"
        },
        "url": {
          "description": "url",
          "type": "string"
        }
      },
      "title": "KalturaInboxMessage",
      "type": "object"
    },
    "KalturaInboxMessageFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "properties": {
        "createdAtGreaterThanOrEqual": {
          "description": "createdAtGreaterThanOrEqual",
          "type": "integer"
        },
        "createdAtLessThanOrEqual": {
          "description": "createdAtLessThanOrEqual",
          "type": "integer"
        },
        "orderBy": {
          "enum": [
            "NONE"
          ],
          "type": "string",
          "x-enumLabels": [
            "NONE"
          ],
          "x-enumType": "KalturaInboxMessageOrderBy"
        },
        "typeIn": {
          "description": "List of inbox message types to search within.",
          "type": "string"
        }
      },
      "title": "KalturaInboxMessageFilter",
      "type": "object"
    },
    "KalturaInboxMessageListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "List of inbox message.",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaInboxMessage"
          },
          "type": "array"
        }
      },
      "title": "KalturaInboxMessageListResponse",
      "type": "object"
    },
    "KalturaIngestByCompoundFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "properties": {
        "createdDateGreaterThan": {
          "description": "Ingest created date greater then this value. . Date and time represented as epoch.",
          "type": "integer"
        },
        "createdDateSmallerThan": {
          "description": "Ingest created date smaller than this value. Date and time represented as epoch.",
          "type": "integer"
        },
        "ingestNameContains": {
          "description": "A string that is included in the ingest file name",
          "type": "string"
        },
        "ingestStatusIn": {
          "description": "Comma seperated valid stutuses",
          "type": "string"
        },
        "ingestedByUserIdIn": {
          "description": "Comma seperated user ids",
          "type": "string"
        }
      },
      "title": "KalturaIngestByCompoundFilter",
      "type": "object"
    },
    "KalturaIngestByIdsFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "properties": {
        "ingestIdIn": {
          "description": "Comma seperated ingest profile ids",
          "type": "string"
        }
      },
      "title": "KalturaIngestByIdsFilter",
      "type": "object"
    },
    "KalturaIngestEpg": {
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaIngestEpg"
        },
        {
          "$ref": "#/definitions/KalturaIngestEpgDetails"
        }
      ],
      "discriminator": "objectType",
      "properties": {
        "completedDate": {
          "description": "The ingest job completed date and time. Date and time represented as epoch.",
          "type": "integer",
          "x-inputType": "datetime"
        },
        "createdDate": {
          "description": "The ingest job created date and time. Date and time represented as epoch.",
          "type": "integer",
          "x-inputType": "datetime"
        },
        "ingestFilenameExtension": {
          "description": "The ingested file name extention",
          "type": "string"
        },
        "ingestId": {
          "description": "`readOnly`\n\nUnique id of the ingest job in question",
          "readOnly": true,
          "type": "integer"
        },
        "ingestName": {
          "description": "The ingested file name without its extention",
          "type": "string"
        },
        "ingestProfileId": {
          "description": "The ingest profile id that of the ingest job.",
          "type": "integer"
        },
        "ingestedByUserId": {
          "description": "The user id of the addFromBulkUpload caller.",
          "type": "integer"
        },
        "objectType": {
          "enum": [
            "KalturaIngestEpg",
            "KalturaIngestEpgDetails"
          ],
          "type": "string"
        },
        "status": {
          "description": "Enum Type: `KalturaIngestStatus`\n\nThe ingest profile id that of the ingest job.",
          "enum": [
            "TOTAL_FAILURE",
            "PARTIAL_FAILURE",
            "WARNING",
            "IN_PROGRESS",
            "SUCCESS"
          ],
          "type": "string",
          "x-enumLabels": [
            "TOTAL_FAILURE",
            "PARTIAL_FAILURE",
            "WARNING",
            "IN_PROGRESS",
            "SUCCESS"
          ],
          "x-enumType": "KalturaIngestStatus"
        }
      },
      "title": "KalturaIngestEpg",
      "type": "object"
    },
    "KalturaIngestEpgDetails": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaIngestEpg"
        }
      ],
      "properties": {
        "aggregations": {
          "$ref": "#/definitions/KalturaIngestEpgDetailsAggregation"
        },
        "errors": {
          "items": {
            "$ref": "#/definitions/KalturaEpgIngestErrorMessage"
          },
          "type": "array"
        }
      },
      "title": "KalturaIngestEpgDetails",
      "type": "object"
    },
    "KalturaIngestEpgDetailsAggregation": {
      "properties": {
        "all": {
          "$ref": "#/definitions/KalturaAggregatedIngestInfo"
        },
        "dates": {
          "items": {
            "$ref": "#/definitions/KalturaDateAggregatedIngestInfo"
          },
          "type": "array"
        },
        "linearChannels": {
          "items": {
            "$ref": "#/definitions/KalturaChannelAggregatedIngestInfo"
          },
          "type": "array"
        }
      },
      "title": "KalturaIngestEpgDetailsAggregation",
      "type": "object"
    },
    "KalturaIngestEpgProgramResult": {
      "properties": {
        "endDate": {
          "description": "Program EPG end date. Date and time represented as epoch",
          "type": "integer",
          "x-inputType": "datetime"
        },
        "errors": {
          "items": {
            "$ref": "#/definitions/KalturaEpgIngestErrorMessage"
          },
          "type": "array"
        },
        "externalProgramId": {
          "description": "An external program id",
          "type": "string"
        },
        "indexInFile": {
          "description": "The index of the program in the ingested file",
          "type": "integer"
        },
        "linearChannelId": {
          "description": "The id of the linear channel asset that the program belongs to",
          "type": "integer"
        },
        "programId": {
          "description": "The unique ingested program id",
          "type": "integer"
        },
        "startDate": {
          "description": "Program EPG start date. Date and time represented as epoch",
          "type": "integer",
          "x-inputType": "datetime"
        },
        "status": {
          "description": "Enum Type: `KalturaIngestEpgProgramStatus`\n\nThe program status",
          "enum": [
            "FAILURE",
            "WARNING",
            "SUCCESS"
          ],
          "type": "string",
          "x-enumLabels": [
            "FAILURE",
            "WARNING",
            "SUCCESS"
          ],
          "x-enumType": "KalturaIngestEpgProgramStatus"
        },
        "warnings": {
          "items": {
            "$ref": "#/definitions/KalturaMessage"
          },
          "type": "array"
        }
      },
      "title": "KalturaIngestEpgProgramResult",
      "type": "object"
    },
    "KalturaIngestEpgProgramResultFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaIngestEpgProgramResultFilter"
        },
        {
          "$ref": "#/definitions/KalturaIngestProgramResultsByExternalIdsFilter"
        },
        {
          "$ref": "#/definitions/KalturaIngestProgramResultsByProgramIdsFilter"
        },
        {
          "$ref": "#/definitions/KalturaIngestProgramResultsByCombinedFieldsFilter"
        },
        {
          "$ref": "#/definitions/KalturaIngestProgramResultsByCompoundFilter"
        }
      ],
      "discriminator": "objectType",
      "properties": {
        "objectType": {
          "enum": [
            "KalturaIngestEpgProgramResultFilter",
            "KalturaIngestProgramResultsByExternalIdsFilter",
            "KalturaIngestProgramResultsByProgramIdsFilter",
            "KalturaIngestProgramResultsByCombinedFieldsFilter",
            "KalturaIngestProgramResultsByCompoundFilter"
          ],
          "type": "string"
        },
        "orderBy": {
          "enum": [
            "NONE",
            "EXTERNAL_PROGRAM_ID_DESC",
            "EXTERNAL_PROGRAM_ID_ASC",
            "LINEAR_CHANNEL_ID_DESC",
            "LINEAR_CHANNEL_ID_ASC",
            "INDEX_IN_FILE_DESC",
            "INDEX_IN_FILE_ASC",
            "START_DATE_DESC",
            "START_DATE_ASC",
            "SEVERITY_DESC",
            "SEVERITY_ASC"
          ],
          "type": "string",
          "x-enumLabels": [
            "NONE",
            "EXTERNAL_PROGRAM_ID_DESC",
            "EXTERNAL_PROGRAM_ID_ASC",
            "LINEAR_CHANNEL_ID_DESC",
            "LINEAR_CHANNEL_ID_ASC",
            "INDEX_IN_FILE_DESC",
            "INDEX_IN_FILE_ASC",
            "START_DATE_DESC",
            "START_DATE_ASC",
            "SEVERITY_DESC",
            "SEVERITY_ASC"
          ],
          "x-enumType": "KalturaIngestEpgProgramResultOrderBy"
        }
      },
      "title": "KalturaIngestEpgProgramResultFilter",
      "type": "object"
    },
    "KalturaIngestProfile": {
      "description": "Ingest profile",
      "properties": {
        "assetTypeId": {
          "description": "Type of assets that this profile suppose to ingest: 0 - EPG, 1 - MEDIA",
          "type": "integer"
        },
        "defaultAutoFillPolicy": {
          "description": "Enum Type: `KalturaIngestProfileAutofillPolicy`\n\nIngest profile default Auto-fill policy",
          "enum": [
            "REJECT",
            "AUTOFILL",
            "KEEP_HOLES"
          ],
          "type": "string",
          "x-enumLabels": [
            "REJECT",
            "AUTOFILL",
            "KEEP_HOLES"
          ],
          "x-enumType": "KalturaIngestProfileAutofillPolicy"
        },
        "defaultOverlapPolicy": {
          "description": "Enum Type: `KalturaIngestProfileOverlapPolicy`\n\nIngest profile default Overlap policy",
          "enum": [
            "REJECT",
            "CUT_SOURCE",
            "CUT_TARGET"
          ],
          "type": "string",
          "x-enumLabels": [
            "REJECT",
            "CUT_SOURCE",
            "CUT_TARGET"
          ],
          "x-enumType": "KalturaIngestProfileOverlapPolicy"
        },
        "externalId": {
          "description": "Ingest profile externalId",
          "type": "string"
        },
        "id": {
          "description": "`readOnly`\n\nIngest profile identifier",
          "readOnly": true,
          "type": "integer"
        },
        "name": {
          "description": "Ingest profile name",
          "type": "string"
        },
        "overlapChannels": {
          "description": "Ingest profile overlap channels",
          "type": "string"
        },
        "transformationAdapterSettings": {
          "items": {
            "$ref": "#/definitions/KalturaStringValue"
          },
          "type": "array"
        },
        "transformationAdapterSharedSecret": {
          "description": "Transformation Adapter shared secret",
          "type": "string"
        },
        "transformationAdapterUrl": {
          "description": "Transformation Adapter URL",
          "type": "string"
        }
      },
      "title": "KalturaIngestProfile",
      "type": "object"
    },
    "KalturaIngestProfileListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaIngestProfile"
          },
          "type": "array"
        }
      },
      "title": "KalturaIngestProfileListResponse",
      "type": "object"
    },
    "KalturaIngestProgramResultsByCombinedFieldsFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaIngestProgramResultsByRefineFilter"
        }
      ],
      "properties": {
        "combinedFieldsValue": {
          "description": "String value to substring search by ProgramID or ExternalProgramID or LinearChannelID.\r\n            Up to 20 ids are allowed.",
          "type": "string"
        }
      },
      "title": "KalturaIngestProgramResultsByCombinedFieldsFilter",
      "type": "object"
    },
    "KalturaIngestProgramResultsByCompoundFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaIngestProgramResultsByRefineFilter"
        }
      ],
      "properties": {
        "linearChannelIdIn": {
          "description": "Comma seperated channel id (the id of the linear channel asset that the program belongs to).\r\n            Up to 20 ids are allowed.",
          "type": "string"
        }
      },
      "title": "KalturaIngestProgramResultsByCompoundFilter",
      "type": "object"
    },
    "KalturaIngestProgramResultsByExternalIdsFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaIngestEpgProgramResultFilter"
        }
      ],
      "properties": {
        "externalProgramIdIn": {
          "description": "Comma seperated external program id.\r\n            Up to 20 ids are allowed.",
          "type": "string"
        }
      },
      "title": "KalturaIngestProgramResultsByExternalIdsFilter",
      "type": "object"
    },
    "KalturaIngestProgramResultsByProgramIdsFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaIngestEpgProgramResultFilter"
        }
      ],
      "properties": {
        "programIdIn": {
          "description": "Comma seperated program id (the unique ingested program id as it determined by Kaltura BE).\r\n            Up to 20 ids are allowed.",
          "type": "string"
        }
      },
      "title": "KalturaIngestProgramResultsByProgramIdsFilter",
      "type": "object"
    },
    "KalturaIngestProgramResultsByRefineFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaIngestEpgProgramResultFilter"
        }
      ],
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaIngestProgramResultsByCombinedFieldsFilter"
        },
        {
          "$ref": "#/definitions/KalturaIngestProgramResultsByCompoundFilter"
        }
      ],
      "description": "`abstract`",
      "discriminator": "objectType",
      "properties": {
        "ingestStatusIn": {
          "description": "Comma seperated valid statuses - only &#39;FAILURE&#39;, &#39;WARNING&#39; and &#39;SUCCESS&#39; are valid strings. No repetitions are allowed.",
          "type": "string"
        },
        "objectType": {
          "enum": [
            "KalturaIngestProgramResultsByCombinedFieldsFilter",
            "KalturaIngestProgramResultsByCompoundFilter"
          ],
          "type": "string"
        },
        "startDateGreaterThan": {
          "description": "Program EPG start date greater then this value. Date and time represented as epoch.",
          "type": "integer"
        },
        "startDateSmallerThan": {
          "description": "Program EPG start date smaller than this value. Date and time represented as epoch.",
          "type": "integer"
        }
      },
      "title": "KalturaIngestProgramResultsByRefineFilter",
      "type": "object",
      "x-abstract": true
    },
    "KalturaIngestStatusEpgConfiguration": {
      "properties": {
        "isSupported": {
          "description": "Defines whether partner in question enabled core ingest status service.",
          "type": "boolean"
        },
        "retainingPeriod": {
          "description": "Defines the time in seconds that the service retain information about ingest status.",
          "type": "integer"
        }
      },
      "title": "KalturaIngestStatusEpgConfiguration",
      "type": "object"
    },
    "KalturaIngestStatusEpgListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaIngestEpg"
          },
          "type": "array"
        }
      },
      "title": "KalturaIngestStatusEpgListResponse",
      "type": "object"
    },
    "KalturaIngestStatusEpgProgramResultListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaIngestEpgProgramResult"
          },
          "type": "array"
        }
      },
      "title": "KalturaIngestStatusEpgProgramResultListResponse",
      "type": "object"
    },
    "KalturaIngestStatusPartnerConfiguration": {
      "properties": {
        "epg": {
          "$ref": "#/definitions/KalturaIngestStatusEpgConfiguration"
        },
        "vod": {
          "$ref": "#/definitions/KalturaIngestStatusVodConfiguration"
        }
      },
      "title": "KalturaIngestStatusPartnerConfiguration",
      "type": "object"
    },
    "KalturaIngestStatusVodConfiguration": {
      "properties": {
        "isSupported": {
          "description": "Defines whether partner in question enabled core ingest status service.",
          "type": "boolean"
        },
        "retainingPeriod": {
          "description": "Defines the time in seconds that the service retain information about ingest status.",
          "type": "integer"
        }
      },
      "title": "KalturaIngestStatusVodConfiguration",
      "type": "object"
    },
    "KalturaIntegerValue": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaValue"
        }
      ],
      "description": "A string representation to return an array of ints",
      "properties": {
        "value": {
          "description": "Value",
          "type": "integer"
        }
      },
      "title": "KalturaIntegerValue",
      "type": "object"
    },
    "KalturaIntegerValueListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "Integer list wrapper",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaIntegerValue"
          },
          "type": "array"
        }
      },
      "title": "KalturaIntegerValueListResponse",
      "type": "object"
    },
    "KalturaIot": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaOTTObjectSupportNullable"
        }
      ],
      "description": "IOT DEVICE",
      "properties": {
        "accessKey": {
          "description": "accessKey",
          "type": "string"
        },
        "accessSecretKey": {
          "description": "accessSecretKey",
          "type": "string"
        },
        "endPoint": {
          "description": "EndPoint",
          "type": "string"
        },
        "extendedEndPoint": {
          "description": "ExtendedEndPoint",
          "type": "string"
        },
        "identityId": {
          "description": "IdentityId",
          "type": "string"
        },
        "identityPoolId": {
          "description": "IdentityPoolId",
          "type": "string"
        },
        "principal": {
          "description": "Principal",
          "type": "string"
        },
        "thingArn": {
          "description": "ThingArn",
          "type": "string"
        },
        "thingId": {
          "description": "ThingId",
          "type": "string"
        },
        "udid": {
          "description": "id",
          "type": "string"
        },
        "userPassword": {
          "description": "UserPassword",
          "type": "string"
        },
        "username": {
          "description": "Username",
          "type": "string"
        }
      },
      "title": "KalturaIot",
      "type": "object"
    },
    "KalturaIotClientConfiguration": {
      "description": "Iot client Configuration",
      "properties": {
        "appClientId": {
          "description": "appClientId",
          "type": "string"
        },
        "awsRegion": {
          "description": "AwsRegion",
          "type": "string"
        },
        "endPoint": {
          "description": "endPoint",
          "type": "string"
        },
        "identityPoolId": {
          "description": "IdentityPoolId",
          "type": "string"
        },
        "legacyEndPoint": {
          "description": "legacyEndPoint",
          "type": "string"
        },
        "message": {
          "description": "message",
          "type": "string"
        },
        "password": {
          "description": "password",
          "type": "string",
          "x-inputType": "password"
        },
        "status": {
          "description": "status",
          "type": "string"
        },
        "thingArn": {
          "description": "thingArn",
          "type": "string"
        },
        "thingId": {
          "description": "thingId",
          "type": "string"
        },
        "thingName": {
          "description": "thingName",
          "type": "string"
        },
        "topics": {
          "items": {
            "$ref": "#/definitions/KalturaKeyValue"
          },
          "type": "array"
        },
        "userPoolId": {
          "description": "UserPoolId",
          "type": "string"
        },
        "username": {
          "description": "username",
          "type": "string"
        }
      },
      "title": "KalturaIotClientConfiguration",
      "type": "object"
    },
    "KalturaIotFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "description": "Iot settings filter",
      "properties": {
        "orderBy": {
          "enum": [
            "NONE"
          ],
          "type": "string",
          "x-enumLabels": [
            "NONE"
          ],
          "x-enumType": "KalturaIotOrderBy"
        }
      },
      "title": "KalturaIotFilter",
      "type": "object"
    },
    "KalturaIotListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaIot"
          },
          "type": "array"
        }
      },
      "title": "KalturaIotListResponse",
      "type": "object"
    },
    "KalturaIotProfileAws": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaOTTObjectSupportNullable"
        }
      ],
      "description": "kalturaIotProfileAws",
      "properties": {
        "accessKeyId": {
          "description": "accessKeyId",
          "type": "string"
        },
        "clientId": {
          "description": "clientId",
          "type": "string"
        },
        "identityPoolId": {
          "description": "identityPoolId",
          "type": "string"
        },
        "iotEndPoint": {
          "description": "iotEndPoint",
          "type": "string"
        },
        "region": {
          "description": "region",
          "type": "string"
        },
        "secretAccessKey": {
          "description": "secretAccessKey",
          "type": "string"
        },
        "updateDate": {
          "description": "updateDate",
          "type": "integer",
          "x-inputType": "datetime"
        },
        "userPoolId": {
          "description": "userPoolId",
          "type": "string"
        }
      },
      "title": "KalturaIotProfileAws",
      "type": "object"
    },
    "KalturaIotProfileFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "description": "Iot settings filter",
      "properties": {
        "orderBy": {
          "enum": [
            "NONE"
          ],
          "type": "string",
          "x-enumLabels": [
            "NONE"
          ],
          "x-enumType": "KalturaIotProfileOrderBy"
        }
      },
      "title": "KalturaIotProfileFilter",
      "type": "object"
    },
    "KalturaIpRangeCondition": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaCondition"
        }
      ],
      "description": "IP range condition",
      "properties": {
        "fromIP": {
          "description": "From IP address range",
          "type": "string"
        },
        "toIP": {
          "description": "TO IP address range",
          "type": "string"
        }
      },
      "title": "KalturaIpRangeCondition",
      "type": "object"
    },
    "KalturaIpV6RangeCondition": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaCondition"
        }
      ],
      "description": "IP V6 range condition",
      "properties": {
        "fromIP": {
          "description": "From IP address range",
          "type": "string"
        },
        "toIP": {
          "description": "TO IP address range",
          "type": "string"
        }
      },
      "title": "KalturaIpV6RangeCondition",
      "type": "object"
    },
    "KalturaKeyValue": {
      "properties": {
        "key": {
          "description": "Key",
          "type": "string"
        },
        "value": {
          "description": "Value",
          "type": "string"
        }
      },
      "title": "KalturaKeyValue",
      "type": "object"
    },
    "KalturaKsqlSegmentAction": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBaseSegmentAction"
        }
      ],
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaSegmentBlockCancelSubscriptionAction"
        },
        {
          "$ref": "#/definitions/KalturaSegmentBlockPlaybackSubscriptionAction"
        },
        {
          "$ref": "#/definitions/KalturaSegmentBlockPurchaseSubscriptionAction"
        },
        {
          "$ref": "#/definitions/KalturaSegmentAssetFilterSegmentAction"
        },
        {
          "$ref": "#/definitions/KalturaSegmentAssetFilterSubscriptionAction"
        }
      ],
      "description": "`abstract`\n\nSegment action with ksql",
      "discriminator": "objectType",
      "properties": {
        "ksql": {
          "description": "KSQL",
          "type": "string"
        },
        "objectType": {
          "enum": [
            "KalturaSegmentBlockCancelSubscriptionAction",
            "KalturaSegmentBlockPlaybackSubscriptionAction",
            "KalturaSegmentBlockPurchaseSubscriptionAction",
            "KalturaSegmentAssetFilterSegmentAction",
            "KalturaSegmentAssetFilterSubscriptionAction"
          ],
          "type": "string"
        }
      },
      "title": "KalturaKsqlSegmentAction",
      "type": "object",
      "x-abstract": true
    },
    "KalturaLabel": {
      "properties": {
        "entityAttribute": {
          "description": "`insertOnly`\n\nEnum Type: `KalturaEntityAttribute`\n\nIdentifier of entity to which label belongs",
          "enum": [
            "MEDIA_FILE_LABELS"
          ],
          "type": "string",
          "x-enumLabels": [
            "MEDIA_FILE_LABELS"
          ],
          "x-enumType": "KalturaEntityAttribute"
        },
        "id": {
          "description": "`readOnly`\n\nLabel identifier",
          "readOnly": true,
          "type": "integer"
        },
        "value": {
          "description": "Label value. It must be unique in the context of entityAttribute",
          "type": "string"
        }
      },
      "title": "KalturaLabel",
      "type": "object"
    },
    "KalturaLabelFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "properties": {
        "entityAttributeEqual": {
          "description": "Enum Type: `KalturaEntityAttribute`\n\nType of entity that labels are associated with",
          "enum": [
            "MEDIA_FILE_LABELS"
          ],
          "type": "string",
          "x-enumLabels": [
            "MEDIA_FILE_LABELS"
          ],
          "x-enumType": "KalturaEntityAttribute"
        },
        "idIn": {
          "description": "Comma-separated identifiers of labels",
          "type": "string"
        },
        "labelEqual": {
          "description": "Filter the label with this value",
          "type": "string"
        },
        "labelStartsWith": {
          "description": "Filter labels which start with this value",
          "type": "string"
        },
        "orderBy": {
          "enum": [
            "NONE"
          ],
          "type": "string",
          "x-enumLabels": [
            "NONE"
          ],
          "x-enumType": "KalturaLabelOrderBy"
        }
      },
      "title": "KalturaLabelFilter",
      "type": "object"
    },
    "KalturaLabelListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaLabel"
          },
          "type": "array"
        }
      },
      "title": "KalturaLabelListResponse",
      "type": "object"
    },
    "KalturaLanguage": {
      "description": "Language details",
      "properties": {
        "code": {
          "description": "Language code",
          "type": "string"
        },
        "direction": {
          "description": "Language direction (LTR/RTL)",
          "type": "string"
        },
        "id": {
          "description": "Identifier",
          "type": "integer"
        },
        "isDefault": {
          "description": "Is the default language of the account",
          "type": "boolean"
        },
        "name": {
          "description": "Language name",
          "type": "string"
        },
        "systemName": {
          "description": "Language system name",
          "type": "string"
        }
      },
      "title": "KalturaLanguage",
      "type": "object"
    },
    "KalturaLanguageFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "description": "Language filter",
      "properties": {
        "codeIn": {
          "description": "Language codes",
          "type": "string"
        },
        "excludePartner": {
          "description": "Exclude partner",
          "type": "boolean"
        },
        "orderBy": {
          "enum": [
            "SYSTEM_NAME_ASC",
            "SYSTEM_NAME_DESC",
            "CODE_ASC",
            "CODE_DESC"
          ],
          "type": "string",
          "x-enumLabels": [
            "SYSTEM_NAME_ASC",
            "SYSTEM_NAME_DESC",
            "CODE_ASC",
            "CODE_DESC"
          ],
          "x-enumType": "KalturaLanguageOrderBy"
        }
      },
      "title": "KalturaLanguageFilter",
      "type": "object"
    },
    "KalturaLanguageListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaLanguage"
          },
          "type": "array"
        }
      },
      "title": "KalturaLanguageListResponse",
      "type": "object"
    },
    "KalturaLicensedUrl": {
      "properties": {
        "altUrl": {
          "description": "An alternate URL to use in case the main fails",
          "type": "string"
        },
        "mainUrl": {
          "description": "Main licensed URL",
          "type": "string"
        }
      },
      "title": "KalturaLicensedUrl",
      "type": "object"
    },
    "KalturaLicensedUrlBaseRequest": {
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaLicensedUrlBaseRequest"
        },
        {
          "$ref": "#/definitions/KalturaLicensedUrlMediaRequest"
        },
        {
          "$ref": "#/definitions/KalturaLicensedUrlRecordingRequest"
        },
        {
          "$ref": "#/definitions/KalturaLicensedUrlEpgRequest"
        }
      ],
      "discriminator": "objectType",
      "properties": {
        "assetId": {
          "description": "Asset identifier",
          "type": "string"
        },
        "objectType": {
          "enum": [
            "KalturaLicensedUrlBaseRequest",
            "KalturaLicensedUrlMediaRequest",
            "KalturaLicensedUrlRecordingRequest",
            "KalturaLicensedUrlEpgRequest"
          ],
          "type": "string"
        }
      },
      "title": "KalturaLicensedUrlBaseRequest",
      "type": "object"
    },
    "KalturaLicensedUrlEpgRequest": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaLicensedUrlMediaRequest"
        }
      ],
      "properties": {
        "startDate": {
          "description": "The start date of the stream (epoch)",
          "type": "integer",
          "x-inputType": "datetime"
        },
        "streamType": {
          "description": "Enum Type: `KalturaStreamType`\n\nThe stream type to get the URL for",
          "enum": [
            "catchup",
            "start_over",
            "trick_play"
          ],
          "type": "string",
          "x-enumLabels": [
            "CATCHUP",
            "START_OVER",
            "TRICK_PLAY"
          ],
          "x-enumType": "KalturaStreamType"
        }
      },
      "title": "KalturaLicensedUrlEpgRequest",
      "type": "object"
    },
    "KalturaLicensedUrlMediaRequest": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaLicensedUrlBaseRequest"
        }
      ],
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaLicensedUrlMediaRequest"
        },
        {
          "$ref": "#/definitions/KalturaLicensedUrlEpgRequest"
        }
      ],
      "discriminator": "objectType",
      "properties": {
        "baseUrl": {
          "description": "Base URL for the licensed URLs",
          "type": "string"
        },
        "contentId": {
          "description": "Identifier of the content to get the link for (file identifier)",
          "type": "integer"
        },
        "objectType": {
          "enum": [
            "KalturaLicensedUrlMediaRequest",
            "KalturaLicensedUrlEpgRequest"
          ],
          "type": "string"
        }
      },
      "title": "KalturaLicensedUrlMediaRequest",
      "type": "object"
    },
    "KalturaLicensedUrlRecordingRequest": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaLicensedUrlBaseRequest"
        }
      ],
      "properties": {
        "fileType": {
          "description": "The file type for the URL",
          "type": "string"
        }
      },
      "title": "KalturaLicensedUrlRecordingRequest",
      "type": "object"
    },
    "KalturaLinearAssetStructFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBaseAssetStructFilter"
        }
      ],
      "properties": {},
      "title": "KalturaLinearAssetStructFilter",
      "type": "object"
    },
    "KalturaLineupChannelAsset": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaLiveAsset"
        }
      ],
      "description": "A Lineup channel asset is KalturaLiveAsset in a context of specific region (includes LCN)",
      "properties": {
        "lcn": {
          "description": "Lineup channel number (LCN) - A logical linear channel number. This number is unique in the region context.",
          "type": "integer"
        }
      },
      "title": "KalturaLineupChannelAsset",
      "type": "object"
    },
    "KalturaLineupChannelAssetListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "properties": {
        "lineupExternalId": {
          "description": "Lineup External Id",
          "type": "string"
        },
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaLineupChannelAsset"
          },
          "type": "array"
        },
        "parentLineupExternalId": {
          "description": "Parent Lineup External Id",
          "type": "string"
        }
      },
      "title": "KalturaLineupChannelAssetListResponse",
      "type": "object"
    },
    "KalturaLineupNotificationSettings": {
      "properties": {
        "enabled": {
          "description": "if lineup notifications are enabled.",
          "type": "boolean"
        }
      },
      "title": "KalturaLineupNotificationSettings",
      "type": "object"
    },
    "KalturaLineupRegionalChannelFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "properties": {
        "kSql": {
          "description": "A valid KSQL statement - Only linear channels that satisfies the KSQL statement will be included in the results",
          "type": "string"
        },
        "lcnGreaterThanOrEqual": {
          "description": "Filter only LCNs that greater or equals to the provided number",
          "type": "integer"
        },
        "lcnLessThanOrEqual": {
          "description": "Filter only LCNs that less or equals to the provided number",
          "type": "integer"
        },
        "orderBy": {
          "enum": [
            "LCN_ASC",
            "LCN_DESC",
            "NAME_ASC",
            "NAME_DESC"
          ],
          "type": "string",
          "x-enumLabels": [
            "LCN_ASC",
            "LCN_DESC",
            "NAME_ASC",
            "NAME_DESC"
          ],
          "x-enumType": "KalturaLineupRegionalChannelOrderBy"
        },
        "parentRegionIncluded": {
          "description": "Should include lineup from parent region into response",
          "type": "boolean"
        },
        "regionIdEqual": {
          "description": "Region ID filter",
          "type": "integer"
        }
      },
      "title": "KalturaLineupRegionalChannelFilter",
      "type": "object"
    },
    "KalturaListGroupsRepresentativesFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "properties": {
        "kSql": {
          "description": "Search assets using dynamic criteria. Provided collection of nested expressions with key, comparison operators, value, and logical conjunction.",
          "type": "string"
        },
        "orderBy": {
          "enum": [
            "None"
          ],
          "type": "string",
          "x-enumLabels": [
            "NONE"
          ],
          "x-enumType": "KalturaListGroupsRepresentativesOrderBy"
        }
      },
      "title": "KalturaListGroupsRepresentativesFilter",
      "type": "object"
    },
    "KalturaListResponse": {
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        },
        {
          "$ref": "#/definitions/KalturaAnnouncementListResponse"
        },
        {
          "$ref": "#/definitions/KalturaDeviceReferenceDataListResponse"
        },
        {
          "$ref": "#/definitions/KalturaFavoriteListResponse"
        },
        {
          "$ref": "#/definitions/KalturaOTTUserListResponse"
        },
        {
          "$ref": "#/definitions/KalturaPartnerListResponse"
        },
        {
          "$ref": "#/definitions/KalturaPasswordPolicyListResponse"
        },
        {
          "$ref": "#/definitions/KalturaSSOAdapterProfileListResponse"
        },
        {
          "$ref": "#/definitions/KalturaUserInterestListResponse"
        },
        {
          "$ref": "#/definitions/KalturaUserSessionProfileListResponse"
        },
        {
          "$ref": "#/definitions/KalturaBulkUploadListResponse"
        },
        {
          "$ref": "#/definitions/KalturaSocialActionListResponse"
        },
        {
          "$ref": "#/definitions/KalturaSocialCommentListResponse"
        },
        {
          "$ref": "#/definitions/KalturaSocialFriendActivityListResponse"
        },
        {
          "$ref": "#/definitions/KalturaHouseholdSegmentListResponse"
        },
        {
          "$ref": "#/definitions/KalturaSegmentationTypeListResponse"
        },
        {
          "$ref": "#/definitions/KalturaUserSegmentListResponse"
        },
        {
          "$ref": "#/definitions/KalturaAssetFilePpvListResponse"
        },
        {
          "$ref": "#/definitions/KalturaCollectionListResponse"
        },
        {
          "$ref": "#/definitions/KalturaCouponListResponse"
        },
        {
          "$ref": "#/definitions/KalturaCouponsGroupListResponse"
        },
        {
          "$ref": "#/definitions/KalturaDiscountDetailsListResponse"
        },
        {
          "$ref": "#/definitions/KalturaPpvListResponse"
        },
        {
          "$ref": "#/definitions/KalturaPreviewModuleListResponse"
        },
        {
          "$ref": "#/definitions/KalturaPriceDetailsListResponse"
        },
        {
          "$ref": "#/definitions/KalturaPricePlanListResponse"
        },
        {
          "$ref": "#/definitions/KalturaProductPriceListResponse"
        },
        {
          "$ref": "#/definitions/KalturaProductsPriceListResponse"
        },
        {
          "$ref": "#/definitions/KalturaProgramAssetGroupOfferListResponse"
        },
        {
          "$ref": "#/definitions/KalturaSubscriptionListResponse"
        },
        {
          "$ref": "#/definitions/KalturaSubscriptionSetListResponse"
        },
        {
          "$ref": "#/definitions/KalturaUsageModuleListResponse"
        },
        {
          "$ref": "#/definitions/KalturaPartnerConfigurationListResponse"
        },
        {
          "$ref": "#/definitions/KalturaPersonalListListResponse"
        },
        {
          "$ref": "#/definitions/KalturaEngagementAdapterListResponse"
        },
        {
          "$ref": "#/definitions/KalturaEngagementListResponse"
        },
        {
          "$ref": "#/definitions/KalturaFollowTvSeriesListResponse"
        },
        {
          "$ref": "#/definitions/KalturaInboxMessageListResponse"
        },
        {
          "$ref": "#/definitions/KalturaPersonalFeedListResponse"
        },
        {
          "$ref": "#/definitions/KalturaReminderListResponse"
        },
        {
          "$ref": "#/definitions/KalturaSmsAdapterProfileListResponse"
        },
        {
          "$ref": "#/definitions/KalturaTopicListResponse"
        },
        {
          "$ref": "#/definitions/KalturaTopicNotificationListResponse"
        },
        {
          "$ref": "#/definitions/KalturaTopicNotificationMessageListResponse"
        },
        {
          "$ref": "#/definitions/KalturaIngestStatusEpgListResponse"
        },
        {
          "$ref": "#/definitions/KalturaIngestStatusEpgProgramResultListResponse"
        },
        {
          "$ref": "#/definitions/KalturaDurationListResponse"
        },
        {
          "$ref": "#/definitions/KalturaDynamicListListResponse"
        },
        {
          "$ref": "#/definitions/KalturaIntegerValueListResponse"
        },
        {
          "$ref": "#/definitions/KalturaReportListResponse"
        },
        {
          "$ref": "#/definitions/KalturaHomeNetworkListResponse"
        },
        {
          "$ref": "#/definitions/KalturaHouseholdCouponListResponse"
        },
        {
          "$ref": "#/definitions/KalturaHouseholdDeviceListResponse"
        },
        {
          "$ref": "#/definitions/KalturaHouseholdLimitationsListResponse"
        },
        {
          "$ref": "#/definitions/KalturaHouseholdListResponse"
        },
        {
          "$ref": "#/definitions/KalturaHouseholdUserListResponse"
        },
        {
          "$ref": "#/definitions/KalturaConfigurationGroupDeviceListResponse"
        },
        {
          "$ref": "#/definitions/KalturaConfigurationGroupListResponse"
        },
        {
          "$ref": "#/definitions/KalturaConfigurationGroupTagListResponse"
        },
        {
          "$ref": "#/definitions/KalturaConfigurationsListResponse"
        },
        {
          "$ref": "#/definitions/KalturaBillingTransactionListResponse"
        },
        {
          "$ref": "#/definitions/KalturaCDVRAdapterProfileListResponse"
        },
        {
          "$ref": "#/definitions/KalturaEntitlementListResponse"
        },
        {
          "$ref": "#/definitions/KalturaHouseholdPremiumServiceListResponse"
        },
        {
          "$ref": "#/definitions/KalturaRecordingListResponse"
        },
        {
          "$ref": "#/definitions/KalturaSeriesRecordingListResponse"
        },
        {
          "$ref": "#/definitions/KalturaAssetCommentListResponse"
        },
        {
          "$ref": "#/definitions/KalturaAssetCountListResponse"
        },
        {
          "$ref": "#/definitions/KalturaAssetHistoryListResponse"
        },
        {
          "$ref": "#/definitions/KalturaAssetListResponse"
        },
        {
          "$ref": "#/definitions/KalturaAssetStatisticsListResponse"
        },
        {
          "$ref": "#/definitions/KalturaAssetStructListResponse"
        },
        {
          "$ref": "#/definitions/KalturaAssetStructMetaListResponse"
        },
        {
          "$ref": "#/definitions/KalturaBookmarkListResponse"
        },
        {
          "$ref": "#/definitions/KalturaCategoryItemListResponse"
        },
        {
          "$ref": "#/definitions/KalturaCategoryVersionListResponse"
        },
        {
          "$ref": "#/definitions/KalturaChannelListResponse"
        },
        {
          "$ref": "#/definitions/KalturaImageListResponse"
        },
        {
          "$ref": "#/definitions/KalturaImageTypeListResponse"
        },
        {
          "$ref": "#/definitions/KalturaLabelListResponse"
        },
        {
          "$ref": "#/definitions/KalturaLineupChannelAssetListResponse"
        },
        {
          "$ref": "#/definitions/KalturaMediaFileDynamicDataListResponse"
        },
        {
          "$ref": "#/definitions/KalturaMediaFileListResponse"
        },
        {
          "$ref": "#/definitions/KalturaMediaFileTypeListResponse"
        },
        {
          "$ref": "#/definitions/KalturaRatioListResponse"
        },
        {
          "$ref": "#/definitions/KalturaStreamingDeviceListResponse"
        },
        {
          "$ref": "#/definitions/KalturaTagListResponse"
        },
        {
          "$ref": "#/definitions/KalturaSearchPriorityGroupListResponse"
        },
        {
          "$ref": "#/definitions/KalturaHouseholdPaymentGatewayListResponse"
        },
        {
          "$ref": "#/definitions/KalturaHouseholdPaymentMethodListResponse"
        },
        {
          "$ref": "#/definitions/KalturaPaymentGatewayProfileListResponse"
        },
        {
          "$ref": "#/definitions/KalturaPaymentMethodProfileListResponse"
        },
        {
          "$ref": "#/definitions/KalturaAssetPersonalMarkupListResponse"
        },
        {
          "$ref": "#/definitions/KalturaAssetRuleListResponse"
        },
        {
          "$ref": "#/definitions/KalturaAssetUserRuleListResponse"
        },
        {
          "$ref": "#/definitions/KalturaBusinessModuleRuleListResponse"
        },
        {
          "$ref": "#/definitions/KalturaCampaignListResponse"
        },
        {
          "$ref": "#/definitions/KalturaCDNAdapterProfileListResponse"
        },
        {
          "$ref": "#/definitions/KalturaCountryListResponse"
        },
        {
          "$ref": "#/definitions/KalturaCurrencyListResponse"
        },
        {
          "$ref": "#/definitions/KalturaDeviceBrandListResponse"
        },
        {
          "$ref": "#/definitions/KalturaDeviceFamilyListResponse"
        },
        {
          "$ref": "#/definitions/KalturaDrmProfileListResponse"
        },
        {
          "$ref": "#/definitions/KalturaEventNotificationListResponse"
        },
        {
          "$ref": "#/definitions/KalturaExportTaskListResponse"
        },
        {
          "$ref": "#/definitions/KalturaExternalChannelProfileListResponse"
        },
        {
          "$ref": "#/definitions/KalturaIngestProfileListResponse"
        },
        {
          "$ref": "#/definitions/KalturaIotListResponse"
        },
        {
          "$ref": "#/definitions/KalturaLanguageListResponse"
        },
        {
          "$ref": "#/definitions/KalturaMediaConcurrencyRuleListResponse"
        },
        {
          "$ref": "#/definitions/KalturaMetaListResponse"
        },
        {
          "$ref": "#/definitions/KalturaOSSAdapterProfileListResponse"
        },
        {
          "$ref": "#/definitions/KalturaParentalRuleListResponse"
        },
        {
          "$ref": "#/definitions/KalturaPermissionItemListResponse"
        },
        {
          "$ref": "#/definitions/KalturaPermissionListResponse"
        },
        {
          "$ref": "#/definitions/KalturaPlaybackProfileListResponse"
        },
        {
          "$ref": "#/definitions/KalturaRecommendationProfileListResponse"
        },
        {
          "$ref": "#/definitions/KalturaRegionListResponse"
        },
        {
          "$ref": "#/definitions/KalturaRegistrySettingsListResponse"
        },
        {
          "$ref": "#/definitions/KalturaSearchHistoryListResponse"
        },
        {
          "$ref": "#/definitions/KalturaTvmRuleListResponse"
        },
        {
          "$ref": "#/definitions/KalturaUserAssetRuleListResponse"
        },
        {
          "$ref": "#/definitions/KalturaUserRoleListResponse"
        },
        {
          "$ref": "#/definitions/KalturaEpgListResponse"
        }
      ],
      "discriminator": "objectType",
      "properties": {
        "objectType": {
          "enum": [
            "KalturaListResponse",
            "KalturaAnnouncementListResponse",
            "KalturaDeviceReferenceDataListResponse",
            "KalturaFavoriteListResponse",
            "KalturaOTTUserListResponse",
            "KalturaPartnerListResponse",
            "KalturaPasswordPolicyListResponse",
            "KalturaSSOAdapterProfileListResponse",
            "KalturaUserInterestListResponse",
            "KalturaUserSessionProfileListResponse",
            "KalturaBulkUploadListResponse",
            "KalturaSocialActionListResponse",
            "KalturaSocialCommentListResponse",
            "KalturaSocialFriendActivityListResponse",
            "KalturaHouseholdSegmentListResponse",
            "KalturaSegmentationTypeListResponse",
            "KalturaUserSegmentListResponse",
            "KalturaAssetFilePpvListResponse",
            "KalturaCollectionListResponse",
            "KalturaCouponListResponse",
            "KalturaCouponsGroupListResponse",
            "KalturaDiscountDetailsListResponse",
            "KalturaPpvListResponse",
            "KalturaPreviewModuleListResponse",
            "KalturaPriceDetailsListResponse",
            "KalturaPricePlanListResponse",
            "KalturaProductPriceListResponse",
            "KalturaProductsPriceListResponse",
            "KalturaProgramAssetGroupOfferListResponse",
            "KalturaSubscriptionListResponse",
            "KalturaSubscriptionSetListResponse",
            "KalturaUsageModuleListResponse",
            "KalturaPartnerConfigurationListResponse",
            "KalturaPersonalListListResponse",
            "KalturaEngagementAdapterListResponse",
            "KalturaEngagementListResponse",
            "KalturaFollowTvSeriesListResponse",
            "KalturaInboxMessageListResponse",
            "KalturaPersonalFeedListResponse",
            "KalturaReminderListResponse",
            "KalturaSmsAdapterProfileListResponse",
            "KalturaTopicListResponse",
            "KalturaTopicNotificationListResponse",
            "KalturaTopicNotificationMessageListResponse",
            "KalturaIngestStatusEpgListResponse",
            "KalturaIngestStatusEpgProgramResultListResponse",
            "KalturaDurationListResponse",
            "KalturaDynamicListListResponse",
            "KalturaIntegerValueListResponse",
            "KalturaReportListResponse",
            "KalturaHomeNetworkListResponse",
            "KalturaHouseholdCouponListResponse",
            "KalturaHouseholdDeviceListResponse",
            "KalturaHouseholdLimitationsListResponse",
            "KalturaHouseholdListResponse",
            "KalturaHouseholdUserListResponse",
            "KalturaConfigurationGroupDeviceListResponse",
            "KalturaConfigurationGroupListResponse",
            "KalturaConfigurationGroupTagListResponse",
            "KalturaConfigurationsListResponse",
            "KalturaBillingTransactionListResponse",
            "KalturaCDVRAdapterProfileListResponse",
            "KalturaEntitlementListResponse",
            "KalturaHouseholdPremiumServiceListResponse",
            "KalturaRecordingListResponse",
            "KalturaSeriesRecordingListResponse",
            "KalturaAssetCommentListResponse",
            "KalturaAssetCountListResponse",
            "KalturaAssetHistoryListResponse",
            "KalturaAssetListResponse",
            "KalturaAssetStatisticsListResponse",
            "KalturaAssetStructListResponse",
            "KalturaAssetStructMetaListResponse",
            "KalturaBookmarkListResponse",
            "KalturaCategoryItemListResponse",
            "KalturaCategoryVersionListResponse",
            "KalturaChannelListResponse",
            "KalturaImageListResponse",
            "KalturaImageTypeListResponse",
            "KalturaLabelListResponse",
            "KalturaLineupChannelAssetListResponse",
            "KalturaMediaFileDynamicDataListResponse",
            "KalturaMediaFileListResponse",
            "KalturaMediaFileTypeListResponse",
            "KalturaRatioListResponse",
            "KalturaStreamingDeviceListResponse",
            "KalturaTagListResponse",
            "KalturaSearchPriorityGroupListResponse",
            "KalturaHouseholdPaymentGatewayListResponse",
            "KalturaHouseholdPaymentMethodListResponse",
            "KalturaPaymentGatewayProfileListResponse",
            "KalturaPaymentMethodProfileListResponse",
            "KalturaAssetPersonalMarkupListResponse",
            "KalturaAssetRuleListResponse",
            "KalturaAssetUserRuleListResponse",
            "KalturaBusinessModuleRuleListResponse",
            "KalturaCampaignListResponse",
            "KalturaCDNAdapterProfileListResponse",
            "KalturaCountryListResponse",
            "KalturaCurrencyListResponse",
            "KalturaDeviceBrandListResponse",
            "KalturaDeviceFamilyListResponse",
            "KalturaDrmProfileListResponse",
            "KalturaEventNotificationListResponse",
            "KalturaExportTaskListResponse",
            "KalturaExternalChannelProfileListResponse",
            "KalturaIngestProfileListResponse",
            "KalturaIotListResponse",
            "KalturaLanguageListResponse",
            "KalturaMediaConcurrencyRuleListResponse",
            "KalturaMetaListResponse",
            "KalturaOSSAdapterProfileListResponse",
            "KalturaParentalRuleListResponse",
            "KalturaPermissionItemListResponse",
            "KalturaPermissionListResponse",
            "KalturaPlaybackProfileListResponse",
            "KalturaRecommendationProfileListResponse",
            "KalturaRegionListResponse",
            "KalturaRegistrySettingsListResponse",
            "KalturaSearchHistoryListResponse",
            "KalturaTvmRuleListResponse",
            "KalturaUserAssetRuleListResponse",
            "KalturaUserRoleListResponse",
            "KalturaEpgListResponse"
          ],
          "type": "string"
        },
        "totalCount": {
          "description": "Total items",
          "type": "integer"
        }
      },
      "title": "KalturaListResponse",
      "type": "object"
    },
    "KalturaLiveAsset": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaMediaAsset"
        }
      ],
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaLiveAsset"
        },
        {
          "$ref": "#/definitions/KalturaLineupChannelAsset"
        }
      ],
      "description": "Linear media asset info",
      "discriminator": "objectType",
      "properties": {
        "bufferCatchUpSetting": {
          "description": "buffer Catch-up, configuration only",
          "type": "integer"
        },
        "bufferTrickPlaySetting": {
          "description": "buffer Trick-play, configuration only",
          "type": "integer"
        },
        "catchUpBuffer": {
          "description": "`readOnly`\n\nsummed Catch-up buffer, the TimeShiftedTvPartnerSettings are also taken into consideration",
          "readOnly": true,
          "type": "integer"
        },
        "channelType": {
          "description": "Enum Type: `KalturaLinearChannelType`\n\nchannel type, possible values: UNKNOWN, DTT, OTT, DTT_AND_OTT",
          "enum": [
            "UNKNOWN",
            "DTT",
            "OTT",
            "DTT_AND_OTT",
            "VRM_EXPORT"
          ],
          "type": "string",
          "x-enumLabels": [
            "UNKNOWN",
            "DTT",
            "OTT",
            "DTT_AND_OTT",
            "VRM_EXPORT"
          ],
          "x-enumType": "KalturaLinearChannelType"
        },
        "enableCatchUp": {
          "description": "`readOnly`\n\nIs catch-up enabled for this asset\r\n            Please, note that value of this property is strictly connected with Catch Up setting on Partner level.\r\n            In order to enable Catch Up for KalturaLiveAsset, Partner Catch Up setting should be enabled.",
          "readOnly": true,
          "type": "boolean"
        },
        "enableCatchUpState": {
          "description": "Enum Type: `KalturaTimeShiftedTvState`\n\nEnable catch-up, configuration only",
          "enum": [
            "INHERITED",
            "ENABLED",
            "DISABLED"
          ],
          "type": "string",
          "x-enumLabels": [
            "INHERITED",
            "ENABLED",
            "DISABLED"
          ],
          "x-enumType": "KalturaTimeShiftedTvState"
        },
        "enableCdvr": {
          "description": "`readOnly`\n\nIs CDVR enabled for this asset\r\n            Please, note that value of this property is strictly connected with CDV-R setting on Partner level.\r\n            In order to enable CDV-R for KalturaLiveAsset, Partner CDV-R setting should be enabled.",
          "readOnly": true,
          "type": "boolean"
        },
        "enableCdvrState": {
          "description": "Enum Type: `KalturaTimeShiftedTvState`\n\nEnable CDVR, configuration only",
          "enum": [
            "INHERITED",
            "ENABLED",
            "DISABLED"
          ],
          "type": "string",
          "x-enumLabels": [
            "INHERITED",
            "ENABLED",
            "DISABLED"
          ],
          "x-enumType": "KalturaTimeShiftedTvState"
        },
        "enableRecordingPlaybackNonEntitledChannel": {
          "description": "`readOnly`\n\nIs recording playback for non entitled channel enabled for this asset",
          "readOnly": true,
          "type": "boolean"
        },
        "enableRecordingPlaybackNonEntitledChannelState": {
          "description": "Enum Type: `KalturaTimeShiftedTvState`\n\nEnable Recording playback for non entitled channel, configuration only",
          "enum": [
            "INHERITED",
            "ENABLED",
            "DISABLED"
          ],
          "type": "string",
          "x-enumLabels": [
            "INHERITED",
            "ENABLED",
            "DISABLED"
          ],
          "x-enumType": "KalturaTimeShiftedTvState"
        },
        "enableStartOver": {
          "description": "`readOnly`\n\nIs start over enabled for this asset\r\n            Please, note that value of this property is strictly connected with Start Over setting on Partner level.\r\n            In order to enable Start Over for KalturaLiveAsset, Partner Start Over setting should be enabled.",
          "readOnly": true,
          "type": "boolean"
        },
        "enableStartOverState": {
          "description": "Enum Type: `KalturaTimeShiftedTvState`\n\nEnable start over, configuration only",
          "enum": [
            "INHERITED",
            "ENABLED",
            "DISABLED"
          ],
          "type": "string",
          "x-enumLabels": [
            "INHERITED",
            "ENABLED",
            "DISABLED"
          ],
          "x-enumType": "KalturaTimeShiftedTvState"
        },
        "enableTrickPlay": {
          "description": "`readOnly`\n\nIs trick-play enabled for this asset\r\n            Please, note that value of this property is strictly connected with Trick Play setting on Partner level.\r\n            In order to enable Trick Play for KalturaLiveAsset, Partner Trick Play setting should be enabled.",
          "readOnly": true,
          "type": "boolean"
        },
        "enableTrickPlayState": {
          "description": "Enum Type: `KalturaTimeShiftedTvState`\n\nEnable trick-play, configuration only",
          "enum": [
            "INHERITED",
            "ENABLED",
            "DISABLED"
          ],
          "type": "string",
          "x-enumLabels": [
            "INHERITED",
            "ENABLED",
            "DISABLED"
          ],
          "x-enumType": "KalturaTimeShiftedTvState"
        },
        "externalCdvrId": {
          "description": "External identifier for the CDVR",
          "type": "string"
        },
        "externalEpgIngestId": {
          "description": "External identifier used when ingesting programs for this linear media asset",
          "type": "string"
        },
        "objectType": {
          "enum": [
            "KalturaLiveAsset",
            "KalturaLineupChannelAsset"
          ],
          "type": "string"
        },
        "paddingAfterProgramEnds": {
          "description": "Returns padding after program ends in seconds from a live asset if configured,\r\n            otherwise returns corresponding value from TimeShiftedTvPartnerSettings.",
          "type": "integer"
        },
        "paddingBeforeProgramStarts": {
          "description": "Returns padding before program starts in seconds from a live asset if configured,\r\n            otherwise returns corresponding value from TimeShiftedTvPartnerSettings.",
          "type": "integer"
        },
        "trickPlayBuffer": {
          "description": "`readOnly`\n\nsummed Trick-play buffer, the TimeShiftedTvPartnerSettings are also taken into consideration",
          "readOnly": true,
          "type": "integer"
        }
      },
      "title": "KalturaLiveAsset",
      "type": "object"
    },
    "KalturaLiveToVodFullConfiguration": {
      "properties": {
        "isL2vEnabled": {
          "description": "Enable/disable the feature globally. If disabled, then all linear assets are not enabled.",
          "type": "boolean"
        },
        "linearAssets": {
          "items": {
            "$ref": "#/definitions/KalturaLiveToVodLinearAssetConfiguration"
          },
          "type": "array"
        },
        "metadataClassifier": {
          "description": "The name (label) of the metadata field marking the program asset to be duplicated as a L2V asset.",
          "type": "string"
        },
        "retentionPeriodDays": {
          "description": "Number of days the L2V asset is retained in the system.",
          "type": "integer"
        }
      },
      "title": "KalturaLiveToVodFullConfiguration",
      "type": "object"
    },
    "KalturaLiveToVodInfoAsset": {
      "properties": {
        "crid": {
          "description": "Crid",
          "type": "string"
        },
        "epgChannelId": {
          "description": "EPG Channel Id",
          "type": "integer"
        },
        "epgId": {
          "description": "EPG Id",
          "type": "string"
        },
        "linearAssetId": {
          "description": "Linear Asset Id",
          "type": "integer"
        },
        "originalEndDate": {
          "description": "Original End Date",
          "type": "integer",
          "x-inputType": "datetime"
        },
        "originalStartDate": {
          "description": "Original Start Date",
          "type": "integer",
          "x-inputType": "datetime"
        },
        "paddingAfterProgramEnds": {
          "description": "Padding after program ends",
          "type": "integer"
        },
        "paddingBeforeProgramStarts": {
          "description": "Padding before program starts",
          "type": "integer"
        }
      },
      "title": "KalturaLiveToVodInfoAsset",
      "type": "object"
    },
    "KalturaLiveToVodLinearAssetConfiguration": {
      "description": "Configuration of isL2vEnabled and retentionPeriodDays per each channel, overriding the defaults set in the account&#39;s configuration.",
      "properties": {
        "isL2vEnabled": {
          "description": "Enable/disable the feature per linear channel. Considered only if the flag is enabled on the account level.",
          "type": "boolean"
        },
        "linearAssetId": {
          "description": "Linear asset&#39;s identifier.",
          "type": "integer"
        },
        "retentionPeriodDays": {
          "description": "Number of days the L2V asset is retained in the system.\r\n            Optional - if configured, overriding the account level value.",
          "type": "integer"
        }
      },
      "title": "KalturaLiveToVodLinearAssetConfiguration",
      "type": "object"
    },
    "KalturaLiveToVodPartnerConfiguration": {
      "properties": {
        "isL2vEnabled": {
          "description": "Enable/disable the feature globally. If disabled, then all linear assets are not enabled.",
          "type": "boolean"
        },
        "metadataClassifier": {
          "description": "The name (label) of the metadata field marking the program asset to be duplicated as a L2V asset.",
          "type": "string"
        },
        "retentionPeriodDays": {
          "description": "Number of days the L2V asset is retained in the system.",
          "type": "integer"
        }
      },
      "title": "KalturaLiveToVodPartnerConfiguration",
      "type": "object"
    },
    "KalturaLoginResponse": {
      "properties": {
        "loginSession": {
          "$ref": "#/definitions/KalturaLoginSession"
        },
        "user": {
          "$ref": "#/definitions/KalturaOTTUser"
        }
      },
      "title": "KalturaLoginResponse",
      "type": "object"
    },
    "KalturaLoginSession": {
      "description": "Login response",
      "properties": {
        "expiry": {
          "description": "Expiration",
          "type": "integer"
        },
        "ks": {
          "description": "Access token in a KS format",
          "type": "string"
        }
      },
      "title": "KalturaLoginSession",
      "type": "object"
    },
    "KalturaLongValue": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaValue"
        }
      ],
      "description": "A string representation to return an array of longs",
      "properties": {
        "value": {
          "description": "Value",
          "type": "integer"
        }
      },
      "title": "KalturaLongValue",
      "type": "object"
    },
    "KalturaMailDispatcher": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaDispatcher"
        }
      ],
      "properties": {
        "bodyTemplate": {
          "description": "Mail body template",
          "type": "string"
        },
        "subjectTemplate": {
          "description": "Mail subjsct template",
          "type": "string"
        }
      },
      "title": "KalturaMailDispatcher",
      "type": "object"
    },
    "KalturaManualChannel": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaChannel"
        }
      ],
      "properties": {
        "assets": {
          "items": {
            "$ref": "#/definitions/KalturaManualCollectionAsset"
          },
          "type": "array"
        },
        "mediaIds": {
          "description": "A list of comma separated media ids associated with this channel, according to the order of the medias in the channel.",
          "type": "string"
        }
      },
      "title": "KalturaManualChannel",
      "type": "object"
    },
    "KalturaManualCollectionAsset": {
      "properties": {
        "id": {
          "description": "Internal identifier of the asset",
          "type": "string"
        },
        "type": {
          "description": "Enum Type: `KalturaManualCollectionAssetType`\n\nThe type of the asset. Possible values: media, epg",
          "enum": [
            "media",
            "epg"
          ],
          "type": "string",
          "x-enumLabels": [
            "MEDIA",
            "EPG"
          ],
          "x-enumType": "KalturaManualCollectionAssetType"
        }
      },
      "title": "KalturaManualCollectionAsset",
      "type": "object"
    },
    "KalturaMediaAsset": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaAsset"
        }
      ],
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaMediaAsset"
        },
        {
          "$ref": "#/definitions/KalturaLiveAsset"
        },
        {
          "$ref": "#/definitions/KalturaLineupChannelAsset"
        }
      ],
      "description": "Media-asset info",
      "discriminator": "objectType",
      "properties": {
        "deviceRuleId": {
          "description": "Device rule identifier",
          "type": "integer"
        },
        "entryId": {
          "description": "Entry Identifier",
          "type": "string"
        },
        "externalIds": {
          "description": "External identifiers",
          "type": "string"
        },
        "geoBlockRuleId": {
          "description": "Geo block rule identifier",
          "type": "integer"
        },
        "inheritancePolicy": {
          "description": "Enum Type: `KalturaAssetInheritancePolicy`\n\nThe media asset inheritance policy",
          "enum": [
            "Enable",
            "Disable"
          ],
          "type": "string",
          "x-enumLabels": [
            "ENABLE",
            "DISABLE"
          ],
          "x-enumType": "KalturaAssetInheritancePolicy"
        },
        "liveToVod": {
          "$ref": "#/definitions/KalturaLiveToVodInfoAsset"
        },
        "objectType": {
          "enum": [
            "KalturaMediaAsset",
            "KalturaLiveAsset",
            "KalturaLineupChannelAsset"
          ],
          "type": "string"
        },
        "status": {
          "description": "The media asset status",
          "type": "boolean"
        }
      },
      "title": "KalturaMediaAsset",
      "type": "object"
    },
    "KalturaMediaConcurrencyRule": {
      "description": "Media concurrency rule",
      "properties": {
        "concurrencyLimitationType": {
          "description": "Enum Type: `KalturaConcurrencyLimitationType`\n\nConcurrency limitation type",
          "enum": [
            "Single",
            "Group"
          ],
          "type": "string",
          "x-enumLabels": [
            "SINGLE",
            "GROUP"
          ],
          "x-enumType": "KalturaConcurrencyLimitationType"
        },
        "id": {
          "description": "Media concurrency rule  identifier",
          "type": "string"
        },
        "limitation": {
          "description": "Limitation",
          "type": "integer"
        },
        "name": {
          "description": "Media concurrency rule  name",
          "type": "string"
        }
      },
      "title": "KalturaMediaConcurrencyRule",
      "type": "object"
    },
    "KalturaMediaConcurrencyRuleListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaMediaConcurrencyRule"
          },
          "type": "array"
        }
      },
      "title": "KalturaMediaConcurrencyRuleListResponse",
      "type": "object"
    },
    "KalturaMediaFile": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaAssetFile"
        }
      ],
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaMediaFile"
        },
        {
          "$ref": "#/definitions/KalturaPlaybackSource"
        },
        {
          "$ref": "#/definitions/KalturaDiscoveryMediaFile"
        }
      ],
      "description": "Media file details",
      "discriminator": "objectType",
      "properties": {
        "additionalData": {
          "description": "Additional Data",
          "type": "string"
        },
        "altExternalId": {
          "description": "Alternative external identifier for the media file",
          "type": "string"
        },
        "altStreamingCode": {
          "description": "Alternative streaming code",
          "type": "string"
        },
        "altUrl": {
          "description": "URL of the media file to be played",
          "type": "string"
        },
        "alternativeCdnAdapaterProfileId": {
          "description": "Alternative cdn adapter profile identifier",
          "type": "integer"
        },
        "assetId": {
          "description": "Unique identifier for the asset",
          "type": "integer"
        },
        "businessModuleDetails": {
          "$ref": "#/definitions/KalturaBusinessModuleDetails"
        },
        "catalogEndDate": {
          "description": "Catalog end date",
          "type": "integer",
          "x-inputType": "datetime"
        },
        "cdnAdapaterProfileId": {
          "description": "cdn adapter profile identifier",
          "type": "integer"
        },
        "duration": {
          "description": "Duration of the media file",
          "type": "integer"
        },
        "dynamicData": {
          "items": {
            "$ref": "#/definitions/KalturaStringValueArray"
          },
          "type": "array"
        },
        "endDate": {
          "description": "EndDate",
          "type": "integer",
          "x-inputType": "datetime"
        },
        "externalId": {
          "description": "External identifier for the media file",
          "type": "string"
        },
        "externalStoreId": {
          "description": "ExternalStoreId",
          "type": "string"
        },
        "fileSize": {
          "description": "File size",
          "type": "integer"
        },
        "id": {
          "description": "`readOnly`\n\nFile unique identifier",
          "readOnly": true,
          "type": "integer"
        },
        "isDefaultLanguage": {
          "description": "IsDefaultLanguage",
          "type": "boolean"
        },
        "labels": {
          "description": "Labels associated with the media file",
          "type": "string"
        },
        "language": {
          "description": "Language",
          "type": "string"
        },
        "objectType": {
          "enum": [
            "KalturaMediaFile",
            "KalturaPlaybackSource",
            "KalturaDiscoveryMediaFile"
          ],
          "type": "string"
        },
        "opl": {
          "description": "OPL",
          "type": "string"
        },
        "orderNum": {
          "description": "OrderNum",
          "type": "integer"
        },
        "outputProtecationLevel": {
          "description": "OutputProtecationLevel",
          "type": "string"
        },
        "startDate": {
          "description": "StartDate",
          "type": "integer",
          "x-inputType": "datetime"
        },
        "status": {
          "description": "The media file status",
          "type": "boolean"
        },
        "type": {
          "description": "`readOnly`\n\nDeprecated - Device types as defined in the system",
          "readOnly": true,
          "type": "string"
        },
        "typeId": {
          "description": "Device types identifier as defined in the system",
          "type": "integer"
        }
      },
      "title": "KalturaMediaFile",
      "type": "object"
    },
    "KalturaMediaFileDynamicData": {
      "properties": {
        "id": {
          "description": "An integer representing the identifier of the value.",
          "type": "integer"
        },
        "mediaFileTypeId": {
          "description": "An integer representing the the mediaFileType holding the keys for which the values should be stored.",
          "type": "integer"
        },
        "mediaFileTypeKeyName": {
          "description": "A string representing the key name within the mediaFileType that identifies the list corresponding\r\n            to that key name.",
          "type": "string"
        },
        "value": {
          "description": "Dynamic data value",
          "type": "string"
        }
      },
      "title": "KalturaMediaFileDynamicData",
      "type": "object"
    },
    "KalturaMediaFileDynamicDataFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "properties": {
        "idIn": {
          "description": "A comma-separated list of KalturaMediaFileDynamicData.Id to be searched.",
          "type": "string"
        },
        "mediaFileTypeId": {
          "description": "An integer representing the the mediaFileType holding the keys for which the values should be stored.",
          "type": "integer"
        },
        "mediaFileTypeKeyName": {
          "description": "A string representing the key name within the mediaFileType that identifies the list corresponding\r\n            to that key name.",
          "type": "string"
        },
        "orderBy": {
          "enum": [
            "NONE"
          ],
          "type": "string",
          "x-enumLabels": [
            "NONE"
          ],
          "x-enumType": "KalturaMediaFileDynamicDataOrderBy"
        },
        "valueEqual": {
          "description": "A string representing a specific value to be searched.",
          "type": "string"
        },
        "valueStartsWith": {
          "description": "A string representing the beginning of multiple (zero or more) matching values.",
          "type": "string"
        }
      },
      "title": "KalturaMediaFileDynamicDataFilter",
      "type": "object"
    },
    "KalturaMediaFileDynamicDataListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaMediaFileDynamicData"
          },
          "type": "array"
        }
      },
      "title": "KalturaMediaFileDynamicDataListResponse",
      "type": "object"
    },
    "KalturaMediaFileFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "properties": {
        "assetIdEqual": {
          "description": "Asset identifier to filter by",
          "type": "integer"
        },
        "idEqual": {
          "description": "Asset file identifier to filter by",
          "type": "integer"
        },
        "orderBy": {
          "enum": [
            "NONE"
          ],
          "type": "string",
          "x-enumLabels": [
            "NONE"
          ],
          "x-enumType": "KalturaMediaFileOrderBy"
        }
      },
      "title": "KalturaMediaFileFilter",
      "type": "object"
    },
    "KalturaMediaFileListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "Media-file list",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaMediaFile"
          },
          "type": "array"
        }
      },
      "title": "KalturaMediaFileListResponse",
      "type": "object"
    },
    "KalturaMediaFileType": {
      "description": "Media-file type",
      "properties": {
        "audioCodecs": {
          "description": "List of comma separated audio codecs",
          "type": "string"
        },
        "createDate": {
          "description": "`readOnly`\n\nSpecifies when was the type was created. Date and time represented as epoch.",
          "readOnly": true,
          "type": "integer",
          "x-inputType": "datetime"
        },
        "description": {
          "description": "Unique description",
          "type": "string"
        },
        "drmProfileId": {
          "description": "`insertOnly`\n\nDRM adapter-profile identifier, use -1 for uDRM, 0 for no DRM.",
          "type": "integer"
        },
        "dynamicDataKeys": {
          "description": "List of comma separated keys allowed to be used as KalturaMediaFile&#39;s dynamic data keys",
          "type": "string"
        },
        "id": {
          "description": "`readOnly`\n\nUnique identifier",
          "readOnly": true,
          "type": "integer"
        },
        "isTrailer": {
          "description": "`insertOnly`\n\nSpecifies whether playback as trailer is allowed",
          "type": "boolean"
        },
        "name": {
          "description": "Unique name",
          "type": "string"
        },
        "quality": {
          "description": "Enum Type: `KalturaMediaFileTypeQuality`\n\nMedia file type quality",
          "enum": [
            "ADAPTIVE",
            "SD",
            "HD_720",
            "HD_1080",
            "UHD_4K"
          ],
          "type": "string",
          "x-enumLabels": [
            "ADAPTIVE",
            "SD",
            "HD_720",
            "HD_1080",
            "UHD_4K"
          ],
          "x-enumType": "KalturaMediaFileTypeQuality"
        },
        "status": {
          "description": "Indicates if media-file type is active or disabled",
          "type": "boolean"
        },
        "streamerType": {
          "description": "`insertOnly`\n\nEnum Type: `KalturaMediaFileStreamerType`\n\nDefines playback streamer type",
          "enum": [
            "APPLE_HTTP",
            "MPEG_DASH",
            "URL",
            "SMOOTH_STREAMING",
            "MULTICAST",
            "NONE"
          ],
          "type": "string",
          "x-enumLabels": [
            "APPLE_HTTP",
            "MPEG_DASH",
            "URL",
            "SMOOTH_STREAMING",
            "MULTICAST",
            "NONE"
          ],
          "x-enumType": "KalturaMediaFileStreamerType"
        },
        "updateDate": {
          "description": "`readOnly`\n\nSpecifies when was the type last updated. Date and time represented as epoch.",
          "readOnly": true,
          "type": "integer",
          "x-inputType": "datetime"
        },
        "videoCodecs": {
          "description": "List of comma separated video codecs",
          "type": "string"
        }
      },
      "title": "KalturaMediaFileType",
      "type": "object"
    },
    "KalturaMediaFileTypeListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "Media-file types list",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaMediaFileType"
          },
          "type": "array"
        }
      },
      "title": "KalturaMediaFileTypeListResponse",
      "type": "object"
    },
    "KalturaMediaImage": {
      "description": "Image details",
      "properties": {
        "height": {
          "description": "Image height",
          "type": "integer"
        },
        "id": {
          "description": "`readOnly`\n\nImage ID",
          "readOnly": true,
          "type": "string"
        },
        "imageTypeId": {
          "description": "Image type identifier",
          "type": "integer"
        },
        "imageTypeName": {
          "description": "Image type Name",
          "type": "string"
        },
        "isDefault": {
          "description": "Determined whether image was taken from default configuration or not",
          "type": "boolean"
        },
        "ratio": {
          "description": "Image aspect ratio",
          "type": "string"
        },
        "url": {
          "description": "Image URL",
          "type": "string"
        },
        "version": {
          "description": "Image Version",
          "type": "integer"
        },
        "width": {
          "description": "Image width",
          "type": "integer"
        }
      },
      "title": "KalturaMediaImage",
      "type": "object"
    },
    "KalturaMessage": {
      "description": "Message",
      "properties": {
        "args": {
          "items": {
            "$ref": "#/definitions/KalturaStringValue"
          },
          "type": "array"
        },
        "code": {
          "description": "Massage code",
          "type": "integer"
        },
        "message": {
          "description": "Message details",
          "type": "string"
        }
      },
      "title": "KalturaMessage",
      "type": "object"
    },
    "KalturaMessageTemplate": {
      "properties": {
        "action": {
          "description": "an optional action",
          "type": "string"
        },
        "dateFormat": {
          "description": "Default date format for the date &amp; time entries used in the template",
          "type": "string"
        },
        "mailSubject": {
          "description": "Mail subject",
          "type": "string"
        },
        "mailTemplate": {
          "description": "Mail template name",
          "type": "string"
        },
        "message": {
          "description": "The message template with placeholders",
          "type": "string"
        },
        "messageType": {
          "description": "Enum Type: `KalturaMessageTemplateType`\n\nTemplate type. Possible values: Series, Reminder,Churn, SeriesReminder",
          "enum": [
            "Series",
            "Reminder",
            "Churn",
            "SeriesReminder",
            "InterestVod",
            "InterestEPG"
          ],
          "type": "string",
          "x-enumLabels": [
            "SERIES",
            "REMINDER",
            "CHURN",
            "SERIESREMINDER",
            "INTERESTVOD",
            "INTERESTEPG"
          ],
          "x-enumType": "KalturaMessageTemplateType"
        },
        "ratioId": {
          "description": "Ratio identifier",
          "type": "string"
        },
        "sound": {
          "description": "Sound file name to play upon message arrival to the device (if supported by target device)",
          "type": "string"
        },
        "url": {
          "description": "URL template for deep linking. Example - /app/location/{mediaId}",
          "type": "string"
        }
      },
      "title": "KalturaMessageTemplate",
      "type": "object"
    },
    "KalturaMeta": {
      "description": "Asset meta",
      "properties": {
        "createDate": {
          "description": "`readOnly`\n\nSpecifies when was the meta created. Date and time represented as epoch.",
          "readOnly": true,
          "type": "integer",
          "x-inputType": "datetime"
        },
        "dataType": {
          "description": "`insertOnly`\n\nEnum Type: `KalturaMetaDataType`\n\nMeta data type",
          "enum": [
            "STRING",
            "MULTILINGUAL_STRING",
            "NUMBER",
            "BOOLEAN",
            "DATE",
            "RELEATED_ENTITY"
          ],
          "type": "string",
          "x-enumLabels": [
            "STRING",
            "MULTILINGUAL_STRING",
            "NUMBER",
            "BOOLEAN",
            "DATE",
            "RELEATED_ENTITY"
          ],
          "x-enumType": "KalturaMetaDataType"
        },
        "dynamicData": {
          "items": {
            "$ref": "#/definitions/KalturaStringValue"
          },
          "type": "array"
        },
        "features": {
          "description": "List of supported features",
          "type": "string"
        },
        "helpText": {
          "description": "The help text of the meta to be displayed on the UI.",
          "type": "string"
        },
        "id": {
          "description": "`readOnly`\n\nMeta id",
          "readOnly": true,
          "type": "string"
        },
        "isProtected": {
          "description": "`insertOnly`\n\nIs the meta protected by the system",
          "type": "boolean"
        },
        "multilingualName": {
          "items": {
            "$ref": "#/definitions/KalturaTranslationToken"
          },
          "type": "array"
        },
        "multipleValue": {
          "description": "Does the meta contain multiple values",
          "type": "boolean"
        },
        "name": {
          "description": "`readOnly`\n\nMeta name for the partner",
          "readOnly": true,
          "type": "string"
        },
        "parentId": {
          "description": "Parent meta id",
          "type": "string"
        },
        "systemName": {
          "description": "`insertOnly`\n\nMeta system name for the partner",
          "type": "string"
        },
        "updateDate": {
          "description": "`readOnly`\n\nSpecifies when was the meta last updated. Date and time represented as epoch.",
          "readOnly": true,
          "type": "integer",
          "x-inputType": "datetime"
        }
      },
      "title": "KalturaMeta",
      "type": "object"
    },
    "KalturaMetaFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "description": "Meta filter",
      "properties": {
        "assetStructIdEqual": {
          "description": "Filter Metas that are contained in a specific asset struct",
          "type": "integer"
        },
        "dataTypeEqual": {
          "description": "Enum Type: `KalturaMetaDataType`\n\nMeta data type to filter by",
          "enum": [
            "STRING",
            "MULTILINGUAL_STRING",
            "NUMBER",
            "BOOLEAN",
            "DATE",
            "RELEATED_ENTITY"
          ],
          "type": "string",
          "x-enumLabels": [
            "STRING",
            "MULTILINGUAL_STRING",
            "NUMBER",
            "BOOLEAN",
            "DATE",
            "RELEATED_ENTITY"
          ],
          "x-enumType": "KalturaMetaDataType"
        },
        "idIn": {
          "description": "Comma separated identifiers",
          "type": "string"
        },
        "multipleValueEqual": {
          "description": "Filter metas by multipleValueEqual value",
          "type": "boolean"
        },
        "orderBy": {
          "enum": [
            "NAME_ASC",
            "NAME_DESC",
            "SYSTEM_NAME_ASC",
            "SYSTEM_NAME_DESC",
            "CREATE_DATE_ASC",
            "CREATE_DATE_DESC",
            "UPDATE_DATE_ASC",
            "UPDATE_DATE_DESC"
          ],
          "type": "string",
          "x-enumLabels": [
            "NAME_ASC",
            "NAME_DESC",
            "SYSTEM_NAME_ASC",
            "SYSTEM_NAME_DESC",
            "CREATE_DATE_ASC",
            "CREATE_DATE_DESC",
            "UPDATE_DATE_ASC",
            "UPDATE_DATE_DESC"
          ],
          "x-enumType": "KalturaMetaOrderBy"
        }
      },
      "title": "KalturaMetaFilter",
      "type": "object"
    },
    "KalturaMetaListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "Meta list response",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaMeta"
          },
          "type": "array"
        }
      },
      "title": "KalturaMetaListResponse",
      "type": "object"
    },
    "KalturaMonetizationCondition": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBaseSegmentCondition"
        }
      ],
      "description": "Defines a condition which is essentially a combination of several monetization-based actions, each has their own score multiplier",
      "properties": {
        "businessModuleIdIn": {
          "description": "Comma saperated list of business module IDs",
          "type": "string"
        },
        "currencyCode": {
          "description": "Which currency code should be taken into consideration",
          "type": "string"
        },
        "days": {
          "description": "How many days back should the actions be considered",
          "type": "integer"
        },
        "maxValue": {
          "description": "The maximum value to be met",
          "type": "integer"
        },
        "minValue": {
          "description": "The minimum value to be met",
          "type": "integer"
        },
        "operator": {
          "description": "Enum Type: `KalturaMathemticalOperatorType`\n\nMathermtical operator to calculate",
          "enum": [
            "count",
            "sum",
            "avg"
          ],
          "type": "string",
          "x-enumLabels": [
            "COUNT",
            "SUM",
            "AVG"
          ],
          "x-enumType": "KalturaMathemticalOperatorType"
        },
        "type": {
          "description": "Enum Type: `KalturaMonetizationType`\n\nPurchase type",
          "enum": [
            "ppv",
            "subscription",
            "boxset",
            "any",
            "ppv_live"
          ],
          "type": "string",
          "x-enumLabels": [
            "PPV",
            "SUBSCRIPTION",
            "BOXSET",
            "ANY",
            "PPV_LIVE"
          ],
          "x-enumType": "KalturaMonetizationType"
        }
      },
      "title": "KalturaMonetizationCondition",
      "type": "object"
    },
    "KalturaMonetizationSource": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaSegmentSource"
        }
      ],
      "description": "Monetization based source (purchases etc.)",
      "properties": {
        "days": {
          "description": "Days to consider when checking the users&#39; purchaes",
          "type": "integer"
        },
        "operator": {
          "description": "Enum Type: `KalturaMathemticalOperatorType`\n\nMathermtical operator to calculate",
          "enum": [
            "count",
            "sum",
            "avg"
          ],
          "type": "string",
          "x-enumLabels": [
            "COUNT",
            "SUM",
            "AVG"
          ],
          "x-enumType": "KalturaMathemticalOperatorType"
        },
        "type": {
          "description": "Enum Type: `KalturaMonetizationType`\n\nPurchase type",
          "enum": [
            "ppv",
            "subscription",
            "boxset",
            "any",
            "ppv_live"
          ],
          "type": "string",
          "x-enumLabels": [
            "PPV",
            "SUBSCRIPTION",
            "BOXSET",
            "ANY",
            "PPV_LIVE"
          ],
          "x-enumType": "KalturaMonetizationType"
        }
      },
      "title": "KalturaMonetizationSource",
      "type": "object"
    },
    "KalturaMultilingualString": {
      "description": "Translated string",
      "properties": {
        "values": {
          "items": {
            "$ref": "#/definitions/KalturaTranslationToken"
          },
          "type": "array"
        }
      },
      "title": "KalturaMultilingualString",
      "type": "object"
    },
    "KalturaMultilingualStringValue": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaValue"
        }
      ],
      "description": "Array of translated strings",
      "properties": {
        "multilingualValue": {
          "items": {
            "$ref": "#/definitions/KalturaTranslationToken"
          },
          "type": "array"
        },
        "value": {
          "description": "`readOnly`\n\nValue",
          "readOnly": true,
          "type": "string"
        }
      },
      "title": "KalturaMultilingualStringValue",
      "type": "object"
    },
    "KalturaMultilingualStringValueArray": {
      "description": "Array of translated strings",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaMultilingualStringValue"
          },
          "type": "array"
        }
      },
      "title": "KalturaMultilingualStringValueArray",
      "type": "object"
    },
    "KalturaNetworkActionStatus": {
      "properties": {
        "network": {
          "description": "Enum Type: `KalturaSocialNetwork`\n\nSocial network",
          "enum": [
            "facebook"
          ],
          "type": "string",
          "x-enumLabels": [
            "FACEBOOK"
          ],
          "x-enumType": "KalturaSocialNetwork"
        },
        "status": {
          "description": "Enum Type: `KalturaSocialStatus`\n\nStatus",
          "enum": [
            "error",
            "ok",
            "user_does_not_exist",
            "no_user_social_settings_found",
            "asset_already_liked",
            "not_allowed",
            "invalid_parameters",
            "no_facebook_action",
            "asset_already_rated",
            "asset_dose_not_exists",
            "invalid_platform_request",
            "invalid_access_token"
          ],
          "type": "string",
          "x-enumLabels": [
            "ERROR",
            "OK",
            "USER_DOES_NOT_EXIST",
            "NO_USER_SOCIAL_SETTINGS_FOUND",
            "ASSET_ALREADY_LIKED",
            "NOT_ALLOWED",
            "INVALID_PARAMETERS",
            "NO_FACEBOOK_ACTION",
            "ASSET_ALREADY_RATED",
            "ASSET_DOSE_NOT_EXISTS",
            "INVALID_PLATFORM_REQUEST",
            "INVALID_ACCESS_TOKEN"
          ],
          "x-enumType": "KalturaSocialStatus"
        }
      },
      "title": "KalturaNetworkActionStatus",
      "type": "object"
    },
    "KalturaNoShopPreActionCondition": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBasePreActionCondition"
        }
      ],
      "properties": {},
      "title": "KalturaNoShopPreActionCondition",
      "type": "object"
    },
    "KalturaNotCondition": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaCondition"
        }
      ],
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaCountryCondition"
        },
        {
          "$ref": "#/definitions/KalturaDateCondition"
        },
        {
          "$ref": "#/definitions/KalturaHeaderCondition"
        },
        {
          "$ref": "#/definitions/KalturaOrCondition"
        }
      ],
      "description": "`abstract`\n\nNot condition",
      "discriminator": "objectType",
      "properties": {
        "not": {
          "description": "Indicates whether to apply not on the other properties in the condition",
          "type": "boolean"
        },
        "objectType": {
          "enum": [
            "KalturaCountryCondition",
            "KalturaDateCondition",
            "KalturaHeaderCondition",
            "KalturaOrCondition"
          ],
          "type": "string"
        }
      },
      "title": "KalturaNotCondition",
      "type": "object",
      "x-abstract": true
    },
    "KalturaNotificationsPartnerSettings": {
      "properties": {
        "automaticIssueFollowNotification": {
          "description": "Automatic issue follow notification",
          "type": "boolean"
        },
        "churnMailSubject": {
          "description": "Churn mail subject",
          "type": "string"
        },
        "churnMailTemplateName": {
          "description": "Churn mail template name",
          "type": "string"
        },
        "epgNotification": {
          "$ref": "#/definitions/KalturaEpgNotificationSettings"
        },
        "inboxEnabled": {
          "description": "Inbox enabled",
          "type": "boolean"
        },
        "iotEnabled": {
          "description": "IOT capability is enabled for the account",
          "type": "boolean"
        },
        "lineupNotification": {
          "$ref": "#/definitions/KalturaLineupNotificationSettings"
        },
        "mailNotificationAdapterId": {
          "description": "Mail notification adapter identifier",
          "type": "integer"
        },
        "mailSenderName": {
          "description": "Mail sender name",
          "type": "string"
        },
        "messageTTLDays": {
          "description": "Message TTL in days",
          "type": "integer"
        },
        "pushAdapterUrl": {
          "description": "Push adapter URL",
          "type": "string"
        },
        "pushEndHour": {
          "description": "Window end time (UTC) for send automated push messages",
          "type": "integer"
        },
        "pushNotificationEnabled": {
          "description": "Push notification capability is enabled for the account",
          "type": "boolean"
        },
        "pushStartHour": {
          "description": "Window start time (UTC) for send automated push messages",
          "type": "integer"
        },
        "pushSystemAnnouncementsEnabled": {
          "description": "System announcement capability is enabled for the account",
          "type": "boolean"
        },
        "reminderEnabled": {
          "description": "Reminder enabled",
          "type": "boolean"
        },
        "reminderOffsetSec": {
          "description": "Offset time (UTC) in seconds for send reminder",
          "type": "integer"
        },
        "senderEmail": {
          "description": "Sender email",
          "type": "string"
        },
        "smsEnabled": {
          "description": "SMS capability is enabled for the account",
          "type": "boolean"
        },
        "topicExpirationDurationDays": {
          "description": "Topic expiration duration in days",
          "type": "integer"
        }
      },
      "title": "KalturaNotificationsPartnerSettings",
      "type": "object"
    },
    "KalturaNotificationsSettings": {
      "properties": {
        "mailEnabled": {
          "description": "Specify if the user wants to receive mail notifications or not",
          "type": "boolean"
        },
        "pushFollowEnabled": {
          "description": "Specify if the user will be notified for followed content via push. (requires push_notification_enabled to be enabled)",
          "type": "boolean"
        },
        "pushNotificationEnabled": {
          "description": "Specify if the user want to receive push notifications or not",
          "type": "boolean"
        },
        "smsEnabled": {
          "description": "Specify if the user wants to receive SMS notifications or not",
          "type": "boolean"
        }
      },
      "title": "KalturaNotificationsSettings",
      "type": "object"
    },
    "KalturaNpvrPremiumService": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaPremiumService"
        }
      ],
      "description": "Npvr Premium Service",
      "properties": {
        "quotaInMinutes": {
          "description": "Quota in minutes",
          "type": "integer"
        }
      },
      "title": "KalturaNpvrPremiumService",
      "type": "object"
    },
    "KalturaOSSAdapterBaseProfile": {
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaOSSAdapterBaseProfile"
        },
        {
          "$ref": "#/definitions/KalturaOSSAdapterProfile"
        }
      ],
      "description": "OSS adapter basic",
      "discriminator": "objectType",
      "properties": {
        "id": {
          "description": "`readOnly`\n\nOSS adapter id",
          "readOnly": true,
          "type": "integer"
        },
        "name": {
          "description": "OSS adapter name",
          "type": "string"
        },
        "objectType": {
          "enum": [
            "KalturaOSSAdapterBaseProfile",
            "KalturaOSSAdapterProfile"
          ],
          "type": "string"
        }
      },
      "title": "KalturaOSSAdapterBaseProfile",
      "type": "object"
    },
    "KalturaOSSAdapterProfile": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaOSSAdapterBaseProfile"
        }
      ],
      "description": "OSS Adapter",
      "properties": {
        "adapterUrl": {
          "description": "OSS adapter adapter URL",
          "type": "string"
        },
        "externalIdentifier": {
          "description": "OSS adapter external identifier",
          "type": "string"
        },
        "isActive": {
          "description": "OSS adapter active status",
          "type": "boolean"
        },
        "ossAdapterSettings": {
          "items": {
            "$ref": "#/definitions/KalturaStringValue"
          },
          "type": "array"
        },
        "sharedSecret": {
          "description": "`readOnly`\n\nShared Secret",
          "readOnly": true,
          "type": "string"
        }
      },
      "title": "KalturaOSSAdapterProfile",
      "type": "object"
    },
    "KalturaOSSAdapterProfileListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "OSS adapter-profiles list",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaOSSAdapterProfile"
          },
          "type": "array"
        }
      },
      "title": "KalturaOSSAdapterProfileListResponse",
      "type": "object"
    },
    "KalturaOTTCategory": {
      "description": "Category details",
      "properties": {
        "channels": {
          "items": {
            "$ref": "#/definitions/KalturaChannel"
          },
          "type": "array"
        },
        "childCategories": {
          "items": {
            "$ref": "#/definitions/KalturaOTTCategory"
          },
          "type": "array"
        },
        "id": {
          "description": "`readOnly`\n\nUnique identifier for the category",
          "readOnly": true,
          "type": "integer"
        },
        "images": {
          "items": {
            "$ref": "#/definitions/KalturaMediaImage"
          },
          "type": "array"
        },
        "name": {
          "description": "Category name",
          "type": "string"
        },
        "parentCategoryId": {
          "description": "Category parent identifier",
          "type": "integer"
        }
      },
      "title": "KalturaOTTCategory",
      "type": "object"
    },
    "KalturaOTTObjectSupportNullable": {
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaOTTObjectSupportNullable"
        },
        {
          "$ref": "#/definitions/KalturaDeviceReferenceData"
        },
        {
          "$ref": "#/definitions/KalturaPasswordPolicy"
        },
        {
          "$ref": "#/definitions/KalturaHouseholdSegment"
        },
        {
          "$ref": "#/definitions/KalturaAssetFilePpv"
        },
        {
          "$ref": "#/definitions/KalturaBaseChannel"
        },
        {
          "$ref": "#/definitions/KalturaCollection"
        },
        {
          "$ref": "#/definitions/KalturaProgramAssetGroupOffer"
        },
        {
          "$ref": "#/definitions/KalturaSubscription"
        },
        {
          "$ref": "#/definitions/KalturaSmsAdapterProfile"
        },
        {
          "$ref": "#/definitions/KalturaDynamicList"
        },
        {
          "$ref": "#/definitions/KalturaHouseholdDevice"
        },
        {
          "$ref": "#/definitions/KalturaHouseholdCoupon"
        },
        {
          "$ref": "#/definitions/KalturaUnifiedChannel"
        },
        {
          "$ref": "#/definitions/KalturaCategoryItem"
        },
        {
          "$ref": "#/definitions/KalturaCategoryVersion"
        },
        {
          "$ref": "#/definitions/KalturaCampaign"
        },
        {
          "$ref": "#/definitions/KalturaEventNotification"
        },
        {
          "$ref": "#/definitions/KalturaIot"
        },
        {
          "$ref": "#/definitions/KalturaIotProfileAws"
        },
        {
          "$ref": "#/definitions/KalturaDeviceManufacturerInformation"
        },
        {
          "$ref": "#/definitions/KalturaChannel"
        },
        {
          "$ref": "#/definitions/KalturaDynamicChannel"
        },
        {
          "$ref": "#/definitions/KalturaManualChannel"
        },
        {
          "$ref": "#/definitions/KalturaUdidDynamicList"
        },
        {
          "$ref": "#/definitions/KalturaUnifiedChannelInfo"
        },
        {
          "$ref": "#/definitions/KalturaBusinessModuleRule"
        },
        {
          "$ref": "#/definitions/KalturaAssetRule"
        },
        {
          "$ref": "#/definitions/KalturaAssetUserRule"
        },
        {
          "$ref": "#/definitions/KalturaTvmDeviceRule"
        },
        {
          "$ref": "#/definitions/KalturaTvmGeoRule"
        },
        {
          "$ref": "#/definitions/KalturaBatchCampaign"
        },
        {
          "$ref": "#/definitions/KalturaTriggerCampaign"
        }
      ],
      "discriminator": "objectType",
      "properties": {
        "objectType": {
          "enum": [
            "KalturaOTTObjectSupportNullable",
            "KalturaDeviceReferenceData",
            "KalturaPasswordPolicy",
            "KalturaHouseholdSegment",
            "KalturaAssetFilePpv",
            "KalturaBaseChannel",
            "KalturaCollection",
            "KalturaProgramAssetGroupOffer",
            "KalturaSubscription",
            "KalturaSmsAdapterProfile",
            "KalturaDynamicList",
            "KalturaHouseholdDevice",
            "KalturaHouseholdCoupon",
            "KalturaUnifiedChannel",
            "KalturaCategoryItem",
            "KalturaCategoryVersion",
            "KalturaCampaign",
            "KalturaEventNotification",
            "KalturaIot",
            "KalturaIotProfileAws",
            "KalturaDeviceManufacturerInformation",
            "KalturaChannel",
            "KalturaDynamicChannel",
            "KalturaManualChannel",
            "KalturaUdidDynamicList",
            "KalturaUnifiedChannelInfo",
            "KalturaBusinessModuleRule",
            "KalturaAssetRule",
            "KalturaAssetUserRule",
            "KalturaTvmDeviceRule",
            "KalturaTvmGeoRule",
            "KalturaBatchCampaign",
            "KalturaTriggerCampaign"
          ],
          "type": "string"
        }
      },
      "title": "KalturaOTTObjectSupportNullable",
      "type": "object"
    },
    "KalturaOTTUser": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBaseOTTUser"
        }
      ],
      "description": "User",
      "properties": {
        "address": {
          "description": "Address",
          "type": "string"
        },
        "affiliateCode": {
          "description": "`insertOnly`\n\nAffiliate code",
          "type": "string"
        },
        "city": {
          "description": "City",
          "type": "string"
        },
        "countryId": {
          "description": "Country identifier",
          "type": "integer"
        },
        "createDate": {
          "description": "`readOnly`\n\nUser create date",
          "readOnly": true,
          "type": "integer",
          "x-inputType": "datetime"
        },
        "dynamicData": {
          "items": {
            "$ref": "#/definitions/KalturaStringValue"
          },
          "type": "array"
        },
        "email": {
          "description": "Email",
          "type": "string"
        },
        "externalId": {
          "description": "External user identifier",
          "type": "string"
        },
        "failedLoginCount": {
          "description": "`readOnly`\n\nThe number of failed login attempts since the last successful login",
          "readOnly": true,
          "type": "integer"
        },
        "householdId": {
          "description": "`readOnly`\n\nHousehold identifier",
          "readOnly": true,
          "type": "integer"
        },
        "isHouseholdMaster": {
          "description": "`readOnly`\n\nIs the user the household master",
          "readOnly": true,
          "type": "boolean"
        },
        "lastLoginDate": {
          "description": "`readOnly`\n\nThe date of the last successful login",
          "readOnly": true,
          "type": "integer",
          "x-inputType": "datetime"
        },
        "phone": {
          "description": "Phone",
          "type": "string"
        },
        "roleIds": {
          "description": "Comma separated list of role Ids.",
          "type": "string"
        },
        "suspensionState": {
          "description": "`readOnly`\n\nEnum Type: `KalturaHouseholdSuspensionState`\n\nSuspension state",
          "enum": [
            "NOT_SUSPENDED",
            "SUSPENDED"
          ],
          "readOnly": true,
          "type": "string",
          "x-enumLabels": [
            "NOT_SUSPENDED",
            "SUSPENDED"
          ],
          "x-enumType": "KalturaHouseholdSuspensionState"
        },
        "updateDate": {
          "description": "`readOnly`\n\nUser last update date",
          "readOnly": true,
          "type": "integer",
          "x-inputType": "datetime"
        },
        "userState": {
          "description": "`readOnly`\n\nEnum Type: `KalturaUserState`\n\nUser state",
          "enum": [
            "ok",
            "user_with_no_household",
            "user_created_with_no_role",
            "user_not_activated"
          ],
          "readOnly": true,
          "type": "string",
          "x-enumLabels": [
            "OK",
            "USER_WITH_NO_HOUSEHOLD",
            "USER_CREATED_WITH_NO_ROLE",
            "USER_NOT_ACTIVATED"
          ],
          "x-enumType": "KalturaUserState"
        },
        "userType": {
          "$ref": "#/definitions/KalturaOTTUserType"
        },
        "zip": {
          "description": "Zip code",
          "type": "string"
        }
      },
      "title": "KalturaOTTUser",
      "type": "object"
    },
    "KalturaOTTUserDynamicData": {
      "description": "User dynamic data",
      "properties": {
        "key": {
          "description": "Key",
          "type": "string"
        },
        "userId": {
          "description": "`readOnly`\n\nUser identifier",
          "readOnly": true,
          "type": "string"
        },
        "value": {
          "$ref": "#/definitions/KalturaStringValue"
        }
      },
      "title": "KalturaOTTUserDynamicData",
      "type": "object"
    },
    "KalturaOTTUserFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "description": "OTT User filter",
      "properties": {
        "emailEqual": {
          "description": "User email",
          "type": "string"
        },
        "externalIdEqual": {
          "description": "User external identifier",
          "type": "string"
        },
        "idIn": {
          "description": "List of user identifiers separated by &#39;,&#39;",
          "type": "string"
        },
        "orderBy": {
          "enum": [
            "NONE"
          ],
          "type": "string",
          "x-enumLabels": [
            "NONE"
          ],
          "x-enumType": "KalturaOTTUserOrderBy"
        },
        "roleIdsIn": {
          "description": "Comma separated list of role Ids.",
          "type": "string"
        },
        "usernameEqual": {
          "description": "Username",
          "type": "string"
        }
      },
      "title": "KalturaOTTUserFilter",
      "type": "object"
    },
    "KalturaOTTUserListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "Users list",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaOTTUser"
          },
          "type": "array"
        }
      },
      "title": "KalturaOTTUserListResponse",
      "type": "object"
    },
    "KalturaOTTUserType": {
      "description": "User type",
      "properties": {
        "description": {
          "description": "User type description",
          "type": "string"
        },
        "id": {
          "description": "`readOnly`\n\nUser type identifier",
          "readOnly": true,
          "type": "integer"
        }
      },
      "title": "KalturaOTTUserType",
      "type": "object"
    },
    "KalturaObjectBase": {},
    "KalturaObjectVirtualAssetInfo": {
      "properties": {
        "assetStructId": {
          "description": "Asset struct identifier",
          "type": "integer"
        },
        "extendedTypes": {
          "items": {
            "$ref": "#/definitions/KalturaLongValue"
          },
          "type": "array"
        },
        "metaId": {
          "description": "Meta identifier",
          "type": "integer"
        },
        "type": {
          "description": "Enum Type: `KalturaObjectVirtualAssetInfoType`\n\nObject virtual asset info type",
          "enum": [
            "Subscription",
            "Segment",
            "Category",
            "Tvod",
            "Boxset",
            "PAGO"
          ],
          "type": "string",
          "x-enumLabels": [
            "SUBSCRIPTION",
            "SEGMENT",
            "CATEGORY",
            "TVOD",
            "BOXSET",
            "PAGO"
          ],
          "x-enumType": "KalturaObjectVirtualAssetInfoType"
        }
      },
      "title": "KalturaObjectVirtualAssetInfo",
      "type": "object"
    },
    "KalturaObjectVirtualAssetPartnerConfig": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaPartnerConfiguration"
        }
      ],
      "properties": {
        "objectVirtualAssets": {
          "items": {
            "$ref": "#/definitions/KalturaObjectVirtualAssetInfo"
          },
          "type": "array"
        }
      },
      "title": "KalturaObjectVirtualAssetPartnerConfig",
      "type": "object"
    },
    "KalturaOnDemandResponseProfile": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaDetachedResponseProfile"
        }
      ],
      "description": "Define on demand response",
      "properties": {
        "retrievedProperties": {
          "description": "Comma seperated properties names",
          "type": "string"
        }
      },
      "title": "KalturaOnDemandResponseProfile",
      "type": "object"
    },
    "KalturaOpcPartnerConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaPartnerConfiguration"
        }
      ],
      "properties": {
        "resetPassword": {
          "$ref": "#/definitions/KalturaResetPasswordPartnerConfig"
        }
      },
      "title": "KalturaOpcPartnerConfiguration",
      "type": "object"
    },
    "KalturaOrCondition": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaNotCondition"
        }
      ],
      "properties": {
        "conditions": {
          "items": {
            "$ref": "#/definitions/KalturaCondition"
          },
          "type": "array"
        }
      },
      "title": "KalturaOrCondition",
      "type": "object"
    },
    "KalturaPPVItemPriceDetails": {
      "description": "PPV item price details",
      "properties": {
        "collectionId": {
          "description": "The identifier of the relevant collection",
          "type": "string"
        },
        "discountEndDate": {
          "description": "Discount end date",
          "type": "integer",
          "x-inputType": "datetime"
        },
        "endDate": {
          "description": "If the item already purchased - until when the user can watch the item",
          "type": "integer",
          "x-inputType": "datetime"
        },
        "firstDeviceName": {
          "description": "If the item already purchased and played - the name of the device on which it was first played",
          "type": "string"
        },
        "fullPrice": {
          "$ref": "#/definitions/KalturaPrice"
        },
        "isInCancelationPeriod": {
          "description": "If waiver period is enabled - donates whether the user is still in the cancelation window",
          "type": "boolean"
        },
        "isSubscriptionOnly": {
          "description": "Denotes whether this object is available only as part of a subscription or can be sold separately",
          "type": "boolean"
        },
        "ppvDescriptions": {
          "items": {
            "$ref": "#/definitions/KalturaTranslationToken"
          },
          "type": "array"
        },
        "ppvModuleId": {
          "description": "The associated PPV module identifier",
          "type": "string"
        },
        "ppvProductCode": {
          "description": "The PPV product code",
          "type": "string"
        },
        "prePaidId": {
          "description": "The identifier of the relevant pre paid",
          "type": "string"
        },
        "price": {
          "$ref": "#/definitions/KalturaPrice"
        },
        "purchaseStatus": {
          "description": "Enum Type: `KalturaPurchaseStatus`\n\nSubscription purchase status",
          "enum": [
            "ppv_purchased",
            "free",
            "for_purchase_subscription_only",
            "subscription_purchased",
            "for_purchase",
            "subscription_purchased_wrong_currency",
            "pre_paid_purchased",
            "geo_commerce_blocked",
            "entitled_to_preview_module",
            "first_device_limitation",
            "collection_purchased",
            "user_suspended",
            "not_for_purchase",
            "invalid_currency",
            "currency_not_defined_on_price_code",
            "pending_entitlement",
            "program_asset_group_offer_purchased"
          ],
          "type": "string",
          "x-enumLabels": [
            "PPV_PURCHASED",
            "FREE",
            "FOR_PURCHASE_SUBSCRIPTION_ONLY",
            "SUBSCRIPTION_PURCHASED",
            "FOR_PURCHASE",
            "SUBSCRIPTION_PURCHASED_WRONG_CURRENCY",
            "PRE_PAID_PURCHASED",
            "GEO_COMMERCE_BLOCKED",
            "ENTITLED_TO_PREVIEW_MODULE",
            "FIRST_DEVICE_LIMITATION",
            "COLLECTION_PURCHASED",
            "USER_SUSPENDED",
            "NOT_FOR_PURCHASE",
            "INVALID_CURRENCY",
            "CURRENCY_NOT_DEFINED_ON_PRICE_CODE",
            "PENDING_ENTITLEMENT",
            "PROGRAM_ASSET_GROUP_OFFER_PURCHASED"
          ],
          "x-enumType": "KalturaPurchaseStatus"
        },
        "purchaseUserId": {
          "description": "If the item already purchased - the identifier of the user (in the household) who purchased this item",
          "type": "string"
        },
        "purchasedMediaFileId": {
          "description": "If the item already purchased - the identifier of the purchased file",
          "type": "integer"
        },
        "relatedMediaFileIds": {
          "items": {
            "$ref": "#/definitions/KalturaIntegerValue"
          },
          "type": "array"
        },
        "startDate": {
          "description": "If the item already purchased - since when the user can start watching the item",
          "type": "integer",
          "x-inputType": "datetime"
        },
        "subscriptionId": {
          "description": "The identifier of the relevant subscription",
          "type": "string"
        }
      },
      "title": "KalturaPPVItemPriceDetails",
      "type": "object"
    },
    "KalturaPaddedRecording": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaRecording"
        }
      ],
      "properties": {
        "endPadding": {
          "description": "Household specific end padding of the recording",
          "type": "integer"
        },
        "endPaddingIsPersonal": {
          "description": "`readOnly`\n\nIndicates whether endPadding value is personal padding (counts towards HH quota) or system padding (does not count towards HH quota).",
          "readOnly": true,
          "type": "boolean"
        },
        "startPadding": {
          "description": "Household specific start padding of the recording",
          "type": "integer"
        },
        "startPaddingIsPersonal": {
          "description": "`readOnly`\n\nIndicates whether startPadding value is personal padding (counts towards HH quota) or system padding (does not count towards HH quota).",
          "readOnly": true,
          "type": "boolean"
        }
      },
      "title": "KalturaPaddedRecording",
      "type": "object"
    },
    "KalturaParentalRule": {
      "description": "Parental rule",
      "properties": {
        "blockAnonymousAccess": {
          "description": "Content that correspond to this rule is not available for guests",
          "type": "boolean"
        },
        "createDate": {
          "description": "`readOnly`\n\nSpecifies when was the parental rule created. Date and time represented as epoch.",
          "readOnly": true,
          "type": "integer",
          "x-inputType": "datetime"
        },
        "description": {
          "description": "Explanatory description",
          "type": "string"
        },
        "epgTag": {
          "description": "EPG asset tag ID to in which to look for corresponding trigger values",
          "type": "integer"
        },
        "epgTagValues": {
          "items": {
            "$ref": "#/definitions/KalturaStringValue"
          },
          "type": "array"
        },
        "id": {
          "description": "`readOnly`\n\nUnique parental rule identifier",
          "readOnly": true,
          "type": "integer"
        },
        "isActive": {
          "description": "active status",
          "type": "boolean"
        },
        "isDefault": {
          "description": "`readOnly`\n\nIs the rule the default rule of the account",
          "readOnly": true,
          "type": "boolean"
        },
        "mediaTag": {
          "description": "Media asset tag ID to in which to look for corresponding trigger values",
          "type": "integer"
        },
        "mediaTagValues": {
          "items": {
            "$ref": "#/definitions/KalturaStringValue"
          },
          "type": "array"
        },
        "name": {
          "description": "Rule display name",
          "type": "string"
        },
        "order": {
          "description": "Rule order within the full list of rules",
          "type": "integer"
        },
        "origin": {
          "description": "`readOnly`\n\nEnum Type: `KalturaRuleLevel`\n\nWhere was this rule defined account, household or user",
          "enum": [
            "invalid",
            "user",
            "household",
            "account"
          ],
          "readOnly": true,
          "type": "string",
          "x-enumLabels": [
            "INVALID",
            "USER",
            "HOUSEHOLD",
            "ACCOUNT"
          ],
          "x-enumType": "KalturaRuleLevel"
        },
        "ruleType": {
          "description": "Enum Type: `KalturaParentalRuleType`\n\nRule type – Movies, TV series or both",
          "enum": [
            "ALL",
            "MOVIES",
            "TV_SERIES"
          ],
          "type": "string",
          "x-enumLabels": [
            "ALL",
            "MOVIES",
            "TV_SERIES"
          ],
          "x-enumType": "KalturaParentalRuleType"
        },
        "updateDate": {
          "description": "`readOnly`\n\nSpecifies when was the parental rule last updated. Date and time represented as epoch.",
          "readOnly": true,
          "type": "integer",
          "x-inputType": "datetime"
        }
      },
      "title": "KalturaParentalRule",
      "type": "object"
    },
    "KalturaParentalRuleFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "properties": {
        "entityReferenceEqual": {
          "description": "Enum Type: `KalturaEntityReferenceBy`\n\nReference type to filter by",
          "enum": [
            "user",
            "household"
          ],
          "type": "string",
          "x-enumLabels": [
            "USER",
            "HOUSEHOLD"
          ],
          "x-enumType": "KalturaEntityReferenceBy"
        },
        "orderBy": {
          "enum": [
            "PARTNER_SORT_VALUE"
          ],
          "type": "string",
          "x-enumLabels": [
            "PARTNER_SORT_VALUE"
          ],
          "x-enumType": "KalturaParentalRuleOrderBy"
        }
      },
      "title": "KalturaParentalRuleFilter",
      "type": "object"
    },
    "KalturaParentalRuleListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "ParentalRules list",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaParentalRule"
          },
          "type": "array"
        }
      },
      "title": "KalturaParentalRuleListResponse",
      "type": "object"
    },
    "KalturaPartner": {
      "properties": {
        "createDate": {
          "description": "Creat date represented as epoch",
          "type": "integer",
          "x-inputType": "datetime"
        },
        "id": {
          "description": "PartnerId",
          "type": "integer"
        },
        "name": {
          "description": "PartnerName",
          "type": "string"
        },
        "updateDate": {
          "description": "Update date represented as epoch",
          "type": "integer",
          "x-inputType": "datetime"
        }
      },
      "title": "KalturaPartner",
      "type": "object"
    },
    "KalturaPartnerConfiguration": {
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaBasePartnerConfiguration"
        },
        {
          "$ref": "#/definitions/KalturaBillingPartnerConfig"
        },
        {
          "$ref": "#/definitions/KalturaCatalogPartnerConfig"
        },
        {
          "$ref": "#/definitions/KalturaCommercePartnerConfig"
        },
        {
          "$ref": "#/definitions/KalturaConcurrencyPartnerConfig"
        },
        {
          "$ref": "#/definitions/KalturaCustomFieldsPartnerConfiguration"
        },
        {
          "$ref": "#/definitions/KalturaDefaultParentalSettingsPartnerConfig"
        },
        {
          "$ref": "#/definitions/KalturaGeneralPartnerConfig"
        },
        {
          "$ref": "#/definitions/KalturaObjectVirtualAssetPartnerConfig"
        },
        {
          "$ref": "#/definitions/KalturaOpcPartnerConfiguration"
        },
        {
          "$ref": "#/definitions/KalturaPaymentPartnerConfig"
        },
        {
          "$ref": "#/definitions/KalturaPlaybackPartnerConfig"
        },
        {
          "$ref": "#/definitions/KalturaSecurityPartnerConfig"
        }
      ],
      "description": "`abstract`\n\nPartner  base configuration",
      "discriminator": "objectType",
      "properties": {
        "objectType": {
          "enum": [
            "KalturaBasePartnerConfiguration",
            "KalturaBillingPartnerConfig",
            "KalturaCatalogPartnerConfig",
            "KalturaCommercePartnerConfig",
            "KalturaConcurrencyPartnerConfig",
            "KalturaCustomFieldsPartnerConfiguration",
            "KalturaDefaultParentalSettingsPartnerConfig",
            "KalturaGeneralPartnerConfig",
            "KalturaObjectVirtualAssetPartnerConfig",
            "KalturaOpcPartnerConfiguration",
            "KalturaPaymentPartnerConfig",
            "KalturaPlaybackPartnerConfig",
            "KalturaSecurityPartnerConfig"
          ],
          "type": "string"
        }
      },
      "title": "KalturaPartnerConfiguration",
      "type": "object",
      "x-abstract": true
    },
    "KalturaPartnerConfigurationFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "description": "Partner configuration filter",
      "properties": {
        "orderBy": {
          "enum": [
            "NONE"
          ],
          "type": "string",
          "x-enumLabels": [
            "NONE"
          ],
          "x-enumType": "KalturaPartnerConfigurationOrderBy"
        },
        "partnerConfigurationTypeEqual": {
          "description": "Enum Type: `KalturaPartnerConfigurationType`\n\nIndicates which partner configuration list to return",
          "enum": [
            "DefaultPaymentGateway",
            "EnablePaymentGatewaySelection",
            "OSSAdapter",
            "Concurrency",
            "General",
            "ObjectVirtualAsset",
            "Commerce",
            "Playback",
            "Payment",
            "Catalog",
            "Security",
            "Opc",
            "Base",
            "CustomFields",
            "DefaultParentalSettings"
          ],
          "type": "string",
          "x-enumLabels": [
            "DEFAULTPAYMENTGATEWAY",
            "ENABLEPAYMENTGATEWAYSELECTION",
            "OSSADAPTER",
            "CONCURRENCY",
            "GENERAL",
            "OBJECTVIRTUALASSET",
            "COMMERCE",
            "PLAYBACK",
            "PAYMENT",
            "CATALOG",
            "SECURITY",
            "OPC",
            "BASE",
            "CUSTOMFIELDS",
            "DEFAULTPARENTALSETTINGS"
          ],
          "x-enumType": "KalturaPartnerConfigurationType"
        }
      },
      "title": "KalturaPartnerConfigurationFilter",
      "type": "object"
    },
    "KalturaPartnerConfigurationListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaPartnerConfiguration"
          },
          "type": "array"
        }
      },
      "title": "KalturaPartnerConfigurationListResponse",
      "type": "object"
    },
    "KalturaPartnerFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "properties": {
        "idIn": {
          "description": "Comma separated discount codes",
          "type": "string"
        }
      },
      "title": "KalturaPartnerFilter",
      "type": "object"
    },
    "KalturaPartnerListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaPartner"
          },
          "type": "array"
        }
      },
      "title": "KalturaPartnerListResponse",
      "type": "object"
    },
    "KalturaPartnerPremiumService": {
      "description": "Premium service",
      "properties": {
        "id": {
          "description": "Service identifier",
          "type": "integer"
        },
        "isApplied": {
          "description": "Service name / description",
          "type": "boolean"
        },
        "name": {
          "description": "`readOnly`\n\nService name / description",
          "readOnly": true,
          "type": "string"
        }
      },
      "title": "KalturaPartnerPremiumService",
      "type": "object"
    },
    "KalturaPartnerPremiumServices": {
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaPartnerPremiumService"
          },
          "type": "array"
        }
      },
      "title": "KalturaPartnerPremiumServices",
      "type": "object"
    },
    "KalturaPartnerSetup": {
      "description": "Parameters for partner setup",
      "properties": {
        "adminPassword": {
          "description": "admin Password",
          "type": "string"
        },
        "adminUsername": {
          "description": "admin Username",
          "type": "string"
        },
        "basePartnerConfiguration": {
          "$ref": "#/definitions/KalturaBasePartnerConfiguration"
        }
      },
      "title": "KalturaPartnerSetup",
      "type": "object"
    },
    "KalturaPasswordPolicy": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaOTTObjectSupportNullable"
        }
      ],
      "description": "Password policy settings",
      "properties": {
        "complexities": {
          "items": {
            "$ref": "#/definitions/KalturaRegexExpression"
          },
          "type": "array"
        },
        "expiration": {
          "description": "When should the password expire (will represent time as days).",
          "type": "integer"
        },
        "historyCount": {
          "description": "The number of passwords that should be remembered for each user so that they cannot be reused.",
          "type": "integer"
        },
        "id": {
          "description": "`readOnly`\n\nid",
          "readOnly": true,
          "type": "integer"
        },
        "lockoutFailuresCount": {
          "description": "the number of passwords failures before the account is locked.",
          "type": "integer"
        },
        "name": {
          "description": "Name",
          "type": "string"
        },
        "userRoleIds": {
          "description": "Comma separated UserRole Ids list which the policy is applied on",
          "type": "string"
        }
      },
      "title": "KalturaPasswordPolicy",
      "type": "object"
    },
    "KalturaPasswordPolicyFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "description": "Password policy settings filter",
      "properties": {
        "orderBy": {
          "enum": [
            "NONE"
          ],
          "type": "string",
          "x-enumLabels": [
            "NONE"
          ],
          "x-enumType": "KalturaPasswordPolicyOrderBy"
        },
        "userRoleIdIn": {
          "description": "Comma separated list of role Ids.",
          "type": "string"
        }
      },
      "title": "KalturaPasswordPolicyFilter",
      "type": "object"
    },
    "KalturaPasswordPolicyListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaPasswordPolicy"
          },
          "type": "array"
        }
      },
      "title": "KalturaPasswordPolicyListResponse",
      "type": "object"
    },
    "KalturaPaymentGatewayBaseProfile": {
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaPaymentGatewayBaseProfile"
        },
        {
          "$ref": "#/definitions/KalturaPaymentGatewayProfile"
        }
      ],
      "description": "Payment gateway base profile",
      "discriminator": "objectType",
      "properties": {
        "id": {
          "description": "`readOnly`\n\npayment gateway id",
          "readOnly": true,
          "type": "integer"
        },
        "isDefault": {
          "description": "Payment gateway default (true/false)",
          "type": "boolean"
        },
        "name": {
          "description": "payment gateway name",
          "type": "string"
        },
        "objectType": {
          "enum": [
            "KalturaPaymentGatewayBaseProfile",
            "KalturaPaymentGatewayProfile"
          ],
          "type": "string"
        },
        "selectedBy": {
          "description": "Enum Type: `KalturaHouseholdPaymentGatewaySelectedBy`\n\ndistinction payment gateway selected by account or household",
          "enum": [
            "none",
            "account",
            "household"
          ],
          "type": "string",
          "x-enumLabels": [
            "NONE",
            "ACCOUNT",
            "HOUSEHOLD"
          ],
          "x-enumType": "KalturaHouseholdPaymentGatewaySelectedBy"
        }
      },
      "title": "KalturaPaymentGatewayBaseProfile",
      "type": "object"
    },
    "KalturaPaymentGatewayConfiguration": {
      "properties": {
        "paymentGatewayConfiguration": {
          "items": {
            "$ref": "#/definitions/KalturaKeyValue"
          },
          "type": "array"
        }
      },
      "title": "KalturaPaymentGatewayConfiguration",
      "type": "object"
    },
    "KalturaPaymentGatewayProfile": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaPaymentGatewayBaseProfile"
        }
      ],
      "description": "Payment gateway profile",
      "properties": {
        "adapterUrl": {
          "description": "Payment gateway adapter URL",
          "type": "string"
        },
        "externalIdentifier": {
          "description": "Payment gateway external identifier",
          "type": "string"
        },
        "externalVerification": {
          "description": "Payment gateway external verification",
          "type": "boolean"
        },
        "isActive": {
          "description": "Payment gateway is active status",
          "type": "integer"
        },
        "isAsyncPolicy": {
          "description": "Payment gateway - Support asynchronous purchase",
          "type": "boolean"
        },
        "paymentGatewaySettings": {
          "items": {
            "$ref": "#/definitions/KalturaStringValue"
          },
          "type": "array"
        },
        "pendingInterval": {
          "description": "Pending Interval in minutes",
          "type": "integer"
        },
        "pendingRetries": {
          "description": "Pending Retries",
          "type": "integer"
        },
        "renewIntervalMinutes": {
          "description": "Renew Interval Minutes",
          "type": "integer"
        },
        "renewStartMinutes": {
          "description": "Renew Start Minutes",
          "type": "integer"
        },
        "renewUrl": {
          "description": "Payment gateway renew URL",
          "type": "string"
        },
        "sharedSecret": {
          "description": "Shared Secret",
          "type": "string"
        },
        "statusUrl": {
          "description": "Payment gateway status URL",
          "type": "string"
        },
        "transactUrl": {
          "description": "Payment gateway transact URL",
          "type": "string"
        }
      },
      "title": "KalturaPaymentGatewayProfile",
      "type": "object"
    },
    "KalturaPaymentGatewayProfileListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "PaymentGatewayProfile list",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaPaymentGatewayProfile"
          },
          "type": "array"
        }
      },
      "title": "KalturaPaymentGatewayProfileListResponse",
      "type": "object"
    },
    "KalturaPaymentMethodProfile": {
      "properties": {
        "allowMultiInstance": {
          "description": "Indicates whether the payment method allow multiple instances",
          "type": "boolean"
        },
        "id": {
          "description": "`readOnly`\n\nPayment method identifier (internal)",
          "readOnly": true,
          "type": "integer"
        },
        "name": {
          "description": "Payment method name",
          "type": "string"
        },
        "paymentGatewayId": {
          "description": "Payment gateway identifier (internal)",
          "type": "integer"
        }
      },
      "title": "KalturaPaymentMethodProfile",
      "type": "object"
    },
    "KalturaPaymentMethodProfileFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "properties": {
        "orderBy": {
          "enum": [
            "NONE"
          ],
          "type": "string",
          "x-enumLabels": [
            "NONE"
          ],
          "x-enumType": "KalturaPaymentMethodProfileOrderBy"
        },
        "paymentGatewayIdEqual": {
          "description": "Payment gateway identifier to list the payment methods for",
          "type": "integer"
        }
      },
      "title": "KalturaPaymentMethodProfileFilter",
      "type": "object"
    },
    "KalturaPaymentMethodProfileListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "List of payment method profiles.",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaPaymentMethodProfile"
          },
          "type": "array"
        }
      },
      "title": "KalturaPaymentMethodProfileListResponse",
      "type": "object"
    },
    "KalturaPaymentPartnerConfig": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaPartnerConfiguration"
        }
      ],
      "description": "Partner billing configuration",
      "properties": {
        "unifiedBillingCycles": {
          "items": {
            "$ref": "#/definitions/KalturaUnifiedBillingCycle"
          },
          "type": "array"
        }
      },
      "title": "KalturaPaymentPartnerConfig",
      "type": "object"
    },
    "KalturaPermission": {
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaPermission"
        },
        {
          "$ref": "#/definitions/KalturaGroupPermission"
        }
      ],
      "discriminator": "objectType",
      "properties": {
        "dependsOnPermissionNames": {
          "description": "`readOnly`\n\nComma separated permissions names from type SPECIAL_FEATURE",
          "readOnly": true,
          "type": "string"
        },
        "friendlyName": {
          "description": "Permission friendly name",
          "type": "string"
        },
        "id": {
          "description": "`readOnly`\n\nPermission identifier",
          "readOnly": true,
          "type": "integer"
        },
        "name": {
          "description": "Permission name",
          "type": "string"
        },
        "objectType": {
          "enum": [
            "KalturaPermission",
            "KalturaGroupPermission"
          ],
          "type": "string"
        },
        "permissionItemsIds": {
          "description": "Comma separated associated permission items IDs",
          "type": "string"
        },
        "type": {
          "description": "Enum Type: `KalturaPermissionType`\n\nPermission type",
          "enum": [
            "NORMAL",
            "GROUP",
            "SPECIAL_FEATURE"
          ],
          "type": "string",
          "x-enumLabels": [
            "NORMAL",
            "GROUP",
            "SPECIAL_FEATURE"
          ],
          "x-enumType": "KalturaPermissionType"
        }
      },
      "title": "KalturaPermission",
      "type": "object"
    },
    "KalturaPermissionByIdInFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBasePermissionFilter"
        }
      ],
      "properties": {
        "idIn": {
          "description": "Category item identifiers",
          "type": "string"
        }
      },
      "title": "KalturaPermissionByIdInFilter",
      "type": "object"
    },
    "KalturaPermissionFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBasePermissionFilter"
        }
      ],
      "description": "Permissions filter",
      "properties": {
        "currentUserPermissionsContains": {
          "description": "Indicates whether the results should be filtered by userId using the current",
          "type": "boolean"
        },
        "orderBy": {
          "enum": [
            "NONE"
          ],
          "type": "string",
          "x-enumLabels": [
            "NONE"
          ],
          "x-enumType": "KalturaPermissionOrderBy"
        },
        "roleIdIn": {
          "description": "Return permissions by role ID",
          "type": "integer"
        }
      },
      "title": "KalturaPermissionFilter",
      "type": "object"
    },
    "KalturaPermissionItem": {
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaPermissionItem"
        },
        {
          "$ref": "#/definitions/KalturaApiActionPermissionItem"
        },
        {
          "$ref": "#/definitions/KalturaApiArgumentPermissionItem"
        },
        {
          "$ref": "#/definitions/KalturaApiParameterPermissionItem"
        },
        {
          "$ref": "#/definitions/KalturaApiPriviligesPermissionItem"
        }
      ],
      "discriminator": "objectType",
      "properties": {
        "id": {
          "description": "`readOnly`\n\nPermission item identifier",
          "readOnly": true,
          "type": "integer"
        },
        "isExcluded": {
          "description": "Permission isExcluded",
          "type": "boolean"
        },
        "name": {
          "description": "Permission item name",
          "type": "string"
        },
        "objectType": {
          "enum": [
            "KalturaPermissionItem",
            "KalturaApiActionPermissionItem",
            "KalturaApiArgumentPermissionItem",
            "KalturaApiParameterPermissionItem",
            "KalturaApiPriviligesPermissionItem"
          ],
          "type": "string"
        }
      },
      "title": "KalturaPermissionItem",
      "type": "object"
    },
    "KalturaPermissionItemByApiActionFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaPermissionItemFilter"
        }
      ],
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaPermissionItemByApiActionFilter"
        },
        {
          "$ref": "#/definitions/KalturaPermissionItemByArgumentFilter"
        }
      ],
      "description": "If filter properties are empty will return all API action type permission items",
      "discriminator": "objectType",
      "properties": {
        "actionEqual": {
          "description": "API action name",
          "type": "string"
        },
        "objectType": {
          "enum": [
            "KalturaPermissionItemByApiActionFilter",
            "KalturaPermissionItemByArgumentFilter"
          ],
          "type": "string"
        },
        "serviceEqual": {
          "description": "API service name",
          "type": "string"
        }
      },
      "title": "KalturaPermissionItemByApiActionFilter",
      "type": "object"
    },
    "KalturaPermissionItemByArgumentFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaPermissionItemByApiActionFilter"
        }
      ],
      "description": "If filter properties are empty will return all API argument type permission items",
      "properties": {
        "parameterEqual": {
          "description": "Parameter name",
          "type": "string"
        }
      },
      "title": "KalturaPermissionItemByArgumentFilter",
      "type": "object"
    },
    "KalturaPermissionItemByIdInFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaPermissionItemFilter"
        }
      ],
      "properties": {
        "idIn": {
          "description": "Permission item identifiers",
          "type": "string"
        }
      },
      "title": "KalturaPermissionItemByIdInFilter",
      "type": "object"
    },
    "KalturaPermissionItemByParameterFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaPermissionItemFilter"
        }
      ],
      "description": "If filter properties are empty will return all parameter type permission items",
      "properties": {
        "objectEqual": {
          "description": "Parameter name",
          "type": "string"
        },
        "parameterEqual": {
          "description": "Parameter name",
          "type": "string"
        }
      },
      "title": "KalturaPermissionItemByParameterFilter",
      "type": "object"
    },
    "KalturaPermissionItemFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaPermissionItemFilter"
        },
        {
          "$ref": "#/definitions/KalturaPermissionItemByIdInFilter"
        },
        {
          "$ref": "#/definitions/KalturaPermissionItemByApiActionFilter"
        },
        {
          "$ref": "#/definitions/KalturaPermissionItemByParameterFilter"
        },
        {
          "$ref": "#/definitions/KalturaPermissionItemByArgumentFilter"
        }
      ],
      "discriminator": "objectType",
      "properties": {
        "objectType": {
          "enum": [
            "KalturaPermissionItemFilter",
            "KalturaPermissionItemByIdInFilter",
            "KalturaPermissionItemByApiActionFilter",
            "KalturaPermissionItemByParameterFilter",
            "KalturaPermissionItemByArgumentFilter"
          ],
          "type": "string"
        },
        "orderBy": {
          "enum": [
            "NONE"
          ],
          "type": "string",
          "x-enumLabels": [
            "NONE"
          ],
          "x-enumType": "KalturaPermissionItemOrderBy"
        }
      },
      "title": "KalturaPermissionItemFilter",
      "type": "object"
    },
    "KalturaPermissionItemListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaPermissionItem"
          },
          "type": "array"
        }
      },
      "title": "KalturaPermissionItemListResponse",
      "type": "object"
    },
    "KalturaPermissionListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "Permissions list",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaPermission"
          },
          "type": "array"
        }
      },
      "title": "KalturaPermissionListResponse",
      "type": "object"
    },
    "KalturaPersistedFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaAssetFilter"
        },
        {
          "$ref": "#/definitions/KalturaBundleFilter"
        },
        {
          "$ref": "#/definitions/KalturaChannelExternalFilter"
        },
        {
          "$ref": "#/definitions/KalturaRelatedExternalFilter"
        },
        {
          "$ref": "#/definitions/KalturaScheduledRecordingProgramFilter"
        },
        {
          "$ref": "#/definitions/KalturaSearchExternalFilter"
        },
        {
          "$ref": "#/definitions/KalturaChannelFilter"
        },
        {
          "$ref": "#/definitions/KalturaPersonalListSearchFilter"
        },
        {
          "$ref": "#/definitions/KalturaRelatedFilter"
        },
        {
          "$ref": "#/definitions/KalturaSearchAssetFilter"
        },
        {
          "$ref": "#/definitions/KalturaSearchAssetListFilter"
        }
      ],
      "description": "`abstract`",
      "discriminator": "objectType",
      "properties": {
        "name": {
          "description": "Name for the presisted filter. If empty, no action will be done. If has value, the filter will be saved and persisted in user&#39;s search history.",
          "type": "string"
        },
        "objectType": {
          "enum": [
            "KalturaAssetFilter",
            "KalturaBundleFilter",
            "KalturaChannelExternalFilter",
            "KalturaRelatedExternalFilter",
            "KalturaScheduledRecordingProgramFilter",
            "KalturaSearchExternalFilter",
            "KalturaChannelFilter",
            "KalturaPersonalListSearchFilter",
            "KalturaRelatedFilter",
            "KalturaSearchAssetFilter",
            "KalturaSearchAssetListFilter"
          ],
          "type": "string"
        }
      },
      "title": "KalturaPersistedFilter",
      "type": "object",
      "x-abstract": true
    },
    "KalturaPersonalActivityCleanupConfiguration": {
      "properties": {
        "retentionPeriodDays": {
          "description": "Retention Period Days",
          "type": "integer"
        }
      },
      "title": "KalturaPersonalActivityCleanupConfiguration",
      "type": "object"
    },
    "KalturaPersonalAssetSelectionFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "properties": {
        "orderBy": {
          "enum": [
            "ASSET_SELECTION_DATE_DESC"
          ],
          "type": "string",
          "x-enumLabels": [
            "ASSET_SELECTION_DATE_DESC"
          ],
          "x-enumType": "KalturaPersonalAssetSelectionOrderBy"
        },
        "slotNumberEqual": {
          "description": "selected assets for specific slot number",
          "type": "integer"
        }
      },
      "title": "KalturaPersonalAssetSelectionFilter",
      "type": "object"
    },
    "KalturaPersonalFeed": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFeed"
        }
      ],
      "properties": {},
      "title": "KalturaPersonalFeed",
      "type": "object"
    },
    "KalturaPersonalFeedFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "properties": {
        "orderBy": {
          "enum": [
            "RELEVANCY_DESC",
            "NAME_ASC",
            "NAME_DESC",
            "VIEWS_DESC",
            "RATINGS_DESC",
            "VOTES_DESC",
            "START_DATE_DESC",
            "START_DATE_ASC"
          ],
          "type": "string",
          "x-enumLabels": [
            "RELEVANCY_DESC",
            "NAME_ASC",
            "NAME_DESC",
            "VIEWS_DESC",
            "RATINGS_DESC",
            "VOTES_DESC",
            "START_DATE_DESC",
            "START_DATE_ASC"
          ],
          "x-enumType": "KalturaPersonalFeedOrderBy"
        }
      },
      "title": "KalturaPersonalFeedFilter",
      "type": "object"
    },
    "KalturaPersonalFeedListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "List of message follow data.",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaPersonalFeed"
          },
          "type": "array"
        }
      },
      "title": "KalturaPersonalFeedListResponse",
      "type": "object"
    },
    "KalturaPersonalList": {
      "properties": {
        "createDate": {
          "description": "`readOnly`\n\nCreate Date",
          "readOnly": true,
          "type": "integer",
          "x-inputType": "datetime"
        },
        "id": {
          "description": "`readOnly`\n\nId",
          "readOnly": true,
          "type": "integer"
        },
        "ksql": {
          "description": "Search assets using dynamic criteria. Provided collection of nested expressions with key, comparison operators, value, and logical conjunction.\r\n            Possible keys: any Tag or Meta defined in the system and the following reserved keys: start_date, end_date. \r\n            epg_id, media_id - for specific asset IDs.\r\n            geo_block - only valid value is &quot;true&quot;: When enabled, only assets that are not restricted to the user by geo-block rules will return.\r\n            parental_rules - only valid value is &quot;true&quot;: When enabled, only assets that the user doesn&#39;t need to provide PIN code will return.\r\n            user_interests - only valid value is &quot;true&quot;. When enabled, only assets that the user defined as his interests (by tags and metas) will return.\r\n            epg_channel_id – the channel identifier of the EPG program.\r\n            entitled_assets - valid values: &quot;free&quot;, &quot;entitled&quot;, &quot;not_entitled&quot;, &quot;both&quot;. free - gets only free to watch assets. entitled - only those that the user is implicitly entitled to watch.\r\n            asset_type - valid values: &quot;media&quot;, &quot;epg&quot;, &quot;recording&quot; or any number that represents media type in group.\r\n            Comparison operators: for numerical fields =, &gt;, &gt;=, &lt;, &lt;=, : (in). \r\n            For alpha-numerical fields =, != (not), ~ (like), !~, ^ (any word starts with), ^= (phrase starts with), + (exists), !+ (not exists).\r\n            Logical conjunction: and, or. \r\n            Search values are limited to 20 characters each for the next operators: ~, !~, ^, ^=\r\n            (maximum length of entire filter is 4096 characters)",
          "type": "string"
        },
        "name": {
          "description": "Name",
          "type": "string"
        },
        "partnerListType": {
          "description": "Partner List Type (optional)",
          "type": "integer"
        }
      },
      "title": "KalturaPersonalList",
      "type": "object"
    },
    "KalturaPersonalListFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "properties": {
        "orderBy": {
          "enum": [
            "CREATE_DATE_DESC",
            "CREATE_DATE_ASC"
          ],
          "type": "string",
          "x-enumLabels": [
            "CREATE_DATE_DESC",
            "CREATE_DATE_ASC"
          ],
          "x-enumType": "KalturaPersonalListOrderBy"
        },
        "partnerListTypeIn": {
          "description": "Comma separated list of partner list types to search within. \r\n            If omitted – all types should be included.",
          "type": "string"
        }
      },
      "title": "KalturaPersonalListFilter",
      "type": "object"
    },
    "KalturaPersonalListListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "List of KalturaPersonalList.",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaPersonalList"
          },
          "type": "array"
        }
      },
      "title": "KalturaPersonalListListResponse",
      "type": "object"
    },
    "KalturaPersonalListSearchFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBaseSearchAssetFilter"
        }
      ],
      "properties": {
        "partnerListTypeIn": {
          "description": "Comma separated list of partner list types to search within. \r\n            If omitted - all types should be included.",
          "type": "string"
        }
      },
      "title": "KalturaPersonalListSearchFilter",
      "type": "object"
    },
    "KalturaPin": {
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaPin"
        },
        {
          "$ref": "#/definitions/KalturaPurchaseSettings"
        }
      ],
      "description": "PIN and its origin of definition",
      "discriminator": "objectType",
      "properties": {
        "objectType": {
          "enum": [
            "KalturaPin",
            "KalturaPurchaseSettings"
          ],
          "type": "string"
        },
        "origin": {
          "description": "Enum Type: `KalturaRuleLevel`\n\nWhere the PIN was defined at – account, household or user",
          "enum": [
            "invalid",
            "user",
            "household",
            "account"
          ],
          "type": "string",
          "x-enumLabels": [
            "INVALID",
            "USER",
            "HOUSEHOLD",
            "ACCOUNT"
          ],
          "x-enumType": "KalturaRuleLevel"
        },
        "pin": {
          "description": "PIN code",
          "type": "string"
        },
        "type": {
          "description": "Enum Type: `KalturaPinType`\n\nPIN type",
          "enum": [
            "purchase",
            "parental"
          ],
          "type": "string",
          "x-enumLabels": [
            "PURCHASE",
            "PARENTAL"
          ],
          "x-enumType": "KalturaPinType"
        }
      },
      "title": "KalturaPin",
      "type": "object"
    },
    "KalturaPinResponse": {
      "description": "PIN and its origin of definition",
      "properties": {
        "origin": {
          "description": "Enum Type: `KalturaRuleLevel`\n\nWhere the PIN was defined at – account, household or user",
          "enum": [
            "invalid",
            "user",
            "household",
            "account"
          ],
          "type": "string",
          "x-enumLabels": [
            "INVALID",
            "USER",
            "HOUSEHOLD",
            "ACCOUNT"
          ],
          "x-enumType": "KalturaRuleLevel"
        },
        "pin": {
          "description": "PIN code",
          "type": "string"
        },
        "type": {
          "description": "Enum Type: `KalturaPinType`\n\nPIN type",
          "enum": [
            "purchase",
            "parental"
          ],
          "type": "string",
          "x-enumLabels": [
            "PURCHASE",
            "PARENTAL"
          ],
          "x-enumType": "KalturaPinType"
        }
      },
      "title": "KalturaPinResponse",
      "type": "object"
    },
    "KalturaPlaybackContext": {
      "properties": {
        "actions": {
          "items": {
            "$ref": "#/definitions/KalturaRuleAction"
          },
          "type": "array"
        },
        "messages": {
          "items": {
            "$ref": "#/definitions/KalturaAccessControlMessage"
          },
          "type": "array"
        },
        "playbackCaptions": {
          "items": {
            "$ref": "#/definitions/KalturaCaptionPlaybackPluginData"
          },
          "type": "array"
        },
        "plugins": {
          "items": {
            "$ref": "#/definitions/KalturaPlaybackPluginData"
          },
          "type": "array"
        },
        "sources": {
          "items": {
            "$ref": "#/definitions/KalturaPlaybackSource"
          },
          "type": "array"
        }
      },
      "title": "KalturaPlaybackContext",
      "type": "object"
    },
    "KalturaPlaybackContextOptions": {
      "properties": {
        "adapterData": {
          "items": {
            "$ref": "#/definitions/KalturaStringValue"
          },
          "type": "array"
        },
        "assetFileIds": {
          "description": "List of comma separated media file IDs",
          "type": "string"
        },
        "context": {
          "description": "Enum Type: `KalturaPlaybackContextType`\n\nPlayback context type",
          "enum": [
            "TRAILER",
            "CATCHUP",
            "START_OVER",
            "PLAYBACK",
            "DOWNLOAD"
          ],
          "type": "string",
          "x-enumLabels": [
            "TRAILER",
            "CATCHUP",
            "START_OVER",
            "PLAYBACK",
            "DOWNLOAD"
          ],
          "x-enumType": "KalturaPlaybackContextType"
        },
        "mediaProtocol": {
          "description": "Protocol of the specific media object (http / https).",
          "type": "string"
        },
        "streamerType": {
          "description": "Playback streamer type: applehttp, mpegdash, url, smothstreaming, multicast, none",
          "type": "string"
        },
        "urlType": {
          "description": "Enum Type: `KalturaUrlType`\n\nUrl type",
          "enum": [
            "PLAYMANIFEST",
            "DIRECT"
          ],
          "type": "string",
          "x-enumLabels": [
            "PLAYMANIFEST",
            "DIRECT"
          ],
          "x-enumType": "KalturaUrlType"
        }
      },
      "title": "KalturaPlaybackContextOptions",
      "type": "object"
    },
    "KalturaPlaybackPartnerConfig": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaPartnerConfiguration"
        }
      ],
      "description": "Playback adapter partner configuration",
      "properties": {
        "defaultAdapters": {
          "$ref": "#/definitions/KalturaDefaultPlaybackAdapters"
        }
      },
      "title": "KalturaPlaybackPartnerConfig",
      "type": "object"
    },
    "KalturaPlaybackPluginData": {
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaPlaybackPluginData"
        },
        {
          "$ref": "#/definitions/KalturaBumpersPlaybackPluginData"
        }
      ],
      "discriminator": "objectType",
      "properties": {
        "objectType": {
          "enum": [
            "KalturaPlaybackPluginData",
            "KalturaBumpersPlaybackPluginData"
          ],
          "type": "string"
        }
      },
      "title": "KalturaPlaybackPluginData",
      "type": "object"
    },
    "KalturaPlaybackProfile": {
      "description": "Playback profile",
      "properties": {
        "adapterGrpcAddress": {
          "description": "Playback profile Grpc address",
          "type": "string"
        },
        "adapterUrl": {
          "description": "Playback profile URL",
          "type": "string"
        },
        "id": {
          "description": "`readOnly`\n\nPlayback profile identifier",
          "readOnly": true,
          "type": "integer"
        },
        "isActive": {
          "description": "Playback profile active status",
          "type": "boolean"
        },
        "name": {
          "description": "Playback profile name",
          "type": "string"
        },
        "settings": {
          "description": "Playback profile settings",
          "type": "string"
        },
        "sharedSecret": {
          "description": "`readOnly`\n\nPlayback adapter shared secret",
          "readOnly": true,
          "type": "string"
        },
        "systemName": {
          "description": "Playback profile alias",
          "type": "string"
        }
      },
      "title": "KalturaPlaybackProfile",
      "type": "object"
    },
    "KalturaPlaybackProfileFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "description": "User asset rule filter",
      "properties": {
        "orderBy": {
          "enum": [
            "NAME_ASC"
          ],
          "type": "string",
          "x-enumLabels": [
            "NAME_ASC"
          ],
          "x-enumType": "KalturaPlaybackProfileOrderBy"
        },
        "playbackProfileEqual": {
          "description": "Playback profile to filter by",
          "type": "integer"
        }
      },
      "title": "KalturaPlaybackProfileFilter",
      "type": "object"
    },
    "KalturaPlaybackProfileListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaPlaybackProfile"
          },
          "type": "array"
        }
      },
      "title": "KalturaPlaybackProfileListResponse",
      "type": "object"
    },
    "KalturaPlaybackSource": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaMediaFile"
        }
      ],
      "properties": {
        "businessModuleId": {
          "description": "`readOnly`\n\nBusiness Module Id",
          "readOnly": true,
          "type": "integer"
        },
        "businessModuleType": {
          "description": "`readOnly`\n\nEnum Type: `KalturaTransactionType`\n\nBusiness Module Type",
          "enum": [
            "ppv",
            "subscription",
            "collection",
            "programAssetGroupOffer"
          ],
          "readOnly": true,
          "type": "string",
          "x-enumLabels": [
            "PPV",
            "SUBSCRIPTION",
            "COLLECTION",
            "PROGRAMASSETGROUPOFFER"
          ],
          "x-enumType": "KalturaTransactionType"
        },
        "drm": {
          "items": {
            "$ref": "#/definitions/KalturaDrmPlaybackPluginData"
          },
          "type": "array"
        },
        "format": {
          "description": "Source format according to delivery profile streamer type (applehttp, mpegdash etc.)",
          "type": "string"
        },
        "isTokenized": {
          "description": "Is Tokenized",
          "type": "boolean"
        },
        "protocols": {
          "description": "Comma separated string according to deliveryProfile media protocols (&#39;http,https&#39; etc.)",
          "type": "string"
        }
      },
      "title": "KalturaPlaybackSource",
      "type": "object"
    },
    "KalturaPlayerAssetData": {
      "description": "Kaltura bookmark data",
      "properties": {
        "action": {
          "description": "Action: HIT/PLAY/STOP/PAUSE/FIRST_PLAY/SWOOSH/FULL_SCREEN/SEND_TO_FRIEND/LOAD/FULL_SCREEN_EXIT/FINISH/BITRATE_CHANGE/ERROR/NONE",
          "type": "string"
        },
        "averageBitrate": {
          "description": "Average Bitrate",
          "type": "integer"
        },
        "currentBitrate": {
          "description": "Current Bitrate",
          "type": "integer"
        },
        "location": {
          "description": "Location",
          "type": "integer"
        },
        "totalBitrate": {
          "description": "Total Bitrate",
          "type": "integer"
        }
      },
      "title": "KalturaPlayerAssetData",
      "type": "object"
    },
    "KalturaPluginData": {
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaPluginData"
        },
        {
          "$ref": "#/definitions/KalturaDrmPlaybackPluginData"
        },
        {
          "$ref": "#/definitions/KalturaCustomDrmPlaybackPluginData"
        },
        {
          "$ref": "#/definitions/KalturaFairPlayPlaybackPluginData"
        }
      ],
      "discriminator": "objectType",
      "properties": {
        "objectType": {
          "enum": [
            "KalturaPluginData",
            "KalturaDrmPlaybackPluginData",
            "KalturaCustomDrmPlaybackPluginData",
            "KalturaFairPlayPlaybackPluginData"
          ],
          "type": "string"
        }
      },
      "title": "KalturaPluginData",
      "type": "object"
    },
    "KalturaPpv": {
      "description": "PPV details",
      "properties": {
        "adsPolicy": {
          "description": "Enum Type: `KalturaAdsPolicy`\n\nadsPolicy",
          "enum": [
            "NO_ADS",
            "KEEP_ADS"
          ],
          "type": "string",
          "x-enumLabels": [
            "NO_ADS",
            "KEEP_ADS"
          ],
          "x-enumType": "KalturaAdsPolicy"
        },
        "assetUserRuleId": {
          "description": "Asset user rule identifier",
          "type": "integer"
        },
        "couponsGroup": {
          "$ref": "#/definitions/KalturaCouponsGroup"
        },
        "couponsGroupId": {
          "description": "Coupons group id for the ppv",
          "type": "integer"
        },
        "createDate": {
          "description": "`readOnly`\n\nSpecifies when was the ppv created. Date and time represented as epoch.",
          "readOnly": true,
          "type": "integer",
          "x-inputType": "datetime"
        },
        "descriptions": {
          "items": {
            "$ref": "#/definitions/KalturaTranslationToken"
          },
          "type": "array"
        },
        "discountId": {
          "description": "The discount id for the ppv",
          "type": "integer"
        },
        "discountModule": {
          "$ref": "#/definitions/KalturaDiscountModule"
        },
        "fileTypes": {
          "items": {
            "$ref": "#/definitions/KalturaIntegerValue"
          },
          "type": "array"
        },
        "fileTypesIds": {
          "description": "Comma separated file types identifiers that are supported in this subscription",
          "type": "string"
        },
        "firstDeviceLimitation": {
          "description": "Indicates whether or not this ppv can be consumed only on the first device",
          "type": "boolean"
        },
        "id": {
          "description": "PPV identifier",
          "type": "string"
        },
        "isActive": {
          "description": "Is active ppv",
          "type": "boolean"
        },
        "isSubscriptionOnly": {
          "description": "Indicates whether or not this ppv can be purchased standalone or only as part of a subscription",
          "type": "boolean"
        },
        "name": {
          "description": "the name for the ppv",
          "type": "string"
        },
        "price": {
          "$ref": "#/definitions/KalturaPriceDetails"
        },
        "priceDetailsId": {
          "description": "The price if of the ppv",
          "type": "integer"
        },
        "productCode": {
          "description": "Product code for the ppv",
          "type": "string"
        },
        "updateDate": {
          "description": "`readOnly`\n\nSpecifies when was the ppv last updated. Date and time represented as epoch.",
          "readOnly": true,
          "type": "integer",
          "x-inputType": "datetime"
        },
        "usageModule": {
          "$ref": "#/definitions/KalturaUsageModule"
        },
        "usageModuleId": {
          "description": "PPV usage module Id",
          "type": "integer"
        },
        "virtualAssetId": {
          "description": "`readOnly`\n\nVirtual asset id",
          "readOnly": true,
          "type": "integer"
        }
      },
      "title": "KalturaPpv",
      "type": "object"
    },
    "KalturaPpvEntitlement": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaEntitlement"
        }
      ],
      "description": "KalturaPpvEntitlement",
      "properties": {
        "mediaFileId": {
          "description": "`readOnly`\n\nMedia file identifier",
          "readOnly": true,
          "type": "integer"
        },
        "mediaId": {
          "description": "`readOnly`\n\nMedia identifier",
          "readOnly": true,
          "type": "integer"
        }
      },
      "title": "KalturaPpvEntitlement",
      "type": "object"
    },
    "KalturaPpvFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "description": "Filtering Asset Struct Metas",
      "properties": {
        "alsoInactive": {
          "description": "return also inactive",
          "type": "boolean"
        },
        "assetUserRuleIdIn": {
          "description": "comma-separated list of KalturaPpv.assetUserRuleId values.  Matching KalturaPpv objects will be returned by the filter.",
          "type": "string"
        },
        "couponGroupIdEqual": {
          "description": "couponGroupIdEqual",
          "type": "integer"
        },
        "idIn": {
          "description": "Comma separated identifiers",
          "type": "string"
        },
        "nameContains": {
          "description": "A string that is included in the ppv name",
          "type": "string"
        },
        "orderBy": {
          "enum": [
            "NAME_ASC",
            "NAME_DESC",
            "UPDATE_DATE_ASC",
            "UPDATE_DATE_DESC"
          ],
          "type": "string",
          "x-enumLabels": [
            "NAME_ASC",
            "NAME_DESC",
            "UPDATE_DATE_ASC",
            "UPDATE_DATE_DESC"
          ],
          "x-enumType": "KalturaPpvOrderBy"
        }
      },
      "title": "KalturaPpvFilter",
      "type": "object"
    },
    "KalturaPpvListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "Prices list",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaPpv"
          },
          "type": "array"
        }
      },
      "title": "KalturaPpvListResponse",
      "type": "object"
    },
    "KalturaPpvPrice": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaProductPrice"
        }
      ],
      "description": "PPV price details",
      "properties": {
        "collectionId": {
          "description": "The identifier of the relevant collection",
          "type": "string"
        },
        "discountEndDate": {
          "description": "Discount end date",
          "type": "integer",
          "x-inputType": "datetime"
        },
        "endDate": {
          "description": "If the item already purchased - until when the user can watch the item",
          "type": "integer",
          "x-inputType": "datetime"
        },
        "fileId": {
          "description": "Media file identifier",
          "type": "integer"
        },
        "firstDeviceName": {
          "description": "If the item already purchased and played - the name of the device on which it was first played",
          "type": "string"
        },
        "isInCancelationPeriod": {
          "description": "If waiver period is enabled - donates whether the user is still in the cancelation window",
          "type": "boolean"
        },
        "isSubscriptionOnly": {
          "description": "Denotes whether this object is available only as part of a subscription or can be sold separately",
          "type": "boolean"
        },
        "ppvDescriptions": {
          "items": {
            "$ref": "#/definitions/KalturaTranslationToken"
          },
          "type": "array"
        },
        "ppvModuleId": {
          "description": "The associated PPV module identifier",
          "type": "string"
        },
        "ppvProductCode": {
          "description": "The PPV product code",
          "type": "string"
        },
        "prePaidId": {
          "description": "The identifier of the relevant pre paid",
          "type": "string"
        },
        "purchaseUserId": {
          "description": "If the item already purchased - the identifier of the user (in the household) who purchased this item",
          "type": "string"
        },
        "purchasedMediaFileId": {
          "description": "If the item already purchased - the identifier of the purchased file",
          "type": "integer"
        },
        "relatedMediaFileIds": {
          "items": {
            "$ref": "#/definitions/KalturaIntegerValue"
          },
          "type": "array"
        },
        "startDate": {
          "description": "If the item already purchased - since when the user can start watching the item",
          "type": "integer",
          "x-inputType": "datetime"
        },
        "subscriptionId": {
          "description": "The identifier of the relevant subscription",
          "type": "string"
        }
      },
      "title": "KalturaPpvPrice",
      "type": "object"
    },
    "KalturaPremiumService": {
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaPremiumService"
        },
        {
          "$ref": "#/definitions/KalturaHouseholdPremiumService"
        },
        {
          "$ref": "#/definitions/KalturaNpvrPremiumService"
        }
      ],
      "description": "Premium service",
      "discriminator": "objectType",
      "properties": {
        "id": {
          "description": "Service identifier",
          "type": "integer"
        },
        "name": {
          "description": "Service name / description",
          "type": "string"
        },
        "objectType": {
          "enum": [
            "KalturaPremiumService",
            "KalturaHouseholdPremiumService",
            "KalturaNpvrPremiumService"
          ],
          "type": "string"
        }
      },
      "title": "KalturaPremiumService",
      "type": "object"
    },
    "KalturaPreviewModule": {
      "description": "Preview module",
      "properties": {
        "id": {
          "description": "`readOnly`\n\nPreview module identifier",
          "readOnly": true,
          "type": "integer"
        },
        "lifeCycle": {
          "description": "Preview module life cycle - for how long the preview module is active",
          "type": "integer"
        },
        "name": {
          "description": "Preview module name",
          "type": "string"
        },
        "nonRenewablePeriod": {
          "description": "The time you can&#39;t buy the item to which the preview module is assigned to again",
          "type": "integer"
        }
      },
      "title": "KalturaPreviewModule",
      "type": "object"
    },
    "KalturaPreviewModuleFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "properties": {
        "idIn": {
          "description": "Comma separated discount codes",
          "type": "string"
        },
        "orderBy": {
          "enum": [
            "NONE"
          ],
          "type": "string",
          "x-enumLabels": [
            "NONE"
          ],
          "x-enumType": "KalturaPreviewModuleOrderBy"
        }
      },
      "title": "KalturaPreviewModuleFilter",
      "type": "object"
    },
    "KalturaPreviewModuleListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaPreviewModule"
          },
          "type": "array"
        }
      },
      "title": "KalturaPreviewModuleListResponse",
      "type": "object"
    },
    "KalturaPrice": {
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaPrice"
        },
        {
          "$ref": "#/definitions/KalturaDiscount"
        }
      ],
      "description": "Price",
      "discriminator": "objectType",
      "properties": {
        "amount": {
          "description": "Price",
          "type": "number"
        },
        "countryId": {
          "description": "Country ID",
          "type": "integer"
        },
        "currency": {
          "description": "Currency",
          "type": "string"
        },
        "currencyId": {
          "description": "`readOnly`\n\nCurrency ID",
          "readOnly": true,
          "type": "integer"
        },
        "currencySign": {
          "description": "Currency Sign",
          "type": "string"
        },
        "objectType": {
          "enum": [
            "KalturaPrice",
            "KalturaDiscount"
          ],
          "type": "string"
        }
      },
      "title": "KalturaPrice",
      "type": "object"
    },
    "KalturaPriceDetails": {
      "description": "Price details",
      "properties": {
        "descriptions": {
          "items": {
            "$ref": "#/definitions/KalturaTranslationToken"
          },
          "type": "array"
        },
        "id": {
          "description": "`readOnly`\n\nThe price code identifier",
          "readOnly": true,
          "type": "integer"
        },
        "multiCurrencyPrice": {
          "items": {
            "$ref": "#/definitions/KalturaPrice"
          },
          "type": "array"
        },
        "name": {
          "description": "The price code name",
          "type": "string"
        },
        "price": {
          "$ref": "#/definitions/KalturaPrice"
        }
      },
      "title": "KalturaPriceDetails",
      "type": "object"
    },
    "KalturaPriceDetailsFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "properties": {
        "idIn": {
          "description": "Comma separated price identifiers",
          "type": "string"
        },
        "orderBy": {
          "enum": [
            "NAME_ASC"
          ],
          "type": "string",
          "x-enumLabels": [
            "NAME_ASC"
          ],
          "x-enumType": "KalturaPriceDetailsOrderBy"
        }
      },
      "title": "KalturaPriceDetailsFilter",
      "type": "object"
    },
    "KalturaPriceDetailsListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaPriceDetails"
          },
          "type": "array"
        }
      },
      "title": "KalturaPriceDetailsListResponse",
      "type": "object"
    },
    "KalturaPricePlan": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaUsageModule"
        }
      ],
      "description": "Price plan",
      "properties": {
        "discountId": {
          "description": "`writeOnly`\n\nThe discount module identifier of the price plan",
          "type": "integer"
        },
        "isRenewable": {
          "description": "`writeOnly`\n\nDenotes whether or not this object can be renewed",
          "type": "boolean"
        },
        "priceDetailsId": {
          "description": "The ID of the price details associated with this price plan",
          "type": "integer"
        },
        "renewalsNumber": {
          "description": "`writeOnly`\n\nDefines the number of times the module will be renewed (for the life_cycle period)",
          "type": "integer"
        }
      },
      "title": "KalturaPricePlan",
      "type": "object"
    },
    "KalturaPricePlanFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "properties": {
        "idIn": {
          "description": "Comma separated price plans identifiers",
          "type": "string"
        },
        "orderBy": {
          "enum": [
            "CREATE_DATE_DESC"
          ],
          "type": "string",
          "x-enumLabels": [
            "CREATE_DATE_DESC"
          ],
          "x-enumType": "KalturaPricePlanOrderBy"
        }
      },
      "title": "KalturaPricePlanFilter",
      "type": "object"
    },
    "KalturaPricePlanListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaPricePlan"
          },
          "type": "array"
        }
      },
      "title": "KalturaPricePlanListResponse",
      "type": "object"
    },
    "KalturaPriorityGroupFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaRelatedObjectFilter"
        }
      ],
      "description": "It&#39;s just a pure fabrication filter not intended to filter smth.",
      "properties": {},
      "title": "KalturaPriorityGroupFilter",
      "type": "object"
    },
    "KalturaProductCode": {
      "description": "Product Code",
      "properties": {
        "code": {
          "description": "Product Code",
          "type": "string"
        },
        "inappProvider": {
          "description": "Provider Name",
          "type": "string"
        }
      },
      "title": "KalturaProductCode",
      "type": "object"
    },
    "KalturaProductMarkup": {
      "description": "Product Markup",
      "properties": {
        "isEntitled": {
          "description": "`readOnly`\n\nIs Entitled to this product",
          "readOnly": true,
          "type": "boolean"
        },
        "productId": {
          "description": "`readOnly`\n\nProduct Id",
          "readOnly": true,
          "type": "integer"
        },
        "productType": {
          "description": "`readOnly`\n\nEnum Type: `KalturaTransactionType`\n\nProduct Type",
          "enum": [
            "ppv",
            "subscription",
            "collection",
            "programAssetGroupOffer"
          ],
          "readOnly": true,
          "type": "string",
          "x-enumLabels": [
            "PPV",
            "SUBSCRIPTION",
            "COLLECTION",
            "PROGRAMASSETGROUPOFFER"
          ],
          "x-enumType": "KalturaTransactionType"
        }
      },
      "title": "KalturaProductMarkup",
      "type": "object"
    },
    "KalturaProductPrice": {
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaCollectionPrice"
        },
        {
          "$ref": "#/definitions/KalturaPpvPrice"
        },
        {
          "$ref": "#/definitions/KalturaProgramAssetGroupOfferPrice"
        },
        {
          "$ref": "#/definitions/KalturaSubscriptionPrice"
        }
      ],
      "description": "`abstract`",
      "discriminator": "objectType",
      "properties": {
        "fullPrice": {
          "$ref": "#/definitions/KalturaPrice"
        },
        "objectType": {
          "enum": [
            "KalturaCollectionPrice",
            "KalturaPpvPrice",
            "KalturaProgramAssetGroupOfferPrice",
            "KalturaSubscriptionPrice"
          ],
          "type": "string"
        },
        "price": {
          "$ref": "#/definitions/KalturaPrice"
        },
        "productId": {
          "description": "Product identifier",
          "type": "string"
        },
        "productType": {
          "description": "Enum Type: `KalturaTransactionType`\n\nProduct Type",
          "enum": [
            "ppv",
            "subscription",
            "collection",
            "programAssetGroupOffer"
          ],
          "type": "string",
          "x-enumLabels": [
            "PPV",
            "SUBSCRIPTION",
            "COLLECTION",
            "PROGRAMASSETGROUPOFFER"
          ],
          "x-enumType": "KalturaTransactionType"
        },
        "promotionInfo": {
          "$ref": "#/definitions/KalturaPromotionInfo"
        },
        "purchaseStatus": {
          "description": "Enum Type: `KalturaPurchaseStatus`\n\nProduct purchase status",
          "enum": [
            "ppv_purchased",
            "free",
            "for_purchase_subscription_only",
            "subscription_purchased",
            "for_purchase",
            "subscription_purchased_wrong_currency",
            "pre_paid_purchased",
            "geo_commerce_blocked",
            "entitled_to_preview_module",
            "first_device_limitation",
            "collection_purchased",
            "user_suspended",
            "not_for_purchase",
            "invalid_currency",
            "currency_not_defined_on_price_code",
            "pending_entitlement",
            "program_asset_group_offer_purchased"
          ],
          "type": "string",
          "x-enumLabels": [
            "PPV_PURCHASED",
            "FREE",
            "FOR_PURCHASE_SUBSCRIPTION_ONLY",
            "SUBSCRIPTION_PURCHASED",
            "FOR_PURCHASE",
            "SUBSCRIPTION_PURCHASED_WRONG_CURRENCY",
            "PRE_PAID_PURCHASED",
            "GEO_COMMERCE_BLOCKED",
            "ENTITLED_TO_PREVIEW_MODULE",
            "FIRST_DEVICE_LIMITATION",
            "COLLECTION_PURCHASED",
            "USER_SUSPENDED",
            "NOT_FOR_PURCHASE",
            "INVALID_CURRENCY",
            "CURRENCY_NOT_DEFINED_ON_PRICE_CODE",
            "PENDING_ENTITLEMENT",
            "PROGRAM_ASSET_GROUP_OFFER_PURCHASED"
          ],
          "x-enumType": "KalturaPurchaseStatus"
        }
      },
      "title": "KalturaProductPrice",
      "type": "object",
      "x-abstract": true
    },
    "KalturaProductPriceFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "properties": {
        "collectionIdIn": {
          "description": "Comma separated collections identifiers",
          "type": "string"
        },
        "couponCodeEqual": {
          "description": "Discount coupon code",
          "type": "string"
        },
        "fileIdIn": {
          "description": "Comma separated media files identifiers",
          "type": "string"
        },
        "isLowest": {
          "description": "A flag that indicates if only the lowest price of an item should return",
          "type": "boolean"
        },
        "orderBy": {
          "enum": [
            "PRODUCT_ID_ASC",
            "PRODUCT_ID_DESC"
          ],
          "type": "string",
          "x-enumLabels": [
            "PRODUCT_ID_ASC",
            "PRODUCT_ID_DESC"
          ],
          "x-enumType": "KalturaProductPriceOrderBy"
        },
        "programAssetGroupOfferIdIn": {
          "description": "Comma separated ProgramAssetGroupOffer identifiers",
          "type": "string"
        },
        "subscriptionIdIn": {
          "description": "Comma separated subscriptions identifiers",
          "type": "string"
        }
      },
      "title": "KalturaProductPriceFilter",
      "type": "object"
    },
    "KalturaProductPriceListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "Prices list",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaProductPrice"
          },
          "type": "array"
        }
      },
      "title": "KalturaProductPriceListResponse",
      "type": "object"
    },
    "KalturaProductsPriceListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "Prices list",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaProductPrice"
          },
          "type": "array"
        }
      },
      "title": "KalturaProductsPriceListResponse",
      "type": "object"
    },
    "KalturaProgramAsset": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaAsset"
        }
      ],
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaProgramAsset"
        },
        {
          "$ref": "#/definitions/KalturaRecordingAsset"
        },
        {
          "$ref": "#/definitions/KalturaEpg"
        }
      ],
      "description": "Program-asset info",
      "discriminator": "objectType",
      "properties": {
        "crid": {
          "description": "Unique identifier for the program",
          "type": "string"
        },
        "enableCatchUp": {
          "description": "Is catch-up enabled for this asset\r\n            Please, note that value of this property is strictly connected with Catch Up setting on Partner and KalturaLiveAsset levels.\r\n            In order to enable Catch Up for KalturaProgramAsset, Partner and KalturaLiveAsset Catch Up settings should be enabled.",
          "type": "boolean"
        },
        "enableCdvr": {
          "description": "Is CDVR enabled for this asset\r\n            Please, note that value of this property is strictly connected with CDV-R setting on Partner and KalturaLiveAsset levels.\r\n            In order to enable CDV-R for KalturaProgramAsset, Partner and KalturaLiveAsset CDV-R settings should be enabled.",
          "type": "boolean"
        },
        "enableStartOver": {
          "description": "Is start over enabled for this asset\r\n            Please, note that value of this property is strictly connected with Start Over setting on Partner and KalturaLiveAsset levels.\r\n            In order to enable Start Over for KalturaProgramAsset, Partner and KalturaLiveAsset Start Over settings should be enabled.",
          "type": "boolean"
        },
        "enableTrickPlay": {
          "description": "Is trick-play enabled for this asset\r\n            Please, note that value of this property is strictly connected with Trick Play setting on Partner and KalturaLiveAsset levels.\r\n            In order to enable Trick Play for KalturaProgramAsset, Partner and KalturaLiveAsset Trick Play settings should be enabled.",
          "type": "boolean"
        },
        "epgChannelId": {
          "description": "`readOnly`\n\nEPG channel identifier",
          "readOnly": true,
          "type": "integer"
        },
        "epgId": {
          "description": "`readOnly`\n\nEPG identifier",
          "readOnly": true,
          "type": "string"
        },
        "externalOfferIds": {
          "description": "Contains comma separate list of KalturaProgramAssetGroupOffer.externalOfferId values indicating the PAGOs to which the Program Asset is bound.",
          "type": "string"
        },
        "linearAssetId": {
          "description": "`insertOnly`\n\nId of linear media asset",
          "type": "integer"
        },
        "objectType": {
          "enum": [
            "KalturaProgramAsset",
            "KalturaRecordingAsset",
            "KalturaEpg"
          ],
          "type": "string"
        },
        "relatedMediaId": {
          "description": "Ralated media identifier",
          "type": "integer"
        }
      },
      "title": "KalturaProgramAsset",
      "type": "object"
    },
    "KalturaProgramAssetEvent": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaAssetEvent"
        }
      ],
      "properties": {
        "liveAssetId": {
          "description": "`readOnly`\n\nThe  live asset Id that was identified according liveAssetExternalId",
          "readOnly": true,
          "type": "integer"
        }
      },
      "title": "KalturaProgramAssetEvent",
      "type": "object"
    },
    "KalturaProgramAssetGroupOffer": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaOTTObjectSupportNullable"
        }
      ],
      "description": "Program asset group offer details",
      "properties": {
        "createDate": {
          "description": "`readOnly`\n\nSpecifies when was the pago created. Date and time represented as epoch.",
          "readOnly": true,
          "type": "integer",
          "x-inputType": "datetime"
        },
        "description": {
          "description": "`readOnly`\n\nA list of the descriptions of the Program asset group offer on different languages (language code and translation)",
          "readOnly": true,
          "type": "string"
        },
        "endDate": {
          "description": "The date/time at which the Program Asset Group Offer is last purchasable by households.Date and time represented as epoch.",
          "type": "integer",
          "x-inputType": "datetime"
        },
        "expiryDate": {
          "description": "The last date/time at which the system will attempt to locate Program Assets that may be associated with this offer.Date and time represented as epoch.",
          "type": "integer",
          "x-inputType": "datetime"
        },
        "externalId": {
          "description": "External identifier",
          "type": "string"
        },
        "externalOfferId": {
          "description": "Identifies the Program Assets which will be entitled by Households that purchase this offer. Must be a unique value in the context of an account.",
          "type": "string"
        },
        "fileTypesIds": {
          "description": "Comma separated file types identifiers that are supported in this Program asset group offer.\r\n            The subset of KalturaMediaFiles of the live linear channel on which the associated Program Assets are carried to which households entitled to this\r\n            Program Asset Group Offer are entitled to view E.g.may be used to restrict entitlement only to HD flavour of the Program Asset(and not the UHD flavour)\r\n            If this parameter is empty, the Household shall be entitled to all KalturaMediaFiles associated with the KalturaLiveAsset.",
          "type": "string"
        },
        "id": {
          "description": "Unique Kaltura internal identifier for the module",
          "type": "integer"
        },
        "isActive": {
          "description": "Indicates whether the PAGO is active or not (includes whether the PAGO can be purchased and whether it is returned in list API response for regular users)",
          "type": "boolean"
        },
        "multilingualDescription": {
          "items": {
            "$ref": "#/definitions/KalturaTranslationToken"
          },
          "type": "array"
        },
        "multilingualName": {
          "items": {
            "$ref": "#/definitions/KalturaTranslationToken"
          },
          "type": "array"
        },
        "name": {
          "description": "`readOnly`\n\nName of the Program asset group offer",
          "readOnly": true,
          "type": "string"
        },
        "priceDetailsId": {
          "description": "ID of the KalturaPriceDetails object which contains details of the price to be paid for purchasing this KalturaProgramAssetGroupOffer.",
          "type": "integer"
        },
        "startDate": {
          "description": "The date/time at which the Program Asset Group Offer is first purchasable by households. Date and time represented as epoch.",
          "type": "integer",
          "x-inputType": "datetime"
        },
        "updateDate": {
          "description": "`readOnly`\n\nSpecifies when was the pago last updated. Date and time represented as epoch.",
          "readOnly": true,
          "type": "integer",
          "x-inputType": "datetime"
        },
        "virtualAssetId": {
          "description": "`readOnly`\n\nThe id of the paired asset",
          "readOnly": true,
          "type": "integer"
        }
      },
      "title": "KalturaProgramAssetGroupOffer",
      "type": "object"
    },
    "KalturaProgramAssetGroupOfferEntitlement": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaEntitlement"
        }
      ],
      "description": "ProgramAssetGroupOfferEntitlement",
      "properties": {},
      "title": "KalturaProgramAssetGroupOfferEntitlement",
      "type": "object"
    },
    "KalturaProgramAssetGroupOfferEntitlementFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaEntitlementFilter"
        }
      ],
      "description": "Program asset group offer Entitlements filter",
      "properties": {},
      "title": "KalturaProgramAssetGroupOfferEntitlementFilter",
      "type": "object"
    },
    "KalturaProgramAssetGroupOfferFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaProgramAssetGroupOfferFilter"
        },
        {
          "$ref": "#/definitions/KalturaProgramAssetGroupOfferIdInFilter"
        }
      ],
      "description": "Program asset group offer filter",
      "discriminator": "objectType",
      "properties": {
        "alsoInactive": {
          "description": "return also inactive",
          "type": "boolean"
        },
        "nameContains": {
          "description": "A string that is included in the PAGO name",
          "type": "string"
        },
        "objectType": {
          "enum": [
            "KalturaProgramAssetGroupOfferFilter",
            "KalturaProgramAssetGroupOfferIdInFilter"
          ],
          "type": "string"
        },
        "orderBy": {
          "enum": [
            "NAME_ASC",
            "NAME_DESC",
            "UPDATE_DATE_ASC",
            "UPDATE_DATE_DESC"
          ],
          "type": "string",
          "x-enumLabels": [
            "NAME_ASC",
            "NAME_DESC",
            "UPDATE_DATE_ASC",
            "UPDATE_DATE_DESC"
          ],
          "x-enumType": "KalturaProgramAssetGroupOfferOrderBy"
        }
      },
      "title": "KalturaProgramAssetGroupOfferFilter",
      "type": "object"
    },
    "KalturaProgramAssetGroupOfferIdInFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaProgramAssetGroupOfferFilter"
        }
      ],
      "description": "Program asset group offer filter",
      "properties": {
        "idIn": {
          "description": "Comma separated asset group offer identifiers",
          "type": "string"
        }
      },
      "title": "KalturaProgramAssetGroupOfferIdInFilter",
      "type": "object"
    },
    "KalturaProgramAssetGroupOfferListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "ProgramAssetGroupOffer list",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaProgramAssetGroupOffer"
          },
          "type": "array"
        }
      },
      "title": "KalturaProgramAssetGroupOfferListResponse",
      "type": "object"
    },
    "KalturaProgramAssetGroupOfferPrice": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaProductPrice"
        }
      ],
      "description": "ProgramAssetGroupOffer price details",
      "properties": {},
      "title": "KalturaProgramAssetGroupOfferPrice",
      "type": "object"
    },
    "KalturaPromotion": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBasePromotion"
        }
      ],
      "description": "Promotion",
      "properties": {
        "discountModuleId": {
          "description": "The discount module id that is promoted to the user",
          "type": "integer"
        },
        "maxDiscountUsages": {
          "description": "The number of times a household can use the discount module in this campaign.\r\n            If omitted than no limitation is enforced on the number of usages.",
          "type": "integer"
        },
        "numberOfRecurring": {
          "description": "the numer of recurring for this promotion",
          "type": "integer"
        }
      },
      "title": "KalturaPromotion",
      "type": "object"
    },
    "KalturaPromotionInfo": {
      "properties": {
        "campaignId": {
          "description": "Campaign Id",
          "type": "integer"
        }
      },
      "title": "KalturaPromotionInfo",
      "type": "object"
    },
    "KalturaPropertySkipCondition": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaSkipCondition"
        }
      ],
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaPropertySkipCondition"
        },
        {
          "$ref": "#/definitions/KalturaAggregatedPropertySkipCondition"
        }
      ],
      "description": "Skips current request according to condition on given property",
      "discriminator": "objectType",
      "properties": {
        "objectType": {
          "enum": [
            "KalturaPropertySkipCondition",
            "KalturaAggregatedPropertySkipCondition"
          ],
          "type": "string"
        },
        "operator": {
          "description": "Enum Type: `KalturaSkipOperators`\n\nThe operator that applies the check to the condition",
          "enum": [
            "Equal",
            "UnEqual",
            "LessThan",
            "GreaterThan"
          ],
          "type": "string",
          "x-enumLabels": [
            "EQUAL",
            "UNEQUAL",
            "LESSTHAN",
            "GREATERTHAN"
          ],
          "x-enumType": "KalturaSkipOperators"
        },
        "propertyPath": {
          "description": "The property path on which the condition is checked",
          "type": "string"
        },
        "value": {
          "description": "The value on which the condition is checked",
          "type": "string"
        }
      },
      "title": "KalturaPropertySkipCondition",
      "type": "object"
    },
    "KalturaPublicCouponGenerationOptions": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaCouponGenerationOptions"
        }
      ],
      "properties": {
        "code": {
          "description": "Coupon code (name)",
          "type": "string"
        }
      },
      "title": "KalturaPublicCouponGenerationOptions",
      "type": "object"
    },
    "KalturaPurchase": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaPurchaseBase"
        }
      ],
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaPurchase"
        },
        {
          "$ref": "#/definitions/KalturaPurchaseSession"
        }
      ],
      "discriminator": "objectType",
      "properties": {
        "coupon": {
          "description": "Coupon code",
          "type": "string"
        },
        "currency": {
          "description": "Identifier for paying currency, according to ISO 4217",
          "type": "string"
        },
        "objectType": {
          "enum": [
            "KalturaPurchase",
            "KalturaPurchaseSession"
          ],
          "type": "string"
        },
        "paymentGatewayId": {
          "description": "Identifier for a pre-associated payment gateway. If not provided – the account’s default payment gateway is used",
          "type": "integer"
        },
        "paymentMethodId": {
          "description": "Identifier for a pre-entered payment method. If not provided – the household’s default payment method is used",
          "type": "integer"
        },
        "price": {
          "description": "Net sum to charge – as a one-time transaction. Price must match the previously provided price for the specified content.",
          "type": "number"
        }
      },
      "title": "KalturaPurchase",
      "type": "object"
    },
    "KalturaPurchaseBase": {
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaPurchaseBase"
        },
        {
          "$ref": "#/definitions/KalturaPurchase"
        },
        {
          "$ref": "#/definitions/KalturaExternalReceipt"
        },
        {
          "$ref": "#/definitions/KalturaPurchaseSession"
        }
      ],
      "discriminator": "objectType",
      "properties": {
        "adapterData": {
          "description": "Additional data for the adapter",
          "type": "string"
        },
        "contentId": {
          "description": "Identifier for the content to purchase. Relevant only if Product type = PPV",
          "type": "integer"
        },
        "objectType": {
          "enum": [
            "KalturaPurchaseBase",
            "KalturaPurchase",
            "KalturaExternalReceipt",
            "KalturaPurchaseSession"
          ],
          "type": "string"
        },
        "productId": {
          "description": "Identifier for the package from which this content is offered",
          "type": "integer"
        },
        "productType": {
          "description": "Enum Type: `KalturaTransactionType`\n\nPackage type. Possible values: PPV, Subscription, Collection",
          "enum": [
            "ppv",
            "subscription",
            "collection",
            "programAssetGroupOffer"
          ],
          "type": "string",
          "x-enumLabels": [
            "PPV",
            "SUBSCRIPTION",
            "COLLECTION",
            "PROGRAMASSETGROUPOFFER"
          ],
          "x-enumType": "KalturaTransactionType"
        }
      },
      "title": "KalturaPurchaseBase",
      "type": "object"
    },
    "KalturaPurchaseSession": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaPurchase"
        }
      ],
      "properties": {
        "previewModuleId": {
          "description": "Preview module identifier (relevant only for subscription)",
          "type": "integer"
        }
      },
      "title": "KalturaPurchaseSession",
      "type": "object"
    },
    "KalturaPurchaseSettings": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaPin"
        }
      ],
      "description": "Purchase settings and PIN",
      "properties": {
        "permission": {
          "description": "Enum Type: `KalturaPurchaseSettingsType`\n\nPurchase permission - block, ask or allow",
          "enum": [
            "block",
            "ask",
            "allow"
          ],
          "type": "string",
          "x-enumLabels": [
            "BLOCK",
            "ASK",
            "ALLOW"
          ],
          "x-enumType": "KalturaPurchaseSettingsType"
        }
      },
      "title": "KalturaPurchaseSettings",
      "type": "object"
    },
    "KalturaPushMessage": {
      "properties": {
        "action": {
          "description": "Optional. Used to change the default action of the application when a push is received.",
          "type": "string"
        },
        "message": {
          "description": "The message that will be presented to the user.",
          "type": "string"
        },
        "pushChannels": {
          "description": "PushChannels - separated with comma",
          "type": "string"
        },
        "sound": {
          "description": "Optional. Can be used to change the default push sound on the user device.",
          "type": "string"
        },
        "udid": {
          "description": "Device unique identifier",
          "type": "string"
        },
        "url": {
          "description": "Optional. Used to direct the application to the relevant page.",
          "type": "string"
        }
      },
      "title": "KalturaPushMessage",
      "type": "object"
    },
    "KalturaPushParams": {
      "properties": {
        "externalToken": {
          "description": "External device token as received from external push provider in exchange for the device token",
          "type": "string"
        },
        "token": {
          "description": "Device-Application push token",
          "type": "string"
        }
      },
      "title": "KalturaPushParams",
      "type": "object"
    },
    "KalturaRandomCouponGenerationOptions": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaCouponGenerationOptions"
        }
      ],
      "properties": {
        "numberOfCoupons": {
          "description": "Number of coupons to generate",
          "type": "integer"
        },
        "useLetters": {
          "description": "Indicates whether to use letters in the generated codes (default is true)",
          "type": "boolean"
        },
        "useNumbers": {
          "description": "Indicates whether to use numbers in the generated codes (default is true)",
          "type": "boolean"
        },
        "useSpecialCharacters": {
          "description": "Indicates whether to use special characters in the generated codes(default is true)",
          "type": "boolean"
        }
      },
      "title": "KalturaRandomCouponGenerationOptions",
      "type": "object"
    },
    "KalturaRatio": {
      "properties": {
        "height": {
          "description": "`insertOnly`\n\nHeight",
          "type": "integer"
        },
        "id": {
          "description": "`readOnly`\n\nID",
          "readOnly": true,
          "type": "integer"
        },
        "name": {
          "description": "`insertOnly`\n\nName",
          "type": "string"
        },
        "precisionPrecentage": {
          "description": "Accepted error margin precentage of an image uploaded for this ratio\r\n            0 - no validation, everything accepted",
          "type": "integer"
        },
        "width": {
          "description": "`insertOnly`\n\nWidth",
          "type": "integer"
        }
      },
      "title": "KalturaRatio",
      "type": "object"
    },
    "KalturaRatioListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaRatio"
          },
          "type": "array"
        }
      },
      "title": "KalturaRatioListResponse",
      "type": "object"
    },
    "KalturaRecommendationProfile": {
      "description": "PaymentGW",
      "properties": {
        "adapterUrl": {
          "description": "recommendation engine adapter URL",
          "type": "string"
        },
        "externalIdentifier": {
          "description": "recommendation engine external identifier",
          "type": "string"
        },
        "id": {
          "description": "`readOnly`\n\nrecommendation engine id",
          "readOnly": true,
          "type": "integer"
        },
        "isActive": {
          "description": "recommendation engine is active status",
          "type": "boolean"
        },
        "name": {
          "description": "recommendation engine name",
          "type": "string"
        },
        "recommendationEngineSettings": {
          "items": {
            "$ref": "#/definitions/KalturaStringValue"
          },
          "type": "array"
        },
        "sharedSecret": {
          "description": "`readOnly`\n\nShared Secret",
          "readOnly": true,
          "type": "string"
        }
      },
      "title": "KalturaRecommendationProfile",
      "type": "object"
    },
    "KalturaRecommendationProfileListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "List of recommendation profiles.",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaRecommendationProfile"
          },
          "type": "array"
        }
      },
      "title": "KalturaRecommendationProfileListResponse",
      "type": "object"
    },
    "KalturaRecording": {
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaRecording"
        },
        {
          "$ref": "#/definitions/KalturaExternalRecording"
        },
        {
          "$ref": "#/definitions/KalturaImmediateRecording"
        },
        {
          "$ref": "#/definitions/KalturaPaddedRecording"
        }
      ],
      "discriminator": "objectType",
      "properties": {
        "assetId": {
          "description": "`insertOnly`\n\nKaltura unique ID representing the program identifier",
          "type": "integer"
        },
        "createDate": {
          "description": "`readOnly`\n\nSpecifies when was the recording created. Date and time represented as epoch.",
          "readOnly": true,
          "type": "integer",
          "x-inputType": "datetime"
        },
        "duration": {
          "description": "`readOnly`\n\nDuration in seconds",
          "readOnly": true,
          "type": "integer"
        },
        "id": {
          "description": "`readOnly`\n\nKaltura unique ID representing the recording identifier",
          "readOnly": true,
          "type": "integer"
        },
        "isProtected": {
          "description": "Specifies whether or not the recording is protected",
          "type": "boolean"
        },
        "objectType": {
          "enum": [
            "KalturaRecording",
            "KalturaExternalRecording",
            "KalturaImmediateRecording",
            "KalturaPaddedRecording"
          ],
          "type": "string"
        },
        "status": {
          "description": "`readOnly`\n\nEnum Type: `KalturaRecordingStatus`\n\nRecording state: scheduled/recording/recorded/canceled/failed/deleted",
          "enum": [
            "SCHEDULED",
            "RECORDING",
            "RECORDED",
            "CANCELED",
            "FAILED",
            "DELETED"
          ],
          "readOnly": true,
          "type": "string",
          "x-enumLabels": [
            "SCHEDULED",
            "RECORDING",
            "RECORDED",
            "CANCELED",
            "FAILED",
            "DELETED"
          ],
          "x-enumType": "KalturaRecordingStatus"
        },
        "type": {
          "description": "`insertOnly`\n\nEnum Type: `KalturaRecordingType`\n\nRecording Type: single/season/series",
          "enum": [
            "SINGLE",
            "SEASON",
            "SERIES",
            "OriginalBroadcast"
          ],
          "type": "string",
          "x-enumLabels": [
            "SINGLE",
            "SEASON",
            "SERIES",
            "ORIGINALBROADCAST"
          ],
          "x-enumType": "KalturaRecordingType"
        },
        "updateDate": {
          "description": "`readOnly`\n\nSpecifies when was the recording last updated. Date and time represented as epoch.",
          "readOnly": true,
          "type": "integer",
          "x-inputType": "datetime"
        },
        "viewableUntilDate": {
          "description": "Specifies until when the recording is available for viewing. Date and time represented as epoch.",
          "type": "integer",
          "x-inputType": "datetime"
        }
      },
      "title": "KalturaRecording",
      "type": "object"
    },
    "KalturaRecordingAsset": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaProgramAsset"
        }
      ],
      "description": "Recording-asset info",
      "properties": {
        "multiRecord": {
          "description": "When TRUE indicates that there are multiple KalturaImmediateRecording instances for the event.",
          "type": "boolean"
        },
        "recordingId": {
          "description": "Recording identifier",
          "type": "string"
        },
        "recordingType": {
          "description": "Enum Type: `KalturaRecordingType`\n\nRecording Type: single/season/series",
          "enum": [
            "SINGLE",
            "SEASON",
            "SERIES",
            "OriginalBroadcast"
          ],
          "type": "string",
          "x-enumLabels": [
            "SINGLE",
            "SEASON",
            "SERIES",
            "ORIGINALBROADCAST"
          ],
          "x-enumType": "KalturaRecordingType"
        },
        "viewableUntilDate": {
          "description": "Specifies until when the recording is available for viewing. Date and time represented as epoch.",
          "type": "integer",
          "x-inputType": "datetime"
        }
      },
      "title": "KalturaRecordingAsset",
      "type": "object"
    },
    "KalturaRecordingContextFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "description": "Filtering assets",
      "properties": {
        "assetIdIn": {
          "description": "Comma separated asset ids",
          "type": "string"
        },
        "orderBy": {
          "enum": [
            "NONE"
          ],
          "type": "string",
          "x-enumLabels": [
            "NONE"
          ],
          "x-enumType": "KalturaRecordingContextOrderBy"
        }
      },
      "title": "KalturaRecordingContextFilter",
      "type": "object"
    },
    "KalturaRecordingFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaRecordingFilter"
        },
        {
          "$ref": "#/definitions/KalturaExternalRecordingFilter"
        },
        {
          "$ref": "#/definitions/KalturaCloudRecordingFilter"
        }
      ],
      "description": "Filtering recordings",
      "discriminator": "objectType",
      "properties": {
        "externalRecordingIdIn": {
          "description": "Comma separated external identifiers",
          "type": "string"
        },
        "kSql": {
          "description": "KSQL expression",
          "type": "string"
        },
        "objectType": {
          "enum": [
            "KalturaRecordingFilter",
            "KalturaExternalRecordingFilter",
            "KalturaCloudRecordingFilter"
          ],
          "type": "string"
        },
        "orderBy": {
          "enum": [
            "TITLE_ASC",
            "TITLE_DESC",
            "START_DATE_ASC",
            "START_DATE_DESC"
          ],
          "type": "string",
          "x-enumLabels": [
            "TITLE_ASC",
            "TITLE_DESC",
            "START_DATE_ASC",
            "START_DATE_DESC"
          ],
          "x-enumType": "KalturaRecordingOrderBy"
        },
        "statusIn": {
          "description": "Recording Statuses",
          "type": "string"
        }
      },
      "title": "KalturaRecordingFilter",
      "type": "object"
    },
    "KalturaRecordingListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "Recordings info wrapper",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaRecording"
          },
          "type": "array"
        }
      },
      "title": "KalturaRecordingListResponse",
      "type": "object"
    },
    "KalturaRegexExpression": {
      "description": "KalturaRegexExpression",
      "properties": {
        "description": {
          "description": "description",
          "type": "string"
        },
        "expression": {
          "description": "regex expression",
          "type": "string"
        }
      },
      "title": "KalturaRegexExpression",
      "type": "object"
    },
    "KalturaRegion": {
      "properties": {
        "externalId": {
          "description": "Region external identifier",
          "type": "string"
        },
        "id": {
          "description": "Region identifier",
          "type": "integer"
        },
        "isDefault": {
          "description": "`readOnly`\n\nIndicates whether this is the default region for the partner",
          "readOnly": true,
          "type": "boolean"
        },
        "linearChannels": {
          "items": {
            "$ref": "#/definitions/KalturaRegionalChannel"
          },
          "type": "array"
        },
        "name": {
          "description": "Region name",
          "type": "string"
        },
        "parentId": {
          "description": "Parent region ID",
          "type": "integer"
        }
      },
      "title": "KalturaRegion",
      "type": "object"
    },
    "KalturaRegionChannelNumber": {
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaRegionChannelNumber"
        },
        {
          "$ref": "#/definitions/KalturaRegionChannelNumberMultiLcns"
        }
      ],
      "discriminator": "objectType",
      "properties": {
        "channelNumber": {
          "description": "The number of the channel",
          "type": "integer"
        },
        "objectType": {
          "enum": [
            "KalturaRegionChannelNumber",
            "KalturaRegionChannelNumberMultiLcns"
          ],
          "type": "string"
        },
        "regionId": {
          "description": "The identifier of the region",
          "type": "integer"
        }
      },
      "title": "KalturaRegionChannelNumber",
      "type": "object"
    },
    "KalturaRegionChannelNumberMultiLcns": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaRegionChannelNumber"
        }
      ],
      "properties": {
        "lcns": {
          "description": "Linear channel numbers",
          "type": "string"
        }
      },
      "title": "KalturaRegionChannelNumberMultiLcns",
      "type": "object"
    },
    "KalturaRegionFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBaseRegionFilter"
        }
      ],
      "properties": {
        "exclusiveLcn": {
          "description": "Retrieves only the channels belonging specifically to the child region",
          "type": "boolean"
        },
        "externalIdIn": {
          "description": "List of comma separated regions external IDs",
          "type": "string"
        },
        "idIn": {
          "description": "List of comma separated regions Ids",
          "type": "string"
        },
        "liveAssetIdEqual": {
          "description": "Region parent ID to filter by",
          "type": "integer"
        },
        "orderBy": {
          "enum": [
            "CREATE_DATE_ASC",
            "CREATE_DATE_DESC"
          ],
          "type": "string",
          "x-enumLabels": [
            "CREATE_DATE_ASC",
            "CREATE_DATE_DESC"
          ],
          "x-enumType": "KalturaRegionOrderBy"
        },
        "parentIdEqual": {
          "description": "Region parent ID to filter by",
          "type": "integer"
        },
        "parentOnly": {
          "description": "Parent region to filter by",
          "type": "boolean"
        }
      },
      "title": "KalturaRegionFilter",
      "type": "object"
    },
    "KalturaRegionListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "Regions list",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaRegion"
          },
          "type": "array"
        }
      },
      "title": "KalturaRegionListResponse",
      "type": "object"
    },
    "KalturaRegionalChannel": {
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaRegionalChannel"
        },
        {
          "$ref": "#/definitions/KalturaRegionalChannelMultiLcns"
        }
      ],
      "discriminator": "objectType",
      "properties": {
        "channelNumber": {
          "description": "The number of the channel",
          "type": "integer"
        },
        "linearChannelId": {
          "description": "The identifier of the linear media representing the channel",
          "type": "integer"
        },
        "objectType": {
          "enum": [
            "KalturaRegionalChannel",
            "KalturaRegionalChannelMultiLcns"
          ],
          "type": "string"
        }
      },
      "title": "KalturaRegionalChannel",
      "type": "object"
    },
    "KalturaRegionalChannelMultiLcns": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaRegionalChannel"
        }
      ],
      "properties": {
        "lcns": {
          "description": "Linear channel numbers",
          "type": "string"
        }
      },
      "title": "KalturaRegionalChannelMultiLcns",
      "type": "object"
    },
    "KalturaRegistryResponse": {
      "properties": {
        "announcementId": {
          "description": "Announcement Id",
          "type": "integer"
        },
        "key": {
          "description": "Key",
          "type": "string"
        },
        "url": {
          "description": "URL",
          "type": "string"
        }
      },
      "title": "KalturaRegistryResponse",
      "type": "object"
    },
    "KalturaRegistrySettings": {
      "properties": {
        "key": {
          "description": "Permission item identifier",
          "type": "string"
        },
        "value": {
          "description": "Permission item name",
          "type": "string"
        }
      },
      "title": "KalturaRegistrySettings",
      "type": "object"
    },
    "KalturaRegistrySettingsListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "List of registry settings.",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaRegistrySettings"
          },
          "type": "array"
        }
      },
      "title": "KalturaRegistrySettingsListResponse",
      "type": "object"
    },
    "KalturaRelatedEntity": {
      "properties": {
        "id": {
          "description": "Unique identifier for the related entry",
          "type": "string"
        },
        "type": {
          "description": "Enum Type: `KalturaRelatedEntityType`\n\nDefines related entry type",
          "enum": [
            "CHANNEL",
            "EXTERNAL_CHANNEL",
            "MEDIA",
            "PROGRAM"
          ],
          "type": "string",
          "x-enumLabels": [
            "CHANNEL",
            "EXTERNAL_CHANNEL",
            "MEDIA",
            "PROGRAM"
          ],
          "x-enumType": "KalturaRelatedEntityType"
        }
      },
      "title": "KalturaRelatedEntity",
      "type": "object"
    },
    "KalturaRelatedEntityArray": {
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaRelatedEntity"
          },
          "type": "array"
        }
      },
      "title": "KalturaRelatedEntityArray",
      "type": "object"
    },
    "KalturaRelatedExternalFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaAssetFilter"
        }
      ],
      "properties": {
        "freeText": {
          "description": "FreeText",
          "type": "string"
        },
        "idEqual": {
          "description": "the External ID of the asset for which to return related assets",
          "type": "integer"
        },
        "typeIn": {
          "description": "Comma separated list of asset types to search within. \r\n            Possible values: 0 - EPG linear programs entries, any media type ID (according to media type IDs defined dynamically in the system).\r\n            If omitted - all types should be included.",
          "type": "string"
        },
        "utcOffsetEqual": {
          "description": "UtcOffsetEqual",
          "type": "integer"
        }
      },
      "title": "KalturaRelatedExternalFilter",
      "type": "object"
    },
    "KalturaRelatedFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBaseSearchAssetFilter"
        }
      ],
      "properties": {
        "excludeWatched": {
          "description": "Exclude watched asset.",
          "type": "boolean"
        },
        "idEqual": {
          "description": "the ID of the asset for which to return related assets",
          "type": "integer"
        },
        "typeIn": {
          "description": "Comma separated list of asset types to search within. \r\n            Possible values: any media type ID (according to media type IDs defined dynamically in the system).\r\n            If omitted - same type as the provided asset.",
          "type": "string"
        }
      },
      "title": "KalturaRelatedFilter",
      "type": "object"
    },
    "KalturaRelatedObjectFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaAggregationCountFilter"
        },
        {
          "$ref": "#/definitions/KalturaPriorityGroupFilter"
        },
        {
          "$ref": "#/definitions/KalturaHouseholdCouponCodeFilter"
        },
        {
          "$ref": "#/definitions/KalturaExternalRecordingResponseProfileFilter"
        },
        {
          "$ref": "#/definitions/KalturaAssetHistorySuppressFilter"
        },
        {
          "$ref": "#/definitions/KalturaAssetImagePerRatioFilter"
        },
        {
          "$ref": "#/definitions/KalturaAddDefaultIfEmptyResponseProfile"
        }
      ],
      "description": "`abstract`\n\nDefine KalturaRelatedObjectFilter",
      "discriminator": "objectType",
      "properties": {
        "objectType": {
          "enum": [
            "KalturaAggregationCountFilter",
            "KalturaPriorityGroupFilter",
            "KalturaHouseholdCouponCodeFilter",
            "KalturaExternalRecordingResponseProfileFilter",
            "KalturaAssetHistorySuppressFilter",
            "KalturaAssetImagePerRatioFilter",
            "KalturaAddDefaultIfEmptyResponseProfile"
          ],
          "type": "string"
        }
      },
      "title": "KalturaRelatedObjectFilter",
      "type": "object",
      "x-abstract": true
    },
    "KalturaReminder": {
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaReminder"
        },
        {
          "$ref": "#/definitions/KalturaAssetReminder"
        },
        {
          "$ref": "#/definitions/KalturaSeriesReminder"
        }
      ],
      "discriminator": "objectType",
      "properties": {
        "id": {
          "description": "`readOnly`\n\nReminder id",
          "readOnly": true,
          "type": "integer"
        },
        "name": {
          "description": "`readOnly`\n\nReminder name",
          "readOnly": true,
          "type": "string"
        },
        "objectType": {
          "enum": [
            "KalturaReminder",
            "KalturaAssetReminder",
            "KalturaSeriesReminder"
          ],
          "type": "string"
        },
        "type": {
          "description": "Enum Type: `KalturaReminderType`\n\nReminder type",
          "enum": [
            "ASSET",
            "SERIES"
          ],
          "type": "string",
          "x-enumLabels": [
            "ASSET",
            "SERIES"
          ],
          "x-enumType": "KalturaReminderType"
        }
      },
      "title": "KalturaReminder",
      "type": "object"
    },
    "KalturaReminderFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaAssetReminderFilter"
        },
        {
          "$ref": "#/definitions/KalturaSeasonsReminderFilter"
        },
        {
          "$ref": "#/definitions/KalturaSeriesReminderFilter"
        }
      ],
      "description": "`abstract`",
      "discriminator": "objectType",
      "properties": {
        "objectType": {
          "enum": [
            "KalturaAssetReminderFilter",
            "KalturaSeasonsReminderFilter",
            "KalturaSeriesReminderFilter"
          ],
          "type": "string"
        }
      },
      "title": "KalturaReminderFilter",
      "type": "object",
      "x-abstract": true
    },
    "KalturaReminderListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "List of reminders from DB.",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaReminder"
          },
          "type": "array"
        }
      },
      "title": "KalturaReminderListResponse",
      "type": "object"
    },
    "KalturaReport": {
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaReport"
        },
        {
          "$ref": "#/definitions/KalturaDeviceReport"
        }
      ],
      "discriminator": "objectType",
      "properties": {
        "objectType": {
          "enum": [
            "KalturaReport",
            "KalturaDeviceReport"
          ],
          "type": "string"
        }
      },
      "title": "KalturaReport",
      "type": "object"
    },
    "KalturaReportFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaDeviceReportFilter"
        }
      ],
      "description": "`abstract`\n\nReport filter",
      "discriminator": "objectType",
      "properties": {
        "objectType": {
          "enum": [
            "KalturaDeviceReportFilter"
          ],
          "type": "string"
        },
        "orderBy": {
          "enum": [
            "NONE"
          ],
          "type": "string",
          "x-enumLabels": [
            "NONE"
          ],
          "x-enumType": "KalturaReportOrderBy"
        }
      },
      "title": "KalturaReportFilter",
      "type": "object",
      "x-abstract": true
    },
    "KalturaReportListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "Reports info wrapper",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaReport"
          },
          "type": "array"
        }
      },
      "title": "KalturaReportListResponse",
      "type": "object"
    },
    "KalturaRepresentativeSelectionPolicy": {
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaTopRsp"
        },
        {
          "$ref": "#/definitions/KalturaTopSubscriptionEntitledRsp"
        }
      ],
      "description": "`abstract`",
      "discriminator": "objectType",
      "properties": {
        "objectType": {
          "enum": [
            "KalturaTopRsp",
            "KalturaTopSubscriptionEntitledRsp"
          ],
          "type": "string"
        }
      },
      "title": "KalturaRepresentativeSelectionPolicy",
      "type": "object",
      "x-abstract": true
    },
    "KalturaRequestConfiguration": {
      "description": "Define client request optional configurations",
      "properties": {
        "abortAllOnError": {
          "description": "Abort all following requests in Multireuqset if current request has an error",
          "type": "boolean"
        },
        "abortOnError": {
          "description": "Abort the Multireuqset call if any error occurs in one of the requests",
          "type": "boolean"
        },
        "currency": {
          "description": "Currency to be used",
          "type": "string"
        },
        "ks": {
          "description": "Kaltura API session",
          "type": "string"
        },
        "language": {
          "description": "Content language",
          "type": "string"
        },
        "partnerId": {
          "description": "Impersonated partner id",
          "type": "integer"
        },
        "responseProfile": {
          "$ref": "#/definitions/KalturaBaseResponseProfile"
        },
        "skipCondition": {
          "$ref": "#/definitions/KalturaSkipCondition"
        },
        "userId": {
          "description": "Impersonated user id",
          "type": "integer"
        }
      },
      "title": "KalturaRequestConfiguration",
      "type": "object"
    },
    "KalturaResetPasswordPartnerConfig": {
      "properties": {
        "templateListLabel": {
          "description": "template List Label",
          "type": "string"
        },
        "templates": {
          "items": {
            "$ref": "#/definitions/KalturaResetPasswordPartnerConfigTemplate"
          },
          "type": "array"
        }
      },
      "title": "KalturaResetPasswordPartnerConfig",
      "type": "object"
    },
    "KalturaResetPasswordPartnerConfigTemplate": {
      "properties": {
        "id": {
          "description": "id",
          "type": "string"
        },
        "isDefault": {
          "description": "is Default",
          "type": "boolean"
        },
        "label": {
          "description": "label",
          "type": "string"
        }
      },
      "title": "KalturaResetPasswordPartnerConfigTemplate",
      "type": "object"
    },
    "KalturaRollingDeviceRemovalData": {
      "properties": {
        "rollingDeviceRemovalFamilyIds": {
          "description": "Rolling Device Policy in a CSV style",
          "type": "string"
        },
        "rollingDeviceRemovalPolicy": {
          "description": "Enum Type: `KalturaRollingDevicePolicy`\n\nRolling Device Policy",
          "enum": [
            "NONE",
            "LIFO",
            "FIFO",
            "ACTIVE_DEVICE_ASCENDING"
          ],
          "type": "string",
          "x-enumLabels": [
            "NONE",
            "LIFO",
            "FIFO",
            "ACTIVE_DEVICE_ASCENDING"
          ],
          "x-enumType": "KalturaRollingDevicePolicy"
        }
      },
      "title": "KalturaRollingDeviceRemovalData",
      "type": "object"
    },
    "KalturaRule": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaOTTObjectSupportNullable"
        }
      ],
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaBusinessModuleRule"
        },
        {
          "$ref": "#/definitions/KalturaAssetRule"
        },
        {
          "$ref": "#/definitions/KalturaAssetUserRule"
        },
        {
          "$ref": "#/definitions/KalturaTvmDeviceRule"
        },
        {
          "$ref": "#/definitions/KalturaTvmGeoRule"
        }
      ],
      "description": "`abstract`\n\nRule base",
      "discriminator": "objectType",
      "properties": {
        "description": {
          "description": "Description",
          "type": "string"
        },
        "id": {
          "description": "`readOnly`\n\nID",
          "readOnly": true,
          "type": "integer"
        },
        "label": {
          "description": "Label",
          "type": "string"
        },
        "name": {
          "description": "Name",
          "type": "string"
        },
        "objectType": {
          "enum": [
            "KalturaBusinessModuleRule",
            "KalturaAssetRule",
            "KalturaAssetUserRule",
            "KalturaTvmDeviceRule",
            "KalturaTvmGeoRule"
          ],
          "type": "string"
        }
      },
      "title": "KalturaRule",
      "type": "object",
      "x-abstract": true
    },
    "KalturaRuleAction": {
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaAccessControlBlockAction"
        },
        {
          "$ref": "#/definitions/KalturaAllowPlaybackAction"
        },
        {
          "$ref": "#/definitions/KalturaApplyPlaybackAdapterAction"
        },
        {
          "$ref": "#/definitions/KalturaBlockPlaybackAction"
        },
        {
          "$ref": "#/definitions/KalturaAssetLifeCycleBuisnessModuleTransitionAction"
        },
        {
          "$ref": "#/definitions/KalturaAssetLifeCycleTagTransitionAction"
        },
        {
          "$ref": "#/definitions/KalturaEndDateOffsetRuleAction"
        },
        {
          "$ref": "#/definitions/KalturaStartDateOffsetRuleAction"
        },
        {
          "$ref": "#/definitions/KalturaFilterAssetByKsqlAction"
        },
        {
          "$ref": "#/definitions/KalturaFilterFileByAudioCodecInDiscoveryAction"
        },
        {
          "$ref": "#/definitions/KalturaFilterFileByAudioCodecInPlaybackAction"
        },
        {
          "$ref": "#/definitions/KalturaFilterFileByDynamicDataInDiscoveryAction"
        },
        {
          "$ref": "#/definitions/KalturaFilterFileByDynamicDataInPlaybackAction"
        },
        {
          "$ref": "#/definitions/KalturaFilterFileByFileTypeIdInDiscoveryAction"
        },
        {
          "$ref": "#/definitions/KalturaFilterFileByFileTypeIdInPlaybackAction"
        },
        {
          "$ref": "#/definitions/KalturaFilterFileByFileTypeIdForAssetTypeInDiscoveryAction"
        },
        {
          "$ref": "#/definitions/KalturaFilterFileByFileTypeIdForAssetTypeInPlaybackAction"
        },
        {
          "$ref": "#/definitions/KalturaFilterFileByLabelInDiscoveryAction"
        },
        {
          "$ref": "#/definitions/KalturaFilterFileByLabelInPlaybackAction"
        },
        {
          "$ref": "#/definitions/KalturaFilterFileByQualityInDiscoveryAction"
        },
        {
          "$ref": "#/definitions/KalturaFilterFileByQualityInPlaybackAction"
        },
        {
          "$ref": "#/definitions/KalturaFilterFileByStreamerTypeInDiscovery"
        },
        {
          "$ref": "#/definitions/KalturaFilterFileByStreamerTypeInPlayback"
        },
        {
          "$ref": "#/definitions/KalturaFilterFileByVideoCodecInDiscoveryAction"
        },
        {
          "$ref": "#/definitions/KalturaFilterFileByVideoCodecInPlayback"
        },
        {
          "$ref": "#/definitions/KalturaAssetUserRuleBlockAction"
        },
        {
          "$ref": "#/definitions/KalturaAssetUserRuleFilterAction"
        },
        {
          "$ref": "#/definitions/KalturaApplyDiscountModuleAction"
        },
        {
          "$ref": "#/definitions/KalturaApplyFreePlaybackAction"
        }
      ],
      "description": "`abstract`",
      "discriminator": "objectType",
      "properties": {
        "description": {
          "description": "Description",
          "type": "string"
        },
        "objectType": {
          "enum": [
            "KalturaAccessControlBlockAction",
            "KalturaAllowPlaybackAction",
            "KalturaApplyPlaybackAdapterAction",
            "KalturaBlockPlaybackAction",
            "KalturaAssetLifeCycleBuisnessModuleTransitionAction",
            "KalturaAssetLifeCycleTagTransitionAction",
            "KalturaEndDateOffsetRuleAction",
            "KalturaStartDateOffsetRuleAction",
            "KalturaFilterAssetByKsqlAction",
            "KalturaFilterFileByAudioCodecInDiscoveryAction",
            "KalturaFilterFileByAudioCodecInPlaybackAction",
            "KalturaFilterFileByDynamicDataInDiscoveryAction",
            "KalturaFilterFileByDynamicDataInPlaybackAction",
            "KalturaFilterFileByFileTypeIdInDiscoveryAction",
            "KalturaFilterFileByFileTypeIdInPlaybackAction",
            "KalturaFilterFileByFileTypeIdForAssetTypeInDiscoveryAction",
            "KalturaFilterFileByFileTypeIdForAssetTypeInPlaybackAction",
            "KalturaFilterFileByLabelInDiscoveryAction",
            "KalturaFilterFileByLabelInPlaybackAction",
            "KalturaFilterFileByQualityInDiscoveryAction",
            "KalturaFilterFileByQualityInPlaybackAction",
            "KalturaFilterFileByStreamerTypeInDiscovery",
            "KalturaFilterFileByStreamerTypeInPlayback",
            "KalturaFilterFileByVideoCodecInDiscoveryAction",
            "KalturaFilterFileByVideoCodecInPlayback",
            "KalturaAssetUserRuleBlockAction",
            "KalturaAssetUserRuleFilterAction",
            "KalturaApplyDiscountModuleAction",
            "KalturaApplyFreePlaybackAction"
          ],
          "type": "string"
        },
        "type": {
          "description": "`readOnly`\n\nEnum Type: `KalturaRuleActionType`\n\nThe type of the action",
          "enum": [
            "BLOCK",
            "START_DATE_OFFSET",
            "END_DATE_OFFSET",
            "USER_BLOCK",
            "ALLOW_PLAYBACK",
            "BLOCK_PLAYBACK",
            "APPLY_DISCOUNT_MODULE",
            "APPLY_PLAYBACK_ADAPTER",
            "FILTER",
            "ASSET_LIFE_CYCLE_TRANSITION",
            "APPLY_FREE_PLAYBACK",
            "FilterAssetByKsql",
            "FilterFileByQualityInDiscovery",
            "FilterFileByQualityInPlayback",
            "FilterFileByFileTypeIdForAssetTypeInDiscovery",
            "FilterFileByFileTypeIdForAssetTypeInPlayback",
            "FilterFileByFileTypeIdInDiscovery",
            "FilterFileByFileTypeIdInPlayback",
            "FilterFileByAudioCodecInDiscovery",
            "FilterFileByAudioCodecInPlayback",
            "FilterFileByVideoCodecInDiscovery",
            "FilterFileByVideoCodecInPlayback",
            "FilterFileByStreamerTypeInDiscovery",
            "FilterFileByStreamerTypeInPlayback",
            "FilterFileByLabelInDiscovery",
            "FilterFileByLabelInPlayback",
            "FilterFileByDynamicDataInDiscovery",
            "FilterFileByDynamicDataInPlayback"
          ],
          "readOnly": true,
          "type": "string",
          "x-enumLabels": [
            "BLOCK",
            "START_DATE_OFFSET",
            "END_DATE_OFFSET",
            "USER_BLOCK",
            "ALLOW_PLAYBACK",
            "BLOCK_PLAYBACK",
            "APPLY_DISCOUNT_MODULE",
            "APPLY_PLAYBACK_ADAPTER",
            "FILTER",
            "ASSET_LIFE_CYCLE_TRANSITION",
            "APPLY_FREE_PLAYBACK",
            "FILTERASSETBYKSQL",
            "FILTERFILEBYQUALITYINDISCOVERY",
            "FILTERFILEBYQUALITYINPLAYBACK",
            "FILTERFILEBYFILETYPEIDFORASSETTYPEINDISCOVERY",
            "FILTERFILEBYFILETYPEIDFORASSETTYPEINPLAYBACK",
            "FILTERFILEBYFILETYPEIDINDISCOVERY",
            "FILTERFILEBYFILETYPEIDINPLAYBACK",
            "FILTERFILEBYAUDIOCODECINDISCOVERY",
            "FILTERFILEBYAUDIOCODECINPLAYBACK",
            "FILTERFILEBYVIDEOCODECINDISCOVERY",
            "FILTERFILEBYVIDEOCODECINPLAYBACK",
            "FILTERFILEBYSTREAMERTYPEINDISCOVERY",
            "FILTERFILEBYSTREAMERTYPEINPLAYBACK",
            "FILTERFILEBYLABELINDISCOVERY",
            "FILTERFILEBYLABELINPLAYBACK",
            "FILTERFILEBYDYNAMICDATAINDISCOVERY",
            "FILTERFILEBYDYNAMICDATAINPLAYBACK"
          ],
          "x-enumType": "KalturaRuleActionType"
        }
      },
      "title": "KalturaRuleAction",
      "type": "object",
      "x-abstract": true
    },
    "KalturaSSOAdapterProfile": {
      "description": "SSO adapter configuration",
      "properties": {
        "adapterUrl": {
          "description": "SSO Adapter URL",
          "type": "string"
        },
        "externalIdentifier": {
          "description": "SSO Adapter external identifier",
          "type": "string"
        },
        "id": {
          "description": "`readOnly`\n\nSSO Adapter id",
          "readOnly": true,
          "type": "integer"
        },
        "isActive": {
          "description": "SSO Adapter is active status",
          "type": "integer"
        },
        "name": {
          "description": "SSO Adapter name",
          "type": "string"
        },
        "settings": {
          "items": {
            "$ref": "#/definitions/KalturaStringValue"
          },
          "type": "array"
        },
        "sharedSecret": {
          "description": "Shared Secret",
          "type": "string"
        }
      },
      "title": "KalturaSSOAdapterProfile",
      "type": "object"
    },
    "KalturaSSOAdapterProfileInvoke": {
      "properties": {
        "adapterData": {
          "items": {
            "$ref": "#/definitions/KalturaStringValue"
          },
          "type": "array"
        },
        "code": {
          "description": "code",
          "type": "string"
        },
        "message": {
          "description": "message",
          "type": "string"
        }
      },
      "title": "KalturaSSOAdapterProfileInvoke",
      "type": "object"
    },
    "KalturaSSOAdapterProfileListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "ssoAdapterProfile list",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaSSOAdapterProfile"
          },
          "type": "array"
        }
      },
      "title": "KalturaSSOAdapterProfileListResponse",
      "type": "object"
    },
    "KalturaScheduledRecordingProgramFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaAssetFilter"
        }
      ],
      "properties": {
        "channelsIn": {
          "description": "Channels to filter by",
          "type": "string"
        },
        "endDateLessThanOrNull": {
          "description": "end date",
          "type": "integer"
        },
        "recordingTypeEqual": {
          "description": "Enum Type: `KalturaScheduledRecordingAssetType`\n\nThe type of recordings to return",
          "enum": [
            "single",
            "series",
            "all"
          ],
          "type": "string",
          "x-enumLabels": [
            "SINGLE",
            "SERIES",
            "ALL"
          ],
          "x-enumType": "KalturaScheduledRecordingAssetType"
        },
        "seriesIdsIn": {
          "description": "Series to filter by",
          "type": "string"
        },
        "startDateGreaterThanOrNull": {
          "description": "start date",
          "type": "integer"
        }
      },
      "title": "KalturaScheduledRecordingProgramFilter",
      "type": "object"
    },
    "KalturaSearchAssetFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBaseSearchAssetFilter"
        }
      ],
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaSearchAssetFilter"
        },
        {
          "$ref": "#/definitions/KalturaSearchAssetListFilter"
        }
      ],
      "discriminator": "objectType",
      "properties": {
        "objectType": {
          "enum": [
            "KalturaSearchAssetFilter",
            "KalturaSearchAssetListFilter"
          ],
          "type": "string"
        },
        "typeIn": {
          "description": "(Deprecated - use KalturaBaseSearchAssetFilter.kSql)\r\n            Comma separated list of asset types to search within. \r\n            Possible values: 0 - EPG linear programs entries; 1 - Recordings; Any media type ID (according to media type IDs defined dynamically in the system).\r\n            If omitted - all types should be included.",
          "type": "string"
        }
      },
      "title": "KalturaSearchAssetFilter",
      "type": "object"
    },
    "KalturaSearchAssetListFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaSearchAssetFilter"
        }
      ],
      "properties": {
        "excludeWatched": {
          "description": "Exclude watched asset.",
          "type": "boolean"
        }
      },
      "title": "KalturaSearchAssetListFilter",
      "type": "object"
    },
    "KalturaSearchExternalFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaAssetFilter"
        }
      ],
      "properties": {
        "query": {
          "description": "Query",
          "type": "string"
        },
        "typeIn": {
          "description": "Comma separated list of asset types to search within. \r\n            Possible values: 0 - EPG linear programs entries, any media type ID (according to media type IDs defined dynamically in the system).\r\n            If omitted - all types should be included.",
          "type": "string"
        },
        "utcOffsetEqual": {
          "description": "UtcOffsetEqual",
          "type": "integer"
        }
      },
      "title": "KalturaSearchExternalFilter",
      "type": "object"
    },
    "KalturaSearchHistory": {
      "description": "Search history info",
      "properties": {
        "action": {
          "description": "`readOnly`\n\nKaltura OTT Service Action",
          "readOnly": true,
          "type": "string"
        },
        "createdAt": {
          "description": "`readOnly`\n\nWhen search was performed",
          "readOnly": true,
          "type": "integer"
        },
        "deviceId": {
          "description": "`readOnly`\n\nUnique Device ID",
          "readOnly": true,
          "type": "string"
        },
        "filter": {
          "description": "`readOnly`\n\nFilter",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "`readOnly`\n\nSearch ID",
          "readOnly": true,
          "type": "string"
        },
        "language": {
          "description": "`readOnly`\n\nSearch language",
          "readOnly": true,
          "type": "string"
        },
        "name": {
          "description": "`readOnly`\n\nSearch name",
          "readOnly": true,
          "type": "string"
        },
        "service": {
          "description": "`readOnly`\n\nKaltura OTT Service",
          "readOnly": true,
          "type": "string"
        }
      },
      "title": "KalturaSearchHistory",
      "type": "object"
    },
    "KalturaSearchHistoryFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "properties": {
        "orderBy": {
          "enum": [
            "NONE"
          ],
          "type": "string",
          "x-enumLabels": [
            "NONE"
          ],
          "x-enumType": "KalturaSearchHistoryOrderBy"
        }
      },
      "title": "KalturaSearchHistoryFilter",
      "type": "object"
    },
    "KalturaSearchHistoryListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "Search history wrapper",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaSearchHistory"
          },
          "type": "array"
        }
      },
      "title": "KalturaSearchHistoryListResponse",
      "type": "object"
    },
    "KalturaSearchPriorityCriteria": {
      "properties": {
        "type": {
          "description": "Enum Type: `KalturaSearchPriorityCriteriaType`\n\nCriterion type",
          "enum": [
            "KSql"
          ],
          "type": "string",
          "x-enumLabels": [
            "KSQL"
          ],
          "x-enumType": "KalturaSearchPriorityCriteriaType"
        },
        "value": {
          "description": "Condition\r\n            KSQL has to have no more than 10 conditions. Text, boolean, enum and tag fields can be used only with = operator, numeric and datetime fields - only with &lt;, = and &gt; operators.",
          "type": "string"
        }
      },
      "title": "KalturaSearchPriorityCriteria",
      "type": "object"
    },
    "KalturaSearchPriorityGroup": {
      "properties": {
        "criteria": {
          "$ref": "#/definitions/KalturaSearchPriorityCriteria"
        },
        "id": {
          "description": "`readOnly`\n\nIdentifier",
          "readOnly": true,
          "type": "integer"
        },
        "multilingualName": {
          "items": {
            "$ref": "#/definitions/KalturaTranslationToken"
          },
          "type": "array"
        },
        "name": {
          "description": "`readOnly`\n\nName",
          "readOnly": true,
          "type": "string"
        }
      },
      "title": "KalturaSearchPriorityGroup",
      "type": "object"
    },
    "KalturaSearchPriorityGroupFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "properties": {
        "activeOnlyEqual": {
          "description": "Return only search priority groups that are in use",
          "type": "boolean"
        },
        "idEqual": {
          "description": "Identifier of search priority group to return",
          "type": "integer"
        },
        "orderBy": {
          "enum": [
            "PRIORITY_DESC",
            "NAME_ASC",
            "NAME_DESC"
          ],
          "type": "string",
          "x-enumLabels": [
            "PRIORITY_DESC",
            "NAME_ASC",
            "NAME_DESC"
          ],
          "x-enumType": "KalturaSearchPriorityGroupOrderBy"
        }
      },
      "title": "KalturaSearchPriorityGroupFilter",
      "type": "object"
    },
    "KalturaSearchPriorityGroupListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaSearchPriorityGroup"
          },
          "type": "array"
        }
      },
      "title": "KalturaSearchPriorityGroupListResponse",
      "type": "object"
    },
    "KalturaSearchPriorityGroupOrderedIdsSet": {
      "properties": {
        "priorityGroupIds": {
          "description": "The order and effectively the priority of each group.",
          "type": "string"
        }
      },
      "title": "KalturaSearchPriorityGroupOrderedIdsSet",
      "type": "object"
    },
    "KalturaSeasonsReminderFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaReminderFilter"
        }
      ],
      "properties": {
        "epgChannelIdEqual": {
          "description": "EPG channel ID",
          "type": "integer"
        },
        "seasonNumberIn": {
          "description": "Comma separated season numbers",
          "type": "string"
        },
        "seriesIdEqual": {
          "description": "Series ID",
          "type": "string"
        }
      },
      "title": "KalturaSeasonsReminderFilter",
      "type": "object"
    },
    "KalturaSecurityPartnerConfig": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaPartnerConfiguration"
        }
      ],
      "properties": {
        "encryption": {
          "$ref": "#/definitions/KalturaDataEncryption"
        }
      },
      "title": "KalturaSecurityPartnerConfig",
      "type": "object"
    },
    "KalturaSegmentAllValues": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaSegmentValues"
        }
      ],
      "description": "Segmentation type which takes all values of a tag/meta as segments",
      "properties": {
        "nameFormat": {
          "description": "Segment names&#39; format - they will be automatically generated",
          "type": "string"
        }
      },
      "title": "KalturaSegmentAllValues",
      "type": "object"
    },
    "KalturaSegmentAssetFilterAction": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaKsqlSegmentAction"
        }
      ],
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaSegmentAssetFilterSegmentAction"
        },
        {
          "$ref": "#/definitions/KalturaSegmentAssetFilterSubscriptionAction"
        }
      ],
      "description": "`abstract`\n\nAsset filter action",
      "discriminator": "objectType",
      "properties": {
        "objectType": {
          "enum": [
            "KalturaSegmentAssetFilterSegmentAction",
            "KalturaSegmentAssetFilterSubscriptionAction"
          ],
          "type": "string"
        }
      },
      "title": "KalturaSegmentAssetFilterAction",
      "type": "object",
      "x-abstract": true
    },
    "KalturaSegmentAssetFilterSegmentAction": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaSegmentAssetFilterAction"
        }
      ],
      "description": "segment asset filter for segment action",
      "properties": {},
      "title": "KalturaSegmentAssetFilterSegmentAction",
      "type": "object"
    },
    "KalturaSegmentAssetFilterSubscriptionAction": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaSegmentAssetFilterAction"
        }
      ],
      "description": "segment asset filter for subscription action",
      "properties": {},
      "title": "KalturaSegmentAssetFilterSubscriptionAction",
      "type": "object"
    },
    "KalturaSegmentBlockCancelSubscriptionAction": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBlockSubscriptionSegmentAction"
        }
      ],
      "description": "segment block subscription for cancel action",
      "properties": {},
      "title": "KalturaSegmentBlockCancelSubscriptionAction",
      "type": "object"
    },
    "KalturaSegmentBlockPlaybackSubscriptionAction": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBlockSubscriptionSegmentAction"
        }
      ],
      "description": "segment block subscription for playback action",
      "properties": {},
      "title": "KalturaSegmentBlockPlaybackSubscriptionAction",
      "type": "object"
    },
    "KalturaSegmentBlockPurchaseSubscriptionAction": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBlockSubscriptionSegmentAction"
        }
      ],
      "description": "segment block subscription for purchase action",
      "properties": {},
      "title": "KalturaSegmentBlockPurchaseSubscriptionAction",
      "type": "object"
    },
    "KalturaSegmentRange": {
      "description": "Segment that is based on a range of values",
      "properties": {
        "equals": {
          "description": "Equals",
          "type": "number"
        },
        "gt": {
          "description": "Greater than &gt;",
          "type": "number"
        },
        "gte": {
          "description": "Greater than or equals &gt;=",
          "type": "number"
        },
        "id": {
          "description": "`readOnly`\n\nId of segment",
          "readOnly": true,
          "type": "integer"
        },
        "lt": {
          "description": "Less than",
          "type": "number"
        },
        "lte": {
          "description": "Less than or equals",
          "type": "number"
        },
        "name": {
          "description": "Specific segment name",
          "type": "string"
        },
        "systematicName": {
          "description": "Systematic name of segment",
          "type": "string"
        }
      },
      "title": "KalturaSegmentRange",
      "type": "object"
    },
    "KalturaSegmentRanges": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBaseSegmentValue"
        }
      ],
      "description": "Segmentation type that takes different ranges as segments",
      "properties": {
        "ranges": {
          "items": {
            "$ref": "#/definitions/KalturaSegmentRange"
          },
          "type": "array"
        },
        "source": {
          "$ref": "#/definitions/KalturaSegmentSource"
        }
      },
      "title": "KalturaSegmentRanges",
      "type": "object"
    },
    "KalturaSegmentSource": {
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaSegmentSource"
        },
        {
          "$ref": "#/definitions/KalturaContentSource"
        },
        {
          "$ref": "#/definitions/KalturaMonetizationSource"
        },
        {
          "$ref": "#/definitions/KalturaUserDynamicDataSource"
        }
      ],
      "description": "Defines which sort is relevant to the condition or the segmentation",
      "discriminator": "objectType",
      "properties": {
        "objectType": {
          "enum": [
            "KalturaSegmentSource",
            "KalturaContentSource",
            "KalturaMonetizationSource",
            "KalturaUserDynamicDataSource"
          ],
          "type": "string"
        }
      },
      "title": "KalturaSegmentSource",
      "type": "object"
    },
    "KalturaSegmentValue": {
      "description": "Specific segment value",
      "properties": {
        "id": {
          "description": "`readOnly`\n\nId of segment",
          "readOnly": true,
          "type": "integer"
        },
        "name": {
          "description": "Name of segment",
          "type": "string"
        },
        "systematicName": {
          "description": "Systematic name of segment",
          "type": "string"
        },
        "value": {
          "description": "The value of the segment",
          "type": "string"
        }
      },
      "title": "KalturaSegmentValue",
      "type": "object"
    },
    "KalturaSegmentValueFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBaseSegmentationTypeFilter"
        }
      ],
      "properties": {
        "idIn": {
          "description": "Comma separated segmentation identifiers",
          "type": "string"
        }
      },
      "title": "KalturaSegmentValueFilter",
      "type": "object"
    },
    "KalturaSegmentValues": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBaseSegmentValue"
        }
      ],
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaSegmentValues"
        },
        {
          "$ref": "#/definitions/KalturaSegmentAllValues"
        }
      ],
      "description": "Segmentation type which takes certain values of a tag/meta as segments",
      "discriminator": "objectType",
      "properties": {
        "objectType": {
          "enum": [
            "KalturaSegmentValues",
            "KalturaSegmentAllValues"
          ],
          "type": "string"
        },
        "source": {
          "$ref": "#/definitions/KalturaSegmentSource"
        },
        "values": {
          "items": {
            "$ref": "#/definitions/KalturaSegmentValue"
          },
          "type": "array"
        }
      },
      "title": "KalturaSegmentValues",
      "type": "object"
    },
    "KalturaSegmentationPartnerConfiguration": {
      "description": "Partner configuration for segments configuration",
      "properties": {
        "maxCalculatedPeriod": {
          "description": "The maximum number of past days to be calculated for dynamic segments, default=180",
          "type": "integer"
        },
        "maxDynamicSegments": {
          "description": "How many dynamic segments (segments with conditions) the operator is allowed to have, default=50",
          "type": "integer"
        }
      },
      "title": "KalturaSegmentationPartnerConfiguration",
      "type": "object"
    },
    "KalturaSegmentationType": {
      "description": "Segmentation type - defines at least one segment",
      "properties": {
        "actions": {
          "items": {
            "$ref": "#/definitions/KalturaBaseSegmentAction"
          },
          "type": "array"
        },
        "assetUserRuleId": {
          "description": "Asset User Rule Id",
          "type": "integer"
        },
        "conditions": {
          "items": {
            "$ref": "#/definitions/KalturaBaseSegmentCondition"
          },
          "type": "array"
        },
        "conditionsOperator": {
          "description": "Enum Type: `KalturaBooleanOperator`\n\nBoolean operator between segmentation type&#39;s conditions - defaults to &quot;And&quot;",
          "enum": [
            "And",
            "Or"
          ],
          "type": "string",
          "x-enumLabels": [
            "AND",
            "OR"
          ],
          "x-enumType": "KalturaBooleanOperator"
        },
        "createDate": {
          "description": "`readOnly`\n\nCreate date of segmentation type",
          "readOnly": true,
          "type": "integer",
          "x-inputType": "datetime"
        },
        "description": {
          "description": "Description of segmentation type",
          "type": "string"
        },
        "executeDate": {
          "description": "`readOnly`\n\nLast date of execution of segmentation type",
          "readOnly": true,
          "type": "integer",
          "x-inputType": "datetime"
        },
        "id": {
          "description": "`readOnly`\n\nId of segmentation type",
          "readOnly": true,
          "type": "integer"
        },
        "name": {
          "description": "Name of segmentation type",
          "type": "string"
        },
        "updateDate": {
          "description": "`readOnly`\n\nUpdate date of segmentation type",
          "readOnly": true,
          "type": "integer",
          "x-inputType": "datetime"
        },
        "value": {
          "$ref": "#/definitions/KalturaBaseSegmentValue"
        },
        "version": {
          "description": "`readOnly`\n\nSegmentation type version",
          "readOnly": true,
          "type": "integer"
        }
      },
      "title": "KalturaSegmentationType",
      "type": "object"
    },
    "KalturaSegmentationTypeFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBaseSegmentationTypeFilter"
        }
      ],
      "description": "Filter for segmentation types",
      "properties": {
        "assetUserRuleIdIn": {
          "description": "comma-separated list of KalturaSegmentationType.assetUserRuleId values",
          "type": "string"
        },
        "idIn": {
          "description": "Comma separated segmentation types identifiers",
          "type": "string"
        },
        "kSql": {
          "description": "KSQL expression",
          "type": "string"
        },
        "nameContain": {
          "description": "Name of segment contains specific string value",
          "type": "string"
        },
        "orderBy": {
          "enum": [
            "UPDATE_DATE_DESC",
            "UPDATE_DATE_ASC",
            "CREATE_DATE_DESC",
            "CREATE_DATE_ASC",
            "EXECUTE_DATE_DESC",
            "EXECUTE_DATE_ASC",
            "AFFECTED_USERS_DESC",
            "AFFECTED_USERS_ASC",
            "AFFECTED_HOUSEHOLDS_DESC",
            "AFFECTED_HOUSEHOLDS_ASC"
          ],
          "type": "string",
          "x-enumLabels": [
            "UPDATE_DATE_DESC",
            "UPDATE_DATE_ASC",
            "CREATE_DATE_DESC",
            "CREATE_DATE_ASC",
            "EXECUTE_DATE_DESC",
            "EXECUTE_DATE_ASC",
            "AFFECTED_USERS_DESC",
            "AFFECTED_USERS_ASC",
            "AFFECTED_HOUSEHOLDS_DESC",
            "AFFECTED_HOUSEHOLDS_ASC"
          ],
          "x-enumType": "KalturaSegmentationTypeOrderBy"
        }
      },
      "title": "KalturaSegmentationTypeFilter",
      "type": "object"
    },
    "KalturaSegmentationTypeListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "List of segmentation types",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaSegmentationType"
          },
          "type": "array"
        }
      },
      "title": "KalturaSegmentationTypeListResponse",
      "type": "object"
    },
    "KalturaSegmentsCondition": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaCondition"
        }
      ],
      "description": "Segments condition",
      "properties": {
        "segmentsIds": {
          "description": "Comma separated segments IDs list",
          "type": "string"
        }
      },
      "title": "KalturaSegmentsCondition",
      "type": "object"
    },
    "KalturaSeriesIdArguments": {
      "properties": {
        "assetTypeIdIn": {
          "description": "Comma separated asset type IDs",
          "type": "string"
        },
        "episodeNumberMetaName": {
          "description": "Episode number meta name",
          "type": "string"
        },
        "seasonNumberMetaName": {
          "description": "Season number meta name",
          "type": "string"
        },
        "seriesId": {
          "description": "Series ID",
          "type": "string"
        },
        "seriesIdMetaName": {
          "description": "Series ID meta name.",
          "type": "string"
        }
      },
      "title": "KalturaSeriesIdArguments",
      "type": "object"
    },
    "KalturaSeriesRecording": {
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaSeriesRecording"
        },
        {
          "$ref": "#/definitions/KalturaExternalSeriesRecording"
        }
      ],
      "discriminator": "objectType",
      "properties": {
        "channelId": {
          "description": "Kaltura ChannelId",
          "type": "integer"
        },
        "createDate": {
          "description": "`readOnly`\n\nSpecifies when was the series recording created. Date and time represented as epoch.",
          "readOnly": true,
          "type": "integer",
          "x-inputType": "datetime"
        },
        "epgId": {
          "description": "Kaltura EpgId",
          "type": "integer"
        },
        "excludedSeasons": {
          "items": {
            "$ref": "#/definitions/KalturaIntegerValue"
          },
          "type": "array"
        },
        "id": {
          "description": "`readOnly`\n\nKaltura unique ID representing the series recording identifier",
          "readOnly": true,
          "type": "integer"
        },
        "objectType": {
          "enum": [
            "KalturaSeriesRecording",
            "KalturaExternalSeriesRecording"
          ],
          "type": "string"
        },
        "seasonNumber": {
          "description": "Kaltura SeasonNumber",
          "type": "integer"
        },
        "seriesId": {
          "description": "Kaltura SeriesId",
          "type": "string"
        },
        "seriesRecordingOption": {
          "$ref": "#/definitions/KalturaSeriesRecordingOption"
        },
        "type": {
          "description": "Enum Type: `KalturaRecordingType`\n\nRecording Type: single/series/season",
          "enum": [
            "SINGLE",
            "SEASON",
            "SERIES",
            "OriginalBroadcast"
          ],
          "type": "string",
          "x-enumLabels": [
            "SINGLE",
            "SEASON",
            "SERIES",
            "ORIGINALBROADCAST"
          ],
          "x-enumType": "KalturaRecordingType"
        },
        "updateDate": {
          "description": "`readOnly`\n\nSpecifies when was the series recording last updated. Date and time represented as epoch.",
          "readOnly": true,
          "type": "integer",
          "x-inputType": "datetime"
        }
      },
      "title": "KalturaSeriesRecording",
      "type": "object"
    },
    "KalturaSeriesRecordingFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaSeriesRecordingFilter"
        },
        {
          "$ref": "#/definitions/KalturaCloudSeriesRecordingFilter"
        }
      ],
      "description": "Filtering recordings",
      "discriminator": "objectType",
      "properties": {
        "objectType": {
          "enum": [
            "KalturaSeriesRecordingFilter",
            "KalturaCloudSeriesRecordingFilter"
          ],
          "type": "string"
        },
        "orderBy": {
          "enum": [
            "START_DATE_ASC",
            "START_DATE_DESC",
            "ID_ASC",
            "ID_DESC",
            "SERIES_ID_ASC",
            "SERIES_ID_DESC"
          ],
          "type": "string",
          "x-enumLabels": [
            "START_DATE_ASC",
            "START_DATE_DESC",
            "ID_ASC",
            "ID_DESC",
            "SERIES_ID_ASC",
            "SERIES_ID_DESC"
          ],
          "x-enumType": "KalturaSeriesRecordingOrderBy"
        }
      },
      "title": "KalturaSeriesRecordingFilter",
      "type": "object"
    },
    "KalturaSeriesRecordingListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "Series Recordings info wrapper",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaSeriesRecording"
          },
          "type": "array"
        }
      },
      "title": "KalturaSeriesRecordingListResponse",
      "type": "object"
    },
    "KalturaSeriesRecordingOption": {
      "properties": {
        "chronologicalRecordStartTime": {
          "description": "Enum Type: `KalturaChronologicalRecordStartTime`\n\nRecord future only from selected value",
          "enum": [
            "NONE",
            "NOW",
            "EPG_START_TIME"
          ],
          "type": "string",
          "x-enumLabels": [
            "NONE",
            "NOW",
            "EPG_START_TIME"
          ],
          "x-enumType": "KalturaChronologicalRecordStartTime"
        },
        "minEpisodeNumber": {
          "description": "min Season Number",
          "type": "integer"
        },
        "minSeasonNumber": {
          "description": "min Season Number",
          "type": "integer"
        }
      },
      "title": "KalturaSeriesRecordingOption",
      "type": "object"
    },
    "KalturaSeriesReminder": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaReminder"
        }
      ],
      "properties": {
        "epgChannelId": {
          "description": "EPG channel identifier",
          "type": "integer"
        },
        "seasonNumber": {
          "description": "Season number",
          "type": "integer"
        },
        "seriesId": {
          "description": "Series identifier",
          "type": "string"
        }
      },
      "title": "KalturaSeriesReminder",
      "type": "object"
    },
    "KalturaSeriesReminderFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaReminderFilter"
        }
      ],
      "properties": {
        "epgChannelIdEqual": {
          "description": "EPG channel ID",
          "type": "integer"
        },
        "orderBy": {
          "enum": [
            "NONE"
          ],
          "type": "string",
          "x-enumLabels": [
            "NONE"
          ],
          "x-enumType": "KalturaSeriesReminderOrderBy"
        },
        "seriesIdIn": {
          "description": "Comma separated series IDs",
          "type": "string"
        }
      },
      "title": "KalturaSeriesReminderFilter",
      "type": "object"
    },
    "KalturaSession": {
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaSession"
        },
        {
          "$ref": "#/definitions/KalturaSessionInfo"
        }
      ],
      "description": "Kaltura Session",
      "discriminator": "objectType",
      "properties": {
        "createDate": {
          "description": "Create date",
          "type": "integer",
          "x-inputType": "datetime"
        },
        "expiry": {
          "description": "Expiry",
          "type": "integer"
        },
        "ks": {
          "description": "KS",
          "type": "string"
        },
        "objectType": {
          "enum": [
            "KalturaSession",
            "KalturaSessionInfo"
          ],
          "type": "string"
        },
        "partnerId": {
          "description": "Partner identifier",
          "type": "integer"
        },
        "privileges": {
          "description": "Privileges",
          "type": "string"
        },
        "udid": {
          "description": "UDID",
          "type": "string"
        },
        "userId": {
          "description": "User identifier",
          "type": "string"
        }
      },
      "title": "KalturaSession",
      "type": "object"
    },
    "KalturaSessionInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaSession"
        }
      ],
      "description": "Kaltura Session",
      "properties": {},
      "title": "KalturaSessionInfo",
      "type": "object"
    },
    "KalturaShopPreActionCondition": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBasePreActionCondition"
        }
      ],
      "properties": {
        "shopAssetUserRuleId": {
          "description": "Asset user rule ID with shop condition",
          "type": "integer"
        }
      },
      "title": "KalturaShopPreActionCondition",
      "type": "object"
    },
    "KalturaSingleSegmentValue": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBaseSegmentValue"
        }
      ],
      "properties": {
        "affectedHouseholds": {
          "description": "`readOnly`\n\nThe amount of households that are being affected by this Segmentation type",
          "readOnly": true,
          "type": "integer"
        },
        "affectedUsers": {
          "description": "`readOnly`\n\nThe amount of users that are being affected by this Segmentation type",
          "readOnly": true,
          "type": "integer"
        },
        "id": {
          "description": "`readOnly`\n\nId of segment",
          "readOnly": true,
          "type": "integer"
        }
      },
      "title": "KalturaSingleSegmentValue",
      "type": "object"
    },
    "KalturaSkipCondition": {
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaPropertySkipCondition"
        },
        {
          "$ref": "#/definitions/KalturaSkipOnErrorCondition"
        },
        {
          "$ref": "#/definitions/KalturaAggregatedPropertySkipCondition"
        }
      ],
      "description": "`abstract`\n\nSkip current request according to skip condition",
      "discriminator": "objectType",
      "properties": {
        "objectType": {
          "enum": [
            "KalturaPropertySkipCondition",
            "KalturaSkipOnErrorCondition",
            "KalturaAggregatedPropertySkipCondition"
          ],
          "type": "string"
        }
      },
      "title": "KalturaSkipCondition",
      "type": "object",
      "x-abstract": true
    },
    "KalturaSkipOnErrorCondition": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaSkipCondition"
        }
      ],
      "description": "Skips current request if an error occurs according to the selected skip option",
      "properties": {
        "condition": {
          "description": "Enum Type: `KalturaSkipOptions`\n\nIndicates which error should be considered to skip the current request",
          "enum": [
            "No",
            "Previous",
            "Any"
          ],
          "type": "string",
          "x-enumLabels": [
            "NO",
            "PREVIOUS",
            "ANY"
          ],
          "x-enumType": "KalturaSkipOptions"
        }
      },
      "title": "KalturaSkipOnErrorCondition",
      "type": "object"
    },
    "KalturaSlimAsset": {
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaSlimAsset"
        },
        {
          "$ref": "#/definitions/KalturaBookmark"
        }
      ],
      "description": "Slim Asset Details",
      "discriminator": "objectType",
      "properties": {
        "id": {
          "description": "`insertOnly`\n\nInternal identifier of the asset",
          "type": "string"
        },
        "objectType": {
          "enum": [
            "KalturaSlimAsset",
            "KalturaBookmark"
          ],
          "type": "string"
        },
        "type": {
          "description": "`insertOnly`\n\nEnum Type: `KalturaAssetType`\n\nThe type of the asset. Possible values: media, recording, epg",
          "enum": [
            "media",
            "recording",
            "epg"
          ],
          "type": "string",
          "x-enumLabels": [
            "MEDIA",
            "RECORDING",
            "EPG"
          ],
          "x-enumType": "KalturaAssetType"
        }
      },
      "title": "KalturaSlimAsset",
      "type": "object"
    },
    "KalturaSmsAdapterProfile": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaOTTObjectSupportNullable"
        }
      ],
      "description": "Sms adapter profile",
      "properties": {
        "adapterUrl": {
          "description": "adapter url",
          "type": "string"
        },
        "externalIdentifier": {
          "description": "SSO Adapter external identifier",
          "type": "string"
        },
        "id": {
          "description": "`readOnly`\n\nid",
          "readOnly": true,
          "type": "integer"
        },
        "isActive": {
          "description": "SSO Adapter is active status",
          "type": "integer"
        },
        "name": {
          "description": "Name",
          "type": "string"
        },
        "settings": {
          "items": {
            "$ref": "#/definitions/KalturaStringValue"
          },
          "type": "array"
        },
        "sharedSecret": {
          "description": "Shared Secret",
          "type": "string"
        }
      },
      "title": "KalturaSmsAdapterProfile",
      "type": "object"
    },
    "KalturaSmsAdapterProfileFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "properties": {
        "orderBy": {
          "enum": [
            "NONE"
          ],
          "type": "string",
          "x-enumLabels": [
            "NONE"
          ],
          "x-enumType": "KalturaSmsAdapterProfileOrderBy"
        }
      },
      "title": "KalturaSmsAdapterProfileFilter",
      "type": "object"
    },
    "KalturaSmsAdapterProfileListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaSmsAdapterProfile"
          },
          "type": "array"
        }
      },
      "title": "KalturaSmsAdapterProfileListResponse",
      "type": "object"
    },
    "KalturaSmsDispatcher": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaDispatcher"
        }
      ],
      "properties": {},
      "title": "KalturaSmsDispatcher",
      "type": "object"
    },
    "KalturaSocial": {
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaFacebookSocial"
        }
      ],
      "description": "`abstract`",
      "discriminator": "objectType",
      "properties": {
        "birthday": {
          "description": "User birthday",
          "type": "string"
        },
        "email": {
          "description": "User email",
          "type": "string"
        },
        "firstName": {
          "description": "First name",
          "type": "string"
        },
        "gender": {
          "description": "Gender",
          "type": "string"
        },
        "id": {
          "description": "`readOnly`\n\nFacebook identifier",
          "readOnly": true,
          "type": "string"
        },
        "lastName": {
          "description": "Last name",
          "type": "string"
        },
        "name": {
          "description": "Full name",
          "type": "string"
        },
        "objectType": {
          "enum": [
            "KalturaFacebookSocial"
          ],
          "type": "string"
        },
        "pictureUrl": {
          "description": "Profile picture URL",
          "type": "string"
        },
        "status": {
          "description": "`readOnly`\n\nUser model status\r\n            Possible values: UNKNOWN, OK, ERROR, NOACTION, NOTEXIST, CONFLICT, MERGE, MERGEOK, NEWUSER, MINFRIENDS, INVITEOK, INVITEERROR, ACCESSDENIED, WRONGPASSWORDORUSERNAME, UNMERGEOK, USEREMAILISMISSING",
          "readOnly": true,
          "type": "string"
        },
        "userId": {
          "description": "`readOnly`\n\nUser identifier",
          "readOnly": true,
          "type": "string"
        }
      },
      "title": "KalturaSocial",
      "type": "object",
      "x-abstract": true
    },
    "KalturaSocialAction": {
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaSocialAction"
        },
        {
          "$ref": "#/definitions/KalturaSocialActionRate"
        }
      ],
      "discriminator": "objectType",
      "properties": {
        "actionType": {
          "description": "Enum Type: `KalturaSocialActionType`\n\nAction type",
          "enum": [
            "LIKE",
            "WATCH",
            "RATE",
            "SHARE"
          ],
          "type": "string",
          "x-enumLabels": [
            "LIKE",
            "WATCH",
            "RATE",
            "SHARE"
          ],
          "x-enumType": "KalturaSocialActionType"
        },
        "assetId": {
          "description": "ID of the asset that was acted upon",
          "type": "integer"
        },
        "assetType": {
          "description": "Enum Type: `KalturaAssetType`\n\nType of the asset that was acted upon, currently only VOD (media)",
          "enum": [
            "media",
            "recording",
            "epg"
          ],
          "type": "string",
          "x-enumLabels": [
            "MEDIA",
            "RECORDING",
            "EPG"
          ],
          "x-enumType": "KalturaAssetType"
        },
        "id": {
          "description": "`readOnly`\n\nsocial action document id",
          "readOnly": true,
          "type": "string"
        },
        "objectType": {
          "enum": [
            "KalturaSocialAction",
            "KalturaSocialActionRate"
          ],
          "type": "string"
        },
        "time": {
          "description": "EPOC based timestamp for when the action occurred",
          "type": "integer"
        },
        "url": {
          "description": "`writeOnly`\n\nThe value of the url",
          "type": "string"
        }
      },
      "title": "KalturaSocialAction",
      "type": "object"
    },
    "KalturaSocialActionFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "properties": {
        "actionTypeIn": {
          "description": "Comma separated list of social actions to filter by",
          "type": "string"
        },
        "assetIdIn": {
          "description": "Comma separated list of asset identifiers.",
          "type": "string"
        },
        "assetTypeEqual": {
          "description": "Enum Type: `KalturaAssetType`\n\nAsset Type",
          "enum": [
            "media",
            "recording",
            "epg"
          ],
          "type": "string",
          "x-enumLabels": [
            "MEDIA",
            "RECORDING",
            "EPG"
          ],
          "x-enumType": "KalturaAssetType"
        },
        "orderBy": {
          "enum": [
            "NONE"
          ],
          "type": "string",
          "x-enumLabels": [
            "NONE"
          ],
          "x-enumType": "KalturaSocialActionOrderBy"
        }
      },
      "title": "KalturaSocialActionFilter",
      "type": "object"
    },
    "KalturaSocialActionListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaSocialAction"
          },
          "type": "array"
        }
      },
      "title": "KalturaSocialActionListResponse",
      "type": "object"
    },
    "KalturaSocialActionRate": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaSocialAction"
        }
      ],
      "properties": {
        "rate": {
          "description": "The value of the rating",
          "type": "integer"
        }
      },
      "title": "KalturaSocialActionRate",
      "type": "object"
    },
    "KalturaSocialComment": {
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaSocialComment"
        },
        {
          "$ref": "#/definitions/KalturaSocialNetworkComment"
        },
        {
          "$ref": "#/definitions/KalturaAssetComment"
        },
        {
          "$ref": "#/definitions/KalturaFacebookPost"
        },
        {
          "$ref": "#/definitions/KalturaTwitterTwit"
        }
      ],
      "discriminator": "objectType",
      "properties": {
        "createDate": {
          "description": "Comment creation date",
          "type": "integer",
          "x-inputType": "datetime"
        },
        "header": {
          "description": "Comment header",
          "type": "string"
        },
        "objectType": {
          "enum": [
            "KalturaSocialComment",
            "KalturaSocialNetworkComment",
            "KalturaAssetComment",
            "KalturaFacebookPost",
            "KalturaTwitterTwit"
          ],
          "type": "string"
        },
        "text": {
          "description": "Comment body",
          "type": "string"
        },
        "writer": {
          "description": "The writer of the comment",
          "type": "string"
        }
      },
      "title": "KalturaSocialComment",
      "type": "object"
    },
    "KalturaSocialCommentFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "properties": {
        "assetIdEqual": {
          "description": "Asset ID to filter by",
          "type": "integer"
        },
        "assetTypeEqual": {
          "description": "Enum Type: `KalturaAssetType`\n\nAsset type to filter by, currently only VOD (media)",
          "enum": [
            "media",
            "recording",
            "epg"
          ],
          "type": "string",
          "x-enumLabels": [
            "MEDIA",
            "RECORDING",
            "EPG"
          ],
          "x-enumType": "KalturaAssetType"
        },
        "createDateGreaterThan": {
          "description": "The create date from which to get the comments",
          "type": "integer"
        },
        "orderBy": {
          "enum": [
            "CREATE_DATE_ASC",
            "CREATE_DATE_DESC"
          ],
          "type": "string",
          "x-enumLabels": [
            "CREATE_DATE_ASC",
            "CREATE_DATE_DESC"
          ],
          "x-enumType": "KalturaSocialCommentOrderBy"
        },
        "socialPlatformEqual": {
          "description": "Enum Type: `KalturaSocialPlatform`\n\nComma separated list of social actions to filter by",
          "enum": [
            "IN_APP",
            "FACEBOOK",
            "TWITTER"
          ],
          "type": "string",
          "x-enumLabels": [
            "IN_APP",
            "FACEBOOK",
            "TWITTER"
          ],
          "x-enumType": "KalturaSocialPlatform"
        }
      },
      "title": "KalturaSocialCommentFilter",
      "type": "object"
    },
    "KalturaSocialCommentListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaSocialComment"
          },
          "type": "array"
        }
      },
      "title": "KalturaSocialCommentListResponse",
      "type": "object"
    },
    "KalturaSocialConfig": {
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaSocialConfig"
        },
        {
          "$ref": "#/definitions/KalturaSocialFacebookConfig"
        },
        {
          "$ref": "#/definitions/KalturaSocialUserConfig"
        }
      ],
      "description": "Returns social configuration for the partner",
      "discriminator": "objectType",
      "properties": {
        "objectType": {
          "enum": [
            "KalturaSocialConfig",
            "KalturaSocialFacebookConfig",
            "KalturaSocialUserConfig"
          ],
          "type": "string"
        }
      },
      "title": "KalturaSocialConfig",
      "type": "object"
    },
    "KalturaSocialFacebookConfig": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaSocialConfig"
        }
      ],
      "description": "Returns social configuration for the partner",
      "properties": {
        "appId": {
          "description": "The application identifier",
          "type": "string"
        },
        "permissions": {
          "description": "List of application permissions",
          "type": "string"
        }
      },
      "title": "KalturaSocialFacebookConfig",
      "type": "object"
    },
    "KalturaSocialFriendActivity": {
      "properties": {
        "socialAction": {
          "$ref": "#/definitions/KalturaSocialAction"
        },
        "userFullName": {
          "description": "The full name of the user who did the social action",
          "type": "string"
        },
        "userPictureUrl": {
          "description": "The URL of the profile picture of the user who did the social action",
          "type": "string"
        }
      },
      "title": "KalturaSocialFriendActivity",
      "type": "object"
    },
    "KalturaSocialFriendActivityFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "properties": {
        "actionTypeIn": {
          "description": "Comma separated list of social actions to filter by",
          "type": "string"
        },
        "assetIdEqual": {
          "description": "Asset ID to filter by",
          "type": "integer"
        },
        "assetTypeEqual": {
          "description": "Enum Type: `KalturaAssetType`\n\nAsset type to filter by, currently only VOD (media)",
          "enum": [
            "media",
            "recording",
            "epg"
          ],
          "type": "string",
          "x-enumLabels": [
            "MEDIA",
            "RECORDING",
            "EPG"
          ],
          "x-enumType": "KalturaAssetType"
        },
        "orderBy": {
          "enum": [
            "NONE",
            "UPDATE_DATE_DESC"
          ],
          "type": "string",
          "x-enumLabels": [
            "NONE",
            "UPDATE_DATE_DESC"
          ],
          "x-enumType": "KalturaSocialFriendActivityOrderBy"
        }
      },
      "title": "KalturaSocialFriendActivityFilter",
      "type": "object"
    },
    "KalturaSocialFriendActivityListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaSocialFriendActivity"
          },
          "type": "array"
        }
      },
      "title": "KalturaSocialFriendActivityListResponse",
      "type": "object"
    },
    "KalturaSocialNetworkComment": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaSocialComment"
        }
      ],
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaSocialNetworkComment"
        },
        {
          "$ref": "#/definitions/KalturaFacebookPost"
        },
        {
          "$ref": "#/definitions/KalturaTwitterTwit"
        }
      ],
      "discriminator": "objectType",
      "properties": {
        "authorImageUrl": {
          "description": "The URL of the profile picture of the author of the comment",
          "type": "string"
        },
        "likeCounter": {
          "description": "Number of likes",
          "type": "string"
        },
        "objectType": {
          "enum": [
            "KalturaSocialNetworkComment",
            "KalturaFacebookPost",
            "KalturaTwitterTwit"
          ],
          "type": "string"
        }
      },
      "title": "KalturaSocialNetworkComment",
      "type": "object"
    },
    "KalturaSocialResponse": {
      "properties": {
        "data": {
          "description": "Data",
          "type": "string"
        },
        "kalturaUsername": {
          "description": "Kaltura username",
          "type": "string"
        },
        "minFriendsLimitation": {
          "description": "Minimum number of friends limitation",
          "type": "string"
        },
        "pic": {
          "description": "Facebook profile picture",
          "type": "string"
        },
        "socialUser": {
          "$ref": "#/definitions/KalturaSocialUser"
        },
        "socialUsername": {
          "description": "Facebook username",
          "type": "string"
        },
        "status": {
          "description": "User model status\r\n            Possible values: UNKNOWN, OK, ERROR, NOACTION, NOTEXIST, CONFLICT, MERGE, MERGEOK, NEWUSER, MINFRIENDS, INVITEOK, INVITEERROR, ACCESSDENIED, WRONGPASSWORDORUSERNAME, UNMERGEOK",
          "type": "string"
        },
        "token": {
          "description": "Facebook encrypted token",
          "type": "string"
        },
        "userId": {
          "description": "User identifier",
          "type": "string"
        }
      },
      "title": "KalturaSocialResponse",
      "type": "object"
    },
    "KalturaSocialUser": {
      "properties": {
        "birthday": {
          "description": "User birthday",
          "type": "string"
        },
        "email": {
          "description": "User email",
          "type": "string"
        },
        "firstName": {
          "description": "First name",
          "type": "string"
        },
        "gender": {
          "description": "Gender",
          "type": "string"
        },
        "id": {
          "description": "Facebook identifier",
          "type": "string"
        },
        "lastName": {
          "description": "Last name",
          "type": "string"
        },
        "name": {
          "description": "Full name",
          "type": "string"
        },
        "userId": {
          "description": "User identifier",
          "type": "string"
        }
      },
      "title": "KalturaSocialUser",
      "type": "object"
    },
    "KalturaSocialUserConfig": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaSocialConfig"
        }
      ],
      "properties": {
        "actionPermissionItems": {
          "items": {
            "$ref": "#/definitions/KalturaActionPermissionItem"
          },
          "type": "array"
        }
      },
      "title": "KalturaSocialUserConfig",
      "type": "object"
    },
    "KalturaStartDateOffsetRuleAction": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaTimeOffsetRuleAction"
        }
      ],
      "description": "Start date offset action",
      "properties": {},
      "title": "KalturaStartDateOffsetRuleAction",
      "type": "object"
    },
    "KalturaStreamingDevice": {
      "description": "Watch history asset info",
      "properties": {
        "asset": {
          "$ref": "#/definitions/KalturaSlimAsset"
        },
        "udid": {
          "description": "`insertOnly`\n\nDevice UDID",
          "type": "string"
        },
        "userId": {
          "description": "`readOnly`\n\nUser identifier",
          "readOnly": true,
          "type": "string"
        }
      },
      "title": "KalturaStreamingDevice",
      "type": "object"
    },
    "KalturaStreamingDeviceFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "description": "Filtering streaming devices",
      "properties": {
        "assetTypeEqual": {
          "description": "Enum Type: `KalturaAssetType`\n\nfilter by asset type",
          "enum": [
            "media",
            "recording",
            "epg"
          ],
          "type": "string",
          "x-enumLabels": [
            "MEDIA",
            "RECORDING",
            "EPG"
          ],
          "x-enumType": "KalturaAssetType"
        },
        "orderBy": {
          "enum": [
            "NONE"
          ],
          "type": "string",
          "x-enumLabels": [
            "NONE"
          ],
          "x-enumType": "KalturaStreamingDeviceOrderBy"
        }
      },
      "title": "KalturaStreamingDeviceFilter",
      "type": "object"
    },
    "KalturaStreamingDeviceListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "Watch history asset wrapper",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaStreamingDevice"
          },
          "type": "array"
        }
      },
      "title": "KalturaStreamingDeviceListResponse",
      "type": "object"
    },
    "KalturaStringValue": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaValue"
        }
      ],
      "description": "A string representation to return an array of strings",
      "properties": {
        "value": {
          "description": "Value",
          "type": "string"
        }
      },
      "title": "KalturaStringValue",
      "type": "object"
    },
    "KalturaStringValueArray": {
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaStringValue"
          },
          "type": "array"
        }
      },
      "title": "KalturaStringValueArray",
      "type": "object"
    },
    "KalturaSubscribeReference": {
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaSubscribeReference"
        },
        {
          "$ref": "#/definitions/KalturaSubscriptionSubscribeReference"
        }
      ],
      "discriminator": "objectType",
      "properties": {
        "objectType": {
          "enum": [
            "KalturaSubscribeReference",
            "KalturaSubscriptionSubscribeReference"
          ],
          "type": "string"
        }
      },
      "title": "KalturaSubscribeReference",
      "type": "object"
    },
    "KalturaSubscription": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaOTTObjectSupportNullable"
        }
      ],
      "description": "Subscription details",
      "properties": {
        "adsParam": {
          "description": "The parameters to pass to the ads server",
          "type": "string"
        },
        "adsPolicy": {
          "description": "Enum Type: `KalturaAdsPolicy`\n\nAds policy",
          "enum": [
            "NO_ADS",
            "KEEP_ADS"
          ],
          "type": "string",
          "x-enumLabels": [
            "NO_ADS",
            "KEEP_ADS"
          ],
          "x-enumType": "KalturaAdsPolicy"
        },
        "channels": {
          "items": {
            "$ref": "#/definitions/KalturaBaseChannel"
          },
          "type": "array"
        },
        "channelsIds": {
          "description": "Comma separated channels Ids associated with this subscription",
          "type": "string"
        },
        "couponsGroups": {
          "items": {
            "$ref": "#/definitions/KalturaCouponsGroup"
          },
          "type": "array"
        },
        "createDate": {
          "description": "`readOnly`\n\nSpecifies when was the Subscription created. Date and time represented as epoch.",
          "readOnly": true,
          "type": "integer",
          "x-inputType": "datetime"
        },
        "dependencyType": {
          "description": "Enum Type: `KalturaSubscriptionDependencyType`\n\nDependency Type",
          "enum": [
            "NOTAPPLICABLE",
            "BASE",
            "ADDON"
          ],
          "type": "string",
          "x-enumLabels": [
            "NOTAPPLICABLE",
            "BASE",
            "ADDON"
          ],
          "x-enumType": "KalturaSubscriptionDependencyType"
        },
        "description": {
          "description": "`readOnly`\n\ndescription of the subscription",
          "readOnly": true,
          "type": "string"
        },
        "discountModule": {
          "$ref": "#/definitions/KalturaDiscountModule"
        },
        "endDate": {
          "description": "The last date the subscription is available for purchasing",
          "type": "integer",
          "x-inputType": "datetime"
        },
        "externalId": {
          "description": "External ID",
          "type": "string"
        },
        "fileTypes": {
          "items": {
            "$ref": "#/definitions/KalturaIntegerValue"
          },
          "type": "array"
        },
        "fileTypesIds": {
          "description": "Comma separated file types identifiers that are supported in this subscription",
          "type": "string"
        },
        "gracePeriodMinutes": {
          "description": "The subscription grace period in minutes",
          "type": "integer"
        },
        "householdLimitationsId": {
          "description": "The household limitation module identifier associated with this subscription",
          "type": "integer"
        },
        "id": {
          "description": "Subscription identifier",
          "type": "string"
        },
        "internalDiscountModuleId": {
          "description": "The internal discount module identifier for the subscription",
          "type": "integer"
        },
        "isActive": {
          "description": "Is active subscription",
          "type": "boolean"
        },
        "isCancellationBlocked": {
          "description": "Is cancellation blocked for the subscription",
          "type": "boolean"
        },
        "isInfiniteRenewal": {
          "description": "`readOnly`\n\nIndicates whether the subscription will renew forever",
          "readOnly": true,
          "type": "boolean"
        },
        "isRenewable": {
          "description": "`readOnly`\n\nDenotes whether or not this subscription can be renewed",
          "readOnly": true,
          "type": "boolean"
        },
        "isWaiverEnabled": {
          "description": "`readOnly`\n\nIndicates whether or not the end user has the right to waive his rights to cancel a purchase",
          "readOnly": true,
          "type": "boolean"
        },
        "maxViewsNumber": {
          "description": "`readOnly`\n\nThe maximum number of times an item in this usage module can be viewed",
          "readOnly": true,
          "type": "integer"
        },
        "mediaId": {
          "description": "`readOnly`\n\nIdentifier of the media associated with the subscription",
          "readOnly": true,
          "type": "integer"
        },
        "multilingualDescription": {
          "items": {
            "$ref": "#/definitions/KalturaTranslationToken"
          },
          "type": "array"
        },
        "multilingualName": {
          "items": {
            "$ref": "#/definitions/KalturaTranslationToken"
          },
          "type": "array"
        },
        "name": {
          "description": "`readOnly`\n\nName of the subscription",
          "readOnly": true,
          "type": "string"
        },
        "preSaleDate": {
          "description": "The Pre-Sale date the subscription is available for purchasing",
          "type": "integer",
          "x-inputType": "datetime"
        },
        "premiumServices": {
          "items": {
            "$ref": "#/definitions/KalturaPremiumService"
          },
          "type": "array"
        },
        "previewModule": {
          "$ref": "#/definitions/KalturaPreviewModule"
        },
        "previewModuleId": {
          "description": "Subscription preview module identifier",
          "type": "integer"
        },
        "price": {
          "$ref": "#/definitions/KalturaPriceDetails"
        },
        "pricePlanIds": {
          "description": "Comma separated subscription price plan IDs",
          "type": "string"
        },
        "productCodes": {
          "items": {
            "$ref": "#/definitions/KalturaProductCode"
          },
          "type": "array"
        },
        "prorityInOrder": {
          "description": "Subscription order (when returned in methods that retrieve subscriptions)",
          "type": "integer"
        },
        "renewalsNumber": {
          "description": "`readOnly`\n\nDefines the number of times this subscription will be renewed",
          "readOnly": true,
          "type": "integer"
        },
        "startDate": {
          "description": "The first date the subscription is available for purchasing",
          "type": "integer",
          "x-inputType": "datetime"
        },
        "subscriptionCouponGroup": {
          "items": {
            "$ref": "#/definitions/KalturaSubscriptionCouponGroup"
          },
          "type": "array"
        },
        "updateDate": {
          "description": "`readOnly`\n\nSpecifies when was the Subscription last updated. Date and time represented as epoch.",
          "readOnly": true,
          "type": "integer",
          "x-inputType": "datetime"
        },
        "userTypes": {
          "items": {
            "$ref": "#/definitions/KalturaOTTUserType"
          },
          "type": "array"
        },
        "viewLifeCycle": {
          "description": "`readOnly`\n\nThe amount time an item is available for viewing since a user started watching the item",
          "readOnly": true,
          "type": "integer"
        },
        "waiverPeriod": {
          "description": "`readOnly`\n\nTime period during which the end user can waive his rights to cancel a purchase. When the time period is passed, the purchase can no longer be cancelled",
          "readOnly": true,
          "type": "integer"
        }
      },
      "title": "KalturaSubscription",
      "type": "object"
    },
    "KalturaSubscriptionCondition": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaCondition"
        }
      ],
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaAssetSubscriptionCondition"
        },
        {
          "$ref": "#/definitions/KalturaUserSubscriptionCondition"
        }
      ],
      "description": "`abstract`",
      "discriminator": "objectType",
      "properties": {
        "idIn": {
          "description": "Comma separated subscription IDs list",
          "type": "string"
        },
        "objectType": {
          "enum": [
            "KalturaAssetSubscriptionCondition",
            "KalturaUserSubscriptionCondition"
          ],
          "type": "string"
        }
      },
      "title": "KalturaSubscriptionCondition",
      "type": "object",
      "x-abstract": true
    },
    "KalturaSubscriptionCouponGroup": {
      "description": "Coupons group details",
      "properties": {
        "endDate": {
          "description": "The last date the coupons in this coupons group are valid",
          "type": "integer",
          "x-inputType": "datetime"
        },
        "id": {
          "description": "Coupon group identifier",
          "type": "integer"
        },
        "startDate": {
          "description": "The first date the coupons in this coupons group are valid",
          "type": "integer",
          "x-inputType": "datetime"
        }
      },
      "title": "KalturaSubscriptionCouponGroup",
      "type": "object"
    },
    "KalturaSubscriptionDependencySet": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaSubscriptionSet"
        }
      ],
      "description": "Subscription Dependency Set",
      "properties": {
        "baseSubscriptionId": {
          "description": "Base Subscription identifier",
          "type": "integer"
        }
      },
      "title": "KalturaSubscriptionDependencySet",
      "type": "object"
    },
    "KalturaSubscriptionDependencySetFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaSubscriptionSetFilter"
        }
      ],
      "properties": {
        "baseSubscriptionIdIn": {
          "description": "Comma separated identifiers",
          "type": "string"
        }
      },
      "title": "KalturaSubscriptionDependencySetFilter",
      "type": "object"
    },
    "KalturaSubscriptionEntitlement": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaEntitlement"
        }
      ],
      "description": "KalturaSubscriptionEntitlement",
      "properties": {
        "isInGracePeriod": {
          "description": "`readOnly`\n\nIndicates whether the user is currently in his grace period entitlement",
          "readOnly": true,
          "type": "boolean"
        },
        "isRenewable": {
          "description": "`readOnly`\n\nIndicates whether a subscription is renewable (only for subscription)",
          "readOnly": true,
          "type": "boolean"
        },
        "isRenewableForPurchase": {
          "description": "`readOnly`\n\nIndicates whether the subscription is renewable in this purchase (only for subscription)",
          "readOnly": true,
          "type": "boolean"
        },
        "isSuspended": {
          "description": "`readOnly`\n\nIndicates if the subscription suspended",
          "readOnly": true,
          "type": "boolean"
        },
        "nextRenewalDate": {
          "description": "`readOnly`\n\nThe date of the next renewal (only for subscription)",
          "readOnly": true,
          "type": "integer",
          "x-inputType": "datetime"
        },
        "paymentGatewayId": {
          "description": "Payment Gateway identifier",
          "type": "integer"
        },
        "paymentMethodId": {
          "description": "Payment Method identifier",
          "type": "integer"
        },
        "priceDetails": {
          "$ref": "#/definitions/KalturaEntitlementPriceDetails"
        },
        "scheduledSubscriptionId": {
          "description": "`readOnly`\n\nScheduled Subscription Identifier",
          "readOnly": true,
          "type": "integer"
        },
        "unifiedPaymentId": {
          "description": "`readOnly`\n\nUnified payment identifier",
          "readOnly": true,
          "type": "integer"
        }
      },
      "title": "KalturaSubscriptionEntitlement",
      "type": "object"
    },
    "KalturaSubscriptionFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "properties": {
        "alsoInactive": {
          "description": "return also inactive",
          "type": "boolean"
        },
        "channelIdEqual": {
          "description": "channelIdEqual",
          "type": "integer"
        },
        "couponGroupIdEqual": {
          "description": "couponGroupIdEqual",
          "type": "integer"
        },
        "dependencyTypeIn": {
          "description": "comma separated values of KalturaSubscriptionDependencyType \r\n            return subscriptions associated by their subscription sets dependency Type",
          "type": "string"
        },
        "externalIdIn": {
          "description": "Comma separated subscription external IDs to get the subscriptions by",
          "type": "string"
        },
        "kSql": {
          "description": "KSQL expression",
          "type": "string"
        },
        "mediaFileIdEqual": {
          "description": "Media-file ID to get the subscriptions by",
          "type": "integer"
        },
        "nameContains": {
          "description": "A string that is included in the subscription name",
          "type": "string"
        },
        "orderBy": {
          "enum": [
            "START_DATE_ASC",
            "START_DATE_DESC",
            "CREATE_DATE_ASC",
            "CREATE_DATE_DESC",
            "UPDATE_DATE_ASC",
            "UPDATE_DATE_DESC",
            "NAME_ASC",
            "NAME_DESC"
          ],
          "type": "string",
          "x-enumLabels": [
            "START_DATE_ASC",
            "START_DATE_DESC",
            "CREATE_DATE_ASC",
            "CREATE_DATE_DESC",
            "UPDATE_DATE_ASC",
            "UPDATE_DATE_DESC",
            "NAME_ASC",
            "NAME_DESC"
          ],
          "x-enumType": "KalturaSubscriptionOrderBy"
        },
        "previewModuleIdEqual": {
          "description": "previewModuleIdEqual",
          "type": "integer"
        },
        "pricePlanIdEqual": {
          "description": "pricePlanIdEqual",
          "type": "integer"
        },
        "subscriptionIdIn": {
          "description": "Comma separated subscription IDs to get the subscriptions by",
          "type": "string"
        }
      },
      "title": "KalturaSubscriptionFilter",
      "type": "object"
    },
    "KalturaSubscriptionListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "Subscriptions list",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaSubscription"
          },
          "type": "array"
        }
      },
      "title": "KalturaSubscriptionListResponse",
      "type": "object"
    },
    "KalturaSubscriptionPrice": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaProductPrice"
        }
      ],
      "description": "Subscription price details",
      "properties": {
        "endDate": {
          "description": "If the item related to unified billing cycle purchased - until when the this price is relevant",
          "type": "integer",
          "x-inputType": "datetime"
        }
      },
      "title": "KalturaSubscriptionPrice",
      "type": "object"
    },
    "KalturaSubscriptionSet": {
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaSubscriptionDependencySet"
        },
        {
          "$ref": "#/definitions/KalturaSubscriptionSwitchSet"
        }
      ],
      "description": "`abstract`\n\nSubscription details",
      "discriminator": "objectType",
      "properties": {
        "id": {
          "description": "`readOnly`\n\nSubscriptionSet identifier",
          "readOnly": true,
          "type": "integer"
        },
        "name": {
          "description": "SubscriptionSet name",
          "type": "string"
        },
        "objectType": {
          "enum": [
            "KalturaSubscriptionDependencySet",
            "KalturaSubscriptionSwitchSet"
          ],
          "type": "string"
        },
        "subscriptionIds": {
          "description": "A list of comma separated subscription ids associated with this set ordered by priority ascending",
          "type": "string"
        },
        "type": {
          "description": "`readOnly`\n\nEnum Type: `KalturaSubscriptionSetType`\n\nType of the Subscription Set",
          "enum": [
            "SWITCH",
            "DEPENDENCY"
          ],
          "readOnly": true,
          "type": "string",
          "x-enumLabels": [
            "SWITCH",
            "DEPENDENCY"
          ],
          "x-enumType": "KalturaSubscriptionSetType"
        }
      },
      "title": "KalturaSubscriptionSet",
      "type": "object",
      "x-abstract": true
    },
    "KalturaSubscriptionSetFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaSubscriptionSetFilter"
        },
        {
          "$ref": "#/definitions/KalturaSubscriptionDependencySetFilter"
        }
      ],
      "discriminator": "objectType",
      "properties": {
        "idIn": {
          "description": "Comma separated identifiers",
          "type": "string"
        },
        "objectType": {
          "enum": [
            "KalturaSubscriptionSetFilter",
            "KalturaSubscriptionDependencySetFilter"
          ],
          "type": "string"
        },
        "orderBy": {
          "enum": [
            "NAME_ASC",
            "NAME_DESC"
          ],
          "type": "string",
          "x-enumLabels": [
            "NAME_ASC",
            "NAME_DESC"
          ],
          "x-enumType": "KalturaSubscriptionSetOrderBy"
        },
        "subscriptionIdContains": {
          "description": "Comma separated subscription identifiers",
          "type": "string"
        },
        "typeEqual": {
          "description": "Enum Type: `KalturaSubscriptionSetType`\n\nSubscription Type",
          "enum": [
            "SWITCH",
            "DEPENDENCY"
          ],
          "type": "string",
          "x-enumLabels": [
            "SWITCH",
            "DEPENDENCY"
          ],
          "x-enumType": "KalturaSubscriptionSetType"
        }
      },
      "title": "KalturaSubscriptionSetFilter",
      "type": "object"
    },
    "KalturaSubscriptionSetListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "SubscriptionSets list",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaSubscriptionSet"
          },
          "type": "array"
        }
      },
      "title": "KalturaSubscriptionSetListResponse",
      "type": "object"
    },
    "KalturaSubscriptionSubscribeReference": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaSubscribeReference"
        }
      ],
      "properties": {
        "subscriptionId": {
          "description": "Subscription ID",
          "type": "integer"
        }
      },
      "title": "KalturaSubscriptionSubscribeReference",
      "type": "object"
    },
    "KalturaSubscriptionSwitchSet": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaSubscriptionSet"
        }
      ],
      "description": "Subscription details",
      "properties": {},
      "title": "KalturaSubscriptionSwitchSet",
      "type": "object"
    },
    "KalturaSubscriptionTrigger": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaTrigger"
        }
      ],
      "properties": {
        "offset": {
          "description": "Subscription trigger offset",
          "type": "integer"
        },
        "type": {
          "description": "Enum Type: `KalturaSubscriptionTriggerType`\n\nSubscription trigger type",
          "enum": [
            "START_DATE",
            "END_DATE"
          ],
          "type": "string",
          "x-enumLabels": [
            "START_DATE",
            "END_DATE"
          ],
          "x-enumType": "KalturaSubscriptionTriggerType"
        }
      },
      "title": "KalturaSubscriptionTrigger",
      "type": "object"
    },
    "KalturaSuspendSettings": {
      "description": "Suspend Settings",
      "properties": {
        "revokeEntitlements": {
          "description": "revoke entitlements",
          "type": "boolean"
        },
        "stopRenew": {
          "description": "stop renew",
          "type": "boolean"
        }
      },
      "title": "KalturaSuspendSettings",
      "type": "object"
    },
    "KalturaTag": {
      "properties": {
        "id": {
          "description": "`readOnly`\n\nTag id",
          "readOnly": true,
          "type": "integer"
        },
        "multilingualTag": {
          "items": {
            "$ref": "#/definitions/KalturaTranslationToken"
          },
          "type": "array"
        },
        "tag": {
          "description": "`readOnly`\n\nTag",
          "readOnly": true,
          "type": "string"
        },
        "type": {
          "description": "Tag Type",
          "type": "integer"
        }
      },
      "title": "KalturaTag",
      "type": "object"
    },
    "KalturaTagFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "properties": {
        "idIn": {
          "description": "Comma separated identifiers",
          "type": "string"
        },
        "languageEqual": {
          "description": "Language to filter by",
          "type": "string"
        },
        "orderBy": {
          "enum": [
            "NONE"
          ],
          "type": "string",
          "x-enumLabels": [
            "NONE"
          ],
          "x-enumType": "KalturaTagOrderBy"
        },
        "tagEqual": {
          "description": "Tag to filter by",
          "type": "string"
        },
        "tagStartsWith": {
          "description": "Tag to filter by",
          "type": "string"
        },
        "typeEqual": {
          "description": "Type identifier",
          "type": "integer"
        }
      },
      "title": "KalturaTagFilter",
      "type": "object"
    },
    "KalturaTagListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaTag"
          },
          "type": "array"
        }
      },
      "title": "KalturaTagListResponse",
      "type": "object"
    },
    "KalturaTimeOffsetRuleAction": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaAssetRuleAction"
        }
      ],
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaEndDateOffsetRuleAction"
        },
        {
          "$ref": "#/definitions/KalturaStartDateOffsetRuleAction"
        }
      ],
      "description": "`abstract`\n\nTime offset action",
      "discriminator": "objectType",
      "properties": {
        "objectType": {
          "enum": [
            "KalturaEndDateOffsetRuleAction",
            "KalturaStartDateOffsetRuleAction"
          ],
          "type": "string"
        },
        "offset": {
          "description": "Offset in seconds",
          "type": "integer"
        },
        "timeZone": {
          "description": "Indicates whether to add time zone offset to the time",
          "type": "boolean"
        }
      },
      "title": "KalturaTimeOffsetRuleAction",
      "type": "object",
      "x-abstract": true
    },
    "KalturaTimeShiftedTvPartnerSettings": {
      "properties": {
        "catchUpBufferLength": {
          "description": "Catch-up buffer length",
          "type": "integer"
        },
        "catchUpEnabled": {
          "description": "Is catch-up enabled",
          "type": "boolean"
        },
        "cdvrEnabled": {
          "description": "Is c-dvr enabled",
          "type": "boolean"
        },
        "cleanupNoticePeriod": {
          "description": "The time in days before the recording lifetime is due from which the client should be able to warn user about deletion.",
          "type": "integer"
        },
        "defaultQuota": {
          "description": "Quota in seconds",
          "type": "integer"
        },
        "maxConcurrencyMargin": {
          "description": "Define the max grace margin time for overlapping recording. Default NULL 0 margin",
          "type": "integer"
        },
        "maxRecordingConcurrency": {
          "description": "Define the max allowed number of parallel recordings. Default NULL unlimited",
          "type": "integer"
        },
        "nonEntitledChannelPlaybackEnabled": {
          "description": "Is recording playback for non-entitled channel enables",
          "type": "boolean"
        },
        "nonExistingChannelPlaybackEnabled": {
          "description": "Is recording playback for non-existing channel enables",
          "type": "boolean"
        },
        "paddingAfterProgramEnds": {
          "description": "Indicates how long (in seconds) after the program ends the recording will end",
          "type": "integer"
        },
        "paddingBeforeProgramStarts": {
          "description": "Indicates how long (in seconds) before the program starts the recording will begin",
          "type": "integer"
        },
        "personalizedRecording": {
          "description": "Define whatever the partner enables the Personal Padding and Immediate / Stop recording services to the partner. Default value should be FALSE",
          "type": "boolean"
        },
        "privateCopyEnabled": {
          "description": "Is private copy enabled for the account",
          "type": "boolean"
        },
        "protectionEnabled": {
          "description": "Is recording protection enabled",
          "type": "boolean"
        },
        "protectionPeriod": {
          "description": "Specify the time in days that a recording should be protected. Start time begins at protection request.",
          "type": "integer"
        },
        "protectionPolicy": {
          "description": "Enum Type: `KalturaProtectionPolicy`\n\nProtection Policy",
          "enum": [
            "ExtendingRecordingLifetime",
            "LimitedByRecordingLifetime"
          ],
          "type": "string",
          "x-enumLabels": [
            "EXTENDINGRECORDINGLIFETIME",
            "LIMITEDBYRECORDINGLIFETIME"
          ],
          "x-enumType": "KalturaProtectionPolicy"
        },
        "protectionQuotaPercentage": {
          "description": "Indicates how many percent of the quota can be used for protection",
          "type": "integer"
        },
        "quotaOveragePolicy": {
          "description": "Enum Type: `KalturaQuotaOveragePolicy`\n\nQuota Policy",
          "enum": [
            "StopAtQuota",
            "FIFOAutoDelete"
          ],
          "type": "string",
          "x-enumLabels": [
            "STOPATQUOTA",
            "FIFOAUTODELETE"
          ],
          "x-enumType": "KalturaQuotaOveragePolicy"
        },
        "recordingLifetimePeriod": {
          "description": "Specify the time in days that a recording should be kept for user. Start time begins with the program end date.",
          "type": "integer"
        },
        "recordingScheduleWindow": {
          "description": "Recording schedule window. Indicates how long (in minutes) after the program starts it is allowed to schedule the recording",
          "type": "integer"
        },
        "recordingScheduleWindowEnabled": {
          "description": "Is recording schedule window enabled",
          "type": "boolean"
        },
        "recoveryGracePeriod": {
          "description": "The time in days for recovery recording that was delete by Auto Delete .",
          "type": "integer"
        },
        "seriesRecordingEnabled": {
          "description": "Is recording of series enabled",
          "type": "boolean"
        },
        "startOverEnabled": {
          "description": "Is start-over enabled",
          "type": "boolean"
        },
        "trickPlayBufferLength": {
          "description": "Trick play buffer length",
          "type": "integer"
        },
        "trickPlayEnabled": {
          "description": "Is trick-play enabled",
          "type": "boolean"
        }
      },
      "title": "KalturaTimeShiftedTvPartnerSettings",
      "type": "object"
    },
    "KalturaTopRsp": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaRepresentativeSelectionPolicy"
        }
      ],
      "properties": {
        "orderBy": {
          "$ref": "#/definitions/KalturaBaseAssetOrder"
        }
      },
      "title": "KalturaTopRsp",
      "type": "object"
    },
    "KalturaTopSubscriptionEntitledRsp": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaRepresentativeSelectionPolicy"
        }
      ],
      "properties": {
        "orderBy": {
          "$ref": "#/definitions/KalturaBaseAssetOrder"
        }
      },
      "title": "KalturaTopSubscriptionEntitledRsp",
      "type": "object"
    },
    "KalturaTopic": {
      "properties": {
        "automaticIssueNotification": {
          "description": "Enum Type: `KalturaTopicAutomaticIssueNotification`\n\nautomaticIssueNotification",
          "enum": [
            "Inherit",
            "Yes",
            "No"
          ],
          "type": "string",
          "x-enumLabels": [
            "INHERIT",
            "YES",
            "NO"
          ],
          "x-enumType": "KalturaTopicAutomaticIssueNotification"
        },
        "id": {
          "description": "`readOnly`\n\nmessage id",
          "readOnly": true,
          "type": "string"
        },
        "lastMessageSentDateSec": {
          "description": "lastMessageSentDateSec",
          "type": "integer"
        },
        "name": {
          "description": "message",
          "type": "string"
        },
        "subscribersAmount": {
          "description": "message",
          "type": "string"
        }
      },
      "title": "KalturaTopic",
      "type": "object"
    },
    "KalturaTopicFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "properties": {
        "orderBy": {
          "enum": [
            "NONE"
          ],
          "type": "string",
          "x-enumLabels": [
            "NONE"
          ],
          "x-enumType": "KalturaTopicOrderBy"
        }
      },
      "title": "KalturaTopicFilter",
      "type": "object"
    },
    "KalturaTopicListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "List of Topics.",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaTopic"
          },
          "type": "array"
        }
      },
      "title": "KalturaTopicListResponse",
      "type": "object"
    },
    "KalturaTopicNotification": {
      "properties": {
        "description": {
          "description": "Topic notification description",
          "type": "string"
        },
        "id": {
          "description": "`readOnly`\n\nTopic notification ID",
          "readOnly": true,
          "type": "integer"
        },
        "name": {
          "description": "Topic notification name",
          "type": "string"
        },
        "subscribeReference": {
          "$ref": "#/definitions/KalturaSubscribeReference"
        }
      },
      "title": "KalturaTopicNotification",
      "type": "object"
    },
    "KalturaTopicNotificationFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "properties": {
        "orderBy": {
          "enum": [
            "NONE"
          ],
          "type": "string",
          "x-enumLabels": [
            "NONE"
          ],
          "x-enumType": "KalturaTopicNotificationOrderBy"
        },
        "subscribeReference": {
          "$ref": "#/definitions/KalturaSubscribeReference"
        }
      },
      "title": "KalturaTopicNotificationFilter",
      "type": "object"
    },
    "KalturaTopicNotificationListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaTopicNotification"
          },
          "type": "array"
        }
      },
      "title": "KalturaTopicNotificationListResponse",
      "type": "object"
    },
    "KalturaTopicNotificationMessage": {
      "properties": {
        "dispatchers": {
          "items": {
            "$ref": "#/definitions/KalturaDispatcher"
          },
          "type": "array"
        },
        "id": {
          "description": "`readOnly`\n\nTopic notification message ID",
          "readOnly": true,
          "type": "integer"
        },
        "imageUrl": {
          "description": "Topic notification message image URL",
          "type": "string"
        },
        "message": {
          "description": "Topic notification message",
          "type": "string"
        },
        "status": {
          "description": "`readOnly`\n\nEnum Type: `KalturaAnnouncementStatus`\n\nMessage status",
          "enum": [
            "NotSent",
            "Sending",
            "Sent",
            "Aborted"
          ],
          "readOnly": true,
          "type": "string",
          "x-enumLabels": [
            "NOTSENT",
            "SENDING",
            "SENT",
            "ABORTED"
          ],
          "x-enumType": "KalturaAnnouncementStatus"
        },
        "topicNotificationId": {
          "description": "Topic notification ID",
          "type": "integer"
        },
        "trigger": {
          "$ref": "#/definitions/KalturaTrigger"
        }
      },
      "title": "KalturaTopicNotificationMessage",
      "type": "object"
    },
    "KalturaTopicNotificationMessageFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "properties": {
        "orderBy": {
          "enum": [
            "NONE"
          ],
          "type": "string",
          "x-enumLabels": [
            "NONE"
          ],
          "x-enumType": "KalturaTopicNotificationMessageOrderBy"
        },
        "topicNotificationIdEqual": {
          "description": "Topic notification ID",
          "type": "integer"
        }
      },
      "title": "KalturaTopicNotificationMessageFilter",
      "type": "object"
    },
    "KalturaTopicNotificationMessageListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaTopicNotificationMessage"
          },
          "type": "array"
        }
      },
      "title": "KalturaTopicNotificationMessageListResponse",
      "type": "object"
    },
    "KalturaTrailEntitlementDiscountDetails": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaEntitlementDiscountDetailsIdentifier"
        }
      ],
      "description": "Trail entitlement discount details",
      "properties": {},
      "title": "KalturaTrailEntitlementDiscountDetails",
      "type": "object"
    },
    "KalturaTransaction": {
      "properties": {
        "createdAt": {
          "description": "Entitlement creation date",
          "type": "integer"
        },
        "failReasonCode": {
          "description": "Adapter failure reason code\r\n            Insufficient funds = 20, Invalid account = 21, User unknown = 22, Reason unknown = 23, Unknown payment gateway response = 24,\r\n            No response from payment gateway = 25, Exceeded retry limit = 26, Illegal client request = 27, Expired = 28",
          "type": "integer"
        },
        "id": {
          "description": "Kaltura unique ID representing the transaction",
          "type": "string"
        },
        "paymentGatewayReferenceId": {
          "description": "Transaction reference ID received from the payment gateway. \r\n            Value is available only if the payment gateway provides this information.",
          "type": "string"
        },
        "paymentGatewayResponseId": {
          "description": "Response ID received from by the payment gateway. \r\n            Value is available only if the payment gateway provides this information.",
          "type": "string"
        },
        "state": {
          "description": "Transaction state: OK/Pending/Failed",
          "type": "string"
        }
      },
      "title": "KalturaTransaction",
      "type": "object"
    },
    "KalturaTransactionHistoryFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "description": "Transactions filter",
      "properties": {
        "billingActionEqual": {
          "description": "Enum Type: `KalturaBillingAction`\n\nFilter transaction by billing action",
          "enum": [
            "unknown",
            "purchase",
            "renew_payment",
            "renew_canceled_subscription",
            "cancel_subscription_order",
            "subscription_date_changed",
            "pending"
          ],
          "type": "string",
          "x-enumLabels": [
            "UNKNOWN",
            "PURCHASE",
            "RENEW_PAYMENT",
            "RENEW_CANCELED_SUBSCRIPTION",
            "CANCEL_SUBSCRIPTION_ORDER",
            "SUBSCRIPTION_DATE_CHANGED",
            "PENDING"
          ],
          "x-enumType": "KalturaBillingAction"
        },
        "billingItemsTypeEqual": {
          "description": "Enum Type: `KalturaBillingItemsType`\n\nFilter transaction by billing item type",
          "enum": [
            "unknown",
            "ppv",
            "subscription",
            "pre_paid",
            "pre_paid_expired",
            "collection",
            "program_asset_group_offer"
          ],
          "type": "string",
          "x-enumLabels": [
            "UNKNOWN",
            "PPV",
            "SUBSCRIPTION",
            "PRE_PAID",
            "PRE_PAID_EXPIRED",
            "COLLECTION",
            "PROGRAM_ASSET_GROUP_OFFER"
          ],
          "x-enumType": "KalturaBillingItemsType"
        },
        "endDateLessThanOrEqual": {
          "description": "Filter transactions earlier than specific date",
          "type": "integer"
        },
        "entitlementIdEqual": {
          "description": "Filter transaction by entitlement id",
          "type": "integer"
        },
        "entityReferenceEqual": {
          "description": "Enum Type: `KalturaEntityReferenceBy`\n\nReference type to filter by",
          "enum": [
            "user",
            "household"
          ],
          "type": "string",
          "x-enumLabels": [
            "USER",
            "HOUSEHOLD"
          ],
          "x-enumType": "KalturaEntityReferenceBy"
        },
        "externalIdEqual": {
          "description": "Filter transaction by external Id",
          "type": "string"
        },
        "orderBy": {
          "enum": [
            "CREATE_DATE_ASC",
            "CREATE_DATE_DESC"
          ],
          "type": "string",
          "x-enumLabels": [
            "CREATE_DATE_ASC",
            "CREATE_DATE_DESC"
          ],
          "x-enumType": "KalturaTransactionHistoryOrderBy"
        },
        "startDateGreaterThanOrEqual": {
          "description": "Filter transactions later than specific date",
          "type": "integer"
        }
      },
      "title": "KalturaTransactionHistoryFilter",
      "type": "object"
    },
    "KalturaTransactionStatus": {
      "properties": {
        "adapterTransactionStatus": {
          "description": "Enum Type: `KalturaTransactionAdapterStatus`\n\nPayment gateway adapter application state for the transaction to update",
          "enum": [
            "OK",
            "PENDING",
            "FAILED"
          ],
          "type": "string",
          "x-enumLabels": [
            "OK",
            "PENDING",
            "FAILED"
          ],
          "x-enumType": "KalturaTransactionAdapterStatus"
        },
        "externalId": {
          "description": "External transaction identifier",
          "type": "string"
        },
        "externalMessage": {
          "description": "Payment gateway message",
          "type": "string"
        },
        "externalStatus": {
          "description": "Payment gateway transaction status",
          "type": "string"
        },
        "failReason": {
          "description": "The reason the transaction failed",
          "type": "integer"
        }
      },
      "title": "KalturaTransactionStatus",
      "type": "object"
    },
    "KalturaTranslationToken": {
      "description": "Container for translation",
      "properties": {
        "language": {
          "description": "Language code",
          "type": "string"
        },
        "value": {
          "description": "Translated value",
          "type": "string"
        }
      },
      "title": "KalturaTranslationToken",
      "type": "object"
    },
    "KalturaTrigger": {
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaTrigger"
        },
        {
          "$ref": "#/definitions/KalturaDateTrigger"
        },
        {
          "$ref": "#/definitions/KalturaSubscriptionTrigger"
        }
      ],
      "discriminator": "objectType",
      "properties": {
        "objectType": {
          "enum": [
            "KalturaTrigger",
            "KalturaDateTrigger",
            "KalturaSubscriptionTrigger"
          ],
          "type": "string"
        }
      },
      "title": "KalturaTrigger",
      "type": "object"
    },
    "KalturaTriggerCampaign": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaCampaign"
        }
      ],
      "description": "Campaign",
      "properties": {
        "action": {
          "description": "Enum Type: `KalturaApiAction`\n\naction",
          "enum": [
            "ADD"
          ],
          "type": "string",
          "x-enumLabels": [
            "ADD"
          ],
          "x-enumType": "KalturaApiAction"
        },
        "service": {
          "description": "Enum Type: `KalturaApiService`\n\nservice",
          "enum": [
            "HOUSEHOLD_DEVICE"
          ],
          "type": "string",
          "x-enumLabels": [
            "HOUSEHOLD_DEVICE"
          ],
          "x-enumType": "KalturaApiService"
        },
        "triggerConditions": {
          "items": {
            "$ref": "#/definitions/KalturaCondition"
          },
          "type": "array"
        }
      },
      "title": "KalturaTriggerCampaign",
      "type": "object"
    },
    "KalturaTriggerCampaignEvent": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaEventObject"
        }
      ],
      "properties": {
        "campaignId": {
          "description": "`readOnly`\n\nCampaign Id",
          "readOnly": true,
          "type": "integer"
        },
        "householdId": {
          "description": "`readOnly`\n\nHousehold Id",
          "readOnly": true,
          "type": "integer"
        },
        "udid": {
          "description": "`readOnly`\n\nUdid",
          "readOnly": true,
          "type": "string"
        },
        "userId": {
          "description": "`readOnly`\n\nUser Id",
          "readOnly": true,
          "type": "integer"
        }
      },
      "title": "KalturaTriggerCampaignEvent",
      "type": "object"
    },
    "KalturaTriggerCampaignSearchFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaCampaignSearchFilter"
        }
      ],
      "properties": {},
      "title": "KalturaTriggerCampaignSearchFilter",
      "type": "object"
    },
    "KalturaTvmDeviceRule": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaTvmRule"
        }
      ],
      "description": "TVM geo rule",
      "properties": {
        "deviceBrandIds": {
          "description": "Comma separated list of country Ids.",
          "type": "string"
        }
      },
      "title": "KalturaTvmDeviceRule",
      "type": "object"
    },
    "KalturaTvmGeoRule": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaTvmRule"
        }
      ],
      "description": "TVM geo rule",
      "properties": {
        "countryIds": {
          "description": "Comma separated list of country Ids.",
          "type": "string"
        },
        "onlyOrBut": {
          "description": "Indicates if the rule is relevent ONLY for the country ids or except country ids here. - is that true?",
          "type": "boolean"
        },
        "proxyLevelId": {
          "description": "proxyLevelId - what is that?",
          "type": "integer"
        },
        "proxyLevelName": {
          "description": "proxyLevelName - what is that?",
          "type": "string"
        },
        "proxyRuleId": {
          "description": "proxyRuleId - what is that?",
          "type": "integer"
        },
        "proxyRuleName": {
          "description": "proxyRuleName - what is that?",
          "type": "string"
        }
      },
      "title": "KalturaTvmGeoRule",
      "type": "object"
    },
    "KalturaTvmRule": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaRule"
        }
      ],
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaTvmDeviceRule"
        },
        {
          "$ref": "#/definitions/KalturaTvmGeoRule"
        }
      ],
      "description": "`abstract`\n\nTVM rule",
      "discriminator": "objectType",
      "properties": {
        "createDate": {
          "description": "`readOnly`\n\nSpecifies when was the tvm rule was created. Date and time represented as epoch.",
          "readOnly": true,
          "type": "integer",
          "x-inputType": "datetime"
        },
        "objectType": {
          "enum": [
            "KalturaTvmDeviceRule",
            "KalturaTvmGeoRule"
          ],
          "type": "string"
        },
        "ruleType": {
          "description": "`readOnly`\n\nEnum Type: `KalturaTvmRuleType`\n\nSpecifies the tvm rule type.",
          "enum": [
            "Geo",
            "Device"
          ],
          "readOnly": true,
          "type": "string",
          "x-enumLabels": [
            "GEO",
            "DEVICE"
          ],
          "x-enumType": "KalturaTvmRuleType"
        }
      },
      "title": "KalturaTvmRule",
      "type": "object",
      "x-abstract": true
    },
    "KalturaTvmRuleFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "description": "Asset user rule filter",
      "properties": {
        "nameEqual": {
          "description": "Indicates which tvm rule list to return by their name.",
          "type": "string"
        },
        "orderBy": {
          "enum": [
            "NONE"
          ],
          "type": "string",
          "x-enumLabels": [
            "NONE"
          ],
          "x-enumType": "KalturaTvmRuleOrderBy"
        },
        "ruleTypeEqual": {
          "description": "Enum Type: `KalturaTvmRuleType`\n\nIndicates which tvm rule list to return by their type.",
          "enum": [
            "Geo",
            "Device"
          ],
          "type": "string",
          "x-enumLabels": [
            "GEO",
            "DEVICE"
          ],
          "x-enumType": "KalturaTvmRuleType"
        }
      },
      "title": "KalturaTvmRuleFilter",
      "type": "object"
    },
    "KalturaTvmRuleListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaTvmRule"
          },
          "type": "array"
        }
      },
      "title": "KalturaTvmRuleListResponse",
      "type": "object"
    },
    "KalturaTwitterTwit": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaSocialNetworkComment"
        }
      ],
      "properties": {},
      "title": "KalturaTwitterTwit",
      "type": "object"
    },
    "KalturaUdidDynamicList": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaDynamicList"
        }
      ],
      "properties": {},
      "title": "KalturaUdidDynamicList",
      "type": "object"
    },
    "KalturaUdidDynamicListCondition": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaCondition"
        }
      ],
      "properties": {
        "id": {
          "description": "KalturaUdidDynamicList.id",
          "type": "integer"
        }
      },
      "title": "KalturaUdidDynamicListCondition",
      "type": "object"
    },
    "KalturaUdidDynamicListSearchFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaDynamicListSearchFilter"
        }
      ],
      "description": "UdidDynamicListSearchFilter",
      "properties": {},
      "title": "KalturaUdidDynamicListSearchFilter",
      "type": "object"
    },
    "KalturaUnifiedBillingCycle": {
      "properties": {
        "duration": {
          "$ref": "#/definitions/KalturaDuration"
        },
        "ignorePartialBilling": {
          "description": "Define if partial billing shall be calculated or not",
          "type": "boolean"
        },
        "name": {
          "description": "UnifiedBillingCycle name",
          "type": "string"
        },
        "paymentGatewayId": {
          "description": "Payment Gateway Id",
          "type": "integer"
        }
      },
      "title": "KalturaUnifiedBillingCycle",
      "type": "object"
    },
    "KalturaUnifiedChannel": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaOTTObjectSupportNullable"
        }
      ],
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaUnifiedChannel"
        },
        {
          "$ref": "#/definitions/KalturaUnifiedChannelInfo"
        }
      ],
      "discriminator": "objectType",
      "properties": {
        "id": {
          "description": "Channel&#160;identifier",
          "type": "integer"
        },
        "objectType": {
          "enum": [
            "KalturaUnifiedChannel",
            "KalturaUnifiedChannelInfo"
          ],
          "type": "string"
        },
        "type": {
          "description": "Enum Type: `KalturaChannelType`\n\nChannel Type",
          "enum": [
            "Internal",
            "External"
          ],
          "type": "string",
          "x-enumLabels": [
            "INTERNAL",
            "EXTERNAL"
          ],
          "x-enumType": "KalturaChannelType"
        }
      },
      "title": "KalturaUnifiedChannel",
      "type": "object"
    },
    "KalturaUnifiedChannelInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaUnifiedChannel"
        }
      ],
      "properties": {
        "endDateInSeconds": {
          "description": "End date in seconds",
          "type": "integer"
        },
        "name": {
          "description": "Channel&#160;name",
          "type": "string"
        },
        "startDateInSeconds": {
          "description": "Start date in seconds",
          "type": "integer"
        }
      },
      "title": "KalturaUnifiedChannelInfo",
      "type": "object"
    },
    "KalturaUnifiedPaymentRenewal": {
      "properties": {
        "date": {
          "description": "Next renewal date",
          "type": "integer"
        },
        "entitlements": {
          "items": {
            "$ref": "#/definitions/KalturaEntitlementRenewalBase"
          },
          "type": "array"
        },
        "price": {
          "$ref": "#/definitions/KalturaPrice"
        },
        "unifiedPaymentId": {
          "description": "Unified payment ID",
          "type": "integer"
        },
        "userId": {
          "description": "User ID",
          "type": "integer"
        }
      },
      "title": "KalturaUnifiedPaymentRenewal",
      "type": "object"
    },
    "KalturaUploadToken": {
      "properties": {
        "createDate": {
          "description": "`readOnly`\n\nSpecifies when was the Asset was created. Date and time represented as epoch.",
          "readOnly": true,
          "type": "integer",
          "x-inputType": "datetime"
        },
        "fileSize": {
          "description": "`readOnly`\n\nFile size",
          "readOnly": true,
          "type": "number"
        },
        "id": {
          "description": "`readOnly`\n\nUpload-token identifier",
          "readOnly": true,
          "type": "string"
        },
        "status": {
          "description": "`readOnly`\n\nEnum Type: `KalturaUploadTokenStatus`\n\nStatus",
          "enum": [
            "PENDING",
            "FULL_UPLOAD",
            "CLOSED"
          ],
          "readOnly": true,
          "type": "string",
          "x-enumLabels": [
            "PENDING",
            "FULL_UPLOAD",
            "CLOSED"
          ],
          "x-enumType": "KalturaUploadTokenStatus"
        },
        "updateDate": {
          "description": "`readOnly`\n\nSpecifies when was the Asset last updated. Date and time represented as epoch.",
          "readOnly": true,
          "type": "integer",
          "x-inputType": "datetime"
        }
      },
      "title": "KalturaUploadToken",
      "type": "object"
    },
    "KalturaUploadedFileTokenResource": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaContentResource"
        }
      ],
      "properties": {
        "token": {
          "description": "Token that returned from uploadToken.add action",
          "type": "string"
        }
      },
      "title": "KalturaUploadedFileTokenResource",
      "type": "object"
    },
    "KalturaUrlResource": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaContentResource"
        }
      ],
      "properties": {
        "url": {
          "description": "URL of the content",
          "type": "string"
        }
      },
      "title": "KalturaUrlResource",
      "type": "object"
    },
    "KalturaUsageModule": {
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaUsageModule"
        },
        {
          "$ref": "#/definitions/KalturaPricePlan"
        }
      ],
      "description": "Pricing usage module",
      "discriminator": "objectType",
      "properties": {
        "couponId": {
          "description": "`readOnly`\n\nIdentifies a specific coupon linked to this object",
          "readOnly": true,
          "type": "integer"
        },
        "fullLifeCycle": {
          "description": "The amount time an item is available for viewing",
          "type": "integer"
        },
        "id": {
          "description": "Usage module identifier",
          "type": "integer"
        },
        "isOfflinePlayback": {
          "description": "Indicates that usage is targeted for offline playback",
          "type": "boolean"
        },
        "isWaiverEnabled": {
          "description": "Indicates whether or not the end user has the right to waive his rights to cancel a purchase",
          "type": "boolean"
        },
        "maxViewsNumber": {
          "description": "`writeOnly`\n\nThe maximum number of times an item in this usage module can be viewed",
          "type": "integer"
        },
        "name": {
          "description": "`writeOnly`\n\nUsage module name",
          "type": "string"
        },
        "objectType": {
          "enum": [
            "KalturaUsageModule",
            "KalturaPricePlan"
          ],
          "type": "string"
        },
        "viewLifeCycle": {
          "description": "The amount time an item is available for viewing since a user started watching the item",
          "type": "integer"
        },
        "waiverPeriod": {
          "description": "Time period during which the end user can waive his rights to cancel a purchase. When the time period is passed, the purchase can no longer be cancelled",
          "type": "integer"
        }
      },
      "title": "KalturaUsageModule",
      "type": "object"
    },
    "KalturaUsageModuleFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "properties": {
        "idEqual": {
          "description": "usageModule id",
          "type": "integer"
        }
      },
      "title": "KalturaUsageModuleFilter",
      "type": "object"
    },
    "KalturaUsageModuleListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaUsageModule"
          },
          "type": "array"
        }
      },
      "title": "KalturaUsageModuleListResponse",
      "type": "object"
    },
    "KalturaUserAssetRule": {
      "description": "User asset rule - representing different type of rules on an asset(Parental, Geo, User Type, Device)",
      "properties": {
        "description": {
          "description": "Additional description for the specific rule",
          "type": "string"
        },
        "id": {
          "description": "`readOnly`\n\nUnique rule identifier",
          "readOnly": true,
          "type": "integer"
        },
        "name": {
          "description": "Rule display name",
          "type": "string"
        },
        "ruleType": {
          "description": "Enum Type: `KalturaRuleType`\n\nRule type - possible values: Rule type – Parental, Geo, UserType, Device",
          "enum": [
            "parental",
            "geo",
            "user_type",
            "device",
            "assetUser",
            "network"
          ],
          "type": "string",
          "x-enumLabels": [
            "PARENTAL",
            "GEO",
            "USER_TYPE",
            "DEVICE",
            "ASSETUSER",
            "NETWORK"
          ],
          "x-enumType": "KalturaRuleType"
        }
      },
      "title": "KalturaUserAssetRule",
      "type": "object"
    },
    "KalturaUserAssetRuleFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "description": "User asset rule filter",
      "properties": {
        "assetIdEqual": {
          "description": "Asset identifier to filter by",
          "type": "integer"
        },
        "assetTypeEqual": {
          "description": "Asset type to filter by - 0 = EPG, 1 = media, 2 = npvr",
          "type": "integer"
        },
        "orderBy": {
          "enum": [
            "NAME_ASC",
            "NAME_DESC"
          ],
          "type": "string",
          "x-enumLabels": [
            "NAME_ASC",
            "NAME_DESC"
          ],
          "x-enumType": "KalturaUserAssetRuleOrderBy"
        }
      },
      "title": "KalturaUserAssetRuleFilter",
      "type": "object"
    },
    "KalturaUserAssetRuleListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "GenericRules list",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaUserAssetRule"
          },
          "type": "array"
        }
      },
      "title": "KalturaUserAssetRuleListResponse",
      "type": "object"
    },
    "KalturaUserAssetsListItem": {
      "description": "An item of user asset list",
      "properties": {
        "id": {
          "description": "Asset identifier",
          "type": "string"
        },
        "listType": {
          "description": "Enum Type: `KalturaUserAssetsListType`\n\nThe type of the list, all is not supported",
          "enum": [
            "all",
            "watch",
            "purchase",
            "library"
          ],
          "type": "string",
          "x-enumLabels": [
            "ALL",
            "WATCH",
            "PURCHASE",
            "LIBRARY"
          ],
          "x-enumType": "KalturaUserAssetsListType"
        },
        "orderIndex": {
          "description": "The order index of the asset in the list",
          "type": "integer"
        },
        "type": {
          "description": "Enum Type: `KalturaUserAssetsListItemType`\n\nThe type of the asset",
          "enum": [
            "all",
            "media"
          ],
          "type": "string",
          "x-enumLabels": [
            "ALL",
            "MEDIA"
          ],
          "x-enumType": "KalturaUserAssetsListItemType"
        },
        "userId": {
          "description": "`readOnly`\n\nThe identifier of the user who added the item to the list",
          "readOnly": true,
          "type": "string"
        }
      },
      "title": "KalturaUserAssetsListItem",
      "type": "object"
    },
    "KalturaUserDataCondition": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBaseSegmentCondition"
        }
      ],
      "description": "User data condition for segmentation",
      "properties": {
        "field": {
          "description": "Field name",
          "type": "string"
        },
        "value": {
          "description": "Value",
          "type": "string"
        }
      },
      "title": "KalturaUserDataCondition",
      "type": "object"
    },
    "KalturaUserDynamicDataSource": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaSegmentSource"
        }
      ],
      "description": "User dynamic data source",
      "properties": {
        "field": {
          "description": "Field name",
          "type": "string"
        }
      },
      "title": "KalturaUserDynamicDataSource",
      "type": "object"
    },
    "KalturaUserInterest": {
      "description": "User Interest",
      "properties": {
        "id": {
          "description": "`readOnly`\n\nIdentifier",
          "readOnly": true,
          "type": "string"
        },
        "topic": {
          "$ref": "#/definitions/KalturaUserInterestTopic"
        }
      },
      "title": "KalturaUserInterest",
      "type": "object"
    },
    "KalturaUserInterestListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "User interest list",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaUserInterest"
          },
          "type": "array"
        }
      },
      "title": "KalturaUserInterestListResponse",
      "type": "object"
    },
    "KalturaUserInterestTopic": {
      "description": "User interest topic",
      "properties": {
        "metaId": {
          "description": "Meta identifier",
          "type": "string"
        },
        "parentTopic": {
          "$ref": "#/definitions/KalturaUserInterestTopic"
        },
        "value": {
          "description": "Meta Value",
          "type": "string"
        }
      },
      "title": "KalturaUserInterestTopic",
      "type": "object"
    },
    "KalturaUserLoginPin": {
      "description": "Log in pin code details",
      "properties": {
        "expirationTime": {
          "description": "Login pin expiration time (epoch)",
          "type": "integer"
        },
        "pinCode": {
          "description": "Generated login pin code",
          "type": "string"
        },
        "userId": {
          "description": "`readOnly`\n\nUser Identifier",
          "readOnly": true,
          "type": "string"
        }
      },
      "title": "KalturaUserLoginPin",
      "type": "object"
    },
    "KalturaUserRole": {
      "properties": {
        "excludedPermissionNames": {
          "description": "permissions associated with the user role in is_exclueded = true",
          "type": "string"
        },
        "id": {
          "description": "`readOnly`\n\nUser role identifier",
          "readOnly": true,
          "type": "integer"
        },
        "name": {
          "description": "User role name",
          "type": "string"
        },
        "permissionNames": {
          "description": "permissions associated with the user role",
          "type": "string"
        },
        "profile": {
          "description": "Enum Type: `KalturaUserRoleProfile`\n\nRole profile",
          "enum": [
            "USER",
            "PARTNER",
            "PROFILE",
            "SYSTEM",
            "PERMISSION_EMBEDDED"
          ],
          "type": "string",
          "x-enumLabels": [
            "USER",
            "PARTNER",
            "PROFILE",
            "SYSTEM",
            "PERMISSION_EMBEDDED"
          ],
          "x-enumType": "KalturaUserRoleProfile"
        },
        "type": {
          "description": "`readOnly`\n\nEnum Type: `KalturaUserRoleType`\n\nRole type",
          "enum": [
            "SYSTEM",
            "CUSTOM"
          ],
          "readOnly": true,
          "type": "string",
          "x-enumLabels": [
            "SYSTEM",
            "CUSTOM"
          ],
          "x-enumType": "KalturaUserRoleType"
        }
      },
      "title": "KalturaUserRole",
      "type": "object"
    },
    "KalturaUserRoleCondition": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaCondition"
        }
      ],
      "description": "UserRole Condition - indicates which users this rule is applied on by their roles",
      "properties": {
        "idIn": {
          "description": "Comma separated user role IDs list",
          "type": "string"
        }
      },
      "title": "KalturaUserRoleCondition",
      "type": "object"
    },
    "KalturaUserRoleFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "description": "User roles filter",
      "properties": {
        "currentUserRoleIdsContains": {
          "description": "Indicates whether the results should be filtered by userId using the current",
          "type": "boolean"
        },
        "idIn": {
          "description": "Comma separated roles identifiers",
          "type": "string"
        },
        "orderBy": {
          "enum": [
            "NONE"
          ],
          "type": "string",
          "x-enumLabels": [
            "NONE"
          ],
          "x-enumType": "KalturaUserRoleOrderBy"
        },
        "profileEqual": {
          "description": "Enum Type: `KalturaUserRoleProfile`\n\nUser role profile",
          "enum": [
            "USER",
            "PARTNER",
            "PROFILE",
            "SYSTEM",
            "PERMISSION_EMBEDDED"
          ],
          "type": "string",
          "x-enumLabels": [
            "USER",
            "PARTNER",
            "PROFILE",
            "SYSTEM",
            "PERMISSION_EMBEDDED"
          ],
          "x-enumType": "KalturaUserRoleProfile"
        },
        "typeEqual": {
          "description": "Enum Type: `KalturaUserRoleType`\n\nUser role type",
          "enum": [
            "SYSTEM",
            "CUSTOM"
          ],
          "type": "string",
          "x-enumLabels": [
            "SYSTEM",
            "CUSTOM"
          ],
          "x-enumType": "KalturaUserRoleType"
        }
      },
      "title": "KalturaUserRoleFilter",
      "type": "object"
    },
    "KalturaUserRoleListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "User-roles list",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaUserRole"
          },
          "type": "array"
        }
      },
      "title": "KalturaUserRoleListResponse",
      "type": "object"
    },
    "KalturaUserSegment": {
      "description": "Indicates a segment of a user",
      "properties": {
        "segmentId": {
          "description": "Segment Id",
          "type": "integer"
        },
        "userId": {
          "description": "`writeOnly`\n\nUser Id of segment",
          "type": "string"
        }
      },
      "title": "KalturaUserSegment",
      "type": "object"
    },
    "KalturaUserSegmentFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "description": "Filter for user segments",
      "properties": {
        "kSql": {
          "description": "KSQL expression",
          "type": "string"
        },
        "userIdEqual": {
          "description": "User ID",
          "type": "string"
        }
      },
      "title": "KalturaUserSegmentFilter",
      "type": "object"
    },
    "KalturaUserSegmentListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "List of user segments",
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaUserSegment"
          },
          "type": "array"
        }
      },
      "title": "KalturaUserSegmentListResponse",
      "type": "object"
    },
    "KalturaUserSessionCondition": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaUserSessionProfileExpression"
        }
      ],
      "description": "SimpleExpression hold single condition",
      "properties": {
        "condition": {
          "$ref": "#/definitions/KalturaCondition"
        }
      },
      "title": "KalturaUserSessionCondition",
      "type": "object"
    },
    "KalturaUserSessionProfile": {
      "description": "User Session Profile",
      "properties": {
        "expression": {
          "$ref": "#/definitions/KalturaUserSessionProfileExpression"
        },
        "id": {
          "description": "`readOnly`\n\nThe user session profile id.",
          "readOnly": true,
          "type": "integer"
        },
        "name": {
          "description": "The user session profile name for presentation.",
          "type": "string"
        }
      },
      "title": "KalturaUserSessionProfile",
      "type": "object"
    },
    "KalturaUserSessionProfileCondition": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaCondition"
        }
      ],
      "description": "UserSessionProfile Condition",
      "properties": {
        "id": {
          "description": "UserSessionProfile id",
          "type": "integer"
        }
      },
      "title": "KalturaUserSessionProfileCondition",
      "type": "object"
    },
    "KalturaUserSessionProfileExpression": {
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaExpressionAnd"
        },
        {
          "$ref": "#/definitions/KalturaExpressionNot"
        },
        {
          "$ref": "#/definitions/KalturaExpressionOr"
        },
        {
          "$ref": "#/definitions/KalturaUserSessionCondition"
        }
      ],
      "description": "`abstract`\n\nDefine KalturaUserSessionProfileExpression",
      "discriminator": "objectType",
      "properties": {
        "objectType": {
          "enum": [
            "KalturaExpressionAnd",
            "KalturaExpressionNot",
            "KalturaExpressionOr",
            "KalturaUserSessionCondition"
          ],
          "type": "string"
        }
      },
      "title": "KalturaUserSessionProfileExpression",
      "type": "object",
      "x-abstract": true
    },
    "KalturaUserSessionProfileFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "description": "User Session Profile filter",
      "properties": {
        "idEqual": {
          "description": "UserSessionProfile identifier to filter by",
          "type": "integer"
        }
      },
      "title": "KalturaUserSessionProfileFilter",
      "type": "object"
    },
    "KalturaUserSessionProfileListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaUserSessionProfile"
          },
          "type": "array"
        }
      },
      "title": "KalturaUserSessionProfileListResponse",
      "type": "object"
    },
    "KalturaUserSocialActionResponse": {
      "properties": {
        "failStatus": {
          "items": {
            "$ref": "#/definitions/KalturaNetworkActionStatus"
          },
          "type": "array"
        },
        "socialAction": {
          "$ref": "#/definitions/KalturaSocialAction"
        }
      },
      "title": "KalturaUserSocialActionResponse",
      "type": "object"
    },
    "KalturaUserSubscriptionCondition": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaSubscriptionCondition"
        }
      ],
      "description": "UserSubscription Condition - indicates which users this rule is applied on by their subscriptions",
      "properties": {},
      "title": "KalturaUserSubscriptionCondition",
      "type": "object"
    },
    "KalturaValue": {
      "anyOf": [
        {
          "$ref": "#/definitions/KalturaIntegerValue"
        },
        {
          "$ref": "#/definitions/KalturaBooleanValue"
        },
        {
          "$ref": "#/definitions/KalturaDoubleValue"
        },
        {
          "$ref": "#/definitions/KalturaLongValue"
        },
        {
          "$ref": "#/definitions/KalturaMultilingualStringValue"
        },
        {
          "$ref": "#/definitions/KalturaStringValue"
        }
      ],
      "description": "`abstract`\n\nA representation to return an array of values",
      "discriminator": "objectType",
      "properties": {
        "description": {
          "description": "Description",
          "type": "string"
        },
        "objectType": {
          "enum": [
            "KalturaIntegerValue",
            "KalturaBooleanValue",
            "KalturaDoubleValue",
            "KalturaLongValue",
            "KalturaMultilingualStringValue",
            "KalturaStringValue"
          ],
          "type": "string"
        }
      },
      "title": "KalturaValue",
      "type": "object",
      "x-abstract": true
    },
    "KalturaVodIngestAssetResult": {
      "properties": {
        "assetName": {
          "description": "Ingested asset name. Absent only in case of NameRequired error",
          "type": "string"
        },
        "errors": {
          "items": {
            "$ref": "#/definitions/KalturaVodIngestAssetResultErrorMessage"
          },
          "type": "array"
        },
        "fileName": {
          "description": "The XML file name used at the ingest gateway. Referred to as process name",
          "type": "string"
        },
        "ingestDate": {
          "description": "Date and time the asset was ingested. Date and time represented as epoch.",
          "type": "integer",
          "x-inputType": "datetime"
        },
        "shopAssetUserRuleId": {
          "description": "The shop ID the asset is assigned to. Omitted if the asset is not associated to any shop.",
          "type": "integer"
        },
        "status": {
          "description": "Enum Type: `KalturaVodIngestAssetResultStatus`\n\nThe status result for the asset ingest.\r\n            FAILURE - the asset ingest was failed after the ingest process started, specify the error for it.\r\n            SUCCESS - the asset was succeeded to be ingested.\r\n            SUCCESS_WARNING - the asset was succeeded to be ingested with warnings that do not prevent the ingest.\r\n            EXTERNAL_FAILURE - the asset ingest was failed before the ingest process started, specify the error for it.",
          "enum": [
            "FAILURE",
            "EXTERNAL_FAILURE",
            "SUCCESS_WARNING",
            "SUCCESS"
          ],
          "type": "string",
          "x-enumLabels": [
            "FAILURE",
            "EXTERNAL_FAILURE",
            "SUCCESS_WARNING",
            "SUCCESS"
          ],
          "x-enumType": "KalturaVodIngestAssetResultStatus"
        },
        "vodTypeSystemName": {
          "description": "VOD asset type (assetStruct.systemName).",
          "type": "string"
        },
        "warnings": {
          "items": {
            "$ref": "#/definitions/KalturaVodIngestAssetResultErrorMessage"
          },
          "type": "array"
        }
      },
      "title": "KalturaVodIngestAssetResult",
      "type": "object"
    },
    "KalturaVodIngestAssetResultAggregation": {
      "properties": {
        "externalFailureCount": {
          "description": "Number of files (not assets) which failed ingest and are reported by external none-WS_ingest entity. Calculated on the failed files returned according to the applied filters.",
          "type": "integer"
        },
        "failureCount": {
          "description": "Number of assets which failed ingest. Calculated on the assets returned according to the applied filters.",
          "type": "integer"
        },
        "ingestDateFrom": {
          "description": "Ingest date of the first asset in the response list. Date and time represented as epoch.",
          "type": "integer"
        },
        "ingestDateTo": {
          "description": "Ingest date of the last asset in the response list. Date and time represented as epoch.",
          "type": "integer"
        },
        "successCount": {
          "description": "Number of assets which succeeded ingest without any warning. Calculated on the assets returned according to the applied filters.",
          "type": "integer"
        },
        "successWithWarningCount": {
          "description": "Number of assets which succeeded ingest, but with warnings. Calculated on the assets returned according to the applied filters.",
          "type": "integer"
        }
      },
      "title": "KalturaVodIngestAssetResultAggregation",
      "type": "object"
    },
    "KalturaVodIngestAssetResultErrorMessage": {
      "description": "A Kaltura error message",
      "properties": {
        "code": {
          "description": "The message code",
          "type": "string"
        },
        "message": {
          "description": "The message description with arguments place holders",
          "type": "string"
        }
      },
      "title": "KalturaVodIngestAssetResultErrorMessage",
      "type": "object"
    },
    "KalturaVodIngestAssetResultFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "properties": {
        "assetNameContains": {
          "description": "Filter KalturaVodIngestAssetResult elements based on the asset name or partial name.",
          "type": "string"
        },
        "fileNameContains": {
          "description": "Filter KalturaVodIngestAssetResult elements based on the ingest XML file name or partial name.",
          "type": "string"
        },
        "ingestDateGreaterThan": {
          "description": "Filter assets ingested after the greater than value. Date and time represented as epoch.",
          "type": "integer"
        },
        "ingestDateSmallerThan": {
          "description": "Filter assets ingested before the smaller than value. Date and time represented as epoch.",
          "type": "integer"
        },
        "ingestStatusIn": {
          "description": "Comma separated values, representing multiple selection of ingest status state (\\&quot;SUCCESS\\&quot;,\\&quot;FAIL\\&quot;,\\&quot;SUCCESS_WARNING\\&quot;EXTERNAL_FAIL\\&quot;).",
          "type": "string"
        },
        "orderBy": {
          "enum": [
            "FILE_NAME_ASC",
            "FILE_NAME_DESC",
            "ASSET_NAME_ASC",
            "ASSET_NAME_DESC",
            "INGEST_DATE_ASC",
            "INGEST_DATE_DESC",
            "STATUS_ASC",
            "STATUS_DESC"
          ],
          "type": "string",
          "x-enumLabels": [
            "FILE_NAME_ASC",
            "FILE_NAME_DESC",
            "ASSET_NAME_ASC",
            "ASSET_NAME_DESC",
            "INGEST_DATE_ASC",
            "INGEST_DATE_DESC",
            "STATUS_ASC",
            "STATUS_DESC"
          ],
          "x-enumType": "KalturaVodIngestAssetResultOrderBy"
        },
        "shopAssetUserRuleIdIn": {
          "description": "Comma separated Ids, pointing to AssetUserRules which hold the shop markers (shop provider values)",
          "type": "string"
        },
        "vodTypeSystemNameIn": {
          "description": "Comma separated asset types, representing multiple selection of VOD asset types (e.g. \\&quot;MOVIE\\&quot;,\\&quot;SERIES\\&quot;,\\&quot;SEASON\\&quot;,\\&quot;EPISODE\\&quot;...).",
          "type": "string"
        }
      },
      "title": "KalturaVodIngestAssetResultFilter",
      "type": "object"
    },
    "KalturaVodIngestAssetResultList": {
      "properties": {
        "objects": {
          "items": {
            "$ref": "#/definitions/KalturaVodIngestAssetResult"
          },
          "type": "array"
        },
        "totalCount": {
          "description": "Total items",
          "type": "integer"
        }
      },
      "title": "KalturaVodIngestAssetResultList",
      "type": "object"
    },
    "KalturaVodIngestAssetResultResponse": {
      "properties": {
        "aggregations": {
          "$ref": "#/definitions/KalturaVodIngestAssetResultAggregation"
        },
        "result": {
          "$ref": "#/definitions/KalturaVodIngestAssetResultList"
        }
      },
      "title": "KalturaVodIngestAssetResultResponse",
      "type": "object"
    },
    "OTTRequest": {
      "properties": {
        "apiVersion": {
          "default": "9.2.1.1",
          "type": "string"
        },
        "ks": {
          "type": "string"
        }
      },
      "type": "object"
    }
  },
  "host": "tvpapi-us-preprod.ott.kaltura.com",
  "info": {
    "description": "The Kaltura OTT API",
    "title": "Kaltura OTT",
    "version": "9.2.1.1"
  },
  "parameters": {
    "KalturaBulkUploadAssetData:bulkUploadAssetData[objectType]": {
      "enum": [
        "KalturaBulkUploadMediaAssetData",
        "KalturaBulkUploadProgramAssetData",
        "KalturaBulkUploadLiveAssetData",
        "KalturaBulkUploadUdidDynamicListData"
      ],
      "in": "query",
      "name": "bulkUploadAssetData[objectType]",
      "type": "string",
      "x-group": "bulkUploadAssetData"
    },
    "KalturaBulkUploadAssetData:bulkUploadAssetData[typeId]": {
      "description": "Identifies the asset type (EPG, Recording, Movie, TV Series, etc). \r\n            Possible values: 0 - EPG linear programs, 1 - Recording; or any asset type ID according to the asset types IDs defined in the system.",
      "in": "query",
      "name": "bulkUploadAssetData[typeId]",
      "type": "integer",
      "x-group": "bulkUploadAssetData"
    },
    "KalturaBulkUploadDynamicListData:bulkUploadData[dynamicListId]": {
      "description": "Identifies the dynamicList Id",
      "in": "query",
      "name": "bulkUploadData[dynamicListId]",
      "type": "integer",
      "x-group": "bulkUploadData"
    },
    "KalturaBulkUploadDynamicListData:bulkUploadData[objectType]": {
      "enum": [
        "KalturaBulkUploadMediaAssetData",
        "KalturaBulkUploadProgramAssetData",
        "KalturaBulkUploadLiveAssetData",
        "KalturaBulkUploadUdidDynamicListData"
      ],
      "in": "query",
      "name": "bulkUploadData[objectType]",
      "type": "string",
      "x-group": "bulkUploadData"
    },
    "KalturaBulkUploadExcelJobData:jobData[objectType]": {
      "enum": [
        "KalturaBulkUploadExcelJobData",
        "KalturaBulkUploadIngestJobData"
      ],
      "in": "query",
      "name": "jobData[objectType]",
      "type": "string",
      "x-group": "jobData"
    },
    "KalturaBulkUploadJobData:bulkUploadJobData[objectType]": {
      "enum": [
        "KalturaBulkUploadExcelJobData",
        "KalturaBulkUploadIngestJobData"
      ],
      "in": "query",
      "name": "bulkUploadJobData[objectType]",
      "type": "string",
      "x-group": "bulkUploadJobData"
    },
    "abortAllOnError": {
      "in": "query",
      "name": "abortAllOnError",
      "type": "boolean",
      "x-global": true,
      "x-volatile": false
    },
    "abortOnError": {
      "in": "query",
      "name": "abortOnError",
      "type": "boolean",
      "x-global": true,
      "x-volatile": false
    },
    "clientTag": {
      "default": "devkcom",
      "description": "Use to tag the app or client-lib making calls to Kaltura API",
      "in": "query",
      "name": "clientTag",
      "type": "string"
    },
    "currency": {
      "in": "query",
      "name": "currency",
      "type": "string",
      "x-global": true,
      "x-volatile": false
    },
    "format": {
      "description": "The API response format",
      "enum": [
        1,
        2,
        3
      ],
      "in": "query",
      "name": "format",
      "type": "integer",
      "x-consoleDefault": 1,
      "x-enumLabels": [
        "JSON",
        "XML",
        "PHP"
      ],
      "x-global": true
    },
    "ks": {
      "in": "query",
      "name": "ks",
      "type": "string",
      "x-global": true
    },
    "language": {
      "in": "query",
      "name": "language",
      "type": "string",
      "x-global": true,
      "x-volatile": false
    },
    "partnerId": {
      "in": "query",
      "name": "partnerId",
      "type": "integer",
      "x-global": true,
      "x-volatile": false
    },
    "responseProfile": {
      "in": "body",
      "name": "responseProfile",
      "schema": {
        "properties": {
          "responseProfile": {
            "$ref": "#/definitions/KalturaBaseResponseProfile"
          }
        },
        "type": "object"
      },
      "x-global": true,
      "x-volatile": true
    },
    "skipCondition": {
      "in": "body",
      "name": "skipCondition",
      "schema": {
        "properties": {
          "skipCondition": {
            "$ref": "#/definitions/KalturaSkipCondition"
          }
        },
        "type": "object"
      },
      "x-global": true,
      "x-volatile": false
    },
    "userId": {
      "in": "query",
      "name": "userId",
      "type": "integer",
      "x-global": true,
      "x-volatile": false
    }
  },
  "paths": {
    "/service/announcement/action/add": {
      "post": {
        "description": "Add a new future scheduled system announcement push notification",
        "operationId": "announcement.add",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "announcement": {
                  "$ref": "#/definitions/KalturaAnnouncement"
                }
              },
              "required": [
                "announcement"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaAnnouncement"
            }
          },
          "x-Errors": {
            "description": "* `TimeInPast`: Argument [@argument@] time have passed\n* `AnnouncementMessageTooLong`: The announcement message exceeds the permitted message length.\n* `AnnouncementMessageIsEmpty`: The mandatory message field in the announcement message Is empty.\n* `AnnouncementInvalidTimezone`: The announcement time zone is invalid (for example 'UTC' or 'Pacific Standard Time').\n* `ActionIsNotAllowed`: The action requested is not allowed"
          }
        },
        "tags": [
          "announcement"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "announcement"
        ]
      }
    },
    "/service/announcement/action/delete": {
      "post": {
        "description": "Delete an existing announcing. Announcement cannot be delete while being sent.",
        "operationId": "announcement.delete",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `AnnouncementNotFound`: The announcement requested couldn't be found.\n* `FeatureDisabled`: This feature is disabled."
          }
        },
        "tags": [
          "announcement"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id"
        ]
      }
    },
    "/service/announcement/action/enableSystemAnnouncements": {
      "post": {
        "description": "Enable system announcements",
        "operationId": "announcement.enableSystemAnnouncements",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `FeatureDisabled`: This feature is disabled.\n* `FailCreateAnnouncement`: An error occurred while creating the announcement."
          }
        },
        "tags": [
          "announcement"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": []
      }
    },
    "/service/announcement/action/list": {
      "post": {
        "description": "Lists all announcements in the system.",
        "operationId": "announcement.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaAnnouncementFilter"
                },
                "pager": {
                  "$ref": "#/definitions/KalturaFilterPager"
                }
              },
              "required": [
                "filter"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaAnnouncementListResponse"
            }
          },
          "x-Errors": {
            "description": "* `InvalidValue`: The value specified, such as FullLifeCycle/ ViewLifeCycle, is invalid\n* `AnnouncementNotFound`: The announcement requested couldn't be found.\n* `FeatureDisabled`: This feature is disabled."
          }
        },
        "tags": [
          "announcement"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter",
          "pager"
        ]
      }
    },
    "/service/announcement/action/update": {
      "post": {
        "description": "Update an existing future system announcement push notification. Announcement can only be updated only before sending",
        "operationId": "announcement.update",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "announcement": {
                  "$ref": "#/definitions/KalturaAnnouncement"
                },
                "announcementId": {
                  "type": "integer"
                }
              },
              "required": [
                "announcementId",
                "announcement"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaAnnouncement"
            }
          },
          "x-Errors": {
            "description": "* `TimeInPast`: Argument [@argument@] time have passed\n* `AnnouncementMessageTooLong`: The announcement message exceeds the permitted message length.\n* `AnnouncementMessageIsEmpty`: The mandatory message field in the announcement message Is empty.\n* `AnnouncementNotFound`: The announcement requested couldn't be found.\n* `AnnouncementUpdateNotAllowed`: Unable to update the announcement; the announcement was already sent.\n* `AnnouncementInvalidTimezone`: The announcement time zone is invalid (for example 'UTC' or 'Pacific Standard Time').\n* `FeatureDisabled`: This feature is disabled.\n* `ActionIsNotAllowed`: The action requested is not allowed"
          }
        },
        "tags": [
          "announcement"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "announcementId",
          "announcement"
        ]
      }
    },
    "/service/announcement/action/updateStatus": {
      "post": {
        "description": "Update a system announcement status",
        "operationId": "announcement.updateStatus",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                },
                "status": {
                  "type": "boolean"
                }
              },
              "required": [
                "id",
                "status"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `AnnouncementNotFound`: The announcement requested couldn't be found.\n* `AnnouncementUpdateNotAllowed`: Unable to update the announcement; the announcement was already sent.\n* `FeatureDisabled`: This feature is disabled."
          }
        },
        "tags": [
          "announcement"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id",
          "status"
        ]
      }
    },
    "/service/apptoken/action/add": {
      "post": {
        "description": "Add new application authentication token",
        "operationId": "appToken.add",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "appToken": {
                  "$ref": "#/definitions/KalturaAppToken"
                }
              },
              "required": [
                "appToken"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaAppToken"
            }
          },
          "x-Errors": {
            "description": "* `MissingConfiguration`: Missing configuration [@configuration@]"
          }
        },
        "tags": [
          "appToken"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "appToken"
        ]
      }
    },
    "/service/apptoken/action/delete": {
      "post": {
        "description": "Delete application authentication token by id",
        "operationId": "appToken.delete",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "string"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `ObjectIdNotFound`: @objectType@ id [@id@] not found"
          }
        },
        "tags": [
          "appToken"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id"
        ]
      }
    },
    "/service/apptoken/action/get": {
      "post": {
        "description": "Get application authentication token by id",
        "operationId": "appToken.get",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "string"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaAppToken"
            }
          },
          "x-Errors": {
            "description": "* `NotFound`: @objectType@ not found"
          }
        },
        "tags": [
          "appToken"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id"
        ]
      }
    },
    "/service/apptoken/action/startSession": {
      "post": {
        "description": "Starts a new KS (Kaltura Session) based on application authentication token id",
        "operationId": "appToken.startSession",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "expiry": {
                  "type": "integer"
                },
                "id": {
                  "type": "string"
                },
                "tokenHash": {
                  "type": "string"
                },
                "udid": {
                  "type": "string"
                },
                "userId": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "tokenHash"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaSessionInfo"
            }
          },
          "x-Errors": {
            "description": "* `MissingConfiguration`: Missing configuration [@configuration@]\n* `ObjectIdNotFound`: @objectType@ id [@id@] not found\n* `InvalidAppTokenHash`: Invalid application-token hash\n* `NotActiveAppToken`: Application-token [@id@] is not active\n* `ExpiredAppToken`: Application-token is expired\n* `InvalidArgument`: Argument [@argument@] is invalid\n* `InvalidUser`: The user you selected for this action is not a valid user\n* `WrongPasswordOrUserName`: Unable to authenticate this user - the user name or password are incorrect. Please re-enter this information\n* `UserNotActivated`: The user must be activated to log in\n* `UserSuspended`: Unable to perform this action due to a household suspension\n* `DeviceNotExists`: The device you selected for this action does not exist in the household\n* `DeviceNotInDomain`: The device you selected is not part of the current household\n* `UserWithNoDomain`: This user is not associated with any household.\n* `DeviceExistsInOtherDomains`: Unable to add this device to this household because the device is already associated with another household"
          }
        },
        "tags": [
          "appToken"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id",
          "tokenHash",
          "userId",
          "expiry",
          "udid"
        ]
      }
    },
    "/service/asset/action/add": {
      "post": {
        "description": "Add a new asset.\r\n            For metas of type bool-&gt; use kalturaBoolValue, type number-&gt; KalturaDoubleValue, type date -&gt; KalturaLongValue, type string -&gt; KalturaStringValue",
        "operationId": "asset.add",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "asset": {
                  "$ref": "#/definitions/KalturaAsset"
                }
              },
              "required": [
                "asset"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaAsset"
            }
          },
          "x-Errors": {
            "description": "* `AssetStructDoesNotExist`: The specified asset strcut id does not exist\n* `AssetExternalIdMustBeUnique`\n* `InvalidMetaType`\n* `InvalidValueSentForMeta`\n* `DeviceRuleDoesNotExistForGroup`\n* `GeoBlockRuleDoesNotExistForGroup`\n* `EPGSProgramDatesError`: The EPG program dates specified are incorrectly formatted\n* `AssetDoesNotExist`\n* `ChannelDoesNotExist`\n* `NameRequired`: The mandatory name field is missing from the request\n* `MetaDoesNotExist`: The specified meta id does not exist"
          }
        },
        "tags": [
          "asset"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "asset"
        ]
      }
    },
    "/service/asset/action/addFromBulkUpload": {
      "post": {
        "description": "Add new bulk upload batch job Conversion profile id can be specified in the API.",
        "operationId": "asset.addFromBulkUpload",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "fileData",
            "in": "formData",
            "name": "fileData",
            "required": true,
            "type": "file"
          },
          {
            "$ref": "#/parameters/KalturaBulkUploadJobData:bulkUploadJobData[objectType]"
          },
          {
            "$ref": "#/parameters/KalturaBulkUploadAssetData:bulkUploadAssetData[objectType]"
          },
          {
            "$ref": "#/parameters/KalturaBulkUploadAssetData:bulkUploadAssetData[typeId]"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaBulkUpload"
            }
          },
          "x-Errors": {
            "description": "* `ArgumentCannotBeEmpty`: Argument [@argument@] cannot be empty\n* `FileDoesNotExists`: The file does not exist in a given path\n* `FileAlreadyExists`: The file already exists in a given path\n* `ErrorSavingFile`: Error occurred while saving file to File Server\n* `FileIdNotInCorrectLength`: The file ID is not the correct length\n* `InvalidFileType`: The file type provided is invalid\n* `EnqueueFailed`: Enqueue object to Celery queue failed\n* `BulkUploadDoesNotExist`: BulkUpload Does Not Exist\n* `AccountEpgIngestVersionDoesNotSupportBulk`: Account Epg Ingest Version does not support ingest using bulk upload\n* `FileExceededMaxSize`: File Exceeded Max Size\n* `FileExtensionNotSupported`: File Extension Not Supported\n* `FileMimeDifferentThanExpected`: File Mime Different Than Expected\n* `DynamicListDoesNotExist`"
          }
        },
        "tags": [
          "asset"
        ],
        "x-kaltura-format": "file",
        "x-kaltura-parameters": [
          "fileData",
          "bulkUploadJobData",
          "bulkUploadAssetData"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaBulkUploadJobData`",
            "name": "bulkUploadJobData",
            "schema": {
              "$ref": "#/definitions/KalturaBulkUploadJobData"
            },
            "subGroups": []
          },
          {
            "description": "Object Type: `KalturaBulkUploadAssetData`",
            "name": "bulkUploadAssetData",
            "schema": {
              "$ref": "#/definitions/KalturaBulkUploadAssetData"
            },
            "subGroups": []
          }
        ]
      }
    },
    "/service/asset/action/count": {
      "post": {
        "description": "Returns a group-by result for media or EPG according to given filter. Lists values of each field and their respective count.",
        "operationId": "asset.count",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaSearchAssetFilter"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaAssetCount"
            }
          },
          "x-Errors": {
            "description": "* `ArgumentCannotBeEmpty`: Argument [@argument@] cannot be empty\n* `SyntaxError`: KSQL query string contains a syntax error. It is not in the correct and expected format.\n* `BadSearchRequest`"
          }
        },
        "tags": [
          "asset"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter"
        ]
      }
    },
    "/service/asset/action/delete": {
      "post": {
        "description": "Delete an existing asset",
        "operationId": "asset.delete",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "assetReferenceType": {
                  "enum": [
                    "media",
                    "epg_internal",
                    "epg_external",
                    "npvr"
                  ],
                  "type": "string",
                  "x-enumLabels": [
                    "MEDIA",
                    "EPG_INTERNAL",
                    "EPG_EXTERNAL",
                    "NPVR"
                  ],
                  "x-enumType": "KalturaAssetReferenceType"
                },
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id",
                "assetReferenceType"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `AssetDoesNotExist`\n* `ActionIsNotAllowed`: The action requested is not allowed\n* `CategoryVersionIsNotDraft`"
          }
        },
        "tags": [
          "asset"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id",
          "assetReferenceType"
        ]
      }
    },
    "/service/asset/action/get": {
      "post": {
        "description": "Returns media or EPG asset by media / EPG internal or external identifier.\r\n            Note: OPC accounts asset.get for internal identifier doesn&#39;t take under consideration personalized aspects neither shop limitations.",
        "operationId": "asset.get",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "assetReferenceType": {
                  "enum": [
                    "media",
                    "epg_internal",
                    "epg_external",
                    "npvr"
                  ],
                  "type": "string",
                  "x-enumLabels": [
                    "MEDIA",
                    "EPG_INTERNAL",
                    "EPG_EXTERNAL",
                    "NPVR"
                  ],
                  "x-enumType": "KalturaAssetReferenceType"
                },
                "id": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "assetReferenceType"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaAsset"
            }
          },
          "x-Errors": {
            "description": "* `NotFound`: @objectType@ not found\n* `ArgumentCannotBeEmpty`: Argument [@argument@] cannot be empty\n* `ArgumentMustBeNumeric`: Argument [@argument@] must be numeric\n* `EnumValueNotSupported`: Enumerator value [@value@] is not supported for argument [@argument@]\n* `SyntaxError`: KSQL query string contains a syntax error. It is not in the correct and expected format.\n* `BadSearchRequest`\n* `IndexMissing`: Relevant ElasticSearch index doesn't exist, either because it wasn't built or some other error.\n* `AssetDoesNotExist`"
          }
        },
        "tags": [
          "asset"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id",
          "assetReferenceType"
        ]
      }
    },
    "/service/asset/action/getAdsContext": {
      "post": {
        "description": "Returns the data for ads control",
        "operationId": "asset.getAdsContext",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "assetId": {
                  "type": "string"
                },
                "assetType": {
                  "enum": [
                    "media",
                    "recording",
                    "epg"
                  ],
                  "type": "string",
                  "x-enumLabels": [
                    "MEDIA",
                    "RECORDING",
                    "EPG"
                  ],
                  "x-enumType": "KalturaAssetType"
                },
                "contextDataParams": {
                  "$ref": "#/definitions/KalturaPlaybackContextOptions"
                }
              },
              "required": [
                "assetId",
                "assetType",
                "contextDataParams"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaAdsContext"
            }
          },
          "x-Errors": {
            "description": "* `RecordingNotFound`: The program ID provided is invalid\n* `ProgramDoesntExist`: The EPG program requested doesn't exist\n* `DeviceNotInDomain`: The device you selected is not part of the current household\n* `RecordingStatusNotValid`: Unable to perform the action requested because of the current recording status. Actions are only allowed for these statuses:Recorded, Recording, Scheduled\n* `ServiceNotAllowed`: The user is not entitled to the premium service that he or she is trying to access\n* `RecordingPlaybackNotAllowedForNonExistingEpgChannel`: Recording playback is not allowed for a non-existing linear channel\n* `UserSuspended`: Unable to perform this action due to a household suspension\n* `UserWithNoDomain`: This user is not associated with any household.\n* `UserNotInDomain`: The user you selected is not part of the current household\n* `UserWithNoDomain`: This user is not associated with any household.\n* `UserDoesNotExist`: This user doesn't exist"
          }
        },
        "tags": [
          "asset"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "assetId",
          "assetType",
          "contextDataParams"
        ]
      }
    },
    "/service/asset/action/getPlaybackContext": {
      "post": {
        "description": "This action delivers all data relevant for player",
        "operationId": "asset.getPlaybackContext",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "assetId": {
                  "type": "string"
                },
                "assetType": {
                  "enum": [
                    "media",
                    "recording",
                    "epg"
                  ],
                  "type": "string",
                  "x-enumLabels": [
                    "MEDIA",
                    "RECORDING",
                    "EPG"
                  ],
                  "x-enumType": "KalturaAssetType"
                },
                "contextDataParams": {
                  "$ref": "#/definitions/KalturaPlaybackContextOptions"
                },
                "sourceType": {
                  "type": "string"
                }
              },
              "required": [
                "assetId",
                "assetType",
                "contextDataParams"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPlaybackContext"
            }
          },
          "x-Errors": {
            "description": "* `RecordingNotFound`: The program ID provided is invalid\n* `ProgramDoesntExist`: The EPG program requested doesn't exist\n* `DeviceNotInDomain`: The device you selected is not part of the current household\n* `RecordingStatusNotValid`: Unable to perform the action requested because of the current recording status. Actions are only allowed for these statuses:Recorded, Recording, Scheduled\n* `AdapterAppFailure`: The adapter failed to complete the request.\n* `AdapterNotExists`: The adapter you're trying to connect doesn't exist\n* `AdapterUrlRequired`: The mandatory adapter URL field is missing from the request\n* `UserSuspended`: Unable to perform this action due to a household suspension\n* `CatchUpBufferLimitation`: You've reach the maximum limit for the catch up buffer\n* `ProgramCatchUpNotEnabled`: This program does not support catch-up\n* `AccountCatchUpNotEnabled`: Your account is not enabled for the catch-up feature\n* `ServiceNotAllowed`: The user is not entitled to the premium service that he or she is trying to access\n* `NotAllowed`: Action not allowed due to roleId [@roleId@]\n* `ProgramStartOverNotEnabled`: This program does not support start-over"
          }
        },
        "tags": [
          "asset"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "assetId",
          "assetType",
          "contextDataParams",
          "sourceType"
        ]
      }
    },
    "/service/asset/action/getPlaybackManifest": {
      "post": {
        "description": "This action delivers all data relevant for player",
        "operationId": "asset.getPlaybackManifest",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "assetId": {
                  "type": "string"
                },
                "assetType": {
                  "enum": [
                    "media",
                    "recording",
                    "epg"
                  ],
                  "type": "string",
                  "x-enumLabels": [
                    "MEDIA",
                    "RECORDING",
                    "EPG"
                  ],
                  "x-enumType": "KalturaAssetType"
                },
                "contextDataParams": {
                  "$ref": "#/definitions/KalturaPlaybackContextOptions"
                },
                "sourceType": {
                  "type": "string"
                }
              },
              "required": [
                "assetId",
                "assetType",
                "contextDataParams"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPlaybackContext"
            }
          },
          "x-Errors": {
            "description": "* `RecordingNotFound`: The program ID provided is invalid\n* `RecordingStatusNotValid`: Unable to perform the action requested because of the current recording status. Actions are only allowed for these statuses:Recorded, Recording, Scheduled\n* `RecordingPlaybackNotAllowedForNonExistingEpgChannel`: Recording playback is not allowed for a non-existing linear channel\n* `ProgramDoesntExist`: The EPG program requested doesn't exist\n* `AdapterAppFailure`: The adapter failed to complete the request.\n* `AdapterNotExists`: The adapter you're trying to connect doesn't exist\n* `AdapterUrlRequired`: The mandatory adapter URL field is missing from the request\n* `DeviceNotInDomain`: The device you selected is not part of the current household\n* `NoFilesFound`"
          }
        },
        "tags": [
          "asset"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "assetId",
          "assetType",
          "contextDataParams",
          "sourceType"
        ]
      }
    },
    "/service/asset/action/groupRepresentativeList": {
      "post": {
        "description": "Returns assets deduplicated by asset metadata (or supported asset&#39;s property).",
        "operationId": "asset.groupRepresentativeList",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaListGroupsRepresentativesFilter"
                },
                "groupBy": {
                  "$ref": "#/definitions/KalturaAssetGroupBy"
                },
                "orderBy": {
                  "$ref": "#/definitions/KalturaBaseAssetOrder"
                },
                "pager": {
                  "$ref": "#/definitions/KalturaFilterPager"
                },
                "selectionPolicy": {
                  "$ref": "#/definitions/KalturaRepresentativeSelectionPolicy"
                },
                "unmatchedItemsPolicy": {
                  "enum": [
                    "OMIT",
                    "GROUP",
                    "INCLUDE_AND_MERGE"
                  ],
                  "type": "string",
                  "x-enumLabels": [
                    "OMIT",
                    "GROUP",
                    "INCLUDE_AND_MERGE"
                  ],
                  "x-enumType": "KalturaUnmatchedItemsPolicy"
                }
              },
              "required": [
                "groupBy",
                "unmatchedItemsPolicy"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaAssetListResponse"
            }
          }
        },
        "tags": [
          "asset"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "groupBy",
          "unmatchedItemsPolicy",
          "orderBy",
          "filter",
          "selectionPolicy",
          "pager"
        ]
      }
    },
    "/service/asset/action/list": {
      "post": {
        "description": "Returns media or EPG assets. Filters by media identifiers or by EPG internal or external identifier.",
        "operationId": "asset.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaAssetFilter"
                },
                "pager": {
                  "$ref": "#/definitions/KalturaFilterPager"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaAssetListResponse"
            }
          },
          "x-Errors": {
            "description": "* `SyntaxError`: KSQL query string contains a syntax error. It is not in the correct and expected format.\n* `BadSearchRequest`\n* `IndexMissing`: Relevant ElasticSearch index doesn't exist, either because it wasn't built or some other error."
          }
        },
        "tags": [
          "asset"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter",
          "pager"
        ]
      }
    },
    "/service/asset/action/listPersonalSelection": {
      "post": {
        "description": "Returns recent selected assets",
        "operationId": "asset.listPersonalSelection",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaPersonalAssetSelectionFilter"
                }
              },
              "required": [
                "filter"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaAssetListResponse"
            }
          },
          "x-Errors": {
            "description": "* `SyntaxError`: KSQL query string contains a syntax error. It is not in the correct and expected format.\n* `BadSearchRequest`\n* `IndexMissing`: Relevant ElasticSearch index doesn't exist, either because it wasn't built or some other error."
          }
        },
        "tags": [
          "asset"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter"
        ]
      }
    },
    "/service/asset/action/removeMetasAndTags": {
      "post": {
        "description": "remove metas and tags from asset",
        "operationId": "asset.removeMetasAndTags",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "assetReferenceType": {
                  "enum": [
                    "media",
                    "epg_internal",
                    "epg_external",
                    "npvr"
                  ],
                  "type": "string",
                  "x-enumLabels": [
                    "MEDIA",
                    "EPG_INTERNAL",
                    "EPG_EXTERNAL",
                    "NPVR"
                  ],
                  "x-enumType": "KalturaAssetReferenceType"
                },
                "id": {
                  "type": "integer"
                },
                "idIn": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "assetReferenceType",
                "idIn"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `NotFound`: @objectType@ not found\n* `AssetDoesNotExist`\n* `CanNotRemoveBasicMetaIds`"
          }
        },
        "tags": [
          "asset"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id",
          "assetReferenceType",
          "idIn"
        ]
      }
    },
    "/service/asset/action/update": {
      "post": {
        "description": "update an existing asset.\r\n            For metas of type bool-&gt; use kalturaBoolValue, type number-&gt; KalturaDoubleValue, type date -&gt; KalturaLongValue, type string -&gt; KalturaStringValue",
        "operationId": "asset.update",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "asset": {
                  "$ref": "#/definitions/KalturaAsset"
                },
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id",
                "asset"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaAsset"
            }
          },
          "x-Errors": {
            "description": "* `AssetDoesNotExist`\n* `AssetExternalIdMustBeUnique`\n* `InvalidMetaType`\n* `InvalidValueSentForMeta`\n* `ActionIsNotAllowed`: The action requested is not allowed\n* `RelatedEntitiesExceedLimitation`: Related entities exceed limitation\n* `StartDateShouldBeLessThanEndDate`\n* `MetaDoesNotExist`: The specified meta id does not exist\n* `AssetStructDoesNotExist`: The specified asset strcut id does not exist\n* `CategoryVersionIsNotDraft`"
          }
        },
        "tags": [
          "asset"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id",
          "asset"
        ]
      }
    },
    "/service/assetcomment/action/add": {
      "post": {
        "description": "Add asset comments by asset id",
        "operationId": "assetComment.add",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "comment": {
                  "$ref": "#/definitions/KalturaAssetComment"
                }
              },
              "required": [
                "comment"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaAssetComment"
            }
          },
          "x-Errors": {
            "description": "* `AssetDoesNotExist`"
          }
        },
        "tags": [
          "assetComment"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "comment"
        ]
      }
    },
    "/service/assetcomment/action/list": {
      "post": {
        "description": "Returns asset comments by asset id",
        "operationId": "assetComment.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaAssetCommentFilter"
                },
                "pager": {
                  "$ref": "#/definitions/KalturaFilterPager"
                }
              },
              "required": [
                "filter"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaAssetCommentListResponse"
            }
          },
          "x-Errors": {
            "description": "* `ObjectIdNotFound`: @objectType@ id [@id@] not found"
          }
        },
        "tags": [
          "assetComment"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter",
          "pager"
        ]
      }
    },
    "/service/assetfile/action/getContext": {
      "post": {
        "description": "get KalturaAssetFileContext",
        "operationId": "assetFile.getContext",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "contextType": {
                  "enum": [
                    "none",
                    "recording"
                  ],
                  "type": "string",
                  "x-enumLabels": [
                    "NONE",
                    "RECORDING"
                  ],
                  "x-enumType": "KalturaContextType"
                },
                "id": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "contextType"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaAssetFileContext"
            }
          },
          "x-Errors": {
            "description": "* `ObjectIdNotFound`: @objectType@ id [@id@] not found"
          }
        },
        "tags": [
          "assetFile"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id",
          "contextType"
        ]
      }
    },
    "/service/assetfile/action/playManifest": {
      "post": {
        "description": "Redirects to play manifest",
        "operationId": "assetFile.playManifest",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "assetFileId": {
                  "type": "integer"
                },
                "assetId": {
                  "type": "string"
                },
                "assetType": {
                  "enum": [
                    "media",
                    "recording",
                    "epg"
                  ],
                  "type": "string",
                  "x-enumLabels": [
                    "MEDIA",
                    "RECORDING",
                    "EPG"
                  ],
                  "x-enumType": "KalturaAssetType"
                },
                "contextType": {
                  "enum": [
                    "TRAILER",
                    "CATCHUP",
                    "START_OVER",
                    "PLAYBACK",
                    "DOWNLOAD"
                  ],
                  "type": "string",
                  "x-enumLabels": [
                    "TRAILER",
                    "CATCHUP",
                    "START_OVER",
                    "PLAYBACK",
                    "DOWNLOAD"
                  ],
                  "x-enumType": "KalturaPlaybackContextType"
                },
                "isAltUrl": {
                  "default": false,
                  "type": "boolean"
                },
                "ks": {
                  "type": "string"
                },
                "partnerId": {
                  "type": "integer"
                },
                "tokenizedUrl": {
                  "type": "string"
                }
              },
              "required": [
                "partnerId",
                "assetId",
                "assetType",
                "assetFileId",
                "contextType"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaAssetFile"
            }
          },
          "x-Errors": {
            "description": "* `RecordingNotFound`: The program ID provided is invalid\n* `ProgramDoesntExist`: The EPG program requested doesn't exist\n* `DeviceNotInDomain`: The device you selected is not part of the current household\n* `RecordingStatusNotValid`: Unable to perform the action requested because of the current recording status. Actions are only allowed for these statuses:Recorded, Recording, Scheduled\n* `UserSuspended`: Unable to perform this action due to a household suspension\n* `UserWithNoDomain`: This user is not associated with any household.\n* `UserNotInDomain`: The user you selected is not part of the current household\n* `UserDoesNotExist`: This user doesn't exist\n* `ServiceNotAllowed`: The user is not entitled to the premium service that he or she is trying to access\n* `RecordingPlaybackNotAllowedForNonExistingEpgChannel`: Recording playback is not allowed for a non-existing linear channel\n* `RecordingPlaybackNotAllowedForNotEntitledEpgChannel`: Recording playback is not allowed for non-entitled linear channels\n* `ConcurrencyLimitation`: Concurrency limitation (according to DLM configuration)\n* `MediaConcurrencyLimitation`: Media concurrency limitation (according to DLM configuration)\n* `DeviceTypeNotAllowed`: The device type you selected is not supported by the system\n* `NoFilesFound`\n* `NotEntitled`: The user does not have permission to access this content\n* `NotAllowed`: Action not allowed due to roleId [@roleId@]\n* `AccountCatchUpNotEnabled`: Your account is not enabled for the catch-up feature\n* `ProgramCatchUpNotEnabled`: This program does not support catch-up\n* `CatchUpBufferLimitation`: You've reach the maximum limit for the catch up buffer\n* `NetworkRuleBlock`\n* `ActionBlocked`: Blocked by segment.\n* `ProgramStartOverNotEnabled`: This program does not support start-over"
          }
        },
        "tags": [
          "assetFile"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "partnerId",
          "assetId",
          "assetType",
          "assetFileId",
          "contextType",
          "ks",
          "tokenizedUrl",
          "isAltUrl"
        ]
      }
    },
    "/service/assetfileppv/action/add": {
      "post": {
        "description": "Add asset file ppv",
        "operationId": "assetFilePpv.add",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "assetFilePpv": {
                  "$ref": "#/definitions/KalturaAssetFilePpv"
                }
              },
              "required": [
                "assetFilePpv"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaAssetFilePpv"
            }
          },
          "x-Errors": {
            "description": "* `UnKnownPPVModule`: This PPVModule does not belong to the item.\n* `MediaFileDoesNotExist`"
          }
        },
        "tags": [
          "assetFilePpv"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "assetFilePpv"
        ]
      }
    },
    "/service/assetfileppv/action/delete": {
      "post": {
        "description": "Delete asset file ppv",
        "operationId": "assetFilePpv.delete",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "assetFileId": {
                  "type": "integer"
                },
                "ppvModuleId": {
                  "type": "integer"
                }
              },
              "required": [
                "assetFileId",
                "ppvModuleId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `AssetFilePPVNotExist`\n* `UnKnownPPVModule`: This PPVModule does not belong to the item.\n* `MediaFileDoesNotExist`"
          }
        },
        "tags": [
          "assetFilePpv"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "assetFileId",
          "ppvModuleId"
        ]
      }
    },
    "/service/assetfileppv/action/list": {
      "post": {
        "description": "Return a list of asset files ppvs for the account with optional filter",
        "operationId": "assetFilePpv.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaAssetFilePpvFilter"
                }
              },
              "required": [
                "filter"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaAssetFilePpvListResponse"
            }
          },
          "x-Errors": {
            "description": "* `AssetDoesNotExist`"
          }
        },
        "tags": [
          "assetFilePpv"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter"
        ]
      }
    },
    "/service/assetfileppv/action/update": {
      "post": {
        "description": "Update assetFilePpv",
        "operationId": "assetFilePpv.update",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "assetFileId": {
                  "type": "integer"
                },
                "assetFilePpv": {
                  "$ref": "#/definitions/KalturaAssetFilePpv"
                },
                "ppvModuleId": {
                  "type": "integer"
                }
              },
              "required": [
                "assetFileId",
                "ppvModuleId",
                "assetFilePpv"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaAssetFilePpv"
            }
          },
          "x-Errors": {
            "description": "* `AssetFilePPVNotExist`\n* `UnKnownPPVModule`: This PPVModule does not belong to the item.\n* `MediaFileDoesNotExist`"
          }
        },
        "tags": [
          "assetFilePpv"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "assetFileId",
          "ppvModuleId",
          "assetFilePpv"
        ]
      }
    },
    "/service/assethistory/action/clean": {
      "post": {
        "description": "Clean the user’s viewing history",
        "operationId": "assetHistory.clean",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaAssetHistoryFilter"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "x-Errors": {
            "description": "* `BadSearchRequest`"
          }
        },
        "tags": [
          "assetHistory"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter"
        ]
      }
    },
    "/service/assethistory/action/getNextEpisode": {
      "post": {
        "description": "Get next episode by last watch asset in given assetId",
        "operationId": "assetHistory.getNextEpisode",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "assetId": {
                  "type": "integer"
                },
                "notWatchedReturnStrategy": {
                  "enum": [
                    "RETURN_NO_NEXT_EPISODE",
                    "RETURN_FIRST_EPISODE"
                  ],
                  "type": "string",
                  "x-enumLabels": [
                    "RETURN_NO_NEXT_EPISODE",
                    "RETURN_FIRST_EPISODE"
                  ],
                  "x-enumType": "KalturaNotWatchedReturnStrategy"
                },
                "seriesIdArguments": {
                  "$ref": "#/definitions/KalturaSeriesIdArguments"
                },
                "watchedAllReturnStrategy": {
                  "enum": [
                    "RETURN_NO_NEXT_EPISODE",
                    "RETURN_FIRST_EPISODE",
                    "RETURN_LAST_EPISODE"
                  ],
                  "type": "string",
                  "x-enumLabels": [
                    "RETURN_NO_NEXT_EPISODE",
                    "RETURN_FIRST_EPISODE",
                    "RETURN_LAST_EPISODE"
                  ],
                  "x-enumType": "KalturaWatchedAllReturnStrategy"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaAssetHistory"
            }
          },
          "x-Errors": {
            "description": "* `InvalidAssetType`: The asset requested is not a valid asset type\n* `InvalidAssetStruct`: Invalid asset struct\n* `TopicNotFound`\n* `MetaDoesNotExist`: The specified meta id does not exist\n* `NoNextEpisode`: User have not started watching this TV series"
          }
        },
        "tags": [
          "assetHistory"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "assetId",
          "seriesIdArguments",
          "notWatchedReturnStrategy",
          "watchedAllReturnStrategy"
        ]
      }
    },
    "/service/assethistory/action/list": {
      "post": {
        "description": "Get recently watched media for user, ordered by recently watched first.",
        "operationId": "assetHistory.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaAssetHistoryFilter"
                },
                "pager": {
                  "$ref": "#/definitions/KalturaFilterPager"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaAssetHistoryListResponse"
            }
          },
          "x-Errors": {
            "description": "* `BadSearchRequest`"
          }
        },
        "tags": [
          "assetHistory"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter",
          "pager"
        ]
      }
    },
    "/service/assetpersonalmarkup/action/list": {
      "post": {
        "description": "Response with list of assetPersonalMarkup.",
        "operationId": "assetPersonalMarkup.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaAssetPersonalMarkupSearchFilter"
                }
              },
              "required": [
                "filter"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaAssetPersonalMarkupListResponse"
            }
          }
        },
        "tags": [
          "assetPersonalMarkup"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter"
        ]
      }
    },
    "/service/assetpersonalselection/action/delete": {
      "post": {
        "description": "Remove asset selection in slot",
        "operationId": "assetPersonalSelection.delete",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "assetId": {
                  "type": "integer"
                },
                "assetType": {
                  "enum": [
                    "media",
                    "recording",
                    "epg"
                  ],
                  "type": "string",
                  "x-enumLabels": [
                    "MEDIA",
                    "RECORDING",
                    "EPG"
                  ],
                  "x-enumType": "KalturaAssetType"
                },
                "slotNumber": {
                  "type": "integer"
                }
              },
              "required": [
                "assetId",
                "assetType",
                "slotNumber"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "x-Errors": {
            "description": "* `ArgumentMinValueCrossed`: Argument [@argument@] minimum value is [@value@]"
          }
        },
        "tags": [
          "assetPersonalSelection"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "assetId",
          "assetType",
          "slotNumber"
        ]
      }
    },
    "/service/assetpersonalselection/action/deleteAll": {
      "post": {
        "description": "Remove asset selection in slot",
        "operationId": "assetPersonalSelection.deleteAll",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "slotNumber": {
                  "type": "integer"
                }
              },
              "required": [
                "slotNumber"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "x-Errors": {
            "description": "* `ArgumentMinValueCrossed`: Argument [@argument@] minimum value is [@value@]"
          }
        },
        "tags": [
          "assetPersonalSelection"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "slotNumber"
        ]
      }
    },
    "/service/assetpersonalselection/action/upsert": {
      "post": {
        "description": "Add or update asset selection in slot",
        "operationId": "assetPersonalSelection.upsert",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "assetId": {
                  "type": "integer"
                },
                "assetType": {
                  "enum": [
                    "media",
                    "recording",
                    "epg"
                  ],
                  "type": "string",
                  "x-enumLabels": [
                    "MEDIA",
                    "RECORDING",
                    "EPG"
                  ],
                  "x-enumType": "KalturaAssetType"
                },
                "slotNumber": {
                  "type": "integer"
                }
              },
              "required": [
                "assetId",
                "assetType",
                "slotNumber"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaAssetPersonalSelection"
            }
          },
          "x-Errors": {
            "description": "* `ArgumentMinValueCrossed`: Argument [@argument@] minimum value is [@value@]\n* `EnumValueNotSupported`: Enumerator value [@value@] is not supported for argument [@argument@]"
          }
        },
        "tags": [
          "assetPersonalSelection"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "assetId",
          "assetType",
          "slotNumber"
        ]
      }
    },
    "/service/assetrule/action/add": {
      "post": {
        "description": "Add asset rule",
        "operationId": "assetRule.add",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "assetRule": {
                  "$ref": "#/definitions/KalturaAssetRule"
                }
              },
              "required": [
                "assetRule"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaAssetRule"
            }
          },
          "x-Errors": {
            "description": "* `VideoCodecsDoesNotExist`\n* `AudioCodecsDoesNotExist`\n* `LabelDoesNotExist`\n* `DynamicDataKeyDoesNotExist`"
          }
        },
        "tags": [
          "assetRule"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "assetRule"
        ]
      }
    },
    "/service/assetrule/action/delete": {
      "post": {
        "description": "Delete asset rule",
        "operationId": "assetRule.delete",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `AssetRuleNotExists`: Asset rule doesn't exist\n* `AssetRuleStatusNotWritable`: Cannot update or delete asset rule when in progress"
          }
        },
        "tags": [
          "assetRule"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id"
        ]
      }
    },
    "/service/assetrule/action/list": {
      "post": {
        "description": "Get the list of asset rules for the partner",
        "operationId": "assetRule.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaAssetRuleFilter"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaAssetRuleListResponse"
            }
          },
          "x-Errors": {
            "description": "* `AssetRuleNotExists`: Asset rule doesn't exist"
          }
        },
        "tags": [
          "assetRule"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter"
        ]
      }
    },
    "/service/assetrule/action/update": {
      "post": {
        "description": "Update asset rule",
        "operationId": "assetRule.update",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "assetRule": {
                  "$ref": "#/definitions/KalturaAssetRule"
                },
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id",
                "assetRule"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaAssetRule"
            }
          },
          "x-Errors": {
            "description": "* `AssetRuleNotExists`: Asset rule doesn't exist\n* `AssetRuleStatusNotWritable`: Cannot update or delete asset rule when in progress\n* `VideoCodecsDoesNotExist`\n* `AudioCodecsDoesNotExist`\n* `LabelDoesNotExist`\n* `DynamicDataKeyDoesNotExist`"
          }
        },
        "tags": [
          "assetRule"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id",
          "assetRule"
        ]
      }
    },
    "/service/assetstatistics/action/query": {
      "post": {
        "description": "Returns statistics for given list of assets by type and / or time period",
        "operationId": "assetStatistics.query",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "query": {
                  "$ref": "#/definitions/KalturaAssetStatisticsQuery"
                }
              },
              "required": [
                "query"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaAssetStatisticsListResponse"
            }
          }
        },
        "tags": [
          "assetStatistics"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "query"
        ]
      }
    },
    "/service/assetstruct/action/add": {
      "post": {
        "description": "Add a new assetStruct",
        "operationId": "assetStruct.add",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "assetStruct": {
                  "$ref": "#/definitions/KalturaAssetStruct"
                }
              },
              "required": [
                "assetStruct"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaAssetStruct"
            }
          },
          "x-Errors": {
            "description": "* `AssetStructNameAlreadyInUse`: The asset struct name is already in use\n* `AssetStructSystemNameAlreadyInUse`: The asset struct system name is already in use\n* `AssetStructDoesNotExist`: The specified asset strcut id does not exist\n* `MetaIdsDoesNotExist`: One or more of the specified meta ids does not exist\n* `AssetStructMissingBasicMetaIds`: One or more of the basic meta ids was not sent\n* `MetaIdsDuplication`\n* `AssetStructMetasConatinSystemNameDuplication`"
          }
        },
        "tags": [
          "assetStruct"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "assetStruct"
        ]
      }
    },
    "/service/assetstruct/action/delete": {
      "post": {
        "description": "Delete an existing assetStruct",
        "operationId": "assetStruct.delete",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `AssetStructDoesNotExist`: The specified asset strcut id does not exist\n* `CanNotDeletePredefinedAssetStruct`: can not delete predefined asset struct\n* `CanNotDeleteParentAssetStruct`\n* `CannotDeleteAssetStruct`: Cannot delete asset struct"
          }
        },
        "tags": [
          "assetStruct"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id"
        ]
      }
    },
    "/service/assetstruct/action/get": {
      "post": {
        "description": "Get AssetStruct by ID",
        "operationId": "assetStruct.get",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaAssetStruct"
            }
          },
          "x-Errors": {
            "description": "* `AssetStructDoesNotExist`: The specified asset strcut id does not exist"
          }
        },
        "tags": [
          "assetStruct"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id"
        ]
      }
    },
    "/service/assetstruct/action/list": {
      "post": {
        "description": "Return a list of asset structs for the account with optional filter",
        "operationId": "assetStruct.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaBaseAssetStructFilter"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaAssetStructListResponse"
            }
          }
        },
        "tags": [
          "assetStruct"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter"
        ]
      }
    },
    "/service/assetstruct/action/update": {
      "post": {
        "description": "Update an existing assetStruct",
        "operationId": "assetStruct.update",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "assetStruct": {
                  "$ref": "#/definitions/KalturaAssetStruct"
                },
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id",
                "assetStruct"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaAssetStruct"
            }
          },
          "x-Errors": {
            "description": "* `AssetStructDoesNotExist`: The specified asset strcut id does not exist\n* `AssetStructNameAlreadyInUse`: The asset struct name is already in use\n* `AssetStructSystemNameAlreadyInUse`: The asset struct system name is already in use\n* `AssetStructDoesNotExist`: The specified asset strcut id does not exist\n* `MetaIdsDoesNotExist`: One or more of the specified meta ids does not exist\n* `CanNotChangePredefinedAssetStructSystemName`: can not change predefined asset struct name\n* `AssetStructMissingBasicMetaIds`: One or more of the basic meta ids was not sent\n* `ParentIdShouldNotPointToItself`: ParentId should not point to itself\n* `MetaIdsDuplication`\n* `AssetStructMetasConatinSystemNameDuplication`\n* `CanNotRemoveMetaIdsForLiveToVod`"
          }
        },
        "tags": [
          "assetStruct"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id",
          "assetStruct"
        ]
      }
    },
    "/service/assetstructmeta/action/list": {
      "post": {
        "description": "Return a list of asset struct metas for the account with optional filter",
        "operationId": "assetStructMeta.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaAssetStructMetaFilter"
                }
              },
              "required": [
                "filter"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaAssetStructMetaListResponse"
            }
          }
        },
        "tags": [
          "assetStructMeta"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter"
        ]
      }
    },
    "/service/assetstructmeta/action/update": {
      "post": {
        "description": "Update Asset struct meta",
        "operationId": "assetStructMeta.update",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "assetStructId": {
                  "type": "integer"
                },
                "assetStructMeta": {
                  "$ref": "#/definitions/KalturaAssetStructMeta"
                },
                "metaId": {
                  "type": "integer"
                }
              },
              "required": [
                "assetStructId",
                "metaId",
                "assetStructMeta"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaAssetStructMeta"
            }
          },
          "x-Errors": {
            "description": "* `AssetStructDoesNotExist`: The specified asset strcut id does not exist\n* `MetaDoesNotExist`: The specified meta id does not exist\n* `NoParentAssociatedToTopic`\n* `MetaDoesNotBelongToParentAssetStruct`\n* `TagAlreadyInUse`\n* `InvalidMediaType`: The asset type does not match one of the group asset types\n* `AliasMustBeUnique`: Invalid entry: the alias value must be unique"
          }
        },
        "tags": [
          "assetStructMeta"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "assetStructId",
          "metaId",
          "assetStructMeta"
        ]
      }
    },
    "/service/assetuserrule/action/add": {
      "post": {
        "description": "Add asset user rule",
        "operationId": "assetUserRule.add",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "assetUserRule": {
                  "$ref": "#/definitions/KalturaAssetUserRule"
                }
              },
              "required": [
                "assetUserRule"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaAssetUserRule"
            }
          }
        },
        "tags": [
          "assetUserRule"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "assetUserRule"
        ]
      }
    },
    "/service/assetuserrule/action/attachUser": {
      "post": {
        "description": "Attach AssetUserRule To User",
        "operationId": "assetUserRule.attachUser",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "ruleId": {
                  "type": "integer"
                }
              },
              "required": [
                "ruleId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "x-Errors": {
            "description": "* `AssetUserRuleDoesNotExists`: Asset user rule does not exist\n* `UserAlreadyAttachedToAssetUserRule`: User already attached to this AssetUserRule\n* `AssetUserRulesOperationsDisable`: AssetUserRule operations are disabled for this partner"
          }
        },
        "tags": [
          "assetUserRule"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "ruleId"
        ]
      }
    },
    "/service/assetuserrule/action/delete": {
      "post": {
        "description": "Delete asset user rule",
        "operationId": "assetUserRule.delete",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "x-Errors": {
            "description": "* `AssetUserRuleDoesNotExists`: Asset user rule does not exist"
          }
        },
        "tags": [
          "assetUserRule"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id"
        ]
      }
    },
    "/service/assetuserrule/action/detachUser": {
      "post": {
        "description": "Detach AssetUserRule from user",
        "operationId": "assetUserRule.detachUser",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "ruleId": {
                  "type": "integer"
                }
              },
              "required": [
                "ruleId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "x-Errors": {
            "description": "* `AssetUserRuleDoesNotExists`: Asset user rule does not exist\n* `AssetUserRulesOperationsDisable`: AssetUserRule operations are disabled for this partner"
          }
        },
        "tags": [
          "assetUserRule"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "ruleId"
        ]
      }
    },
    "/service/assetuserrule/action/list": {
      "post": {
        "description": "Get the list of asset user rules for the partner",
        "operationId": "assetUserRule.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaAssetUserRuleFilter"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaAssetUserRuleListResponse"
            }
          },
          "x-Errors": {
            "description": "* `AssetUserRulesOperationsDisable`: AssetUserRule operations are disabled for this partner"
          }
        },
        "tags": [
          "assetUserRule"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter"
        ]
      }
    },
    "/service/assetuserrule/action/update": {
      "post": {
        "description": "Update asset user rule",
        "operationId": "assetUserRule.update",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "assetUserRule": {
                  "$ref": "#/definitions/KalturaAssetUserRule"
                },
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id",
                "assetUserRule"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaAssetUserRule"
            }
          },
          "x-Errors": {
            "description": "* `AssetUserRuleDoesNotExists`: Asset user rule does not exist"
          }
        },
        "tags": [
          "assetUserRule"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id",
          "assetUserRule"
        ]
      }
    },
    "/service/bookmark/action/add": {
      "post": {
        "description": "Report player position and action for the user on the watched asset. Player position is used to later allow resume watching.",
        "operationId": "bookmark.add",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "bookmark": {
                  "$ref": "#/definitions/KalturaBookmark"
                }
              },
              "required": [
                "bookmark"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `ConcurrencyLimitation`: Concurrency limitation (according to DLM configuration)"
          }
        },
        "tags": [
          "bookmark"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "bookmark"
        ]
      }
    },
    "/service/bookmark/action/list": {
      "post": {
        "description": "Returns player position record/s for the requested asset and the requesting user. \r\n            If default user makes the request – player position records are provided for all of the users in the household.\r\n            If non-default user makes the request - player position records are provided for the requesting user and the default user of the household.",
        "operationId": "bookmark.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaBookmarkFilter"
                }
              },
              "required": [
                "filter"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaBookmarkListResponse"
            }
          },
          "x-Errors": {
            "description": "* `UserNotExistsInDomain`: The user you selected for this action does not exist in the household\n* `InvalidUser`: The user you selected for this action is not a valid user\n* `InvalidAssetType`: The asset requested is not a valid asset type"
          }
        },
        "tags": [
          "bookmark"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter"
        ]
      }
    },
    "/service/bulkupload/action/get": {
      "post": {
        "description": "Get BulkUpload by ID",
        "operationId": "bulkUpload.get",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaBulkUpload"
            }
          },
          "x-Errors": {
            "description": "* `BulkUploadDoesNotExist`: BulkUpload Does Not Exist"
          }
        },
        "tags": [
          "bulkUpload"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id"
        ]
      }
    },
    "/service/bulkupload/action/list": {
      "post": {
        "description": "Get list of KalturaBulkUpload by filter",
        "operationId": "bulkUpload.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaBulkUploadFilter"
                },
                "pager": {
                  "$ref": "#/definitions/KalturaFilterPager"
                }
              },
              "required": [
                "filter"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaBulkUploadListResponse"
            }
          },
          "x-Errors": {
            "description": "* `InvalidFileType`: The file type provided is invalid"
          }
        },
        "tags": [
          "bulkUpload"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter",
          "pager"
        ]
      }
    },
    "/service/bulkuploadstatistics/action/get": {
      "post": {
        "description": "Get BulkUploadStatistics count summary by status",
        "operationId": "bulkUploadStatistics.get",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "bulkObjectTypeEqual": {
                  "type": "string"
                },
                "createDateGreaterThanOrEqual": {
                  "type": "integer"
                }
              },
              "required": [
                "bulkObjectTypeEqual",
                "createDateGreaterThanOrEqual"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaBulkUploadStatistics"
            }
          }
        },
        "tags": [
          "bulkUploadStatistics"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "bulkObjectTypeEqual",
          "createDateGreaterThanOrEqual"
        ]
      }
    },
    "/service/businessmodulerule/action/add": {
      "post": {
        "description": "Add business module rule",
        "operationId": "businessModuleRule.add",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "businessModuleRule": {
                  "$ref": "#/definitions/KalturaBusinessModuleRule"
                }
              },
              "required": [
                "businessModuleRule"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaBusinessModuleRule"
            }
          }
        },
        "tags": [
          "businessModuleRule"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "businessModuleRule"
        ]
      }
    },
    "/service/businessmodulerule/action/delete": {
      "post": {
        "description": "Delete business module rule",
        "operationId": "businessModuleRule.delete",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "x-Errors": {
            "description": "* `RuleNotExists`: This rule doesn't exist in the system"
          }
        },
        "tags": [
          "businessModuleRule"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id"
        ]
      }
    },
    "/service/businessmodulerule/action/get": {
      "post": {
        "description": "Get business module rule by ID",
        "operationId": "businessModuleRule.get",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaBusinessModuleRule"
            }
          },
          "x-Errors": {
            "description": "* `RuleNotExists`: This rule doesn't exist in the system"
          }
        },
        "tags": [
          "businessModuleRule"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id"
        ]
      }
    },
    "/service/businessmodulerule/action/list": {
      "post": {
        "description": "Get the list of business module rules for the partner",
        "operationId": "businessModuleRule.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaBusinessModuleRuleFilter"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaBusinessModuleRuleListResponse"
            }
          }
        },
        "tags": [
          "businessModuleRule"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter"
        ]
      }
    },
    "/service/businessmodulerule/action/update": {
      "post": {
        "description": "Update business module rule",
        "operationId": "businessModuleRule.update",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "businessModuleRule": {
                  "$ref": "#/definitions/KalturaBusinessModuleRule"
                },
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id",
                "businessModuleRule"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaBusinessModuleRule"
            }
          },
          "x-Errors": {
            "description": "* `RuleNotExists`: This rule doesn't exist in the system"
          }
        },
        "tags": [
          "businessModuleRule"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id",
          "businessModuleRule"
        ]
      }
    },
    "/service/campaign/action/add": {
      "post": {
        "description": "Add new Campaign",
        "operationId": "campaign.add",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "objectToAdd": {
                  "$ref": "#/definitions/KalturaCampaign"
                }
              },
              "required": [
                "objectToAdd"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaCampaign"
            }
          },
          "x-Errors": {
            "description": "* `DiscountCodeNotExist`\n* `NotExist`\n* `ChannelDoesNotExist`\n* `MediaFileTypeDoesNotExist`\n* `CouponGroupNotExist`\n* `EntityIsNotAssociatedWithShop`\n* `SegmentsIdsDoesNotExist`\n* `PpvModuleNotExist`\n* `CollectionNotExist`: The collection does not exist\n* `AssetUserRuleDoesNotExists`: Asset user rule does not exist"
          }
        },
        "tags": [
          "campaign"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "objectToAdd"
        ]
      }
    },
    "/service/campaign/action/delete": {
      "post": {
        "description": "Delete existing Campaign",
        "operationId": "campaign.delete",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "x-Errors": {
            "description": "* `CampaignDoesNotExist`\n* `CanDeleteOnlyInactiveCampaign`"
          }
        },
        "tags": [
          "campaign"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id"
        ]
      }
    },
    "/service/campaign/action/list": {
      "post": {
        "description": "Returns the list of available Campaigns",
        "operationId": "campaign.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaCampaignFilter"
                },
                "pager": {
                  "$ref": "#/definitions/KalturaFilterPager"
                }
              },
              "required": [
                "filter"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaCampaignListResponse"
            }
          }
        },
        "tags": [
          "campaign"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter",
          "pager"
        ]
      }
    },
    "/service/campaign/action/setState": {
      "post": {
        "description": "Set campaign&#39;s state",
        "operationId": "campaign.setState",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "campaignId": {
                  "type": "integer"
                },
                "newState": {
                  "enum": [
                    "INACTIVE",
                    "ACTIVE",
                    "ARCHIVE"
                  ],
                  "type": "string",
                  "x-enumLabels": [
                    "INACTIVE",
                    "ACTIVE",
                    "ARCHIVE"
                  ],
                  "x-enumType": "KalturaObjectState"
                }
              },
              "required": [
                "campaignId",
                "newState"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "x-Errors": {
            "description": "* `CampaignDoesNotExist`\n* `ExceededMaxCapacity`\n* `InvalidCampaignState`: Campaign is already in given state\n* `CampaignStateUpdateNotAllowed`: Can update campaign state only from INACTIVE to ACTIVE or from ACTIVE to ARCHIVE\n* `InvalidCampaignEndDate`: Can update campaign state only if its EndDate is in the future"
          }
        },
        "tags": [
          "campaign"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "campaignId",
          "newState"
        ]
      }
    },
    "/service/campaign/action/update": {
      "post": {
        "description": "Update existing Campaign",
        "operationId": "campaign.update",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                },
                "objectToUpdate": {
                  "$ref": "#/definitions/KalturaCampaign"
                }
              },
              "required": [
                "id",
                "objectToUpdate"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaCampaign"
            }
          },
          "x-Errors": {
            "description": "* `DiscountCodeNotExist`\n* `CampaignDoesNotExist`\n* `NotExist`\n* `ChannelDoesNotExist`\n* `MediaFileTypeDoesNotExist`\n* `CouponGroupNotExist`\n* `CampaignUpdateNotAllowed`: Only campaign in state INACTIVE can be updated\n* `EntityIsNotAssociatedWithShop`\n* `SegmentsIdsDoesNotExist`\n* `PpvModuleNotExist`\n* `CollectionNotExist`: The collection does not exist\n* `AssetUserRuleDoesNotExists`: Asset user rule does not exist"
          }
        },
        "tags": [
          "campaign"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id",
          "objectToUpdate"
        ]
      }
    },
    "/service/categoryitem/action/add": {
      "post": {
        "description": "categoryItem add",
        "operationId": "categoryItem.add",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "objectToAdd": {
                  "$ref": "#/definitions/KalturaCategoryItem"
                }
              },
              "required": [
                "objectToAdd"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaCategoryItem"
            }
          },
          "x-Errors": {
            "description": "* `NameRequired`: The mandatory name field is missing from the request\n* `ChannelDoesNotExist`\n* `ChildCategoryNotExist`: Child category does not exist\n* `ChildCategoryAlreadyBelongsToAnotherCategory`: Child Category already belongs to another category\n* `CategoryTypeNotExist`: Category type does not exist\n* `CategoryIsAlreadyAssociatedToVersion`"
          }
        },
        "tags": [
          "categoryItem"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "objectToAdd"
        ]
      }
    },
    "/service/categoryitem/action/delete": {
      "post": {
        "description": "Remove category",
        "operationId": "categoryItem.delete",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "x-Errors": {
            "description": "* `CategoryNotExist`: The category you selected does not exist\n* `ImageDoesNotExist`\n* `CategoryVersionIsNotDraft`\n* `CategoryItemIsRoot`"
          }
        },
        "tags": [
          "categoryItem"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id"
        ]
      }
    },
    "/service/categoryitem/action/list": {
      "post": {
        "description": "Gets all categoryItem items",
        "operationId": "categoryItem.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaCategoryItemFilter"
                },
                "pager": {
                  "$ref": "#/definitions/KalturaFilterPager"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaCategoryItemListResponse"
            }
          },
          "x-Errors": {
            "description": "* `CategoryTypeNotExist`: Category type does not exist\n* `InvalidValue`: The value specified, such as FullLifeCycle/ ViewLifeCycle, is invalid\n* `CategoryNotExist`: The category you selected does not exist"
          }
        },
        "tags": [
          "categoryItem"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter",
          "pager"
        ]
      }
    },
    "/service/categoryitem/action/update": {
      "post": {
        "description": "categoryItem update",
        "operationId": "categoryItem.update",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                },
                "objectToUpdate": {
                  "$ref": "#/definitions/KalturaCategoryItem"
                }
              },
              "required": [
                "id",
                "objectToUpdate"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaCategoryItem"
            }
          },
          "x-Errors": {
            "description": "* `CategoryNotExist`: The category you selected does not exist\n* `NameRequired`: The mandatory name field is missing from the request\n* `ChannelDoesNotExist`\n* `ChildCategoryNotExist`: Child category does not exist\n* `ParentIdShouldNotPointToItself`: ParentId should not point to itself\n* `ChildCategoryCannotBeTheCategoryItself`: A child category cannot be the category itself\n* `ChildCategoryAlreadyBelongsToAnotherCategory`: Child Category already belongs to another category\n* `CategoryVersionIsNotDraft`\n* `CategoryIsAlreadyAssociatedToVersion`\n* `StartDateShouldBeLessThanEndDate`\n* `AssetStructDoesNotExist`: The specified asset strcut id does not exist\n* `MetaDoesNotExist`: The specified meta id does not exist\n* `InvalidMetaType`\n* `InvalidValueSentForMeta`\n* `AssetDoesNotExist`\n* `ActionIsNotAllowed`: The action requested is not allowed\n* `RelatedEntitiesExceedLimitation`: Related entities exceed limitation\n* `DeviceRuleDoesNotExistForGroup`\n* `GeoBlockRuleDoesNotExistForGroup`\n* `AssetExternalIdMustBeUnique`"
          }
        },
        "tags": [
          "categoryItem"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id",
          "objectToUpdate"
        ]
      }
    },
    "/service/categorytree/action/duplicate": {
      "post": {
        "description": "Duplicate category Item",
        "operationId": "categoryTree.duplicate",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "categoryItemId": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                }
              },
              "required": [
                "categoryItemId",
                "name"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaCategoryTree"
            }
          },
          "x-Errors": {
            "description": "* `CategoryNotExist`: The category you selected does not exist"
          }
        },
        "tags": [
          "categoryTree"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "categoryItemId",
          "name"
        ]
      }
    },
    "/service/categorytree/action/get": {
      "post": {
        "description": "Retrive category tree.",
        "operationId": "categoryTree.get",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "categoryItemId": {
                  "type": "integer"
                },
                "filter": {
                  "default": false,
                  "type": "boolean"
                }
              },
              "required": [
                "categoryItemId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaCategoryTree"
            }
          },
          "x-Errors": {
            "description": "* `CategoryNotExist`: The category you selected does not exist"
          }
        },
        "tags": [
          "categoryTree"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "categoryItemId",
          "filter"
        ]
      }
    },
    "/service/categorytree/action/getByVersion": {
      "post": {
        "description": "Retrieve default category tree of deviceFamilyId by KS or specific one if versionId is set.",
        "operationId": "categoryTree.getByVersion",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "deviceFamilyId": {
                  "type": "integer"
                },
                "versionId": {
                  "type": "integer"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaCategoryTree"
            }
          },
          "x-Errors": {
            "description": "* `CategoryNotExist`: The category you selected does not exist\n* `CategoryVersionDoesNotExist`"
          }
        },
        "tags": [
          "categoryTree"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "versionId",
          "deviceFamilyId"
        ]
      }
    },
    "/service/categoryversion/action/add": {
      "post": {
        "description": "categoryVersion add",
        "operationId": "categoryVersion.add",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "objectToAdd": {
                  "$ref": "#/definitions/KalturaCategoryVersion"
                }
              },
              "required": [
                "objectToAdd"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaCategoryVersion"
            }
          },
          "x-Errors": {
            "description": "* `CategoryVersionDoesNotExist`\n* `CategoryNotExist`: The category you selected does not exist"
          }
        },
        "tags": [
          "categoryVersion"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "objectToAdd"
        ]
      }
    },
    "/service/categoryversion/action/createTree": {
      "post": {
        "description": "Acreate new tree for this categoryItem",
        "operationId": "categoryVersion.createTree",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "categoryItemId": {
                  "type": "integer"
                },
                "comment": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              },
              "required": [
                "categoryItemId",
                "name",
                "comment"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaCategoryVersion"
            }
          },
          "x-Errors": {
            "description": "* `CategoryIsAlreadyAssociatedToVersionTree`\n* `CategoryIsNotRoot`\n* `CategoryNotExist`: The category you selected does not exist"
          }
        },
        "tags": [
          "categoryVersion"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "categoryItemId",
          "name",
          "comment"
        ]
      }
    },
    "/service/categoryversion/action/delete": {
      "post": {
        "description": "Remove category version",
        "operationId": "categoryVersion.delete",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "x-Errors": {
            "description": "* `CategoryVersionIsNotDraft`\n* `CategoryVersionDoesNotExist`\n* `CategoryNotExist`: The category you selected does not exist\n* `CategoryItemIsRoot`"
          }
        },
        "tags": [
          "categoryVersion"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id"
        ]
      }
    },
    "/service/categoryversion/action/list": {
      "post": {
        "description": "Gets all category versions",
        "operationId": "categoryVersion.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaCategoryVersionFilter"
                },
                "pager": {
                  "$ref": "#/definitions/KalturaFilterPager"
                }
              },
              "required": [
                "filter"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaCategoryVersionListResponse"
            }
          },
          "x-Errors": {
            "description": "* `CategoryTypeNotExist`: Category type does not exist\n* `InvalidValue`: The value specified, such as FullLifeCycle/ ViewLifeCycle, is invalid\n* `CategoryNotExist`: The category you selected does not exist"
          }
        },
        "tags": [
          "categoryVersion"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter",
          "pager"
        ]
      }
    },
    "/service/categoryversion/action/setDefault": {
      "post": {
        "description": "Set new default category version",
        "operationId": "categoryVersion.setDefault",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "force": {
                  "default": false,
                  "type": "boolean"
                },
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "x-Errors": {
            "description": "* `CategoryVersionDoesNotExist`\n* `CategoryVersionIsNotDraft`\n* `CategoryVersionIsOlderThanDefault`"
          }
        },
        "tags": [
          "categoryVersion"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id",
          "force"
        ]
      }
    },
    "/service/categoryversion/action/update": {
      "post": {
        "description": "categoryVersion update",
        "operationId": "categoryVersion.update",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                },
                "objectToUpdate": {
                  "$ref": "#/definitions/KalturaCategoryVersion"
                }
              },
              "required": [
                "id",
                "objectToUpdate"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaCategoryVersion"
            }
          },
          "x-Errors": {
            "description": "* `CategoryVersionDoesNotExist`\n* `CategoryVersionIsNotDraft`"
          }
        },
        "tags": [
          "categoryVersion"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id",
          "objectToUpdate"
        ]
      }
    },
    "/service/cdnadapterprofile/action/add": {
      "post": {
        "description": "Insert new CDN adapter for partner",
        "operationId": "cdnAdapterProfile.add",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "adapter": {
                  "$ref": "#/definitions/KalturaCDNAdapterProfile"
                }
              },
              "required": [
                "adapter"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaCDNAdapterProfile"
            }
          },
          "x-Errors": {
            "description": "* `NameRequired`: The mandatory name field is missing from the request\n* `AdapterUrlRequired`: The mandatory adapter URL field is missing from the request\n* `AliasMustBeUnique`: Invalid entry: the alias value must be unique\n* `AliasRequired`: The mandatory alias value field is missing from the request\n* `NoAdapterToInsert`"
          }
        },
        "tags": [
          "cdnAdapterProfile"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "adapter"
        ]
      }
    },
    "/service/cdnadapterprofile/action/delete": {
      "post": {
        "description": "Delete CDN adapter by CDN adapter id",
        "operationId": "cdnAdapterProfile.delete",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "adapterId": {
                  "type": "integer"
                }
              },
              "required": [
                "adapterId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `AdapterNotExists`: The adapter you're trying to connect doesn't exist\n* `AdapterIdentifierRequired`: The mandatory adapter ID field is missing from the request"
          }
        },
        "tags": [
          "cdnAdapterProfile"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "adapterId"
        ]
      }
    },
    "/service/cdnadapterprofile/action/generateSharedSecret": {
      "post": {
        "description": "Generate CDN adapter shared secret",
        "operationId": "cdnAdapterProfile.generateSharedSecret",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "adapterId": {
                  "type": "integer"
                }
              },
              "required": [
                "adapterId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaCDNAdapterProfile"
            }
          },
          "x-Errors": {
            "description": "* `AdapterNotExists`: The adapter you're trying to connect doesn't exist\n* `AdapterIdentifierRequired`: The mandatory adapter ID field is missing from the request"
          }
        },
        "tags": [
          "cdnAdapterProfile"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "adapterId"
        ]
      }
    },
    "/service/cdnadapterprofile/action/list": {
      "post": {
        "description": "Returns all CDN adapters for partner",
        "operationId": "cdnAdapterProfile.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaCDNAdapterProfileListResponse"
            }
          }
        },
        "tags": [
          "cdnAdapterProfile"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": []
      }
    },
    "/service/cdnadapterprofile/action/update": {
      "post": {
        "description": "Update CDN adapter details",
        "operationId": "cdnAdapterProfile.update",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "adapter": {
                  "$ref": "#/definitions/KalturaCDNAdapterProfile"
                },
                "adapterId": {
                  "type": "integer"
                }
              },
              "required": [
                "adapterId",
                "adapter"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaCDNAdapterProfile"
            }
          },
          "x-Errors": {
            "description": "* `AdapterNotExists`: The adapter you're trying to connect doesn't exist\n* `AdapterIsRequired`\n* `AdapterIdentifierRequired`: The mandatory adapter ID field is missing from the request\n* `NameRequired`: The mandatory name field is missing from the request\n* `AdapterUrlRequired`: The mandatory adapter URL field is missing from the request\n* `AliasMustBeUnique`: Invalid entry: the alias value must be unique\n* `AliasRequired`: The mandatory alias value field is missing from the request"
          }
        },
        "tags": [
          "cdnAdapterProfile"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "adapterId",
          "adapter"
        ]
      }
    },
    "/service/cdnpartnersettings/action/get": {
      "post": {
        "description": "Retrieve the partner’s CDN settings (default adapters)",
        "operationId": "cdnPartnerSettings.get",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaCDNPartnerSettings"
            }
          },
          "x-Errors": {
            "description": "* `CDNPartnerSettingsNotFound`: The system didn't find any CDN partner -related settings for the group account"
          }
        },
        "tags": [
          "cdnPartnerSettings"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": []
      }
    },
    "/service/cdnpartnersettings/action/update": {
      "post": {
        "description": "Configure the partner’s CDN settings (default adapters)",
        "operationId": "cdnPartnerSettings.update",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "settings": {
                  "$ref": "#/definitions/KalturaCDNPartnerSettings"
                }
              },
              "required": [
                "settings"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaCDNPartnerSettings"
            }
          },
          "x-Errors": {
            "description": "* `CDNPartnerSettingsNotFound`: The system didn't find any CDN partner -related settings for the group account\n* `AdapterNotExists`: The adapter you're trying to connect doesn't exist"
          }
        },
        "tags": [
          "cdnPartnerSettings"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "settings"
        ]
      }
    },
    "/service/cdvradapterprofile/action/add": {
      "post": {
        "description": "Insert new C-DVR adapter for partner",
        "operationId": "cDVRAdapterProfile.add",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "adapter": {
                  "$ref": "#/definitions/KalturaCDVRAdapterProfile"
                }
              },
              "required": [
                "adapter"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaCDVRAdapterProfile"
            }
          },
          "x-Errors": {
            "description": "* `NoAdapterToInsert`\n* `NameRequired`: The mandatory name field is missing from the request\n* `AdapterUrlRequired`: The mandatory adapter URL field is missing from the request\n* `ExternalIdentifierRequired`: The mandatory external identifier field is missing from the request.\n* `ExternalIdentifierMustBeUnique`: External identifier must be unique."
          }
        },
        "tags": [
          "cDVRAdapterProfile"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "adapter"
        ]
      }
    },
    "/service/cdvradapterprofile/action/delete": {
      "post": {
        "description": "Delete C-DVR adapter by C-DVR adapter id",
        "operationId": "cDVRAdapterProfile.delete",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "adapterId": {
                  "type": "integer"
                }
              },
              "required": [
                "adapterId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `AdapterNotExists`: The adapter you're trying to connect doesn't exist\n* `AdapterIdentifierRequired`: The mandatory adapter ID field is missing from the request"
          }
        },
        "tags": [
          "cDVRAdapterProfile"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "adapterId"
        ]
      }
    },
    "/service/cdvradapterprofile/action/generateSharedSecret": {
      "post": {
        "description": "Generate C-DVR adapter shared secret",
        "operationId": "cDVRAdapterProfile.generateSharedSecret",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "adapterId": {
                  "type": "integer"
                }
              },
              "required": [
                "adapterId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaCDVRAdapterProfile"
            }
          },
          "x-Errors": {
            "description": "* `AdapterIdentifierRequired`: The mandatory adapter ID field is missing from the request\n* `AdapterNotExists`: The adapter you're trying to connect doesn't exist"
          }
        },
        "tags": [
          "cDVRAdapterProfile"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "adapterId"
        ]
      }
    },
    "/service/cdvradapterprofile/action/list": {
      "post": {
        "description": "Returns all C-DVR adapters for partner",
        "operationId": "cDVRAdapterProfile.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaCDVRAdapterProfileListResponse"
            }
          }
        },
        "tags": [
          "cDVRAdapterProfile"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": []
      }
    },
    "/service/cdvradapterprofile/action/update": {
      "post": {
        "description": "Update C-DVR adapter details",
        "operationId": "cDVRAdapterProfile.update",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "adapter": {
                  "$ref": "#/definitions/KalturaCDVRAdapterProfile"
                },
                "adapterId": {
                  "type": "integer"
                }
              },
              "required": [
                "adapterId",
                "adapter"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaCDVRAdapterProfile"
            }
          },
          "x-Errors": {
            "description": "* `AdapterIsRequired`\n* `NameRequired`: The mandatory name field is missing from the request\n* `AdapterIdentifierRequired`: The mandatory adapter ID field is missing from the request\n* `AdapterUrlRequired`: The mandatory adapter URL field is missing from the request\n* `ExternalIdentifierRequired`: The mandatory external identifier field is missing from the request.\n* `ExternalIdentifierMustBeUnique`: External identifier must be unique.\n* `AdapterNotExists`: The adapter you're trying to connect doesn't exist"
          }
        },
        "tags": [
          "cDVRAdapterProfile"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "adapterId",
          "adapter"
        ]
      }
    },
    "/service/channel/action/add": {
      "post": {
        "description": "Insert new channel for partner. Supports KalturaDynamicChannel or KalturaManualChannel",
        "operationId": "channel.add",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "channel": {
                  "$ref": "#/definitions/KalturaChannel"
                }
              },
              "required": [
                "channel"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaChannel"
            }
          },
          "x-Errors": {
            "description": "* `NoObjectToInsert`: There's no channel to add\n* `NameRequired`: The mandatory name field is missing from the request\n* `ChannelMetaOrderByIsInvalid`\n* `ChannelSystemNameAlreadyInUse`: The channel system name is already in use\n* `AssetDoesNotExist`\n* `InvalidMediaType`: The asset type does not match one of the group asset types\n* `AssetStructDoesNotExist`: The specified asset strcut id does not exist\n* `AccountIsNotOpcSupported`\n* `SyntaxError`: KSQL query string contains a syntax error. It is not in the correct and expected format.\n* `ActionIsNotAllowed`: The action requested is not allowed"
          }
        },
        "tags": [
          "channel"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "channel"
        ]
      }
    },
    "/service/channel/action/delete": {
      "post": {
        "description": "Delete channel by its channel id",
        "operationId": "channel.delete",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "channelId": {
                  "type": "integer"
                }
              },
              "required": [
                "channelId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `NotFound`: @objectType@ not found\n* `IdentifierRequired`: Please specify the channel ID identifier\n* `AccountIsNotOpcSupported`\n* `ActionIsNotAllowed`: The action requested is not allowed"
          }
        },
        "tags": [
          "channel"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "channelId"
        ]
      }
    },
    "/service/channel/action/get": {
      "post": {
        "description": "Returns channel",
        "operationId": "channel.get",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaChannel"
            }
          },
          "x-Errors": {
            "description": "* `NotFound`: @objectType@ not found\n* `ChannelDoesNotExist`\n* `AccountIsNotOpcSupported`\n* `ActionIsNotAllowed`: The action requested is not allowed\n* `ObjectNotExist`: The object requested doesn't exist"
          }
        },
        "tags": [
          "channel"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id"
        ]
      }
    },
    "/service/channel/action/list": {
      "post": {
        "description": "Get the list of tags for the partner",
        "operationId": "channel.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaChannelsBaseFilter"
                },
                "pager": {
                  "$ref": "#/definitions/KalturaFilterPager"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaChannelListResponse"
            }
          },
          "x-Errors": {
            "description": "* `AccountIsNotOpcSupported`\n* `ElasticSearchReturnedDeleteItem`\n* `ActionIsNotAllowed`: The action requested is not allowed\n* `ChannelDoesNotExist`\n* `ObjectNotExist`: The object requested doesn't exist\n* `AssetStructDoesNotExist`: The specified asset strcut id does not exist"
          }
        },
        "tags": [
          "channel"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter",
          "pager"
        ]
      }
    },
    "/service/channel/action/update": {
      "post": {
        "description": "Update channel details. Supports KalturaDynamicChannel or KalturaManualChannel",
        "operationId": "channel.update",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "channel": {
                  "$ref": "#/definitions/KalturaChannel"
                },
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id",
                "channel"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaChannel"
            }
          },
          "x-Errors": {
            "description": "* `ObjectNotExist`: The object requested doesn't exist\n* `NoObjectToInsert`: There's no channel to add\n* `ChannelDoesNotExist`\n* `ChannelSystemNameAlreadyInUse`: The channel system name is already in use\n* `ChannelMetaOrderByIsInvalid`\n* `AssetStructDoesNotExist`: The specified asset strcut id does not exist\n* `AssetDoesNotExist`\n* `InvalidMediaType`: The asset type does not match one of the group asset types\n* `SyntaxError`: KSQL query string contains a syntax error. It is not in the correct and expected format.\n* `AccountIsNotOpcSupported`\n* `ActionIsNotAllowed`: The action requested is not allowed"
          }
        },
        "tags": [
          "channel"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id",
          "channel"
        ]
      }
    },
    "/service/collection/action/add": {
      "post": {
        "description": "Insert new collection for partner",
        "operationId": "collection.add",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "collection": {
                  "$ref": "#/definitions/KalturaCollection"
                }
              },
              "required": [
                "collection"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaCollection"
            }
          },
          "x-Errors": {
            "description": "* `ExternalIdAlreadyExists`: The external ID you are trying to add / update already exists\n* `UsageModuleDoesNotExist`\n* `PriceDetailsDoesNotExist`: The price details doesn't exist in the database\n* `ChannelDoesNotExist`\n* `CouponGroupNotExist`\n* `InvalidDiscountCode`: Invalid discount code: The discount code entered doesn't exist for this account\n* `AccountIsNotOpcSupported`\n* `InvalidFileTypes`: Invalid file type: This file type doesn't exist for this account\n* `AssetUserRuleDoesNotExists`: Asset user rule does not exist"
          }
        },
        "tags": [
          "collection"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "collection"
        ]
      }
    },
    "/service/collection/action/delete": {
      "post": {
        "description": "Delete collection",
        "operationId": "collection.delete",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `CollectionNotExist`: The collection does not exist\n* `AccountIsNotOpcSupported`"
          }
        },
        "tags": [
          "collection"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id"
        ]
      }
    },
    "/service/collection/action/list": {
      "post": {
        "description": "Returns a list of collections requested by Collection IDs or file identifier or coupon group identifier",
        "operationId": "collection.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaCollectionFilter"
                },
                "pager": {
                  "$ref": "#/definitions/KalturaFilterPager"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaCollectionListResponse"
            }
          }
        },
        "tags": [
          "collection"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter",
          "pager"
        ]
      }
    },
    "/service/collection/action/update": {
      "post": {
        "description": "Update Collection",
        "operationId": "collection.update",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "collection": {
                  "$ref": "#/definitions/KalturaCollection"
                },
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id",
                "collection"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaCollection"
            }
          },
          "x-Errors": {
            "description": "* `ExternalIdAlreadyExists`: The external ID you are trying to add / update already exists\n* `UsageModuleDoesNotExist`\n* `PriceDetailsDoesNotExist`: The price details doesn't exist in the database\n* `ChannelDoesNotExist`\n* `CouponGroupNotExist`\n* `InvalidDiscountCode`: Invalid discount code: The discount code entered doesn't exist for this account\n* `AccountIsNotOpcSupported`\n* `StartDateShouldBeLessThanEndDate`\n* `NameRequired`: The mandatory name field is missing from the request\n* `InvalidFileTypes`: Invalid file type: This file type doesn't exist for this account"
          }
        },
        "tags": [
          "collection"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id",
          "collection"
        ]
      }
    },
    "/service/compensation/action/add": {
      "post": {
        "description": "Adds a new compensation for a household for a given number of iterations of a subscription renewal for a fixed amount / percentage of the renewal price.",
        "operationId": "compensation.add",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "compensation": {
                  "$ref": "#/definitions/KalturaCompensation"
                }
              },
              "required": [
                "compensation"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaCompensation"
            }
          },
          "x-Errors": {
            "description": "* `InvalidUser`: The user you selected for this action is not a valid user\n* `DomainSuspended`: Unable to perform the action requested because the household has been suspended\n* `InvalidPurchase`: Unable to complete the purchase of the item requested\n* `SubscriptionNotRenewable`: Unable to perform this action on a subscription that is not renewable\n* `NotEntitled`: The user does not have permission to access this content\n* `CompensationAlreadyExists`\n* `PaymentGatewayExternalVerification`\n* `PaymentGatewayNotValid`: The specified Payment Gateway is not valid.\n* `PaymentGatewayNotExist`: The requested Payment Gateway doesn't exist."
          }
        },
        "tags": [
          "compensation"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "compensation"
        ]
      }
    },
    "/service/compensation/action/delete": {
      "post": {
        "description": "Delete a compensation by identifier",
        "operationId": "compensation.delete",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "x-Errors": {
            "description": "* `CompensationNotFound`"
          }
        },
        "tags": [
          "compensation"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id"
        ]
      }
    },
    "/service/compensation/action/get": {
      "post": {
        "description": "Get a compensation by identifier",
        "operationId": "compensation.get",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaCompensation"
            }
          },
          "x-Errors": {
            "description": "* `CompensationNotFound`"
          }
        },
        "tags": [
          "compensation"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id"
        ]
      }
    },
    "/service/configurationgroup/action/add": {
      "post": {
        "description": "Add a new configuration group",
        "operationId": "configurationGroup.add",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "configurationGroup": {
                  "$ref": "#/definitions/KalturaConfigurationGroup"
                }
              },
              "required": [
                "configurationGroup"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaConfigurationGroup"
            }
          },
          "x-Errors": {
            "description": "* `Forbidden`\n* `IllegalQueryParams`\n* `IllegalPostData`"
          }
        },
        "tags": [
          "configurationGroup"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "configurationGroup"
        ]
      }
    },
    "/service/configurationgroup/action/delete": {
      "post": {
        "description": "Remove a configuration group, including its tags, device configurations and devices associations",
        "operationId": "configurationGroup.delete",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "string"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `Forbidden`\n* `IllegalQueryParams`\n* `NotExist`\n* `PartnerMismatch`"
          }
        },
        "tags": [
          "configurationGroup"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id"
        ]
      }
    },
    "/service/configurationgroup/action/get": {
      "post": {
        "description": "Return the configuration group details, including group identifiers, tags, and number of associated devices, and list of device configuration",
        "operationId": "configurationGroup.get",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "string"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaConfigurationGroup"
            }
          },
          "x-Errors": {
            "description": "* `Forbidden`\n* `IllegalQueryParams`\n* `NotExist`\n* `PartnerMismatch`"
          }
        },
        "tags": [
          "configurationGroup"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id"
        ]
      }
    },
    "/service/configurationgroup/action/list": {
      "post": {
        "description": "Return the list of configuration groups",
        "operationId": "configurationGroup.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaConfigurationGroupListResponse"
            }
          },
          "x-Errors": {
            "description": "* `Forbidden`\n* `IllegalQueryParams`"
          }
        },
        "tags": [
          "configurationGroup"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": []
      }
    },
    "/service/configurationgroup/action/update": {
      "post": {
        "description": "Update configuration group name",
        "operationId": "configurationGroup.update",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "configurationGroup": {
                  "$ref": "#/definitions/KalturaConfigurationGroup"
                },
                "id": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "configurationGroup"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaConfigurationGroup"
            }
          },
          "x-Errors": {
            "description": "* `Forbidden`\n* `IllegalQueryParams`\n* `NotExist`\n* `IllegalPostData`"
          }
        },
        "tags": [
          "configurationGroup"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id",
          "configurationGroup"
        ]
      }
    },
    "/service/configurationgroupdevice/action/add": {
      "post": {
        "description": "Associate a collection of devices to a configuration group. If a device is already associated to another group – old association is replaced",
        "operationId": "configurationGroupDevice.add",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "configurationGroupDevice": {
                  "$ref": "#/definitions/KalturaConfigurationGroupDevice"
                }
              },
              "required": [
                "configurationGroupDevice"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `Forbidden`\n* `IllegalQueryParams`\n* `IllegalPostData`\n* `NotExist`"
          }
        },
        "tags": [
          "configurationGroupDevice"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "configurationGroupDevice"
        ]
      }
    },
    "/service/configurationgroupdevice/action/delete": {
      "post": {
        "description": "Remove a device association",
        "operationId": "configurationGroupDevice.delete",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "udid": {
                  "type": "string"
                }
              },
              "required": [
                "udid"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `Forbidden`\n* `IllegalQueryParams`\n* `NotExist`"
          }
        },
        "tags": [
          "configurationGroupDevice"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "udid"
        ]
      }
    },
    "/service/configurationgroupdevice/action/get": {
      "post": {
        "description": "Return the configuration group to which a specific device is associated to",
        "operationId": "configurationGroupDevice.get",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "udid": {
                  "type": "string"
                }
              },
              "required": [
                "udid"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaConfigurationGroupDevice"
            }
          },
          "x-Errors": {
            "description": "* `Forbidden`\n* `IllegalQueryParams`\n* `NotExist`\n* `PartnerMismatch`"
          }
        },
        "tags": [
          "configurationGroupDevice"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "udid"
        ]
      }
    },
    "/service/configurationgroupdevice/action/list": {
      "post": {
        "description": "Return the list of associated devices for a given configuration group",
        "operationId": "configurationGroupDevice.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaConfigurationGroupDeviceFilter"
                },
                "pager": {
                  "$ref": "#/definitions/KalturaFilterPager"
                }
              },
              "required": [
                "filter"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaConfigurationGroupDeviceListResponse"
            }
          },
          "x-Errors": {
            "description": "* `Forbidden`\n* `IllegalQueryParams`"
          }
        },
        "tags": [
          "configurationGroupDevice"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter",
          "pager"
        ]
      }
    },
    "/service/configurationgrouptag/action/add": {
      "post": {
        "description": "Add a new tag to a configuration group. If this tag is already associated to another group, request fails",
        "operationId": "configurationGroupTag.add",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "configurationGroupTag": {
                  "$ref": "#/definitions/KalturaConfigurationGroupTag"
                }
              },
              "required": [
                "configurationGroupTag"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaConfigurationGroupTag"
            }
          },
          "x-Errors": {
            "description": "* `Forbidden`\n* `IllegalQueryParams`\n* `AlreadyExist`\n* `NotExist`"
          }
        },
        "tags": [
          "configurationGroupTag"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "configurationGroupTag"
        ]
      }
    },
    "/service/configurationgrouptag/action/delete": {
      "post": {
        "description": "Remove a tag association from configuration group",
        "operationId": "configurationGroupTag.delete",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "tag": {
                  "type": "string"
                }
              },
              "required": [
                "tag"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `Forbidden`\n* `IllegalQueryParams`\n* `NotExist`"
          }
        },
        "tags": [
          "configurationGroupTag"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "tag"
        ]
      }
    },
    "/service/configurationgrouptag/action/get": {
      "post": {
        "description": "Return the configuration group the tag is associated to",
        "operationId": "configurationGroupTag.get",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "tag": {
                  "type": "string"
                }
              },
              "required": [
                "tag"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaConfigurationGroupTag"
            }
          },
          "x-Errors": {
            "description": "* `Forbidden`\n* `IllegalQueryParams`\n* `NotExist`\n* `PartnerMismatch`"
          }
        },
        "tags": [
          "configurationGroupTag"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "tag"
        ]
      }
    },
    "/service/configurationgrouptag/action/list": {
      "post": {
        "description": "Return list of tags for a configuration group",
        "operationId": "configurationGroupTag.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaConfigurationGroupTagFilter"
                }
              },
              "required": [
                "filter"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaConfigurationGroupTagListResponse"
            }
          },
          "x-Errors": {
            "description": "* `Forbidden`\n* `IllegalQueryParams`"
          }
        },
        "tags": [
          "configurationGroupTag"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter"
        ]
      }
    },
    "/service/configurations/action/add": {
      "post": {
        "description": "Add a new device configuration to a configuration group",
        "operationId": "configurations.add",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "configurations": {
                  "$ref": "#/definitions/KalturaConfigurations"
                }
              },
              "required": [
                "configurations"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaConfigurations"
            }
          },
          "x-Errors": {
            "description": "* `Forbidden`\n* `IllegalQueryParams`\n* `IllegalPostData`\n* `AlreadyExist`"
          }
        },
        "tags": [
          "configurations"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "configurations"
        ]
      }
    },
    "/service/configurations/action/delete": {
      "post": {
        "description": "Delete a device configuration",
        "operationId": "configurations.delete",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "string"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `Forbidden`\n* `IllegalQueryParams`\n* `NotExist`\n* `PartnerMismatch`"
          }
        },
        "tags": [
          "configurations"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id"
        ]
      }
    },
    "/service/configurations/action/get": {
      "post": {
        "description": "Return the device configuration",
        "operationId": "configurations.get",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "string"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaConfigurations"
            }
          },
          "x-Errors": {
            "description": "* `Forbidden`\n* `IllegalQueryParams`\n* `NotExist`\n* `PartnerMismatch`"
          }
        },
        "tags": [
          "configurations"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id"
        ]
      }
    },
    "/service/configurations/action/list": {
      "post": {
        "description": "Return a list of device configurations of a configuration group",
        "operationId": "configurations.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaConfigurationsFilter"
                }
              },
              "required": [
                "filter"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaConfigurationsListResponse"
            }
          },
          "x-Errors": {
            "description": "* `Forbidden`\n* `IllegalQueryParams`"
          }
        },
        "tags": [
          "configurations"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter"
        ]
      }
    },
    "/service/configurations/action/serveByDevice": {
      "post": {
        "description": "Return a device configuration applicable for a specific device (UDID), app name, software version, platform and optionally a configuration group’s tag",
        "operationId": "configurations.serveByDevice",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "applicationName": {
                  "type": "string"
                },
                "clientVersion": {
                  "type": "string"
                },
                "partnerId": {
                  "default": 0,
                  "type": "integer"
                },
                "platform": {
                  "type": "string"
                },
                "tag": {
                  "type": "string"
                },
                "udid": {
                  "type": "string"
                }
              },
              "required": [
                "applicationName",
                "clientVersion",
                "platform",
                "udid",
                "tag"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "x-Errors": {
            "description": "* `MissingConfiguration`: Missing configuration [@configuration@]\n* `IllegalQueryParams`\n* `VersionNotFound`\n* `Forbidden`\n* `IllegalPostData`"
          }
        },
        "tags": [
          "configurations"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "applicationName",
          "clientVersion",
          "platform",
          "udid",
          "tag",
          "partnerId"
        ]
      }
    },
    "/service/configurations/action/update": {
      "post": {
        "description": "Update device configuration",
        "operationId": "configurations.update",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "configurations": {
                  "$ref": "#/definitions/KalturaConfigurations"
                },
                "id": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "configurations"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaConfigurations"
            }
          },
          "x-Errors": {
            "description": "* `Forbidden`\n* `IllegalQueryParams`\n* `NotExist`\n* `IllegalPostData`\n* `PartnerMismatch`\n* `AlreadyExist`"
          }
        },
        "tags": [
          "configurations"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id",
          "configurations"
        ]
      }
    },
    "/service/country/action/list": {
      "post": {
        "description": "Get the list of countries for the partner with option to filter by countries identifiers",
        "operationId": "country.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaCountryFilter"
                }
              },
              "required": [
                "filter"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaCountryListResponse"
            }
          },
          "x-Errors": {
            "description": "* `CountryNotFound`: Unable to find the country code specified"
          }
        },
        "tags": [
          "country"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter"
        ]
      }
    },
    "/service/coupon/action/get": {
      "post": {
        "description": "Returns information about a coupon",
        "operationId": "coupon.get",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "code": {
                  "type": "string"
                }
              },
              "required": [
                "code"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaCoupon"
            }
          },
          "x-Errors": {
            "description": "* `CouponNotValid`: The coupon you entered is not valid"
          }
        },
        "tags": [
          "coupon"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "code"
        ]
      }
    },
    "/service/couponsgroup/action/add": {
      "post": {
        "description": "Add coupons group",
        "operationId": "couponsGroup.add",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "couponsGroup": {
                  "$ref": "#/definitions/KalturaCouponsGroup"
                }
              },
              "required": [
                "couponsGroup"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaCouponsGroup"
            }
          },
          "x-Errors": {
            "description": "* `NameRequired`: The mandatory name field is missing from the request\n* `DiscountCodeNotExist`"
          }
        },
        "tags": [
          "couponsGroup"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "couponsGroup"
        ]
      }
    },
    "/service/couponsgroup/action/delete": {
      "post": {
        "description": "Delete a coupons group",
        "operationId": "couponsGroup.delete",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `CouponGroupNotExist`"
          }
        },
        "tags": [
          "couponsGroup"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id"
        ]
      }
    },
    "/service/couponsgroup/action/generate": {
      "post": {
        "description": "Generate a coupon",
        "operationId": "couponsGroup.generate",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "couponGenerationOptions": {
                  "$ref": "#/definitions/KalturaCouponGenerationOptions"
                },
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id",
                "couponGenerationOptions"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaStringValueArray"
            }
          },
          "x-Errors": {
            "description": "* `InvalidCouponGroup`: Invalid coupon group: The coupon group specified doesn't exist in this account\n* `CouponCodeAlreadyExists`\n* `CouponCodeNotInTheRightLength`"
          }
        },
        "tags": [
          "couponsGroup"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id",
          "couponGenerationOptions"
        ]
      }
    },
    "/service/couponsgroup/action/get": {
      "post": {
        "description": "Returns information about coupons group",
        "operationId": "couponsGroup.get",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaCouponsGroup"
            }
          },
          "x-Errors": {
            "description": "* `CouponGroupNotExist`"
          }
        },
        "tags": [
          "couponsGroup"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id"
        ]
      }
    },
    "/service/couponsgroup/action/list": {
      "post": {
        "description": "Returns information about partner coupons groups",
        "operationId": "couponsGroup.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaCouponsGroupListResponse"
            }
          }
        },
        "tags": [
          "couponsGroup"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": []
      }
    },
    "/service/couponsgroup/action/update": {
      "post": {
        "description": "Update coupons group",
        "operationId": "couponsGroup.update",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "couponsGroup": {
                  "$ref": "#/definitions/KalturaCouponsGroup"
                },
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id",
                "couponsGroup"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaCouponsGroup"
            }
          },
          "x-Errors": {
            "description": "* `CouponGroupNotExist`\n* `DiscountCodeNotExist`"
          }
        },
        "tags": [
          "couponsGroup"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id",
          "couponsGroup"
        ]
      }
    },
    "/service/currency/action/list": {
      "post": {
        "description": "Get the list of currencies for the partner with option to filter by currency codes",
        "operationId": "currency.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaCurrencyFilter"
                }
              },
              "required": [
                "filter"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaCurrencyListResponse"
            }
          }
        },
        "tags": [
          "currency"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter"
        ]
      }
    },
    "/service/devicebrand/action/add": {
      "post": {
        "description": "Adds a new device brand which belongs to a specific group.",
        "operationId": "deviceBrand.add",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "deviceBrand": {
                  "$ref": "#/definitions/KalturaDeviceBrand"
                }
              },
              "required": [
                "deviceBrand"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaDeviceBrand"
            }
          },
          "x-Errors": {
            "description": "* `DeviceFamilyDoesNotExist`\n* `DeviceBrandIdAlreadyInUse`"
          }
        },
        "tags": [
          "deviceBrand"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "deviceBrand"
        ]
      }
    },
    "/service/devicebrand/action/list": {
      "post": {
        "description": "Return a list of the available device brands.",
        "operationId": "deviceBrand.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaDeviceBrandFilter"
                },
                "pager": {
                  "$ref": "#/definitions/KalturaFilterPager"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaDeviceBrandListResponse"
            }
          }
        },
        "tags": [
          "deviceBrand"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter",
          "pager"
        ]
      }
    },
    "/service/devicebrand/action/update": {
      "post": {
        "description": "Updates an existing device brand which belongs to a specific group.",
        "operationId": "deviceBrand.update",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "deviceBrand": {
                  "$ref": "#/definitions/KalturaDeviceBrand"
                },
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id",
                "deviceBrand"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaDeviceBrand"
            }
          },
          "x-Errors": {
            "description": "* `DeviceFamilyDoesNotExist`\n* `DeviceBrandDoesNotExist`"
          }
        },
        "tags": [
          "deviceBrand"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id",
          "deviceBrand"
        ]
      }
    },
    "/service/devicefamily/action/add": {
      "post": {
        "description": "Adds a new device family which belongs to a specific group.",
        "operationId": "deviceFamily.add",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "deviceFamily": {
                  "$ref": "#/definitions/KalturaDeviceFamily"
                }
              },
              "required": [
                "deviceFamily"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaDeviceFamily"
            }
          },
          "x-Errors": {
            "description": "* `DeviceFamilyIdAlreadyInUse`"
          }
        },
        "tags": [
          "deviceFamily"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "deviceFamily"
        ]
      }
    },
    "/service/devicefamily/action/list": {
      "post": {
        "description": "Return a list of the available device families.",
        "operationId": "deviceFamily.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaDeviceFamilyFilter"
                },
                "pager": {
                  "$ref": "#/definitions/KalturaFilterPager"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaDeviceFamilyListResponse"
            }
          }
        },
        "tags": [
          "deviceFamily"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter",
          "pager"
        ]
      }
    },
    "/service/devicefamily/action/update": {
      "post": {
        "description": "Updates an existing device family which belongs to a specific group.",
        "operationId": "deviceFamily.update",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "deviceFamily": {
                  "$ref": "#/definitions/KalturaDeviceFamily"
                },
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id",
                "deviceFamily"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaDeviceFamily"
            }
          },
          "x-Errors": {
            "description": "* `DeviceFamilyDoesNotExist`"
          }
        },
        "tags": [
          "deviceFamily"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id",
          "deviceFamily"
        ]
      }
    },
    "/service/devicereferencedata/action/add": {
      "post": {
        "description": "add DeviceReferenceData",
        "operationId": "deviceReferenceData.add",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "objectToAdd": {
                  "$ref": "#/definitions/KalturaDeviceReferenceData"
                }
              },
              "required": [
                "objectToAdd"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaDeviceReferenceData"
            }
          },
          "x-Errors": {
            "description": "* `AlreadyExist`"
          }
        },
        "tags": [
          "deviceReferenceData"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "objectToAdd"
        ]
      }
    },
    "/service/devicereferencedata/action/delete": {
      "post": {
        "description": "Delete existing DeviceReferenceData",
        "operationId": "deviceReferenceData.delete",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "deviceReferenceData"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id"
        ]
      }
    },
    "/service/devicereferencedata/action/list": {
      "post": {
        "description": "Returns the list of available DeviceReferenceData",
        "operationId": "deviceReferenceData.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaDeviceReferenceDataFilter"
                },
                "pager": {
                  "$ref": "#/definitions/KalturaFilterPager"
                }
              },
              "required": [
                "filter"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaDeviceReferenceDataListResponse"
            }
          }
        },
        "tags": [
          "deviceReferenceData"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter",
          "pager"
        ]
      }
    },
    "/service/devicereferencedata/action/update": {
      "post": {
        "description": "Update existing DeviceReferenceData",
        "operationId": "deviceReferenceData.update",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                },
                "objectToUpdate": {
                  "$ref": "#/definitions/KalturaDeviceReferenceData"
                }
              },
              "required": [
                "id",
                "objectToUpdate"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaDeviceReferenceData"
            }
          }
        },
        "tags": [
          "deviceReferenceData"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id",
          "objectToUpdate"
        ]
      }
    },
    "/service/discountdetails/action/add": {
      "post": {
        "description": "Internal API !!! Insert new DiscountDetails for partner",
        "operationId": "discountDetails.add",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "discountDetails": {
                  "$ref": "#/definitions/KalturaDiscountDetails"
                }
              },
              "required": [
                "discountDetails"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaDiscountDetails"
            }
          },
          "x-Errors": {
            "description": "* `InvalidCurrency`: Invalid currency: The currency specified is not configured for this account\n* `CountryNotFound`: Unable to find the country code specified\n* `AccountIsNotOpcSupported`"
          }
        },
        "tags": [
          "discountDetails"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "discountDetails"
        ]
      }
    },
    "/service/discountdetails/action/delete": {
      "post": {
        "description": "Internal API !!! Delete DiscountDetails",
        "operationId": "discountDetails.delete",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `DiscountCodeNotExist`\n* `AccountIsNotOpcSupported`"
          }
        },
        "tags": [
          "discountDetails"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id"
        ]
      }
    },
    "/service/discountdetails/action/list": {
      "post": {
        "description": "Returns the list of available discounts details, can be filtered by discount codes",
        "operationId": "discountDetails.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaDiscountDetailsFilter"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaDiscountDetailsListResponse"
            }
          },
          "x-Errors": {
            "description": "* `InvalidCurrency`: Invalid currency: The currency specified is not configured for this account"
          }
        },
        "tags": [
          "discountDetails"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter"
        ]
      }
    },
    "/service/discountdetails/action/update": {
      "post": {
        "description": "Update discount details",
        "operationId": "discountDetails.update",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "discountDetails": {
                  "$ref": "#/definitions/KalturaDiscountDetails"
                },
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id",
                "discountDetails"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaDiscountDetails"
            }
          },
          "x-Errors": {
            "description": "* `DiscountCodeNotExist`\n* `InvalidCurrency`: Invalid currency: The currency specified is not configured for this account\n* `CountryNotFound`: Unable to find the country code specified\n* `AccountIsNotOpcSupported`"
          }
        },
        "tags": [
          "discountDetails"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id",
          "discountDetails"
        ]
      }
    },
    "/service/drmprofile/action/add": {
      "post": {
        "description": "Internal API !!! Insert new DrmProfile",
        "operationId": "drmProfile.add",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "drmProfile": {
                  "$ref": "#/definitions/KalturaDrmProfile"
                }
              },
              "required": [
                "drmProfile"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaDrmProfile"
            }
          }
        },
        "tags": [
          "drmProfile"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "drmProfile"
        ]
      }
    },
    "/service/drmprofile/action/delete": {
      "post": {
        "description": "Internal API !!! Delete DrmProfile",
        "operationId": "drmProfile.delete",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `DrmAdapterNotExist`"
          }
        },
        "tags": [
          "drmProfile"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id"
        ]
      }
    },
    "/service/drmprofile/action/list": {
      "post": {
        "description": "Returns all DRM adapters for partner",
        "operationId": "drmProfile.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaDrmProfileListResponse"
            }
          }
        },
        "tags": [
          "drmProfile"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": []
      }
    },
    "/service/duration/action/list": {
      "post": {
        "description": "Get the list of optinal Duration codes",
        "operationId": "duration.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaDurationListResponse"
            }
          }
        },
        "tags": [
          "duration"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": []
      }
    },
    "/service/dynamiclist/action/add": {
      "post": {
        "description": "Add new KalturaDynamicList",
        "operationId": "dynamicList.add",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "objectToAdd": {
                  "$ref": "#/definitions/KalturaDynamicList"
                }
              },
              "required": [
                "objectToAdd"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaDynamicList"
            }
          },
          "x-Errors": {
            "description": "* `ExceededMaxCapacity`"
          }
        },
        "tags": [
          "dynamicList"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "objectToAdd"
        ]
      }
    },
    "/service/dynamiclist/action/addFromBulkUpload": {
      "post": {
        "description": "Add new bulk upload batch job Conversion profile id can be specified in the API.",
        "operationId": "dynamicList.addFromBulkUpload",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "fileData",
            "in": "formData",
            "name": "fileData",
            "required": true,
            "type": "file"
          },
          {
            "$ref": "#/parameters/KalturaBulkUploadExcelJobData:jobData[objectType]"
          },
          {
            "$ref": "#/parameters/KalturaBulkUploadDynamicListData:bulkUploadData[objectType]"
          },
          {
            "$ref": "#/parameters/KalturaBulkUploadDynamicListData:bulkUploadData[dynamicListId]"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaBulkUpload"
            }
          },
          "x-Errors": {
            "description": "* `FileDoesNotExists`: The file does not exist in a given path\n* `FileAlreadyExists`: The file already exists in a given path\n* `ErrorSavingFile`: Error occurred while saving file to File Server\n* `FileIdNotInCorrectLength`: The file ID is not the correct length\n* `InvalidFileType`: The file type provided is invalid\n* `EnqueueFailed`: Enqueue object to Celery queue failed\n* `BulkUploadDoesNotExist`: BulkUpload Does Not Exist\n* `AccountEpgIngestVersionDoesNotSupportBulk`: Account Epg Ingest Version does not support ingest using bulk upload\n* `FileExceededMaxSize`: File Exceeded Max Size\n* `FileExtensionNotSupported`: File Extension Not Supported\n* `FileMimeDifferentThanExpected`: File Mime Different Than Expected\n* `DynamicListDoesNotExist`"
          }
        },
        "tags": [
          "dynamicList"
        ],
        "x-kaltura-format": "file",
        "x-kaltura-parameters": [
          "fileData",
          "jobData",
          "bulkUploadData"
        ],
        "x-parameterGroups": [
          {
            "description": "Object Type: `KalturaBulkUploadExcelJobData`",
            "name": "jobData",
            "schema": {
              "$ref": "#/definitions/KalturaBulkUploadExcelJobData"
            },
            "subGroups": []
          },
          {
            "description": "Object Type: `KalturaBulkUploadDynamicListData`",
            "name": "bulkUploadData",
            "schema": {
              "$ref": "#/definitions/KalturaBulkUploadDynamicListData"
            },
            "subGroups": []
          }
        ]
      }
    },
    "/service/dynamiclist/action/delete": {
      "post": {
        "description": "Delete existing DynamicList",
        "operationId": "dynamicList.delete",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "x-Errors": {
            "description": "* `DynamicListDoesNotExist`"
          }
        },
        "tags": [
          "dynamicList"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id"
        ]
      }
    },
    "/service/dynamiclist/action/list": {
      "post": {
        "description": "Returns the list of available DynamicList",
        "operationId": "dynamicList.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaDynamicListFilter"
                },
                "pager": {
                  "$ref": "#/definitions/KalturaFilterPager"
                }
              },
              "required": [
                "filter"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaDynamicListListResponse"
            }
          }
        },
        "tags": [
          "dynamicList"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter",
          "pager"
        ]
      }
    },
    "/service/dynamiclist/action/update": {
      "post": {
        "description": "Update existing KalturaDynamicList",
        "operationId": "dynamicList.update",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                },
                "objectToUpdate": {
                  "$ref": "#/definitions/KalturaDynamicList"
                }
              },
              "required": [
                "id",
                "objectToUpdate"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaDynamicList"
            }
          },
          "x-Errors": {
            "description": "* `DynamicListDoesNotExist`"
          }
        },
        "tags": [
          "dynamicList"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id",
          "objectToUpdate"
        ]
      }
    },
    "/service/email/action/send": {
      "post": {
        "description": "Sends email notification",
        "operationId": "email.send",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "emailMessage": {
                  "$ref": "#/definitions/KalturaEmailMessage"
                }
              },
              "required": [
                "emailMessage"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          }
        },
        "tags": [
          "email"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "emailMessage"
        ]
      }
    },
    "/service/engagement/action/add": {
      "post": {
        "description": "Insert new Engagement for partner",
        "operationId": "engagement.add",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "engagement": {
                  "$ref": "#/definitions/KalturaEngagement"
                }
              },
              "required": [
                "engagement"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaEngagement"
            }
          },
          "x-Errors": {
            "description": "* `NoEngagementToInsert`\n* `IllegalPostData`\n* `EngagementTimeDifference`\n* `EngagementIllegalSendTime`\n* `FutureScheduledEngagementDetected`\n* `EngagementScheduleWithoutAdapter`\n* `EngagementTemplateNotFound`\n* `InvalidCouponGroup`: Invalid coupon group: The coupon group specified doesn't exist in this account\n* `EngagementAdapterNotExist`"
          }
        },
        "tags": [
          "engagement"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "engagement"
        ]
      }
    },
    "/service/engagement/action/delete": {
      "post": {
        "description": "Delete engagement by engagement adapter id",
        "operationId": "engagement.delete",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `EngagementNotExist`"
          }
        },
        "tags": [
          "engagement"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id"
        ]
      }
    },
    "/service/engagement/action/get": {
      "post": {
        "description": "Return engagement",
        "operationId": "engagement.get",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaEngagement"
            }
          },
          "x-Errors": {
            "description": "* `EngagementAdapterNotExist`"
          }
        },
        "tags": [
          "engagement"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id"
        ]
      }
    },
    "/service/engagement/action/list": {
      "post": {
        "description": "Returns all Engagement for partner",
        "operationId": "engagement.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaEngagementFilter"
                }
              },
              "required": [
                "filter"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaEngagementListResponse"
            }
          }
        },
        "tags": [
          "engagement"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter"
        ]
      }
    },
    "/service/engagementadapter/action/add": {
      "post": {
        "description": "Insert new Engagement adapter for partner",
        "operationId": "engagementAdapter.add",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "engagementAdapter": {
                  "$ref": "#/definitions/KalturaEngagementAdapter"
                }
              },
              "required": [
                "engagementAdapter"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaEngagementAdapter"
            }
          },
          "x-Errors": {
            "description": "* `NoEngagementAdapterToInsert`\n* `NameRequired`: The mandatory name field is missing from the request\n* `ProviderUrlRequired`\n* `AdapterUrlRequired`: The mandatory adapter URL field is missing from the request"
          }
        },
        "tags": [
          "engagementAdapter"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "engagementAdapter"
        ]
      }
    },
    "/service/engagementadapter/action/delete": {
      "post": {
        "description": "Delete Engagement adapter by Engagement adapter id",
        "operationId": "engagementAdapter.delete",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `EngagementAdapterIdentifierRequired`\n* `EngagementAdapterNotExist`"
          }
        },
        "tags": [
          "engagementAdapter"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id"
        ]
      }
    },
    "/service/engagementadapter/action/generateSharedSecret": {
      "post": {
        "description": "Generate engagement adapter shared secret",
        "operationId": "engagementAdapter.generateSharedSecret",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaEngagementAdapter"
            }
          },
          "x-Errors": {
            "description": "* `EngagementAdapterIdentifierRequired`\n* `EngagementAdapterNotExist`"
          }
        },
        "tags": [
          "engagementAdapter"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id"
        ]
      }
    },
    "/service/engagementadapter/action/get": {
      "post": {
        "description": "Returns all Engagement adapters for partner : id + name",
        "operationId": "engagementAdapter.get",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaEngagementAdapter"
            }
          },
          "x-Errors": {
            "description": "* `EngagementAdapterNotExist`"
          }
        },
        "tags": [
          "engagementAdapter"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id"
        ]
      }
    },
    "/service/engagementadapter/action/list": {
      "post": {
        "description": "Returns all Engagement adapters for partner : id + name",
        "operationId": "engagementAdapter.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaEngagementAdapterListResponse"
            }
          }
        },
        "tags": [
          "engagementAdapter"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": []
      }
    },
    "/service/engagementadapter/action/update": {
      "post": {
        "description": "Update Engagement adapter details",
        "operationId": "engagementAdapter.update",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "engagementAdapter": {
                  "$ref": "#/definitions/KalturaEngagementAdapter"
                },
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id",
                "engagementAdapter"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaEngagementAdapter"
            }
          },
          "x-Errors": {
            "description": "* `EngagementAdapterIdentifierRequired`\n* `NoEngagementAdapterToUpdate`\n* `NameRequired`: The mandatory name field is missing from the request\n* `ProviderUrlRequired`\n* `AdapterUrlRequired`: The mandatory adapter URL field is missing from the request\n* `EngagementAdapterNotExist`"
          }
        },
        "tags": [
          "engagementAdapter"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id",
          "engagementAdapter"
        ]
      }
    },
    "/service/entitlement/action/applyCoupon": {
      "post": {
        "description": "Apply new coupon for existing subscription",
        "operationId": "entitlement.applyCoupon",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "couponCode": {
                  "type": "string"
                },
                "purchaseId": {
                  "type": "integer"
                }
              },
              "required": [
                "purchaseId",
                "couponCode"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "x-Errors": {
            "description": "* `InvalidPurchase`: Unable to complete the purchase of the item requested\n* `SubscriptionNotRenewable`: Unable to perform this action on a subscription that is not renewable\n* `SubscriptionDoesNotExist`: The subscription does not exist\n* `CouponNotValid`: The coupon you entered is not valid\n* `OtherCouponIsAlreadyAppliedForSubscription`: Other coupon is already applied for subscription\n* `CampaignIsAlreadyAppliedForSubscription`: Campaign is already applied for subscription"
          }
        },
        "tags": [
          "entitlement"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "purchaseId",
          "couponCode"
        ]
      }
    },
    "/service/entitlement/action/cancel": {
      "post": {
        "description": "Immediately cancel a subscription, PPV, collection or programAssetGroupOffer. Cancel is possible only if within cancellation window and content not already consumed",
        "operationId": "entitlement.cancel",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "assetId": {
                  "type": "integer"
                },
                "productType": {
                  "enum": [
                    "ppv",
                    "subscription",
                    "collection",
                    "programAssetGroupOffer"
                  ],
                  "type": "string",
                  "x-enumLabels": [
                    "PPV",
                    "SUBSCRIPTION",
                    "COLLECTION",
                    "PROGRAMASSETGROUPOFFER"
                  ],
                  "x-enumType": "KalturaTransactionType"
                }
              },
              "required": [
                "assetId",
                "productType"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `HouseholdForbidden`: Household [@household@] forbidden\n* `DomainNotExists`: The household you selected does not exist\n* `DomainSuspended`: Unable to perform the action requested because the household has been suspended\n* `InvalidPurchase`: Unable to complete the purchase of the item requested\n* `CancelationWindowPeriodExpired`: Unable to cancel the product request because the cancellation window has expired.\n* `ContentAlreadyConsumed`: Unable to complete this request - content cannot be cancelled after being viewed.\n* `CanNotCancelSubscriptionWhileDowngradeIsPending`\n* `SubscriptionCancellationIsBlocked`\n* `PaymentGatewayNotExist`: The requested Payment Gateway doesn't exist.\n* `PaymentGatewayExternalVerification`\n* `PaymentGatewayNotValid`: The specified Payment Gateway is not valid.\n* `ActionBlocked`: Blocked by segment."
          }
        },
        "tags": [
          "entitlement"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "assetId",
          "productType"
        ]
      }
    },
    "/service/entitlement/action/cancelRenewal": {
      "post": {
        "description": "Cancel a household service subscription at the next renewal. The subscription stays valid till the next renewal.",
        "operationId": "entitlement.cancelRenewal",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "subscriptionId": {
                  "type": "string"
                }
              },
              "required": [
                "subscriptionId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "x-Errors": {
            "description": "* `HouseholdForbidden`: Household [@household@] forbidden\n* `DomainNotExists`: The household you selected does not exist\n* `DomainSuspended`: Unable to perform the action requested because the household has been suspended\n* `InvalidPurchase`: Unable to complete the purchase of the item requested\n* `SubscriptionNotRenewable`: Unable to perform this action on a subscription that is not renewable\n* `CanNotCancelSubscriptionRenewalWhileDowngradeIsPending`\n* `SubscriptionCancellationIsBlocked`\n* `SubscriptionSetDoesNotExist`: The subscriptionSet does not exist\n* `ActionBlocked`: Blocked by segment."
          }
        },
        "tags": [
          "entitlement"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "subscriptionId"
        ]
      }
    },
    "/service/entitlement/action/cancelScheduledSubscription": {
      "post": {
        "description": "Cancel Scheduled Subscription",
        "operationId": "entitlement.cancelScheduledSubscription",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "scheduledSubscriptionId": {
                  "type": "integer"
                }
              },
              "required": [
                "scheduledSubscriptionId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `ScheduledSubscriptionNotFound`\n* `SubscriptionCancellationIsBlocked`"
          }
        },
        "tags": [
          "entitlement"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "scheduledSubscriptionId"
        ]
      }
    },
    "/service/entitlement/action/externalReconcile": {
      "post": {
        "description": "Reconcile the user household&#39;s entitlements with an external entitlements source. This request is frequency protected to avoid too frequent calls per household.",
        "operationId": "entitlement.externalReconcile",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `UserNotInDomain`: The user you selected is not part of the current household\n* `UserDoesNotExist`: This user doesn't exist\n* `UserSuspended`: Unable to perform this action due to a household suspension\n* `ReconciliationFrequencyLimitation`\n* `AdapterAppFailure`: The adapter failed to complete the request.\n* `OSSAdapterNotExist`: The requested OSS adapter doesn't exist"
          }
        },
        "tags": [
          "entitlement"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": []
      }
    },
    "/service/entitlement/action/forceCancel": {
      "post": {
        "description": "Immediately cancel a subscription, PPV, collection or programAssetGroupOffer. Cancel applies regardless of cancellation window and content consumption status",
        "operationId": "entitlement.forceCancel",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "assetId": {
                  "type": "integer"
                },
                "productType": {
                  "enum": [
                    "ppv",
                    "subscription",
                    "collection",
                    "programAssetGroupOffer"
                  ],
                  "type": "string",
                  "x-enumLabels": [
                    "PPV",
                    "SUBSCRIPTION",
                    "COLLECTION",
                    "PROGRAMASSETGROUPOFFER"
                  ],
                  "x-enumType": "KalturaTransactionType"
                }
              },
              "required": [
                "assetId",
                "productType"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `HouseholdForbidden`: Household [@household@] forbidden\n* `DomainSuspended`: Unable to perform the action requested because the household has been suspended\n* `InvalidPurchase`: Unable to complete the purchase of the item requested\n* `CanNotCancelSubscriptionWhileDowngradeIsPending`\n* `DomainNotExists`: The household you selected does not exist\n* `SubscriptionCancellationIsBlocked`\n* `PaymentGatewayNotExist`: The requested Payment Gateway doesn't exist.\n* `PaymentGatewayExternalVerification`\n* `PaymentGatewayNotValid`: The specified Payment Gateway is not valid.\n* `ContentAlreadyConsumed`: Unable to complete this request - content cannot be cancelled after being viewed.\n* `ActionBlocked`: Blocked by segment.\n* `CancelationWindowPeriodExpired`: Unable to cancel the product request because the cancellation window has expired."
          }
        },
        "tags": [
          "entitlement"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "assetId",
          "productType"
        ]
      }
    },
    "/service/entitlement/action/getNextRenewal": {
      "post": {
        "description": "Returns the data about the next renewal",
        "operationId": "entitlement.getNextRenewal",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaEntitlementRenewal"
            }
          },
          "x-Errors": {
            "description": "* `SubscriptionSetDoesNotExist`: The subscriptionSet does not exist\n* `MissingBasePackage`: Missing base package"
          }
        },
        "tags": [
          "entitlement"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id"
        ]
      }
    },
    "/service/entitlement/action/grant": {
      "post": {
        "description": "Grant household for an entitlement for a PPV, Subscription or programAssetGroupOffer.",
        "operationId": "entitlement.grant",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "contentId": {
                  "default": 0,
                  "type": "integer"
                },
                "history": {
                  "type": "boolean"
                },
                "productId": {
                  "type": "integer"
                },
                "productType": {
                  "enum": [
                    "ppv",
                    "subscription",
                    "collection",
                    "programAssetGroupOffer"
                  ],
                  "type": "string",
                  "x-enumLabels": [
                    "PPV",
                    "SUBSCRIPTION",
                    "COLLECTION",
                    "PROGRAMASSETGROUPOFFER"
                  ],
                  "x-enumType": "KalturaTransactionType"
                }
              },
              "required": [
                "productId",
                "productType",
                "history"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `UserNotInDomain`: The user you selected is not part of the current household\n* `UserSuspended`: Unable to perform this action due to a household suspension\n* `UnableToPurchasePPVPurchased`: Pay-Per-View was already purchased by this household\n* `UnableToPurchaseFree`: The product you are trying to purchase is free\n* `UnableToPurchaseForPurchaseSubscriptionOnly`: The product you are trying to purchase is restricted to subscription purchases only\n* `UnableToPurchaseSubscriptionPurchased`: This subscription was already purchased by this household.\n* `NotForPurchase`: The Content ID entered is not available for purchase.\n* `UnableToPurchaseCollectionPurchased`: This collection has already been purchased by this household\n* `UnKnownPPVModule`: This PPVModule does not belong to the item.\n* `MissingBasePackage`: Missing base package\n* `InvalidProductType`\n* `InvalidContentId`: Illegal content ID\n* `InvalidOffer`: This offer is invalid\n* `PurchaseFailed`: purchase failed\n* `PurchasePassedEntitlementFailed`: purchase passed but entitlement failed\n* `IncorrectPrice`: The price shown for the item in the request is not the actual price.\n* `NoMediaRelatedToFile`: There is no media for the file you requested.\n* `InvalidUser`: The user you selected for this action is not a valid user\n* `SubscriptionSetDoesNotExist`: The subscriptionSet does not exist\n* `ServiceAlreadyExists`\n* `DlmExist`\n* `UnableToPurchaseProgramAssetGroupOfferPurchased`: This ProgramAssetGroupOffer has already been purchased by this household"
          }
        },
        "tags": [
          "entitlement"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "productId",
          "productType",
          "history",
          "contentId"
        ]
      }
    },
    "/service/entitlement/action/list": {
      "post": {
        "description": "Gets all the entitled media items for a household",
        "operationId": "entitlement.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaEntitlementFilter"
                },
                "pager": {
                  "$ref": "#/definitions/KalturaFilterPager"
                }
              },
              "required": [
                "filter"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaEntitlementListResponse"
            }
          },
          "x-Errors": {
            "description": "* `UserDoesNotExist`: This user doesn't exist"
          }
        },
        "tags": [
          "entitlement"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter",
          "pager"
        ]
      }
    },
    "/service/entitlement/action/swap": {
      "post": {
        "description": "Swap current entitlement (subscription) with new entitlement (subscription) - only Grant",
        "operationId": "entitlement.swap",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "currentProductId": {
                  "type": "integer"
                },
                "history": {
                  "type": "boolean"
                },
                "newProductId": {
                  "type": "integer"
                }
              },
              "required": [
                "currentProductId",
                "newProductId",
                "history"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `UserDoesNotExist`: This user doesn't exist\n* `UserSuspended`: Unable to perform this action due to a household suspension\n* `SubscriptionNotRenewable`: Unable to perform this action on a subscription that is not renewable\n* `UnableToPurchaseSubscriptionPurchased`: This subscription was already purchased by this household.\n* `ServiceAlreadyExists`\n* `DlmExist`"
          }
        },
        "tags": [
          "entitlement"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "currentProductId",
          "newProductId",
          "history"
        ]
      }
    },
    "/service/entitlement/action/update": {
      "post": {
        "description": "Update Kaltura Entitelment by Purchase id",
        "operationId": "entitlement.update",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "entitlement": {
                  "$ref": "#/definitions/KalturaEntitlement"
                },
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id",
                "entitlement"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaEntitlement"
            }
          },
          "x-Errors": {
            "description": "* `DomainNotExists`: The household you selected does not exist\n* `InvalidPurchase`: Unable to complete the purchase of the item requested\n* `SubscriptionNotRenewable`: Unable to perform this action on a subscription that is not renewable\n* `PaymentGatewayNotExist`: The requested Payment Gateway doesn't exist.\n* `PaymentGatewayNotSetForHousehold`: There's no Payment Gateway set up for this household.\n* `PaymentMethodIdRequired`: The mandatory payment method ID field is missing from the request.\n* `PaymentMethodNotSetForHousehold`: No payment method was set for this household.\n* `PaymentMethodNotExist`: The selected payment method doesn't exist.\n* `PaymentGatewayNotSupportPaymentMethod`: The Payment Gateway doesn't support this payment method.\n* `PaymentGatewayNotValid`: The specified Payment Gateway is not valid.\n* `PaymentGatewayChargeIdRequired`: The mandatory Payment Gateway charge ID field is missing from the request."
          }
        },
        "tags": [
          "entitlement"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id",
          "entitlement"
        ]
      }
    },
    "/service/epg/action/list": {
      "post": {
        "description": "Returns EPG assets.",
        "operationId": "epg.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaEpgFilter"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaEpgListResponse"
            }
          }
        },
        "tags": [
          "epg"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter"
        ]
      }
    },
    "/service/epgservicepartnerconfiguration/action/get": {
      "post": {
        "description": "Returns EPG cache service partner configurations",
        "operationId": "epgServicePartnerConfiguration.get",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaEpgServicePartnerConfiguration"
            }
          }
        },
        "tags": [
          "epgServicePartnerConfiguration"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": []
      }
    },
    "/service/epgservicepartnerconfiguration/action/update": {
      "post": {
        "description": "Returns EPG cache service partner configurations",
        "operationId": "epgServicePartnerConfiguration.update",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "config": {
                  "$ref": "#/definitions/KalturaEpgServicePartnerConfiguration"
                }
              },
              "required": [
                "config"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "epgServicePartnerConfiguration"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "config"
        ]
      }
    },
    "/service/eventnotification/action/list": {
      "post": {
        "description": "Gets all EventNotification items for a given Object id and type",
        "operationId": "eventNotification.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaEventNotificationFilter"
                }
              },
              "required": [
                "filter"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaEventNotificationListResponse"
            }
          },
          "x-Errors": {
            "description": "* `HouseholdRequired`: The mandatory household field is missing from the request."
          }
        },
        "tags": [
          "eventNotification"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter"
        ]
      }
    },
    "/service/eventnotification/action/update": {
      "post": {
        "description": "eventNotification update",
        "operationId": "eventNotification.update",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "string"
                },
                "objectToUpdate": {
                  "$ref": "#/definitions/KalturaEventNotification"
                }
              },
              "required": [
                "id",
                "objectToUpdate"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaEventNotification"
            }
          },
          "x-Errors": {
            "description": "* `EventNotificationIdIsMissing`: event notification id is missing"
          }
        },
        "tags": [
          "eventNotification"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id",
          "objectToUpdate"
        ]
      }
    },
    "/service/eventnotificationaction/action/dispatch": {
      "post": {
        "description": "Dispatches event notification",
        "operationId": "eventNotificationAction.dispatch",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "scope": {
                  "$ref": "#/definitions/KalturaEventNotificationScope"
                }
              },
              "required": [
                "scope"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          }
        },
        "tags": [
          "eventNotificationAction"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "scope"
        ]
      }
    },
    "/service/exporttask/action/add": {
      "post": {
        "description": "Adds a new bulk export task",
        "operationId": "exportTask.add",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "task": {
                  "$ref": "#/definitions/KalturaExportTask"
                }
              },
              "required": [
                "task"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaExportTask"
            }
          },
          "x-Errors": {
            "description": "* `AliasRequired`: The mandatory alias value field is missing from the request\n* `ExportNotificationUrlRequired`: The mandatory export notification URL field is missing from the request\n* `ExportFrequencyMinValue`: The export frequency set is below the minimum allowed\n* `AliasMustBeUnique`: Invalid entry: the alias value must be unique"
          }
        },
        "tags": [
          "exportTask"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "task"
        ]
      }
    },
    "/service/exporttask/action/delete": {
      "post": {
        "description": "Deletes an existing bulk export task by task identifier",
        "operationId": "exportTask.delete",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          }
        },
        "tags": [
          "exportTask"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id"
        ]
      }
    },
    "/service/exporttask/action/get": {
      "post": {
        "description": "Gets an existing bulk export task by task identifier",
        "operationId": "exportTask.get",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaExportTask"
            }
          }
        },
        "tags": [
          "exportTask"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id"
        ]
      }
    },
    "/service/exporttask/action/list": {
      "post": {
        "description": "Returns bulk export tasks by tasks identifiers",
        "operationId": "exportTask.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaExportTaskFilter"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaExportTaskListResponse"
            }
          }
        },
        "tags": [
          "exportTask"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter"
        ]
      }
    },
    "/service/exporttask/action/update": {
      "post": {
        "description": "Updates an existing bulk export task by task identifier",
        "operationId": "exportTask.update",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                },
                "task": {
                  "$ref": "#/definitions/KalturaExportTask"
                }
              },
              "required": [
                "id",
                "task"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaExportTask"
            }
          },
          "x-Errors": {
            "description": "* `ExportNotificationUrlRequired`: The mandatory export notification URL field is missing from the request\n* `ExportFrequencyMinValue`: The export frequency set is below the minimum allowed\n* `AliasMustBeUnique`: Invalid entry: the alias value must be unique"
          }
        },
        "tags": [
          "exportTask"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id",
          "task"
        ]
      }
    },
    "/service/externalchannelprofile/action/add": {
      "post": {
        "description": "Insert new External channel for partner",
        "operationId": "externalChannelProfile.add",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "externalChannel": {
                  "$ref": "#/definitions/KalturaExternalChannelProfile"
                }
              },
              "required": [
                "externalChannel"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaExternalChannelProfile"
            }
          },
          "x-Errors": {
            "description": "* `NoExternalChannelToInsert`: There's no external channel to connect\n* `RecommendationEngineNotExist`: The recommendation engine specified doesn't exist\n* `RecommendationEngineIdentifierRequired`: The mandatory recommendation engine identifier field is missing from the request\n* `InactiveExternalChannelEnrichment`: The specified external channel enrichment is not available\n* `NameRequired`: The mandatory name field is missing from the request\n* `ExternalIdentifierRequired`: The mandatory external identifier field is missing from the request.\n* `ExternalIdentifierMustBeUnique`: External identifier must be unique.\n* `ActionIsNotAllowed`: The action requested is not allowed"
          }
        },
        "tags": [
          "externalChannelProfile"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "externalChannel"
        ]
      }
    },
    "/service/externalchannelprofile/action/delete": {
      "post": {
        "description": "Delete External channel by External channel id",
        "operationId": "externalChannelProfile.delete",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "externalChannelId": {
                  "type": "integer"
                }
              },
              "required": [
                "externalChannelId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `ExternalChannelNotExist`: The external channel specified doesn't exist\n* `ExternalChannelIdentifierRequired`: The mandatory external channel identifier field is missing from the request\n* `ActionIsNotAllowed`: The action requested is not allowed"
          }
        },
        "tags": [
          "externalChannelProfile"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "externalChannelId"
        ]
      }
    },
    "/service/externalchannelprofile/action/list": {
      "post": {
        "description": "Returns all External channels for partner",
        "operationId": "externalChannelProfile.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaExternalChannelProfileFilter"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaExternalChannelProfileListResponse"
            }
          }
        },
        "tags": [
          "externalChannelProfile"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter"
        ]
      }
    },
    "/service/externalchannelprofile/action/update": {
      "post": {
        "description": "Update External channel details",
        "operationId": "externalChannelProfile.update",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "externalChannel": {
                  "$ref": "#/definitions/KalturaExternalChannelProfile"
                },
                "externalChannelId": {
                  "type": "integer"
                }
              },
              "required": [
                "externalChannelId",
                "externalChannel"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaExternalChannelProfile"
            }
          },
          "x-Errors": {
            "description": "* `NoExternalChannelToUpdate`: There's no external channel to update\n* `ExternalChannelNotExist`: The external channel specified doesn't exist\n* `ExternalChannelIdentifierRequired`: The mandatory external channel identifier field is missing from the request\n* `InactiveExternalChannelEnrichment`: The specified external channel enrichment is not available\n* `NameRequired`: The mandatory name field is missing from the request\n* `ExternalIdentifierRequired`: The mandatory external identifier field is missing from the request.\n* `ExternalIdentifierMustBeUnique`: External identifier must be unique.\n* `ActionIsNotAllowed`: The action requested is not allowed"
          }
        },
        "tags": [
          "externalChannelProfile"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "externalChannelId",
          "externalChannel"
        ]
      }
    },
    "/service/favorite/action/add": {
      "post": {
        "description": "Add media to user&#39;s favorite list",
        "operationId": "favorite.add",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "favorite": {
                  "$ref": "#/definitions/KalturaFavorite"
                }
              },
              "required": [
                "favorite"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaFavorite"
            }
          },
          "x-Errors": {
            "description": "* `UserDoesNotExist`: This user doesn't exist\n* `UserSuspended`: Unable to perform this action due to a household suspension"
          }
        },
        "tags": [
          "favorite"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "favorite"
        ]
      }
    },
    "/service/favorite/action/delete": {
      "post": {
        "description": "Remove media from user&#39;s favorite list",
        "operationId": "favorite.delete",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `UserFavoriteNotDeleted`"
          }
        },
        "tags": [
          "favorite"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id"
        ]
      }
    },
    "/service/favorite/action/list": {
      "post": {
        "description": "Retrieving users&#39; favorites",
        "operationId": "favorite.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaFavoriteFilter"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaFavoriteListResponse"
            }
          },
          "x-Errors": {
            "description": "* `UserDoesNotExist`: This user doesn't exist\n* `UserSuspended`: Unable to perform this action due to a household suspension\n* `WrongPasswordOrUserName`: Unable to authenticate this user - the user name or password are incorrect. Please re-enter this information"
          }
        },
        "tags": [
          "favorite"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter"
        ]
      }
    },
    "/service/followtvseries/action/add": {
      "post": {
        "description": "Add a user&#39;s tv series follow.\r\n            Possible status codes: UserAlreadyFollowing = 8013, NotFound = 500007, InvalidAssetId = 4024",
        "operationId": "followTvSeries.add",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "followTvSeries": {
                  "$ref": "#/definitions/KalturaFollowTvSeries"
                }
              },
              "required": [
                "followTvSeries"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaFollowTvSeries"
            }
          },
          "x-Errors": {
            "description": "* `UserAlreadyFollowing`: The user is already following the requested series.\n* `InvalidAssetId`: The specified asset ID is invalid\n* `InvalidUser`: The user you selected for this action is not a valid user\n* `AssetDoesNotExist`\n* `FailCreateAnnouncement`: An error occurred while creating the announcement."
          }
        },
        "tags": [
          "followTvSeries"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "followTvSeries"
        ]
      }
    },
    "/service/followtvseries/action/delete": {
      "post": {
        "description": "Delete a user&#39;s tv series follow.",
        "operationId": "followTvSeries.delete",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "assetId": {
                  "type": "integer"
                }
              },
              "required": [
                "assetId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `UserNotFollowing`: The user is not following this series.\n* `InvalidAssetId`: The specified asset ID is invalid\n* `AssetDoesNotExist`"
          }
        },
        "tags": [
          "followTvSeries"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "assetId"
        ]
      }
    },
    "/service/followtvseries/action/deleteWithToken": {
      "post": {
        "description": "Delete a user&#39;s tv series follow.",
        "operationId": "followTvSeries.deleteWithToken",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "assetId": {
                  "type": "integer"
                },
                "partnerId": {
                  "type": "integer"
                },
                "token": {
                  "type": "string"
                }
              },
              "required": [
                "assetId",
                "token",
                "partnerId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "followTvSeries"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "assetId",
          "token",
          "partnerId"
        ]
      }
    },
    "/service/followtvseries/action/list": {
      "post": {
        "description": "List user&#39;s tv series follows.\r\n            Possible status codes:",
        "operationId": "followTvSeries.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaFollowTvSeriesFilter"
                },
                "pager": {
                  "$ref": "#/definitions/KalturaFilterPager"
                }
              },
              "required": [
                "filter"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaFollowTvSeriesListResponse"
            }
          }
        },
        "tags": [
          "followTvSeries"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter",
          "pager"
        ]
      }
    },
    "/service/homenetwork/action/add": {
      "post": {
        "description": "Add a new home network to a household",
        "operationId": "homeNetwork.add",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "homeNetwork": {
                  "$ref": "#/definitions/KalturaHomeNetwork"
                }
              },
              "required": [
                "homeNetwork"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaHomeNetwork"
            }
          },
          "x-Errors": {
            "description": "* `HomeNetworkAlreadyExists`: Unable to add a home network to the same household twice\n* `HomeNetworkLimitation`: The number of home networks in the household has been exceeded\n* `ExternalIdentifierRequired`: The mandatory external identifier field is missing from the request."
          }
        },
        "tags": [
          "homeNetwork"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "homeNetwork"
        ]
      }
    },
    "/service/homenetwork/action/delete": {
      "post": {
        "description": "Delete household’s existing home network",
        "operationId": "homeNetwork.delete",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "externalId": {
                  "type": "string"
                }
              },
              "required": [
                "externalId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `HomeNetworkDoesNotExist`: The home network you specified does not exis\n* `HomeNetworkFrequency`: Unable to remove the home network from the household because of the frequency limitation\n* `ExternalIdentifierRequired`: The mandatory external identifier field is missing from the request."
          }
        },
        "tags": [
          "homeNetwork"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "externalId"
        ]
      }
    },
    "/service/homenetwork/action/list": {
      "post": {
        "description": "Retrieve the household’s home networks",
        "operationId": "homeNetwork.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaHomeNetworkListResponse"
            }
          }
        },
        "tags": [
          "homeNetwork"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": []
      }
    },
    "/service/homenetwork/action/update": {
      "post": {
        "description": "Update and existing home network for a household",
        "operationId": "homeNetwork.update",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "externalId": {
                  "type": "string"
                },
                "homeNetwork": {
                  "$ref": "#/definitions/KalturaHomeNetwork"
                }
              },
              "required": [
                "externalId",
                "homeNetwork"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaHomeNetwork"
            }
          },
          "x-Errors": {
            "description": "* `HomeNetworkDoesNotExist`: The home network you specified does not exis\n* `ExternalIdentifierRequired`: The mandatory external identifier field is missing from the request."
          }
        },
        "tags": [
          "homeNetwork"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "externalId",
          "homeNetwork"
        ]
      }
    },
    "/service/household/action/add": {
      "post": {
        "description": "Creates a household for the user",
        "operationId": "household.add",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "household": {
                  "$ref": "#/definitions/KalturaHousehold"
                }
              },
              "required": [
                "household"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaHousehold"
            }
          },
          "x-Errors": {
            "description": "* `HouseholdUserFailed`: The system was unable to register this household user\n* `RegionDoesNotExist`: Region does not exist\n* `DomainAlreadyExists`: The household you entered already exists in the system\n* `UserExistsInOtherDomains`: Unable to add this user to this household because the user is already associated with another household"
          }
        },
        "tags": [
          "household"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "household"
        ]
      }
    },
    "/service/household/action/delete": {
      "post": {
        "description": "Fully delete a household. Delete all of the household information, including users, devices, entitlements, payment methods and notification date.",
        "operationId": "household.delete",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `DomainNotExists`: The household you selected does not exist"
          }
        },
        "tags": [
          "household"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id"
        ]
      }
    },
    "/service/household/action/get": {
      "post": {
        "description": "Returns the household model",
        "operationId": "household.get",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaHousehold"
            }
          },
          "x-Errors": {
            "description": "* `DomainNotExists`: The household you selected does not exist\n* `HouseholdUserFailed`: The system was unable to register this household user"
          }
        },
        "tags": [
          "household"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id"
        ]
      }
    },
    "/service/household/action/list": {
      "post": {
        "description": "Retrive household for the partner filter by external identifier",
        "operationId": "household.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaHouseholdFilter"
                },
                "pager": {
                  "$ref": "#/definitions/KalturaFilterPager"
                }
              },
              "required": [
                "filter"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaHouseholdListResponse"
            }
          }
        },
        "tags": [
          "household"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter",
          "pager"
        ]
      }
    },
    "/service/household/action/purge": {
      "post": {
        "description": "Purge a household. Delete all of the household information, including users, devices, entitlements, payment methods and notification date.",
        "operationId": "household.purge",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `DomainNotExists`: The household you selected does not exist"
          }
        },
        "tags": [
          "household"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id"
        ]
      }
    },
    "/service/household/action/resetFrequency": {
      "post": {
        "description": "Reset a household’s time limitation for removing user or device",
        "operationId": "household.resetFrequency",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "frequencyType": {
                  "enum": [
                    "devices",
                    "users"
                  ],
                  "type": "string",
                  "x-enumLabels": [
                    "DEVICES",
                    "USERS"
                  ],
                  "x-enumType": "KalturaHouseholdFrequencyType"
                }
              },
              "required": [
                "frequencyType"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaHousehold"
            }
          },
          "x-Errors": {
            "description": "* `DomainSuspended`: Unable to perform the action requested because the household has been suspended\n* `DomainNotExists`: The household you selected does not exist"
          }
        },
        "tags": [
          "household"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "frequencyType"
        ]
      }
    },
    "/service/household/action/resume": {
      "post": {
        "description": "Resumed a given household service to its previous service settings",
        "operationId": "household.resume",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `DomainAlreadyActive`: This household has already been activated"
          }
        },
        "tags": [
          "household"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": []
      }
    },
    "/service/household/action/suspend": {
      "post": {
        "description": "Suspend a given household service. Sets the household status to “suspended&quot;.The household service settings are maintained for later resume",
        "operationId": "household.suspend",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "roleId": {
                  "type": "integer"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `DomainAlreadySuspended`: This household has already been suspended\n* `RoleDoesNotExists`: Role Does Not Exists"
          }
        },
        "tags": [
          "household"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "roleId"
        ]
      }
    },
    "/service/household/action/update": {
      "post": {
        "description": "Update the household name and description",
        "operationId": "household.update",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "household": {
                  "$ref": "#/definitions/KalturaHousehold"
                }
              },
              "required": [
                "household"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaHousehold"
            }
          },
          "x-Errors": {
            "description": "* `RegionDoesNotExist`: Region does not exist\n* `DomainNotExists`: The household you selected does not exist\n* `DomainAlreadyExists`: The household you entered already exists in the system"
          }
        },
        "tags": [
          "household"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "household"
        ]
      }
    },
    "/service/householdcoupon/action/add": {
      "post": {
        "description": "householdCoupon add",
        "operationId": "householdCoupon.add",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "objectToAdd": {
                  "$ref": "#/definitions/KalturaHouseholdCoupon"
                }
              },
              "required": [
                "objectToAdd"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaHouseholdCoupon"
            }
          },
          "x-Errors": {
            "description": "* `CouponCodeIsMissing`: Coupon code is missing\n* `CouponNotValid`: The coupon you entered is not valid\n* `HouseholdRequired`: The mandatory household field is missing from the request.\n* `CouponCodeAlreadyLoaded`: Coupon code already loaded\n* `ExceededHouseholdCouponLimit`: Exceeded household coupon limit"
          }
        },
        "tags": [
          "householdCoupon"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "objectToAdd"
        ]
      }
    },
    "/service/householdcoupon/action/delete": {
      "post": {
        "description": "Remove coupon from household",
        "operationId": "householdCoupon.delete",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "string"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "x-Errors": {
            "description": "* `CouponCodeNotInHousehold`: The coupon code is not in household\n* `HouseholdRequired`: The mandatory household field is missing from the request.\n* `CouponCodeIsMissing`: Coupon code is missing"
          }
        },
        "tags": [
          "householdCoupon"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id"
        ]
      }
    },
    "/service/householdcoupon/action/list": {
      "post": {
        "description": "Gets all HouseholdCoupon items for a household",
        "operationId": "householdCoupon.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaHouseholdCouponFilter"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaHouseholdCouponListResponse"
            }
          },
          "x-Errors": {
            "description": "* `HouseholdRequired`: The mandatory household field is missing from the request."
          }
        },
        "tags": [
          "householdCoupon"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter"
        ]
      }
    },
    "/service/householddevice/action/add": {
      "post": {
        "description": "Add device to household",
        "operationId": "householdDevice.add",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "device": {
                  "$ref": "#/definitions/KalturaHouseholdDevice"
                }
              },
              "required": [
                "device"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaHouseholdDevice"
            }
          },
          "x-Errors": {
            "description": "* `DomainNotExists`: The household you selected does not exist\n* `DeviceExistsInOtherDomains`: Unable to add this device to this household because the device is already associated with another household\n* `NoUsersInDomain`: There are no users associated with this household\n* `DeviceTypeNotAllowed`: The device type you selected is not supported by the system\n* `ExternalIdAlreadyExists`: The external ID you are trying to add / update already exists\n* `ExceededLimit`: The number of devices or users has exceeded the household limit"
          }
        },
        "tags": [
          "householdDevice"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "device"
        ]
      }
    },
    "/service/householddevice/action/addByPin": {
      "post": {
        "description": "Registers a device to a household using pin code",
        "operationId": "householdDevice.addByPin",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "deviceName": {
                  "type": "string"
                },
                "pin": {
                  "type": "string"
                }
              },
              "required": [
                "deviceName",
                "pin"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaHouseholdDevice"
            }
          },
          "x-Errors": {
            "description": "* `ExceededLimit`: The number of devices or users has exceeded the household limit\n* `DuplicatePin`: The PIN number you entered is already being used in this household\n* `DeviceNotExists`: The device you selected for this action does not exist in the household"
          }
        },
        "tags": [
          "householdDevice"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "deviceName",
          "pin"
        ]
      }
    },
    "/service/householddevice/action/delete": {
      "post": {
        "description": "Removes a device from household",
        "operationId": "householdDevice.delete",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "udid": {
                  "type": "string"
                }
              },
              "required": [
                "udid"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `DeviceNotInDomain`: The device you selected is not part of the current household\n* `LimitationPeriod`: Unable to remove the device or user from the household at this time because of the limitation period\n* `DeviceNotExists`: The device you selected for this action does not exist in the household"
          }
        },
        "tags": [
          "householdDevice"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "udid"
        ]
      }
    },
    "/service/householddevice/action/deleteDynamicData": {
      "post": {
        "description": "Deletes dynamic data item with key  for device with identifier .",
        "operationId": "householdDevice.deleteDynamicData",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "key": {
                  "type": "string"
                },
                "udid": {
                  "type": "string"
                }
              },
              "required": [
                "udid",
                "key"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `DeviceNotExists`: The device you selected for this action does not exist in the household\n* `ItemNotFound`: Unable to find the item you requested"
          }
        },
        "tags": [
          "householdDevice"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "udid",
          "key"
        ]
      }
    },
    "/service/householddevice/action/generatePin": {
      "post": {
        "description": "Generates device pin to use when adding a device to household by pin",
        "operationId": "householdDevice.generatePin",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "brandId": {
                  "type": "integer"
                },
                "udid": {
                  "type": "string"
                }
              },
              "required": [
                "udid",
                "brandId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaDevicePin"
            }
          }
        },
        "tags": [
          "householdDevice"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "udid",
          "brandId"
        ]
      }
    },
    "/service/householddevice/action/get": {
      "post": {
        "description": "Returns device registration status to the supplied household",
        "operationId": "householdDevice.get",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "udid": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaHouseholdDevice"
            }
          },
          "x-Errors": {
            "description": "* `DeviceNotExists`: The device you selected for this action does not exist in the household\n* `DeviceNotInDomain`: The device you selected is not part of the current household\n* `DeviceExistsInOtherDomains`: Unable to add this device to this household because the device is already associated with another household\n* `AdapterNotExists`: The adapter you're trying to connect doesn't exist\n* `AdapterAppFailure`: The adapter failed to complete the request.\n* `AdapterUrlRequired`: The mandatory adapter URL field is missing from the request"
          }
        },
        "tags": [
          "householdDevice"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "udid"
        ]
      }
    },
    "/service/householddevice/action/list": {
      "post": {
        "description": "Returns the devices within the household",
        "operationId": "householdDevice.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaHouseholdDeviceFilter"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaHouseholdDeviceListResponse"
            }
          },
          "x-Errors": {
            "description": "* `DomainNotExists`: The household you selected does not exist"
          }
        },
        "tags": [
          "householdDevice"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter"
        ]
      }
    },
    "/service/householddevice/action/loginWithPin": {
      "post": {
        "description": "User sign-in via a time-expired sign-in PIN.",
        "operationId": "householdDevice.loginWithPin",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "extraParams": {
                  "type": "object"
                },
                "partnerId": {
                  "type": "integer"
                },
                "pin": {
                  "type": "string"
                },
                "udid": {
                  "type": "string"
                }
              },
              "required": [
                "partnerId",
                "pin"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaLoginResponse"
            }
          },
          "x-Errors": {
            "description": "* `UserNotInDomain`: The user you selected is not part of the current household\n* `WrongPasswordOrUserName`: Unable to authenticate this user - the user name or password are incorrect. Please re-enter this information\n* `PinNotExists`: The PIN provided does not exist in the system\n* `NoValidPin`: The PIN provided is not valid\n* `UserSuspended`: Unable to perform this action due to a household suspension\n* `UserNotActivated`: The user must be activated to log in\n* `UserAllreadyLoggedIn`: This user is already logged in\n* `UserDoubleLogIn`: The user can't be logged in on more than one device\n* `ErrorOnInitUser`\n* `UserNotMasterApproved`: The user must be approved by the household master\n* `DeviceNotExists`: The device you selected for this action does not exist in the household\n* `DeviceNotInDomain`: The device you selected is not part of the current household\n* `DomainNotExists`: The household you selected does not exist\n* `MasterUserNotFound`"
          }
        },
        "tags": [
          "householdDevice"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "partnerId",
          "pin",
          "udid",
          "extraParams"
        ]
      }
    },
    "/service/householddevice/action/update": {
      "post": {
        "description": "Update the name of the device by UDID",
        "operationId": "householdDevice.update",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "device": {
                  "$ref": "#/definitions/KalturaHouseholdDevice"
                },
                "udid": {
                  "type": "string"
                }
              },
              "required": [
                "udid",
                "device"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaHouseholdDevice"
            }
          },
          "x-Errors": {
            "description": "* `DeviceNotExists`: The device you selected for this action does not exist in the household"
          }
        },
        "tags": [
          "householdDevice"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "udid",
          "device"
        ]
      }
    },
    "/service/householddevice/action/updateStatus": {
      "post": {
        "description": "Update the name of the device by UDID",
        "operationId": "householdDevice.updateStatus",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "status": {
                  "enum": [
                    "PENDING",
                    "ACTIVATED",
                    "NOT_ACTIVATED"
                  ],
                  "type": "string",
                  "x-enumLabels": [
                    "PENDING",
                    "ACTIVATED",
                    "NOT_ACTIVATED"
                  ],
                  "x-enumType": "KalturaDeviceStatus"
                },
                "udid": {
                  "type": "string"
                }
              },
              "required": [
                "udid",
                "status"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `LimitationPeriod`: Unable to remove the device or user from the household at this time because of the limitation period\n* `ExceededLimit`: The number of devices or users has exceeded the household limit\n* `DeviceNotInDomain`: The device you selected is not part of the current household"
          }
        },
        "tags": [
          "householdDevice"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "udid",
          "status"
        ]
      }
    },
    "/service/householddevice/action/upsertDynamicData": {
      "post": {
        "description": "Adds or updates dynamic data item for device with identifier udid. If it is needed to update several items, use a multi-request to avoid race conditions.",
        "operationId": "householdDevice.upsertDynamicData",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "key": {
                  "type": "string"
                },
                "udid": {
                  "type": "string"
                },
                "value": {
                  "$ref": "#/definitions/KalturaStringValue"
                }
              },
              "required": [
                "udid",
                "key",
                "value"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaDynamicData"
            }
          },
          "x-Errors": {
            "description": "* `DeviceNotExists`: The device you selected for this action does not exist in the household\n* `ExceededMaxCapacity`\n* `ExceededMaxLength`"
          }
        },
        "tags": [
          "householdDevice"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "udid",
          "key",
          "value"
        ]
      }
    },
    "/service/householdlimitations/action/add": {
      "post": {
        "description": "Add household limitation",
        "operationId": "householdLimitations.add",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "householdLimitations": {
                  "$ref": "#/definitions/KalturaHouseholdLimitations"
                }
              },
              "required": [
                "householdLimitations"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaHouseholdLimitations"
            }
          }
        },
        "tags": [
          "householdLimitations"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "householdLimitations"
        ]
      }
    },
    "/service/householdlimitations/action/delete": {
      "post": {
        "description": "Delete household limitation",
        "operationId": "householdLimitations.delete",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "householdLimitationsId": {
                  "type": "integer"
                }
              },
              "required": [
                "householdLimitationsId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `DlmNotExist`: The device limitation module (DLM) you entered does not exist in the system"
          }
        },
        "tags": [
          "householdLimitations"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "householdLimitationsId"
        ]
      }
    },
    "/service/householdlimitations/action/get": {
      "post": {
        "description": "Get the limitation module by id",
        "operationId": "householdLimitations.get",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaHouseholdLimitations"
            }
          },
          "x-Errors": {
            "description": "* `DlmNotExist`: The device limitation module (DLM) you entered does not exist in the system\n* `WrongPasswordOrUserName`: Unable to authenticate this user - the user name or password are incorrect. Please re-enter this information"
          }
        },
        "tags": [
          "householdLimitations"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id"
        ]
      }
    },
    "/service/householdlimitations/action/isUsed": {
      "post": {
        "description": "Checks if the DLM is used",
        "operationId": "householdLimitations.isUsed",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "dlmId": {
                  "type": "integer"
                }
              },
              "required": [
                "dlmId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `DlmNotExist`: The device limitation module (DLM) you entered does not exist in the system"
          }
        },
        "tags": [
          "householdLimitations"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "dlmId"
        ]
      }
    },
    "/service/householdlimitations/action/list": {
      "post": {
        "description": "Get the list of PartnerConfiguration",
        "operationId": "householdLimitations.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaHouseholdLimitationsListResponse"
            }
          }
        },
        "tags": [
          "householdLimitations"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": []
      }
    },
    "/service/householdlimitations/action/update": {
      "post": {
        "description": "Updates household limitation",
        "operationId": "householdLimitations.update",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "dlmId": {
                  "type": "integer"
                },
                "householdLimitation": {
                  "$ref": "#/definitions/KalturaHouseholdLimitations"
                }
              },
              "required": [
                "dlmId",
                "householdLimitation"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaHouseholdLimitations"
            }
          },
          "x-Errors": {
            "description": "* `DlmNotExist`: The device limitation module (DLM) you entered does not exist in the system"
          }
        },
        "tags": [
          "householdLimitations"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "dlmId",
          "householdLimitation"
        ]
      }
    },
    "/service/householdpaymentgateway/action/disable": {
      "post": {
        "description": "Disable payment-gateway on the household",
        "operationId": "householdPaymentGateway.disable",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "paymentGatewayId": {
                  "type": "integer"
                }
              },
              "required": [
                "paymentGatewayId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `UserSuspended`: Unable to perform this action due to a household suspension\n* `UserWithNoDomain`: This user is not associated with any household.\n* `UserDoesNotExist`: This user doesn't exist\n* `UserNotInDomain`: The user you selected is not part of the current household\n* `DomainNotExists`: The household you selected does not exist\n* `PaymentGatewayIdRequired`: The mandatory Payment Gateway ID field is missing from the request.\n* `PaymentGatewayNotExist`: The requested Payment Gateway doesn't exist.\n* `HouseholdNotSetToPaymentGateway`: There's no Payment Gateway set for this household.\n* `PaymentGatewaySelectionIsDisabled`: The multiple Payment Gateway selection feature is disabled."
          }
        },
        "tags": [
          "householdPaymentGateway"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "paymentGatewayId"
        ]
      }
    },
    "/service/householdpaymentgateway/action/enable": {
      "post": {
        "description": "Enable a payment-gateway provider for the household.",
        "operationId": "householdPaymentGateway.enable",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "paymentGatewayId": {
                  "type": "integer"
                }
              },
              "required": [
                "paymentGatewayId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `UserSuspended`: Unable to perform this action due to a household suspension\n* `UserWithNoDomain`: This user is not associated with any household.\n* `UserDoesNotExist`: This user doesn't exist\n* `UserNotInDomain`: The user you selected is not part of the current household\n* `DomainNotExists`: The household you selected does not exist\n* `PaymentGatewayIdRequired`: The mandatory Payment Gateway ID field is missing from the request.\n* `ErrorSavingPaymentGatewayHousehold`: An error occurred while trying to set a Payment Gateway for this household.\n* `HouseholdAlreadySetToPaymentGateway`: The household is already set to a Payment Gateway.\n* `PaymentGatewaySelectionIsDisabled`: The multiple Payment Gateway selection feature is disabled.\n* `PaymentGatewayNotValid`: The specified Payment Gateway is not valid."
          }
        },
        "tags": [
          "householdPaymentGateway"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "paymentGatewayId"
        ]
      }
    },
    "/service/householdpaymentgateway/action/getChargeID": {
      "post": {
        "description": "Get a household’s billing account identifier (charge ID) for a given payment gateway",
        "operationId": "householdPaymentGateway.getChargeID",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "paymentGatewayExternalId": {
                  "type": "string"
                }
              },
              "required": [
                "paymentGatewayExternalId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "x-Errors": {
            "description": "* `PaymentGatewayNotExist`: The requested Payment Gateway doesn't exist.\n* `ExternalIdentifierRequired`: The mandatory external identifier field is missing from the request.\n* `ChargeIdNotSetToHousehold`: There's no charge ID set for this household.\n* `DomainNotExists`: The household you selected does not exist\n* `HouseholdUserFailed`: The system was unable to register this household user"
          }
        },
        "tags": [
          "householdPaymentGateway"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "paymentGatewayExternalId"
        ]
      }
    },
    "/service/householdpaymentgateway/action/invoke": {
      "post": {
        "description": "Gets the Payment Gateway Configuration for the payment gateway identifier given",
        "operationId": "householdPaymentGateway.invoke",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "extraParameters": {
                  "items": {
                    "$ref": "#/definitions/KalturaKeyValue"
                  },
                  "type": "array"
                },
                "intent": {
                  "type": "string"
                },
                "paymentGatewayId": {
                  "type": "integer"
                }
              },
              "required": [
                "paymentGatewayId",
                "intent",
                "extraParameters"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPaymentGatewayConfiguration"
            }
          },
          "x-Errors": {
            "description": "* `PaymentGatewayNotExist`: The requested Payment Gateway doesn't exist.\n* `SignatureMismatch`: The signature provide doesn't match the signature on record."
          }
        },
        "tags": [
          "householdPaymentGateway"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "paymentGatewayId",
          "intent",
          "extraParameters"
        ]
      }
    },
    "/service/householdpaymentgateway/action/list": {
      "post": {
        "description": "Get a list of all configured Payment Gateways providers available for the account. For each payment is provided with the household associated payment methods.",
        "operationId": "householdPaymentGateway.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaHouseholdPaymentGatewayListResponse"
            }
          },
          "x-Errors": {
            "description": "* `UserWithNoDomain`: This user is not associated with any household.\n* `UserDoesNotExist`: This user doesn't exist\n* `UserNotInDomain`: The user you selected is not part of the current household\n* `UserSuspended`: Unable to perform this action due to a household suspension\n* `DomainNotExists`: The household you selected does not exist"
          }
        },
        "tags": [
          "householdPaymentGateway"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": []
      }
    },
    "/service/householdpaymentgateway/action/resume": {
      "post": {
        "description": "Resumes all the entitlements of the given payment gateway",
        "operationId": "householdPaymentGateway.resume",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "adapterData": {
                  "items": {
                    "$ref": "#/definitions/KalturaKeyValue"
                  },
                  "type": "array"
                },
                "paymentGatewayId": {
                  "type": "integer"
                }
              },
              "required": [
                "paymentGatewayId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "x-Errors": {
            "description": "* `PaymentGatewayNotExist`: The requested Payment Gateway doesn't exist.\n* `DomainNotExists`: The household you selected does not exist\n* `HouseholdNotSetToPaymentGateway`: There's no Payment Gateway set for this household."
          }
        },
        "tags": [
          "householdPaymentGateway"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "paymentGatewayId",
          "adapterData"
        ]
      }
    },
    "/service/householdpaymentgateway/action/setChargeID": {
      "post": {
        "description": "Set user billing account identifier (charge ID), for a specific household and a specific payment gateway",
        "operationId": "householdPaymentGateway.setChargeID",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "chargeId": {
                  "type": "string"
                },
                "paymentGatewayExternalId": {
                  "type": "string"
                }
              },
              "required": [
                "paymentGatewayExternalId",
                "chargeId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `PaymentGatewayNotExist`: The requested Payment Gateway doesn't exist.\n* `PaymentGatewayChargeIdRequired`: The mandatory Payment Gateway charge ID field is missing from the request.\n* `ExternalIdentifierRequired`: The mandatory external identifier field is missing from the request.\n* `ErrorSavingPaymentGatewayHousehold`: An error occurred while trying to set a Payment Gateway for this household.\n* `ChargeIdAlreadySetToHouseholdPaymentGateway`: The charge ID was already set for the household Payment Gateway.\n* `DomainNotExists`: The household you selected does not exist\n* `HouseholdUserFailed`: The system was unable to register this household user"
          }
        },
        "tags": [
          "householdPaymentGateway"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "paymentGatewayExternalId",
          "chargeId"
        ]
      }
    },
    "/service/householdpaymentgateway/action/suspend": {
      "post": {
        "description": "Suspends all the entitlements of the given payment gateway",
        "operationId": "householdPaymentGateway.suspend",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "paymentGatewayId": {
                  "type": "integer"
                },
                "suspendSettings": {
                  "$ref": "#/definitions/KalturaSuspendSettings"
                }
              },
              "required": [
                "paymentGatewayId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "x-Errors": {
            "description": "* `PaymentGatewayNotExist`: The requested Payment Gateway doesn't exist.\n* `DomainNotExists`: The household you selected does not exist\n* `HouseholdNotSetToPaymentGateway`: There's no Payment Gateway set for this household."
          }
        },
        "tags": [
          "householdPaymentGateway"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "paymentGatewayId",
          "suspendSettings"
        ]
      }
    },
    "/service/householdpaymentmethod/action/add": {
      "post": {
        "description": "Add a new payment method for household",
        "operationId": "householdPaymentMethod.add",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "householdPaymentMethod": {
                  "$ref": "#/definitions/KalturaHouseholdPaymentMethod"
                }
              },
              "required": [
                "householdPaymentMethod"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaHouseholdPaymentMethod"
            }
          },
          "x-Errors": {
            "description": "* `PaymentMethodNotSetForHousehold`: No payment method was set for this household.\n* `PaymentGatewayNotValid`: The specified Payment Gateway is not valid.\n* `PaymentGatewayNotSetForHousehold`: There's no Payment Gateway set up for this household.\n* `ErrorSavingPaymentGatewayHouseholdPaymentMethod`: An error occurred while trying to save the payment method of the household  Payment Gateway. Please try again.\n* `PaymentGatewayNotSupportPaymentMethod`: The Payment Gateway doesn't support this payment method.\n* `PaymentMethodIdRequired`: The mandatory payment method ID field is missing from the request.\n* `PaymentGatewayIdRequired`: The mandatory Payment Gateway ID field is missing from the request.\n* `PaymentMethodExternalIdRequired`: The mandatory payment method external ID field is missing from the request.\n* `PaymentGatewayNotExist`: The requested Payment Gateway doesn't exist.\n* `PaymentMethodNotExist`: The selected payment method doesn't exist.\n* `PaymentMethodAlreadySetToHouseholdPaymentGateway`: A payment method was already set for the household Payment Gateway.\n* `DomainNotExists`: The household you selected does not exist\n* `HouseholdUserFailed`: The system was unable to register this household user"
          }
        },
        "tags": [
          "householdPaymentMethod"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "householdPaymentMethod"
        ]
      }
    },
    "/service/householdpaymentmethod/action/forceRemove": {
      "post": {
        "description": "Force remove of a payment method of the household.",
        "operationId": "householdPaymentMethod.forceRemove",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "paymentGatewayId": {
                  "type": "integer"
                },
                "paymentMethodId": {
                  "type": "integer"
                }
              },
              "required": [
                "paymentGatewayId",
                "paymentMethodId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `PaymentMethodNotSetForHousehold`: No payment method was set for this household.\n* `PaymentGatewayNotExist`: The requested Payment Gateway doesn't exist.\n* `PaymentGatewayNotSetForHousehold`: There's no Payment Gateway set up for this household.\n* `UserWithNoDomain`: This user is not associated with any household.\n* `UserDoesNotExist`: This user doesn't exist\n* `UserNotInDomain`: The user you selected is not part of the current household\n* `UserSuspended`: Unable to perform this action due to a household suspension\n* `DomainNotExists`: The household you selected does not exist\n* `PaymentGatewayIdRequired`: The mandatory Payment Gateway ID field is missing from the request.\n* `PaymentMethodIdRequired`: The mandatory payment method ID field is missing from the request.\n* `AdapterUrlRequired`: The mandatory adapter URL field is missing from the request\n* `NoConfigurationFound`: The configuration for the credit card clearing has not been set.\n* `SignatureMismatch`: The signature provide doesn't match the signature on record."
          }
        },
        "tags": [
          "householdPaymentMethod"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "paymentGatewayId",
          "paymentMethodId"
        ]
      }
    },
    "/service/householdpaymentmethod/action/list": {
      "post": {
        "description": "Get a list of all payment methods of the household.",
        "operationId": "householdPaymentMethod.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaHouseholdPaymentMethodListResponse"
            }
          },
          "x-Errors": {
            "description": "* `UserWithNoDomain`: This user is not associated with any household.\n* `UserDoesNotExist`: This user doesn't exist\n* `UserNotInDomain`: The user you selected is not part of the current household\n* `UserSuspended`: Unable to perform this action due to a household suspension\n* `DomainNotExists`: The household you selected does not exist"
          }
        },
        "tags": [
          "householdPaymentMethod"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": []
      }
    },
    "/service/householdpaymentmethod/action/remove": {
      "post": {
        "description": "Removes a payment method of the household.",
        "operationId": "householdPaymentMethod.remove",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "paymentGatewayId": {
                  "type": "integer"
                },
                "paymentMethodId": {
                  "type": "integer"
                }
              },
              "required": [
                "paymentGatewayId",
                "paymentMethodId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `PaymentMethodNotSetForHousehold`: No payment method was set for this household.\n* `PaymentMethodIsUsedByHousehold`\n* `PaymentGatewayNotExist`: The requested Payment Gateway doesn't exist.\n* `PaymentGatewayNotSetForHousehold`: There's no Payment Gateway set up for this household.\n* `UserWithNoDomain`: This user is not associated with any household.\n* `UserDoesNotExist`: This user doesn't exist\n* `UserNotInDomain`: The user you selected is not part of the current household\n* `UserSuspended`: Unable to perform this action due to a household suspension\n* `DomainNotExists`: The household you selected does not exist\n* `PaymentGatewayIdRequired`: The mandatory Payment Gateway ID field is missing from the request.\n* `PaymentMethodIdRequired`: The mandatory payment method ID field is missing from the request.\n* `AdapterUrlRequired`: The mandatory adapter URL field is missing from the request\n* `NoConfigurationFound`: The configuration for the credit card clearing has not been set.\n* `SignatureMismatch`: The signature provide doesn't match the signature on record."
          }
        },
        "tags": [
          "householdPaymentMethod"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "paymentGatewayId",
          "paymentMethodId"
        ]
      }
    },
    "/service/householdpaymentmethod/action/setAsDefault": {
      "post": {
        "description": "Set a payment method as default for the household.",
        "operationId": "householdPaymentMethod.setAsDefault",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "paymentGatewayId": {
                  "type": "integer"
                },
                "paymentMethodId": {
                  "type": "integer"
                }
              },
              "required": [
                "paymentGatewayId",
                "paymentMethodId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `PaymentGatewayNotSetForHousehold`: There's no Payment Gateway set up for this household.\n* `PaymentGatewayNotValid`: The specified Payment Gateway is not valid.\n* `PaymentMethodNotSetForHousehold`: No payment method was set for this household.\n* `ErrorSavingPaymentGatewayHouseholdPaymentMethod`: An error occurred while trying to save the payment method of the household  Payment Gateway. Please try again.\n* `PaymentGatewayNotSupportPaymentMethod`: The Payment Gateway doesn't support this payment method.\n* `PaymentMethodIdRequired`: The mandatory payment method ID field is missing from the request.\n* `PaymentGatewayIdRequired`: The mandatory Payment Gateway ID field is missing from the request.\n* `UserWithNoDomain`: This user is not associated with any household.\n* `DomainNotExists`: The household you selected does not exist\n* `HouseholdUserFailed`: The system was unable to register this household user"
          }
        },
        "tags": [
          "householdPaymentMethod"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "paymentGatewayId",
          "paymentMethodId"
        ]
      }
    },
    "/service/householdpremiumservice/action/list": {
      "post": {
        "description": "Returns all the premium services allowed for the household",
        "operationId": "householdPremiumService.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaHouseholdPremiumServiceListResponse"
            }
          }
        },
        "tags": [
          "householdPremiumService"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": []
      }
    },
    "/service/householdquota/action/get": {
      "post": {
        "description": "Returns the household&#39;s quota data",
        "operationId": "householdQuota.get",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaHouseholdQuota"
            }
          },
          "x-Errors": {
            "description": "* `AccountCdvrNotEnabled`: Your account is not enabled for the C-DVR (recording) feature\n* `ServiceNotAllowed`: The user is not entitled to the premium service that he or she is trying to access\n* `UserWithNoDomain`: This user is not associated with any household.\n* `UserDoesNotExist`: This user doesn't exist\n* `UserNotInDomain`: The user you selected is not part of the current household\n* `UserSuspended`: Unable to perform this action due to a household suspension\n* `DomainNotExists`: The household you selected does not exist\n* `HouseholdUserFailed`: The system was unable to register this household user"
          }
        },
        "tags": [
          "householdQuota"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": []
      }
    },
    "/service/householdsegment/action/add": {
      "post": {
        "description": "householdSegment add",
        "operationId": "householdSegment.add",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "objectToAdd": {
                  "$ref": "#/definitions/KalturaHouseholdSegment"
                }
              },
              "required": [
                "objectToAdd"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaHouseholdSegment"
            }
          },
          "x-Errors": {
            "description": "* `HouseholdRequired`: The mandatory household field is missing from the request.\n* `DomainNotExists`: The household you selected does not exist\n* `ObjectNotExist`: The object requested doesn't exist"
          }
        },
        "tags": [
          "householdSegment"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "objectToAdd"
        ]
      }
    },
    "/service/householdsegment/action/delete": {
      "post": {
        "description": "Remove segment from household",
        "operationId": "householdSegment.delete",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "x-Errors": {
            "description": "* `HouseholdRequired`: The mandatory household field is missing from the request.\n* `ObjectNotExist`: The object requested doesn't exist"
          }
        },
        "tags": [
          "householdSegment"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id"
        ]
      }
    },
    "/service/householdsegment/action/list": {
      "post": {
        "description": "Gets all HouseholdSegment items for a household",
        "operationId": "householdSegment.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaHouseholdSegmentFilter"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaHouseholdSegmentListResponse"
            }
          }
        },
        "tags": [
          "householdSegment"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter"
        ]
      }
    },
    "/service/householduser/action/add": {
      "post": {
        "description": "Adds a user to household",
        "operationId": "householdUser.add",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "householdUser": {
                  "$ref": "#/definitions/KalturaHouseholdUser"
                }
              },
              "required": [
                "householdUser"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaHouseholdUser"
            }
          },
          "x-Errors": {
            "description": "* `DomainSuspended`: Unable to perform the action requested because the household has been suspended\n* `InvalidUser`: The user you selected for this action is not a valid user\n* `UserAlreadyInDomain`: Unable to add a user to the same household twice\n* `UserNotAllowed`: The user you selected for this action doesn't have the necessary permissions\n* `ActionUserNotMaster`: Unable to perform this action: the user is not the household master\n* `NoUsersInDomain`: There are no users associated with this household\n* `UserExistsInOtherDomains`: Unable to add this user to this household because the user is already associated with another household\n* `ExceededUserLimit`: Unable to perform this action: you have exceeded the number of users for this household\n* `RequestFailed`: The request you entered could not be completed at this time"
          }
        },
        "tags": [
          "householdUser"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "householdUser"
        ]
      }
    },
    "/service/householduser/action/delete": {
      "post": {
        "description": "Removes a user from household",
        "operationId": "householdUser.delete",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "string"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `DomainNotExists`: The household you selected does not exist\n* `LimitationPeriod`: Unable to remove the device or user from the household at this time because of the limitation period\n* `UserNotExistsInDomain`: The user you selected for this action does not exist in the household\n* `InvalidUser`: The user you selected for this action is not a valid user\n* `DomainSuspended`: Unable to perform the action requested because the household has been suspended\n* `NoUsersInDomain`: There are no users associated with this household\n* `UserNotAllowed`: The user you selected for this action doesn't have the necessary permissions"
          }
        },
        "tags": [
          "householdUser"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id"
        ]
      }
    },
    "/service/householduser/action/list": {
      "post": {
        "description": "Returns the users within the household",
        "operationId": "householdUser.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaHouseholdUserFilter"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaHouseholdUserListResponse"
            }
          },
          "x-Errors": {
            "description": "* `DomainNotExists`: The household you selected does not exist"
          }
        },
        "tags": [
          "householdUser"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter"
        ]
      }
    },
    "/service/image/action/add": {
      "post": {
        "description": "Add a new image",
        "operationId": "image.add",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "image": {
                  "$ref": "#/definitions/KalturaImage"
                }
              },
              "required": [
                "image"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaImage"
            }
          },
          "x-Errors": {
            "description": "* `AssetDoesNotExist`\n* `ChannelDoesNotExist`\n* `ImageTypeDoesNotExist`\n* `ImageTypeAlreadyInUse`\n* `AccountIsNotOpcSupported`\n* `ImageDoesNotExist`\n* `DefaultImageInvalidImageType`\n* `RatioDoesNotExist`\n* `ObjectNotExist`: The object requested doesn't exist\n* `ActionIsNotAllowed`: The action requested is not allowed"
          }
        },
        "tags": [
          "image"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "image"
        ]
      }
    },
    "/service/image/action/delete": {
      "post": {
        "description": "Delete an existing image",
        "operationId": "image.delete",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `ImageDoesNotExist`"
          }
        },
        "tags": [
          "image"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id"
        ]
      }
    },
    "/service/image/action/list": {
      "post": {
        "description": "Get the list of images by different filtering",
        "operationId": "image.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaImageFilter"
                }
              },
              "required": [
                "filter"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaImageListResponse"
            }
          }
        },
        "tags": [
          "image"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter"
        ]
      }
    },
    "/service/image/action/setContent": {
      "post": {
        "description": "Sets the content of an existing image",
        "operationId": "image.setContent",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "content": {
                  "$ref": "#/definitions/KalturaContentResource"
                },
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id",
                "content"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "x-Errors": {
            "description": "* `ImageDoesNotExist`\n* `ImageTypeDoesNotExist`\n* `FileDoesNotExists`: The file does not exist in a given path\n* `InvalidRatioForImage`\n* `InvalidUrlForImage`"
          }
        },
        "tags": [
          "image"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id",
          "content"
        ]
      }
    },
    "/service/imagetype/action/add": {
      "post": {
        "description": "Add a new image type",
        "operationId": "imageType.add",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "imageType": {
                  "$ref": "#/definitions/KalturaImageType"
                }
              },
              "required": [
                "imageType"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaImageType"
            }
          },
          "x-Errors": {
            "description": "* `ImageTypeAlreadyInUse`\n* `ImageDoesNotExist`\n* `RatioDoesNotExist`"
          }
        },
        "tags": [
          "imageType"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "imageType"
        ]
      }
    },
    "/service/imagetype/action/delete": {
      "post": {
        "description": "Delete an existing image type",
        "operationId": "imageType.delete",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `ImageTypeDoesNotExist`"
          }
        },
        "tags": [
          "imageType"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id"
        ]
      }
    },
    "/service/imagetype/action/list": {
      "post": {
        "description": "Get the list of image types for the partner",
        "operationId": "imageType.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaImageTypeFilter"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaImageTypeListResponse"
            }
          }
        },
        "tags": [
          "imageType"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter"
        ]
      }
    },
    "/service/imagetype/action/update": {
      "post": {
        "description": "Update an existing image type",
        "operationId": "imageType.update",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                },
                "imageType": {
                  "$ref": "#/definitions/KalturaImageType"
                }
              },
              "required": [
                "id",
                "imageType"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaImageType"
            }
          },
          "x-Errors": {
            "description": "* `ImageTypeAlreadyInUse`\n* `ImageTypeDoesNotExist`\n* `ImageDoesNotExist`\n* `DefaultImageInvalidImageType`\n* `RatioDoesNotExist`"
          }
        },
        "tags": [
          "imageType"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id",
          "imageType"
        ]
      }
    },
    "/service/inboxmessage/action/get": {
      "post": {
        "description": "TBD",
        "operationId": "inboxMessage.get",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "string"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaInboxMessage"
            }
          },
          "x-Errors": {
            "description": "* `UserInboxMessagesNotExist`: Requested inbox message was not found.\n* `FeatureDisabled`: This feature is disabled.\n* `MessageIdentifierRequired`: The mandatory message ID field is missing in the request."
          }
        },
        "tags": [
          "inboxMessage"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id"
        ]
      }
    },
    "/service/inboxmessage/action/list": {
      "post": {
        "description": "List inbox messages",
        "operationId": "inboxMessage.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaInboxMessageFilter"
                },
                "pager": {
                  "$ref": "#/definitions/KalturaFilterPager"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaInboxMessageListResponse"
            }
          },
          "x-Errors": {
            "description": "* `FeatureDisabled`: This feature is disabled."
          }
        },
        "tags": [
          "inboxMessage"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter",
          "pager"
        ]
      }
    },
    "/service/inboxmessage/action/updateStatus": {
      "post": {
        "description": "Updates the message status.",
        "operationId": "inboxMessage.updateStatus",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "string"
                },
                "status": {
                  "enum": [
                    "Unread",
                    "Read",
                    "Deleted"
                  ],
                  "type": "string",
                  "x-enumLabels": [
                    "UNREAD",
                    "READ",
                    "DELETED"
                  ],
                  "x-enumType": "KalturaInboxMessageStatus"
                }
              },
              "required": [
                "id",
                "status"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `UserInboxMessagesNotExist`: Requested inbox message was not found.\n* `FeatureDisabled`: This feature is disabled.\n* `MessageIdentifierRequired`: The mandatory message ID field is missing in the request."
          }
        },
        "tags": [
          "inboxMessage"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id",
          "status"
        ]
      }
    },
    "/service/ingestprofile/action/add": {
      "post": {
        "description": "Insert new ingest profile for partner",
        "operationId": "IngestProfile.add",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "ingestProfile": {
                  "$ref": "#/definitions/KalturaIngestProfile"
                }
              },
              "required": [
                "ingestProfile"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaIngestProfile"
            }
          },
          "x-Errors": {
            "description": "* `IngestProfileNotExists`\n* `NameRequired`: The mandatory name field is missing from the request\n* `ExternalIdentifierMustBeUnique`: External identifier must be unique."
          }
        },
        "tags": [
          "IngestProfile"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "ingestProfile"
        ]
      }
    },
    "/service/ingestprofile/action/delete": {
      "post": {
        "description": "Delete ingest profiles by ingest profiles id",
        "operationId": "IngestProfile.delete",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "ingestProfileId": {
                  "type": "integer"
                }
              },
              "required": [
                "ingestProfileId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `IngestProfileNotExists`"
          }
        },
        "tags": [
          "IngestProfile"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "ingestProfileId"
        ]
      }
    },
    "/service/ingestprofile/action/list": {
      "post": {
        "description": "Returns all ingest profiles for partner",
        "operationId": "IngestProfile.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaIngestProfileListResponse"
            }
          }
        },
        "tags": [
          "IngestProfile"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": []
      }
    },
    "/service/ingestprofile/action/update": {
      "post": {
        "description": "Update ingest profile details",
        "operationId": "IngestProfile.update",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "ingestProfile": {
                  "$ref": "#/definitions/KalturaIngestProfile"
                },
                "ingestProfileId": {
                  "type": "integer"
                }
              },
              "required": [
                "ingestProfileId",
                "ingestProfile"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaIngestProfile"
            }
          },
          "x-Errors": {
            "description": "* `IngestProfileNotExists`\n* `NameRequired`: The mandatory name field is missing from the request\n* `ExternalIdentifierMustBeUnique`: External identifier must be unique."
          }
        },
        "tags": [
          "IngestProfile"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "ingestProfileId",
          "ingestProfile"
        ]
      }
    },
    "/service/ingeststatus/action/getEpgDetails": {
      "post": {
        "description": "Returns information about specific Ingest job",
        "operationId": "ingestStatus.getEpgDetails",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "ingestId": {
                  "type": "integer"
                }
              },
              "required": [
                "ingestId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaIngestEpgDetails"
            }
          }
        },
        "tags": [
          "ingestStatus"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "ingestId"
        ]
      }
    },
    "/service/ingeststatus/action/getEpgList": {
      "post": {
        "description": "Response with list of ingest jobs.",
        "operationId": "ingestStatus.getEpgList",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaIngestByCompoundFilter"
                },
                "idsFilter": {
                  "$ref": "#/definitions/KalturaIngestByIdsFilter"
                },
                "pager": {
                  "$ref": "#/definitions/KalturaFilterPager"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaIngestStatusEpgListResponse"
            }
          }
        },
        "tags": [
          "ingestStatus"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "idsFilter",
          "filter",
          "pager"
        ]
      }
    },
    "/service/ingeststatus/action/getEpgProgramResultList": {
      "post": {
        "description": "Get as input ingest job id, filter and pager and response with page of filtered detailed ingest job results.",
        "operationId": "ingestStatus.getEpgProgramResultList",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaIngestEpgProgramResultFilter"
                },
                "ingestId": {
                  "type": "integer"
                },
                "pager": {
                  "$ref": "#/definitions/KalturaFilterPager"
                }
              },
              "required": [
                "ingestId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaIngestStatusEpgProgramResultListResponse"
            }
          }
        },
        "tags": [
          "ingestStatus"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "ingestId",
          "filter",
          "pager"
        ]
      }
    },
    "/service/ingeststatus/action/getPartnerConfiguration": {
      "post": {
        "description": "Returns Core Ingest service partner configurations",
        "operationId": "ingestStatus.getPartnerConfiguration",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaIngestStatusPartnerConfiguration"
            }
          }
        },
        "tags": [
          "ingestStatus"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": []
      }
    },
    "/service/ingeststatus/action/getVodAssetResult": {
      "post": {
        "description": "List detailed results of ingested assets.",
        "operationId": "ingestStatus.getVodAssetResult",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaVodIngestAssetResultFilter"
                },
                "pager": {
                  "$ref": "#/definitions/KalturaFilterPager"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaVodIngestAssetResultResponse"
            }
          }
        },
        "tags": [
          "ingestStatus"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter",
          "pager"
        ]
      }
    },
    "/service/ingeststatus/action/updatePartnerConfiguration": {
      "post": {
        "description": "Returns Core Ingest service partner configurations",
        "operationId": "ingestStatus.updatePartnerConfiguration",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "config": {
                  "$ref": "#/definitions/KalturaIngestStatusPartnerConfiguration"
                }
              },
              "required": [
                "config"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "ingestStatus"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "config"
        ]
      }
    },
    "/service/iot/action/getClientConfiguration": {
      "post": {
        "description": "Get iot Client Configuration",
        "operationId": "iot.getClientConfiguration",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaIotClientConfiguration"
            }
          }
        },
        "tags": [
          "iot"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": []
      }
    },
    "/service/iot/action/register": {
      "post": {
        "description": "Register IOT device",
        "operationId": "iot.register",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          }
        },
        "tags": [
          "iot"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": []
      }
    },
    "/service/iotprofile/action/add": {
      "post": {
        "description": "Add new environment in aws",
        "operationId": "iotProfile.add",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          }
        },
        "tags": [
          "iotProfile"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": []
      }
    },
    "/service/label/action/add": {
      "post": {
        "description": "Create a new label associated with a predefined entity attribute. Currently supports only labels on KalturaMediaFile.",
        "operationId": "label.add",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "label": {
                  "$ref": "#/definitions/KalturaLabel"
                }
              },
              "required": [
                "label"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaLabel"
            }
          },
          "x-Errors": {
            "description": "* `LabelAlreadyInUse`"
          }
        },
        "tags": [
          "label"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "label"
        ]
      }
    },
    "/service/label/action/delete": {
      "post": {
        "description": "Deletes the existing label by its identifier.",
        "operationId": "label.delete",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `LabelDoesNotExist`"
          }
        },
        "tags": [
          "label"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id"
        ]
      }
    },
    "/service/label/action/list": {
      "post": {
        "description": "Gets list of labels which meet the filter criteria.",
        "operationId": "label.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaLabelFilter"
                },
                "pager": {
                  "$ref": "#/definitions/KalturaFilterPager"
                }
              },
              "required": [
                "filter"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaLabelListResponse"
            }
          }
        },
        "tags": [
          "label"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter",
          "pager"
        ]
      }
    },
    "/service/label/action/update": {
      "post": {
        "description": "Updates the existing label with a new value.",
        "operationId": "label.update",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                },
                "label": {
                  "$ref": "#/definitions/KalturaLabel"
                }
              },
              "required": [
                "id",
                "label"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaLabel"
            }
          },
          "x-Errors": {
            "description": "* `LabelAlreadyInUse`\n* `LabelDoesNotExist`"
          }
        },
        "tags": [
          "label"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id",
          "label"
        ]
      }
    },
    "/service/language/action/list": {
      "post": {
        "description": "Get the list of languages for the partner with option to filter by language codes",
        "operationId": "language.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaLanguageFilter"
                }
              },
              "required": [
                "filter"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaLanguageListResponse"
            }
          }
        },
        "tags": [
          "language"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter"
        ]
      }
    },
    "/service/licensedurl/action/get": {
      "post": {
        "description": "Get the URL for playing an asset - program, media or recording",
        "operationId": "licensedUrl.get",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "request": {
                  "$ref": "#/definitions/KalturaLicensedUrlBaseRequest"
                }
              },
              "required": [
                "request"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaLicensedUrl"
            }
          },
          "x-Errors": {
            "description": "* `WrongPasswordOrUserName`: Unable to authenticate this user - the user name or password are incorrect. Please re-enter this information\n* `NetworkRuleBlock`\n* `DeviceNotInDomain`: The device you selected is not part of the current household\n* `InvalidBaseLink`: The CDN code that was provided is incorrect\n* `MediaConcurrencyLimitation`: Media concurrency limitation (according to DLM configuration)\n* `ConcurrencyLimitation`: Concurrency limitation (according to DLM configuration)\n* `LimitationPeriod`: Unable to remove the device or user from the household at this time because of the limitation period\n* `DeviceTypeNotAllowed`: The device type you selected is not supported by the system\n* `DeviceAlreadyExists`: The device you are trying to add already exists in the system\n* `DeviceExistsInOtherDomains`: Unable to add this device to this household because the device is already associated with another household\n* `ExceededLimit`: The number of devices or users has exceeded the household limit\n* `DomainSuspended`: Unable to perform the action requested because the household has been suspended\n* `UserSuspended`: Unable to perform this action due to a household suspension\n* `UserWithNoDomain`: This user is not associated with any household.\n* `UserDoesNotExist`: This user doesn't exist\n* `UserNotInDomain`: The user you selected is not part of the current household\n* `DomainNotExists`: The household you selected does not exist\n* `ServiceNotAllowed`: The user is not entitled to the premium service that he or she is trying to access\n* `NotEntitled`: The user does not have permission to access this content\n* `RecordingNotFound`: The program ID provided is invalid\n* `RecordingStatusNotValid`: Unable to perform the action requested because of the current recording status. Actions are only allowed for these statuses:Recorded, Recording, Scheduled\n* `ProgramDoesntExist`: The EPG program requested doesn't exist\n* `RecordingPlaybackNotAllowedForNonExistingEpgChannel`: Recording playback is not allowed for a non-existing linear channel\n* `RecordingPlaybackNotAllowedForNotEntitledEpgChannel`: Recording playback is not allowed for non-entitled linear channels"
          }
        },
        "tags": [
          "licensedUrl"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "request"
        ]
      }
    },
    "/service/lineup/action/get": {
      "post": {
        "description": "Returns regional lineup (list of lineup channel asset objects) based on the requester session characteristics and his region.\r\n            NOTE: Calling lineup.get action using HTTP POST is supported only for tests (non production environment) and is rate limited or blocked.\r\n            For production, HTTP GET shall be used: GET https://{Host_IP}/{build version}/api_v3/service/lineup/action/get",
        "operationId": "lineup.get",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "pageIndex": {
                  "type": "integer"
                },
                "pageSize": {
                  "type": "integer"
                }
              },
              "required": [
                "pageIndex",
                "pageSize"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaLineupChannelAssetListResponse"
            }
          }
        },
        "tags": [
          "lineup"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "pageIndex",
          "pageSize"
        ]
      }
    },
    "/service/lineup/action/list": {
      "post": {
        "description": "Returns list of lineup regional linear channels associated with one LCN and its region information. Allows to apply sorting and filtering by LCN and linear channels.",
        "operationId": "lineup.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaLineupRegionalChannelFilter"
                },
                "pager": {
                  "$ref": "#/definitions/KalturaFilterPager"
                }
              },
              "required": [
                "filter"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaLineupChannelAssetListResponse"
            }
          },
          "x-Errors": {
            "description": "* `RegionNotFound`: Region was not found"
          }
        },
        "tags": [
          "lineup"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter",
          "pager"
        ]
      }
    },
    "/service/lineup/action/sendUpdatedNotification": {
      "post": {
        "description": "Sends lineup update requested notification.",
        "operationId": "lineup.sendUpdatedNotification",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "regionIds": {
                  "type": "string"
                }
              },
              "required": [
                "regionIds"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `RegionNotFound`: Region was not found"
          }
        },
        "tags": [
          "lineup"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "regionIds"
        ]
      }
    },
    "/service/livetovod/action/getConfiguration": {
      "post": {
        "description": "Get existing L2V configuration for both the partner level and all channels level.",
        "operationId": "liveToVod.getConfiguration",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaLiveToVodFullConfiguration"
            }
          }
        },
        "tags": [
          "liveToVod"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": []
      }
    },
    "/service/livetovod/action/getLinearAssetConfiguration": {
      "post": {
        "description": "Get existing L2V configuration for a specific linear asset.",
        "operationId": "liveToVod.getLinearAssetConfiguration",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "linearAssetId": {
                  "type": "integer"
                }
              },
              "required": [
                "linearAssetId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaLiveToVodLinearAssetConfiguration"
            }
          }
        },
        "tags": [
          "liveToVod"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "linearAssetId"
        ]
      }
    },
    "/service/livetovod/action/getPartnerConfiguration": {
      "post": {
        "description": "Get existing L2V partner configuration.",
        "operationId": "liveToVod.getPartnerConfiguration",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaLiveToVodPartnerConfiguration"
            }
          }
        },
        "tags": [
          "liveToVod"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": []
      }
    },
    "/service/livetovod/action/updateLinearAssetConfiguration": {
      "post": {
        "description": "Set L2V configuration for a specific Linear channel.",
        "operationId": "liveToVod.updateLinearAssetConfiguration",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "configuration": {
                  "$ref": "#/definitions/KalturaLiveToVodLinearAssetConfiguration"
                }
              },
              "required": [
                "configuration"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaLiveToVodLinearAssetConfiguration"
            }
          }
        },
        "tags": [
          "liveToVod"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "configuration"
        ]
      }
    },
    "/service/livetovod/action/updatePartnerConfiguration": {
      "post": {
        "description": "Set L2V configuration on the partner level.",
        "operationId": "liveToVod.updatePartnerConfiguration",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "configuration": {
                  "$ref": "#/definitions/KalturaLiveToVodPartnerConfiguration"
                }
              },
              "required": [
                "configuration"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaLiveToVodPartnerConfiguration"
            }
          },
          "x-Errors": {
            "description": "* `L2VMetadataClassifierIsNotValid`"
          }
        },
        "tags": [
          "liveToVod"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "configuration"
        ]
      }
    },
    "/service/mediaconcurrencyrule/action/list": {
      "post": {
        "description": "Get the list of meta mappings for the partner",
        "operationId": "mediaConcurrencyRule.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaMediaConcurrencyRuleListResponse"
            }
          }
        },
        "tags": [
          "mediaConcurrencyRule"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": []
      }
    },
    "/service/mediafile/action/add": {
      "post": {
        "description": "Add a new media file",
        "operationId": "mediaFile.add",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "mediaFile": {
                  "$ref": "#/definitions/KalturaMediaFile"
                }
              },
              "required": [
                "mediaFile"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaMediaFile"
            }
          },
          "x-Errors": {
            "description": "* `MediaFileTypeDoesNotExist`\n* `MediaFileDoesNotExist`\n* `AssetDoesNotExist`\n* `CdnAdapterProfileDoesNotExist`\n* `DefaultCdnAdapterProfileNotConfigurd`\n* `MediaFileWithThisTypeAlreadyExistForAsset`\n* `DynamicDataKeyDoesNotExist`"
          }
        },
        "tags": [
          "mediaFile"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "mediaFile"
        ]
      }
    },
    "/service/mediafile/action/delete": {
      "post": {
        "description": "Delete an existing media file",
        "operationId": "mediaFile.delete",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `AssetDoesNotExist`\n* `MediaFileDoesNotExist`"
          }
        },
        "tags": [
          "mediaFile"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id"
        ]
      }
    },
    "/service/mediafile/action/list": {
      "post": {
        "description": "Returns a list of media-file",
        "operationId": "mediaFile.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaMediaFileFilter"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaMediaFileListResponse"
            }
          }
        },
        "tags": [
          "mediaFile"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter"
        ]
      }
    },
    "/service/mediafile/action/update": {
      "post": {
        "description": "update an existing media file",
        "operationId": "mediaFile.update",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                },
                "mediaFile": {
                  "$ref": "#/definitions/KalturaMediaFile"
                }
              },
              "required": [
                "id",
                "mediaFile"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaMediaFile"
            }
          },
          "x-Errors": {
            "description": "* `MediaFileDoesNotExist`\n* `MediaFileNotBelongToAsset`\n* `MediaFileTypeDoesNotExist`\n* `MediaFileWithThisTypeAlreadyExistForAsset`\n* `CdnAdapterProfileDoesNotExist`\n* `DefaultCdnAdapterProfileNotConfigurd`\n* `DynamicDataKeyDoesNotExist`"
          }
        },
        "tags": [
          "mediaFile"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id",
          "mediaFile"
        ]
      }
    },
    "/service/mediafiledynamicdata/action/add": {
      "post": {
        "description": "Add a dynamicData value to the values list of a specific key name in a specific mediaFileTypeId",
        "operationId": "mediaFileDynamicData.add",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "dynamicData": {
                  "$ref": "#/definitions/KalturaMediaFileDynamicData"
                }
              },
              "required": [
                "dynamicData"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaMediaFileDynamicData"
            }
          },
          "x-Errors": {
            "description": "* `DynamicDataKeyDoesNotExist`"
          }
        },
        "tags": [
          "mediaFileDynamicData"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "dynamicData"
        ]
      }
    },
    "/service/mediafiledynamicdata/action/delete": {
      "post": {
        "description": "Delete an existing DynamicData value",
        "operationId": "mediaFileDynamicData.delete",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `DynamicDataKeyValueDoesNotExist`"
          }
        },
        "tags": [
          "mediaFileDynamicData"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id"
        ]
      }
    },
    "/service/mediafiledynamicdata/action/list": {
      "post": {
        "description": "List and filter existing mediaFile dynamicData values",
        "operationId": "mediaFileDynamicData.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaMediaFileDynamicDataFilter"
                },
                "pager": {
                  "$ref": "#/definitions/KalturaFilterPager"
                }
              },
              "required": [
                "filter"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaMediaFileDynamicDataListResponse"
            }
          }
        },
        "tags": [
          "mediaFileDynamicData"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter",
          "pager"
        ]
      }
    },
    "/service/mediafiletype/action/add": {
      "post": {
        "description": "Add new media-file type",
        "operationId": "mediaFileType.add",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "mediaFileType": {
                  "$ref": "#/definitions/KalturaMediaFileType"
                }
              },
              "required": [
                "mediaFileType"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaMediaFileType"
            }
          },
          "x-Errors": {
            "description": "* `MediaFileTypeNameAlreadyInUse`\n* `MediaFileTypeDoesNotExist`"
          }
        },
        "tags": [
          "mediaFileType"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "mediaFileType"
        ]
      }
    },
    "/service/mediafiletype/action/delete": {
      "post": {
        "description": "Delete media-file type by id",
        "operationId": "mediaFileType.delete",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `MediaFileTypeDoesNotExist`"
          }
        },
        "tags": [
          "mediaFileType"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id"
        ]
      }
    },
    "/service/mediafiletype/action/list": {
      "post": {
        "description": "Returns a list of media-file types",
        "operationId": "mediaFileType.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaMediaFileTypeListResponse"
            }
          }
        },
        "tags": [
          "mediaFileType"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": []
      }
    },
    "/service/mediafiletype/action/update": {
      "post": {
        "description": "Update existing media-file type",
        "operationId": "mediaFileType.update",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                },
                "mediaFileType": {
                  "$ref": "#/definitions/KalturaMediaFileType"
                }
              },
              "required": [
                "id",
                "mediaFileType"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaMediaFileType"
            }
          },
          "x-Errors": {
            "description": "* `MediaFileTypeNameAlreadyInUse`\n* `MediaFileTypeDoesNotExist`"
          }
        },
        "tags": [
          "mediaFileType"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id",
          "mediaFileType"
        ]
      }
    },
    "/service/messagetemplate/action/get": {
      "post": {
        "description": "Retrieve a message template used in push notifications and inbox",
        "operationId": "messageTemplate.get",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "messageType": {
                  "enum": [
                    "Series",
                    "Reminder",
                    "Churn",
                    "SeriesReminder",
                    "InterestVod",
                    "InterestEPG"
                  ],
                  "type": "string",
                  "x-enumLabels": [
                    "SERIES",
                    "REMINDER",
                    "CHURN",
                    "SERIESREMINDER",
                    "INTERESTVOD",
                    "INTERESTEPG"
                  ],
                  "x-enumType": "KalturaMessageTemplateType"
                }
              },
              "required": [
                "messageType"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaMessageTemplate"
            }
          },
          "x-Errors": {
            "description": "* `MessageTemplateNotFound`: Unable to find the message template."
          }
        },
        "tags": [
          "messageTemplate"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "messageType"
        ]
      }
    },
    "/service/messagetemplate/action/update": {
      "post": {
        "description": "Set the account’s push notifications and inbox messages templates",
        "operationId": "messageTemplate.update",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "messageType": {
                  "enum": [
                    "Series",
                    "Reminder",
                    "Churn",
                    "SeriesReminder",
                    "InterestVod",
                    "InterestEPG"
                  ],
                  "type": "string",
                  "x-enumLabels": [
                    "SERIES",
                    "REMINDER",
                    "CHURN",
                    "SERIESREMINDER",
                    "INTERESTVOD",
                    "INTERESTEPG"
                  ],
                  "x-enumType": "KalturaMessageTemplateType"
                },
                "template": {
                  "$ref": "#/definitions/KalturaMessageTemplate"
                }
              },
              "required": [
                "messageType",
                "template"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaMessageTemplate"
            }
          },
          "x-Errors": {
            "description": "* `MessagePlaceholdersInvalid`: The message placeholder is invalid.\n* `DatetimeFormatIsInvalid`: The message date-time format Is Invalid.\n* `URLPlaceholdersInvalid`: The URL placeholder specified is invalid."
          }
        },
        "tags": [
          "messageTemplate"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "messageType",
          "template"
        ]
      }
    },
    "/service/meta/action/add": {
      "post": {
        "description": "Add a new meta",
        "operationId": "meta.add",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "meta": {
                  "$ref": "#/definitions/KalturaMeta"
                }
              },
              "required": [
                "meta"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaMeta"
            }
          },
          "x-Errors": {
            "description": "* `MetaSystemNameAlreadyInUse`: The meta system name is already in use\n* `InvalidMutlipleValueForMetaType`\n* `AccountIsNotOpcSupported`\n* `ParentIdShouldNotPointToItself`: ParentId should not point to itself\n* `ParentIdNotExist`\n* `MetaDoesNotExist`: The specified meta id does not exist"
          }
        },
        "tags": [
          "meta"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "meta"
        ]
      }
    },
    "/service/meta/action/delete": {
      "post": {
        "description": "Delete an existing meta",
        "operationId": "meta.delete",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `AccountIsNotOpcSupported`\n* `MetaDoesNotExist`: The specified meta id does not exist\n* `CanNotDeletePredefinedMeta`: can not delete predefined meta\n* `CanNotDeleteConnectingAssetStructMeta`\n* `CanNotDeleteObjectVirtualAssetMeta`: can not delete object virtual asset meta"
          }
        },
        "tags": [
          "meta"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id"
        ]
      }
    },
    "/service/meta/action/list": {
      "post": {
        "description": "Return a list of metas for the account with optional filter",
        "operationId": "meta.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaMetaFilter"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaMetaListResponse"
            }
          }
        },
        "tags": [
          "meta"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter"
        ]
      }
    },
    "/service/meta/action/update": {
      "post": {
        "description": "Update an existing meta",
        "operationId": "meta.update",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                },
                "meta": {
                  "$ref": "#/definitions/KalturaMeta"
                }
              },
              "required": [
                "id",
                "meta"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaMeta"
            }
          },
          "x-Errors": {
            "description": "* `MetaDoesNotExist`: The specified meta id does not exist\n* `AccountIsNotOpcSupported`\n* `ParentIdShouldNotPointToItself`: ParentId should not point to itself\n* `ParentIdNotExist`"
          }
        },
        "tags": [
          "meta"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id",
          "meta"
        ]
      }
    },
    "/service/notification/action/register": {
      "post": {
        "description": "TBD",
        "operationId": "notification.register",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "identifier": {
                  "type": "string"
                },
                "type": {
                  "enum": [
                    "announcement",
                    "system",
                    "Reminder",
                    "series_reminder"
                  ],
                  "type": "string",
                  "x-enumLabels": [
                    "ANNOUNCEMENT",
                    "SYSTEM",
                    "REMINDER",
                    "SERIES_REMINDER"
                  ],
                  "x-enumType": "KalturaNotificationType"
                }
              },
              "required": [
                "identifier",
                "type"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaRegistryResponse"
            }
          },
          "x-Errors": {
            "description": "* `ItemNotFound`: Unable to find the item you requested\n* `AnnouncementNotFound`: The announcement requested couldn't be found.\n* `ReminderNotFound`"
          }
        },
        "tags": [
          "notification"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "identifier",
          "type"
        ]
      }
    },
    "/service/notification/action/sendPush": {
      "post": {
        "description": "Sends push notification to user devices",
        "operationId": "notification.sendPush",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "pushMessage": {
                  "$ref": "#/definitions/KalturaPushMessage"
                },
                "userId": {
                  "type": "integer"
                }
              },
              "required": [
                "userId",
                "pushMessage"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          }
        },
        "tags": [
          "notification"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "userId",
          "pushMessage"
        ]
      }
    },
    "/service/notification/action/sendSms": {
      "post": {
        "description": "Sends SMS notification to user",
        "operationId": "notification.sendSms",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "adapterData": {
                  "type": "object"
                },
                "message": {
                  "type": "string"
                },
                "phoneNumber": {
                  "type": "string"
                }
              },
              "required": [
                "message"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          }
        },
        "tags": [
          "notification"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "message",
          "phoneNumber",
          "adapterData"
        ]
      }
    },
    "/service/notification/action/setDevicePushToken": {
      "post": {
        "description": "Registers the device push token to the push service",
        "operationId": "notification.setDevicePushToken",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "pushToken": {
                  "type": "string"
                }
              },
              "required": [
                "pushToken"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          }
        },
        "tags": [
          "notification"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "pushToken"
        ]
      }
    },
    "/service/notificationspartnersettings/action/get": {
      "post": {
        "description": "Retrieve the partner notification settings.",
        "operationId": "notificationsPartnerSettings.get",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaNotificationsPartnerSettings"
            }
          }
        },
        "tags": [
          "notificationsPartnerSettings"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": []
      }
    },
    "/service/notificationspartnersettings/action/update": {
      "post": {
        "description": "Update the account notification settings",
        "operationId": "notificationsPartnerSettings.update",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "settings": {
                  "$ref": "#/definitions/KalturaNotificationsPartnerSettings"
                }
              },
              "required": [
                "settings"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `PushNotificationFalse`: Push notifications are disabled.\n* `MailNotificationAdapterNotExist`\n* `InvalidNotificationSettingsSetup`\n* `NonExistingDeviceFamilyIds`\n* `AssetDoesNotExist`"
          }
        },
        "tags": [
          "notificationsPartnerSettings"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "settings"
        ]
      }
    },
    "/service/notificationssettings/action/get": {
      "post": {
        "description": "Retrieve the user’s notification settings.",
        "operationId": "notificationsSettings.get",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaNotificationsSettings"
            }
          }
        },
        "tags": [
          "notificationsSettings"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": []
      }
    },
    "/service/notificationssettings/action/update": {
      "post": {
        "description": "Update the user’s notification settings.",
        "operationId": "notificationsSettings.update",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "settings": {
                  "$ref": "#/definitions/KalturaNotificationsSettings"
                }
              },
              "required": [
                "settings"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `NoNotificationSettingsSent`: The updated or new notification settings weren't received by the Web service because of an internal error."
          }
        },
        "tags": [
          "notificationsSettings"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "settings"
        ]
      }
    },
    "/service/notificationssettings/action/updateWithToken": {
      "post": {
        "description": "Update the user’s notification settings.",
        "operationId": "notificationsSettings.updateWithToken",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "partnerId": {
                  "type": "integer"
                },
                "settings": {
                  "$ref": "#/definitions/KalturaNotificationsSettings"
                },
                "token": {
                  "type": "string"
                }
              },
              "required": [
                "settings",
                "token",
                "partnerId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `InvalidToken`\n* `NoNotificationSettingsSent`: The updated or new notification settings weren't received by the Web service because of an internal error."
          }
        },
        "tags": [
          "notificationsSettings"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "settings",
          "token",
          "partnerId"
        ]
      }
    },
    "/service/ossadapterprofile/action/add": {
      "post": {
        "description": "Insert new OSS adapter for partner",
        "operationId": "ossAdapterProfile.add",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "ossAdapter": {
                  "$ref": "#/definitions/KalturaOSSAdapterProfile"
                }
              },
              "required": [
                "ossAdapter"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaOSSAdapterProfile"
            }
          },
          "x-Errors": {
            "description": "* `NoOSSAdapterToInsert`: There's no OSS Adapater Profile to add to the system\n* `NameRequired`: The mandatory name field is missing from the request\n* `AdapterUrlRequired`: The mandatory adapter URL field is missing from the request\n* `ExternalIdentifierRequired`: The mandatory external identifier field is missing from the request.\n* `ExternalIdentifierMustBeUnique`: External identifier must be unique."
          }
        },
        "tags": [
          "ossAdapterProfile"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "ossAdapter"
        ]
      }
    },
    "/service/ossadapterprofile/action/delete": {
      "post": {
        "description": "Delete OSS adapter by OSS adapter id",
        "operationId": "ossAdapterProfile.delete",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "ossAdapterId": {
                  "type": "integer"
                }
              },
              "required": [
                "ossAdapterId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `OSSAdapterIdentifierRequired`: The mandatory OSS adapter identifier field is missing from the request\n* `OSSAdapterNotExist`: The requested OSS adapter doesn't exist\n* `ActionIsNotAllowed`: The action requested is not allowed"
          }
        },
        "tags": [
          "ossAdapterProfile"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "ossAdapterId"
        ]
      }
    },
    "/service/ossadapterprofile/action/generateSharedSecret": {
      "post": {
        "description": "Generate oss adapter shared secret",
        "operationId": "ossAdapterProfile.generateSharedSecret",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "ossAdapterId": {
                  "type": "integer"
                }
              },
              "required": [
                "ossAdapterId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaOSSAdapterProfile"
            }
          },
          "x-Errors": {
            "description": "* `OSSAdapterIdentifierRequired`: The mandatory OSS adapter identifier field is missing from the request\n* `OSSAdapterNotExist`: The requested OSS adapter doesn't exist"
          }
        },
        "tags": [
          "ossAdapterProfile"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "ossAdapterId"
        ]
      }
    },
    "/service/ossadapterprofile/action/get": {
      "post": {
        "description": "Returns all OSS adapters for partner : id + name",
        "operationId": "ossAdapterProfile.get",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaOSSAdapterProfile"
            }
          }
        },
        "tags": [
          "ossAdapterProfile"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id"
        ]
      }
    },
    "/service/ossadapterprofile/action/list": {
      "post": {
        "description": "Returns all OSS adapters for partner : id + name",
        "operationId": "ossAdapterProfile.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaOSSAdapterProfileListResponse"
            }
          }
        },
        "tags": [
          "ossAdapterProfile"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": []
      }
    },
    "/service/ossadapterprofile/action/update": {
      "post": {
        "description": "Update OSS adapter details",
        "operationId": "ossAdapterProfile.update",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "ossAdapter": {
                  "$ref": "#/definitions/KalturaOSSAdapterProfile"
                },
                "ossAdapterId": {
                  "type": "integer"
                }
              },
              "required": [
                "ossAdapterId",
                "ossAdapter"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaOSSAdapterProfile"
            }
          },
          "x-Errors": {
            "description": "* `OSSAdapterIdentifierRequired`: The mandatory OSS adapter identifier field is missing from the request\n* `NoOSSAdapterToUpdate`: There's no OSS adapter to update\n* `NameRequired`: The mandatory name field is missing from the request\n* `AdapterUrlRequired`: The mandatory adapter URL field is missing from the request\n* `ExternalIdentifierRequired`: The mandatory external identifier field is missing from the request.\n* `ExternalIdentifierMustBeUnique`: External identifier must be unique.\n* `OSSAdapterNotExist`: The requested OSS adapter doesn't exist"
          }
        },
        "tags": [
          "ossAdapterProfile"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "ossAdapterId",
          "ossAdapter"
        ]
      }
    },
    "/service/ottcategory/action/get": {
      "post": {
        "description": "Retrieve the list of categories (hierarchical) and their associated channels",
        "operationId": "ottCategory.get",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaOTTCategory"
            }
          },
          "x-Errors": {
            "description": "* `NotFound`: @objectType@ not found"
          }
        },
        "tags": [
          "ottCategory"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id"
        ]
      }
    },
    "/service/ottuser/action/activate": {
      "post": {
        "description": "Activate the account by activation token",
        "operationId": "ottUser.activate",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "activationToken": {
                  "type": "string"
                },
                "partnerId": {
                  "type": "integer"
                },
                "username": {
                  "type": "string"
                }
              },
              "required": [
                "partnerId",
                "username",
                "activationToken"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaOTTUser"
            }
          },
          "x-Errors": {
            "description": "* `WrongPasswordOrUserName`: Unable to authenticate this user - the user name or password are incorrect. Please re-enter this information\n* `UserNotActivated`: The user must be activated to log in"
          }
        },
        "tags": [
          "ottUser"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "partnerId",
          "username",
          "activationToken"
        ]
      }
    },
    "/service/ottuser/action/addRole": {
      "post": {
        "description": "Deprecate - use Register or Update actions instead by setting user.roleIds parameter",
        "operationId": "ottUser.addRole",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "roleId": {
                  "type": "integer"
                }
              },
              "required": [
                "roleId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `RoleAlreadyAssignedToUser`: This role has already been associated with this user"
          }
        },
        "tags": [
          "ottUser"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "roleId"
        ]
      }
    },
    "/service/ottuser/action/anonymousLogin": {
      "post": {
        "description": "Returns tokens (KS and refresh token) for anonymous access",
        "operationId": "ottUser.anonymousLogin",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "partnerId": {
                  "type": "integer"
                },
                "udid": {
                  "type": "string"
                }
              },
              "required": [
                "partnerId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaLoginSession"
            }
          }
        },
        "tags": [
          "ottUser"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "partnerId",
          "udid"
        ]
      }
    },
    "/service/ottuser/action/delete": {
      "post": {
        "description": "Permanently delete a user. User to delete cannot be an exclusive household master, and cannot be default user.",
        "operationId": "ottUser.delete",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `DomainSuspended`: Unable to perform the action requested because the household has been suspended\n* `LimitationPeriod`: Unable to remove the device or user from the household at this time because of the limitation period\n* `WrongPasswordOrUserName`: Unable to authenticate this user - the user name or password are incorrect. Please re-enter this information\n* `DefaultUserCannotBeDeleted`: Unable to delete the default household user\n* `ExclusiveMasterUserCannotBeDeleted`: The exclusive household master user can't be deleted\n* `UserSelfDeleteNotPermitted`: Self deletion is not permitted.\n* `NotAllowedToDelete`: Unable to delete this user from the account due to permission limitations\n* `DomainNotInitialized`: This household has not been initialized\n* `UserNotExistsInDomain`: The user you selected for this action does not exist in the household\n* `DomainNotExists`: The household you selected does not exist\n* `InvalidUser`: The user you selected for this action is not a valid user\n* `NoUsersInDomain`: There are no users associated with this household\n* `UserNotAllowed`: The user you selected for this action doesn't have the necessary permissions"
          }
        },
        "tags": [
          "ottUser"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": []
      }
    },
    "/service/ottuser/action/deleteDynamicData": {
      "post": {
        "description": "Deletes dynamic data item for a user.",
        "operationId": "ottUser.deleteDynamicData",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "key": {
                  "type": "string"
                }
              },
              "required": [
                "key"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `ItemNotFound`: Unable to find the item you requested"
          }
        },
        "tags": [
          "ottUser"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "key"
        ]
      }
    },
    "/service/ottuser/action/get": {
      "post": {
        "description": "Retrieving users&#39; data",
        "operationId": "ottUser.get",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaOTTUser"
            }
          },
          "x-Errors": {
            "description": "* `UserDoesNotExist`: This user doesn't exist"
          }
        },
        "tags": [
          "ottUser"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": []
      }
    },
    "/service/ottuser/action/getEncryptedUserId": {
      "post": {
        "description": "Returns the identifier of the user encrypted with SHA1 using configured key",
        "operationId": "ottUser.getEncryptedUserId",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaStringValue"
            }
          },
          "x-Errors": {
            "description": "* `MissingConfiguration`: Missing configuration [@configuration@]"
          }
        },
        "tags": [
          "ottUser"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": []
      }
    },
    "/service/ottuser/action/list": {
      "post": {
        "description": "Returns list of OTTUser (limited to 500 items). Filters by username/external identifier/idIn or roleIdIn",
        "operationId": "ottUser.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaOTTUserFilter"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaOTTUserListResponse"
            }
          },
          "x-Errors": {
            "description": "* `UserDoesNotExist`: This user doesn't exist"
          }
        },
        "tags": [
          "ottUser"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter"
        ]
      }
    },
    "/service/ottuser/action/login": {
      "post": {
        "description": "login with user name and password.",
        "operationId": "ottUser.login",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "extraParams": {
                  "type": "object"
                },
                "partnerId": {
                  "type": "integer"
                },
                "password": {
                  "type": "string",
                  "x-inputType": "password"
                },
                "udid": {
                  "type": "string"
                },
                "username": {
                  "type": "string"
                }
              },
              "required": [
                "partnerId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaLoginResponse"
            }
          },
          "x-Errors": {
            "description": "* `UserNotInDomain`: The user you selected is not part of the current household\n* `WrongPasswordOrUserName`: Unable to authenticate this user - the user name or password are incorrect. Please re-enter this information\n* `UserSuspended`: Unable to perform this action due to a household suspension\n* `InsideLockTime`: The account has been locked\n* `UserNotActivated`: The user must be activated to log in\n* `UserAllreadyLoggedIn`: This user is already logged in\n* `UserDoubleLogIn`: The user can't be logged in on more than one device\n* `DeviceNotRegistered`: The device you are trying to connect is not registered\n* `ErrorOnInitUser`\n* `UserNotMasterApproved`: The user must be approved by the household master\n* `UserDoesNotExist`: This user doesn't exist\n* `UserExternalError`: User External Error."
          }
        },
        "tags": [
          "ottUser"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "partnerId",
          "username",
          "password",
          "extraParams",
          "udid"
        ]
      }
    },
    "/service/ottuser/action/loginWithPin": {
      "post": {
        "description": "User sign-in via a time-expired sign-in PIN.",
        "operationId": "ottUser.loginWithPin",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "extraParams": {
                  "type": "object"
                },
                "partnerId": {
                  "type": "integer"
                },
                "pin": {
                  "type": "string"
                },
                "secret": {
                  "type": "string",
                  "x-inputType": "password"
                },
                "udid": {
                  "type": "string"
                }
              },
              "required": [
                "partnerId",
                "pin"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaLoginResponse"
            }
          },
          "x-Errors": {
            "description": "* `UserNotInDomain`: The user you selected is not part of the current household\n* `WrongPasswordOrUserName`: Unable to authenticate this user - the user name or password are incorrect. Please re-enter this information\n* `PinNotExists`: The PIN provided does not exist in the system\n* `PinExpired`: The PIN provided has expired\n* `NoValidPin`: The PIN provided is not valid\n* `SecretIsWrong`: The secret provided is incorrect\n* `LoginViaPinNotAllowed`: Log in using a PIN is not enabled for this account\n* `UserSuspended`: Unable to perform this action due to a household suspension\n* `InsideLockTime`: The account has been locked\n* `UserNotActivated`: The user must be activated to log in\n* `UserAllreadyLoggedIn`: This user is already logged in\n* `UserDoubleLogIn`: The user can't be logged in on more than one device\n* `DeviceNotRegistered`: The device you are trying to connect is not registered\n* `ErrorOnInitUser`\n* `UserNotMasterApproved`: The user must be approved by the household master\n* `UserWithNoDomain`: This user is not associated with any household.\n* `UserDoesNotExist`: This user doesn't exist"
          }
        },
        "tags": [
          "ottUser"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "partnerId",
          "pin",
          "udid",
          "secret",
          "extraParams"
        ]
      }
    },
    "/service/ottuser/action/logout": {
      "post": {
        "description": "Logout the calling user.",
        "operationId": "ottUser.logout",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "adapterData": {
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          }
        },
        "tags": [
          "ottUser"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "adapterData"
        ]
      }
    },
    "/service/ottuser/action/register": {
      "post": {
        "description": "Sign up a new user.",
        "operationId": "ottUser.register",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "partnerId": {
                  "type": "integer"
                },
                "password": {
                  "type": "string",
                  "x-inputType": "password"
                },
                "user": {
                  "$ref": "#/definitions/KalturaOTTUser"
                }
              },
              "required": [
                "partnerId",
                "user",
                "password"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaOTTUser"
            }
          },
          "x-Errors": {
            "description": "* `UserExists`: The user you are trying to add already exists\n* `ExternalIdAlreadyExists`: The external ID you are trying to add / update already exists\n* `RoleDoesNotExists`: Role Does Not Exists"
          }
        },
        "tags": [
          "ottUser"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "partnerId",
          "user",
          "password"
        ]
      }
    },
    "/service/ottuser/action/resendActivationToken": {
      "post": {
        "description": "Resend the activation token to a user",
        "operationId": "ottUser.resendActivationToken",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "partnerId": {
                  "type": "integer"
                },
                "username": {
                  "type": "string"
                }
              },
              "required": [
                "partnerId",
                "username"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `WrongPasswordOrUserName`: Unable to authenticate this user - the user name or password are incorrect. Please re-enter this information"
          }
        },
        "tags": [
          "ottUser"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "partnerId",
          "username"
        ]
      }
    },
    "/service/ottuser/action/resetPassword": {
      "post": {
        "description": "Send an e-mail with URL to enable the user to set new password.",
        "operationId": "ottUser.resetPassword",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "partnerId": {
                  "type": "integer"
                },
                "templateName": {
                  "type": "string"
                },
                "username": {
                  "type": "string"
                }
              },
              "required": [
                "partnerId",
                "username"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `WrongPasswordOrUserName`: Unable to authenticate this user - the user name or password are incorrect. Please re-enter this information"
          }
        },
        "tags": [
          "ottUser"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "partnerId",
          "username",
          "templateName"
        ]
      }
    },
    "/service/ottuser/action/setInitialPassword": {
      "post": {
        "description": "Renew the user&#39;s password after validating the token that sent as part of URL in e-mail.",
        "operationId": "ottUser.setInitialPassword",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "partnerId": {
                  "type": "integer"
                },
                "password": {
                  "type": "string",
                  "x-inputType": "password"
                },
                "token": {
                  "type": "string"
                }
              },
              "required": [
                "partnerId",
                "token",
                "password"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaOTTUser"
            }
          },
          "x-Errors": {
            "description": "* `PasswordPolicyViolation`\n* `InvalidToken`"
          }
        },
        "tags": [
          "ottUser"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "partnerId",
          "token",
          "password"
        ]
      }
    },
    "/service/ottuser/action/update": {
      "post": {
        "description": "Update user information",
        "operationId": "ottUser.update",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "string"
                },
                "user": {
                  "$ref": "#/definitions/KalturaOTTUser"
                }
              },
              "required": [
                "user"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaOTTUser"
            }
          },
          "x-Errors": {
            "description": "* `UserSuspended`: Unable to perform this action due to a household suspension\n* `UserDoesNotExist`: This user doesn't exist\n* `UserExists`: The user you are trying to add already exists\n* `ExternalIdAlreadyExists`: The external ID you are trying to add / update already exists\n* `RoleDoesNotExists`: Role Does Not Exists\n* `WrongPasswordOrUserName`: Unable to authenticate this user - the user name or password are incorrect. Please re-enter this information"
          }
        },
        "tags": [
          "ottUser"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "user",
          "id"
        ]
      }
    },
    "/service/ottuser/action/updateDynamicData": {
      "post": {
        "description": "Update user dynamic data. If it is needed to update several items, use a multi-request to avoid race conditions.\r\n            This API endpoint will deprecated soon. Please use UpsertDynamicData instead of it.",
        "operationId": "ottUser.updateDynamicData",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "key": {
                  "type": "string"
                },
                "value": {
                  "$ref": "#/definitions/KalturaStringValue"
                }
              },
              "required": [
                "key",
                "value"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaOTTUserDynamicData"
            }
          }
        },
        "tags": [
          "ottUser"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "key",
          "value"
        ]
      }
    },
    "/service/ottuser/action/updateLoginData": {
      "post": {
        "description": "Given a user name and existing password, change to a new password.",
        "operationId": "ottUser.updateLoginData",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "newPassword": {
                  "type": "string"
                },
                "oldPassword": {
                  "type": "string"
                },
                "username": {
                  "type": "string"
                }
              },
              "required": [
                "username",
                "oldPassword",
                "newPassword"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `WrongPasswordOrUserName`: Unable to authenticate this user - the user name or password are incorrect. Please re-enter this information\n* `UserDoesNotExist`: This user doesn't exist\n* `InsideLockTime`: The account has been locked\n* `UserAllreadyLoggedIn`: This user is already logged in\n* `PasswordPolicyViolation`"
          }
        },
        "tags": [
          "ottUser"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "username",
          "oldPassword",
          "newPassword"
        ]
      }
    },
    "/service/ottuser/action/updatePassword": {
      "post": {
        "description": "Update the user&#39;s existing password.",
        "operationId": "ottUser.updatePassword",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "password": {
                  "type": "string",
                  "x-inputType": "password"
                },
                "userId": {
                  "type": "integer"
                }
              },
              "required": [
                "userId",
                "password"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "x-Errors": {
            "description": "* `PasswordPolicyViolation`"
          }
        },
        "tags": [
          "ottUser"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "userId",
          "password"
        ]
      }
    },
    "/service/ottuser/action/upsertDynamicData": {
      "post": {
        "description": "Adds or updates dynamic data item for a user. If it is needed to update several items, use a multi-request to avoid race conditions.",
        "operationId": "ottUser.upsertDynamicData",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "key": {
                  "type": "string"
                },
                "value": {
                  "$ref": "#/definitions/KalturaStringValue"
                }
              },
              "required": [
                "key",
                "value"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaDynamicData"
            }
          }
        },
        "tags": [
          "ottUser"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "key",
          "value"
        ]
      }
    },
    "/service/parentalrule/action/add": {
      "post": {
        "description": "Add a new parentalRule",
        "operationId": "parentalRule.add",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "parentalRule": {
                  "$ref": "#/definitions/KalturaParentalRule"
                }
              },
              "required": [
                "parentalRule"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaParentalRule"
            }
          },
          "x-Errors": {
            "description": "* `ParentalRuleNameAlreadyInUse`\n* `TagDoesNotExist`"
          }
        },
        "tags": [
          "parentalRule"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "parentalRule"
        ]
      }
    },
    "/service/parentalrule/action/delete": {
      "post": {
        "description": "Delete an existing parentalRule",
        "operationId": "parentalRule.delete",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `ParentalRuleDoesNotExist`\n* `CanNotDeleteDefaultParentalRule`"
          }
        },
        "tags": [
          "parentalRule"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id"
        ]
      }
    },
    "/service/parentalrule/action/disable": {
      "post": {
        "description": "Disables a parental rule that was previously defined by the household master. Disable can be at specific user or household level.",
        "operationId": "parentalRule.disable",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "entityReference": {
                  "enum": [
                    "user",
                    "household"
                  ],
                  "type": "string",
                  "x-enumLabels": [
                    "USER",
                    "HOUSEHOLD"
                  ],
                  "x-enumType": "KalturaEntityReferenceBy"
                },
                "ruleId": {
                  "type": "integer"
                }
              },
              "required": [
                "ruleId",
                "entityReference"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `DomainNotExists`: The household you selected does not exist\n* `UserDoesNotExist`: This user doesn't exist\n* `UserWithNoDomain`: This user is not associated with any household.\n* `UserNotInDomain`: The user you selected is not part of the current household\n* `UserSuspended`: Unable to perform this action due to a household suspension\n* `RuleNotExists`: This rule doesn't exist in the system\n* `UserParentalRuleNotExists`: There is no parental rule associated with this user"
          }
        },
        "tags": [
          "parentalRule"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "ruleId",
          "entityReference"
        ]
      }
    },
    "/service/parentalrule/action/disableDefault": {
      "post": {
        "description": "Disables a parental rule that was defined at account level. Disable can be at specific user or household level.",
        "operationId": "parentalRule.disableDefault",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "entityReference": {
                  "enum": [
                    "user",
                    "household"
                  ],
                  "type": "string",
                  "x-enumLabels": [
                    "USER",
                    "HOUSEHOLD"
                  ],
                  "x-enumType": "KalturaEntityReferenceBy"
                }
              },
              "required": [
                "entityReference"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `DomainNotExists`: The household you selected does not exist\n* `UserDoesNotExist`: This user doesn't exist\n* `UserWithNoDomain`: This user is not associated with any household.\n* `UserSuspended`: Unable to perform this action due to a household suspension\n* `UserNotInDomain`: The user you selected is not part of the current household\n* `RuleNotExists`: This rule doesn't exist in the system\n* `UserParentalRuleNotExists`: There is no parental rule associated with this user"
          }
        },
        "tags": [
          "parentalRule"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "entityReference"
        ]
      }
    },
    "/service/parentalrule/action/enable": {
      "post": {
        "description": "Enable a parental rules for a user",
        "operationId": "parentalRule.enable",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "entityReference": {
                  "enum": [
                    "user",
                    "household"
                  ],
                  "type": "string",
                  "x-enumLabels": [
                    "USER",
                    "HOUSEHOLD"
                  ],
                  "x-enumType": "KalturaEntityReferenceBy"
                },
                "ruleId": {
                  "type": "integer"
                }
              },
              "required": [
                "ruleId",
                "entityReference"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `DomainNotExists`: The household you selected does not exist\n* `UserDoesNotExist`: This user doesn't exist\n* `UserWithNoDomain`: This user is not associated with any household.\n* `UserSuspended`: Unable to perform this action due to a household suspension\n* `UserNotInDomain`: The user you selected is not part of the current household\n* `UserParentalRuleNotExists`: There is no parental rule associated with this user\n* `RuleNotExists`: This rule doesn't exist in the system"
          }
        },
        "tags": [
          "parentalRule"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "ruleId",
          "entityReference"
        ]
      }
    },
    "/service/parentalrule/action/get": {
      "post": {
        "description": "Get an existing parentalRule by identifier",
        "operationId": "parentalRule.get",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaParentalRule"
            }
          },
          "x-Errors": {
            "description": "* `ParentalRuleDoesNotExist`"
          }
        },
        "tags": [
          "parentalRule"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id"
        ]
      }
    },
    "/service/parentalrule/action/list": {
      "post": {
        "description": "Return the parental rules that applies for the user or household. Can include rules that have been associated in account, household, or user level.\r\n            Association level is also specified in the response.",
        "operationId": "parentalRule.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaParentalRuleFilter"
                }
              },
              "required": [
                "filter"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaParentalRuleListResponse"
            }
          },
          "x-Errors": {
            "description": "* `DomainNotExists`: The household you selected does not exist\n* `UserDoesNotExist`: This user doesn't exist\n* `UserWithNoDomain`: This user is not associated with any household.\n* `UserSuspended`: Unable to perform this action due to a household suspension\n* `UserNotInDomain`: The user you selected is not part of the current household"
          }
        },
        "tags": [
          "parentalRule"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter"
        ]
      }
    },
    "/service/parentalrule/action/update": {
      "post": {
        "description": "Update an existing parentalRule",
        "operationId": "parentalRule.update",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                },
                "parentalRule": {
                  "$ref": "#/definitions/KalturaParentalRule"
                }
              },
              "required": [
                "id",
                "parentalRule"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaParentalRule"
            }
          },
          "x-Errors": {
            "description": "* `ParentalRuleNameAlreadyInUse`\n* `ParentalRuleDoesNotExist`\n* `TagDoesNotExist`"
          }
        },
        "tags": [
          "parentalRule"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id",
          "parentalRule"
        ]
      }
    },
    "/service/partner/action/add": {
      "post": {
        "description": "Add a partner with default user",
        "operationId": "partner.add",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "partner": {
                  "$ref": "#/definitions/KalturaPartner"
                },
                "partnerSetup": {
                  "$ref": "#/definitions/KalturaPartnerSetup"
                }
              },
              "required": [
                "partner",
                "partnerSetup"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPartner"
            }
          }
        },
        "tags": [
          "partner"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "partner",
          "partnerSetup"
        ]
      }
    },
    "/service/partner/action/createIndexes": {
      "post": {
        "description": "Internal API !!! create ElasticSearch indexes for partner",
        "operationId": "partner.createIndexes",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `PartnerDoesNotExist`"
          }
        },
        "tags": [
          "partner"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": []
      }
    },
    "/service/partner/action/delete": {
      "post": {
        "description": "Internal API !!! Delete Partner",
        "operationId": "partner.delete",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `PartnerDoesNotExist`"
          }
        },
        "tags": [
          "partner"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id"
        ]
      }
    },
    "/service/partner/action/externalLogin": {
      "post": {
        "description": "Returns a login session for external system (like OVP)",
        "operationId": "partner.externalLogin",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaLoginSession"
            }
          },
          "x-Errors": {
            "description": "* `MissingConfiguration`: Missing configuration [@configuration@]"
          }
        },
        "tags": [
          "partner"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": []
      }
    },
    "/service/partner/action/list": {
      "post": {
        "description": "Internal API !!! Returns the list of active Partners",
        "operationId": "partner.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaPartnerFilter"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPartnerListResponse"
            }
          }
        },
        "tags": [
          "partner"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter"
        ]
      }
    },
    "/service/partnerconfiguration/action/list": {
      "post": {
        "description": "Get the list of PartnerConfiguration",
        "operationId": "partnerConfiguration.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaPartnerConfigurationFilter"
                }
              },
              "required": [
                "filter"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPartnerConfigurationListResponse"
            }
          }
        },
        "tags": [
          "partnerConfiguration"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter"
        ]
      }
    },
    "/service/partnerconfiguration/action/update": {
      "post": {
        "description": "Update/set Partner Configuration",
        "operationId": "partnerConfiguration.update",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "configuration": {
                  "$ref": "#/definitions/KalturaPartnerConfiguration"
                }
              },
              "required": [
                "configuration"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `NonExistingDeviceFamilyIds`\n* `InvalidLanguage`\n* `InvalidCurrency`: Invalid currency: The currency specified is not configured for this account\n* `DlmNotExist`: The device limitation module (DLM) you entered does not exist in the system\n* `AssetStructDoesNotExist`: The specified asset strcut id does not exist\n* `MetaDoesNotExist`: The specified meta id does not exist\n* `ExtendedTypeValueCannotBeChanged`: ExtendedType value cannot be changed\n* `NoPartnerConfigurationToUpdate`: The partner configuration pair (type and configuration value) you've asked to update is an empty pair.\n* `NoConfigurationValueToUpdate`: The configuration value being updated is empty.\n* `PaymentGatewayNotExist`: The requested Payment Gateway doesn't exist.\n* `OSSAdapterNotExist`: The requested OSS adapter doesn't exist\n* `CategoryTreeDoesNotExist`\n* `RegionDoesNotExist`: Region does not exist\n* `PaymentGatewayIdRequired`: The mandatory Payment Gateway ID field is missing from the request.\n* `AdapterNotExists`: The adapter you're trying to connect doesn't exist\n* `NotAllowed`: Action not allowed due to roleId [@roleId@]"
          }
        },
        "tags": [
          "partnerConfiguration"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "configuration"
        ]
      }
    },
    "/service/partnerpremiumservices/action/get": {
      "post": {
        "description": "Returns list of services",
        "operationId": "partnerPremiumServices.get",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPartnerPremiumServices"
            }
          }
        },
        "tags": [
          "partnerPremiumServices"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": []
      }
    },
    "/service/partnerpremiumservices/action/update": {
      "post": {
        "description": "update partnerPremiumServices",
        "operationId": "partnerPremiumServices.update",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "partnerPremiumServices": {
                  "$ref": "#/definitions/KalturaPartnerPremiumServices"
                }
              },
              "required": [
                "partnerPremiumServices"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPartnerPremiumServices"
            }
          },
          "x-Errors": {
            "description": "* `PremiumServiceDoesNotExist`"
          }
        },
        "tags": [
          "partnerPremiumServices"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "partnerPremiumServices"
        ]
      }
    },
    "/service/passwordpolicy/action/add": {
      "post": {
        "description": "Add new KalturaPasswordPolicy",
        "operationId": "passwordPolicy.add",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "objectToAdd": {
                  "$ref": "#/definitions/KalturaPasswordPolicy"
                }
              },
              "required": [
                "objectToAdd"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPasswordPolicy"
            }
          },
          "x-Errors": {
            "description": "* `RoleDoesNotExists`: Role Does Not Exists"
          }
        },
        "tags": [
          "passwordPolicy"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "objectToAdd"
        ]
      }
    },
    "/service/passwordpolicy/action/delete": {
      "post": {
        "description": "Delete existing PasswordPolicy",
        "operationId": "passwordPolicy.delete",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "x-Errors": {
            "description": "* `PasswordPolicyDoesNotExist`"
          }
        },
        "tags": [
          "passwordPolicy"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id"
        ]
      }
    },
    "/service/passwordpolicy/action/list": {
      "post": {
        "description": "Returns the list of available KalturaPasswordPolicy",
        "operationId": "passwordPolicy.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaPasswordPolicyFilter"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPasswordPolicyListResponse"
            }
          }
        },
        "tags": [
          "passwordPolicy"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter"
        ]
      }
    },
    "/service/passwordpolicy/action/update": {
      "post": {
        "description": "Update existing KalturaPasswordPolicy",
        "operationId": "passwordPolicy.update",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                },
                "objectToUpdate": {
                  "$ref": "#/definitions/KalturaPasswordPolicy"
                }
              },
              "required": [
                "id",
                "objectToUpdate"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPasswordPolicy"
            }
          },
          "x-Errors": {
            "description": "* `PasswordPolicyDoesNotExist`\n* `RoleDoesNotExists`: Role Does Not Exists"
          }
        },
        "tags": [
          "passwordPolicy"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id",
          "objectToUpdate"
        ]
      }
    },
    "/service/paymentgatewayprofile/action/add": {
      "post": {
        "description": "Insert new payment gateway for partner",
        "operationId": "paymentGatewayProfile.add",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "paymentGateway": {
                  "$ref": "#/definitions/KalturaPaymentGatewayProfile"
                }
              },
              "required": [
                "paymentGateway"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPaymentGatewayProfile"
            }
          },
          "x-Errors": {
            "description": "* `ExternalIdentifierRequired`: The mandatory external identifier field is missing from the request.\n* `ExternalIdentifierMustBeUnique`: External identifier must be unique.\n* `PaymentGatewayNameRequired`: The mandatory Payment Gateway name field is missing from the request.\n* `PaymentGatewaySharedSecretRequired`: The mandatory Payment Gateway shared secret field is missing from the request.\n* `NoPaymentGatewayToInsert`: Unable to complete the request: there's no new Payment Gateway to insert."
          }
        },
        "tags": [
          "paymentGatewayProfile"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "paymentGateway"
        ]
      }
    },
    "/service/paymentgatewayprofile/action/delete": {
      "post": {
        "description": "Delete payment gateway by payment gateway id",
        "operationId": "paymentGatewayProfile.delete",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "paymentGatewayId": {
                  "type": "integer"
                }
              },
              "required": [
                "paymentGatewayId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `PaymentGatewayNotExist`: The requested Payment Gateway doesn't exist.\n* `PaymentGatewayIdRequired`: The mandatory Payment Gateway ID field is missing from the request."
          }
        },
        "tags": [
          "paymentGatewayProfile"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "paymentGatewayId"
        ]
      }
    },
    "/service/paymentgatewayprofile/action/generateSharedSecret": {
      "post": {
        "description": "Generate payment gateway shared secret",
        "operationId": "paymentGatewayProfile.generateSharedSecret",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "paymentGatewayId": {
                  "type": "integer"
                }
              },
              "required": [
                "paymentGatewayId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPaymentGatewayProfile"
            }
          },
          "x-Errors": {
            "description": "* `PaymentGatewayIdRequired`: The mandatory Payment Gateway ID field is missing from the request.\n* `PaymentGatewayNotExist`: The requested Payment Gateway doesn't exist."
          }
        },
        "tags": [
          "paymentGatewayProfile"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "paymentGatewayId"
        ]
      }
    },
    "/service/paymentgatewayprofile/action/getConfiguration": {
      "post": {
        "description": "Gets the Payment Gateway Configuration for the payment gateway identifier given",
        "operationId": "paymentGatewayProfile.getConfiguration",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "alias": {
                  "type": "string"
                },
                "extraParameters": {
                  "items": {
                    "$ref": "#/definitions/KalturaKeyValue"
                  },
                  "type": "array"
                },
                "intent": {
                  "type": "string"
                }
              },
              "required": [
                "alias",
                "intent",
                "extraParameters"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPaymentGatewayConfiguration"
            }
          },
          "x-Errors": {
            "description": "* `SignatureMismatch`: The signature provide doesn't match the signature on record.\n* `PaymentGatewayNotExist`: The requested Payment Gateway doesn't exist.\n* `NoConfigurationFound`: The configuration for the credit card clearing has not been set."
          }
        },
        "tags": [
          "paymentGatewayProfile"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "alias",
          "intent",
          "extraParameters"
        ]
      }
    },
    "/service/paymentgatewayprofile/action/list": {
      "post": {
        "description": "Returns all payment gateways for partner : id + name",
        "operationId": "paymentGatewayProfile.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPaymentGatewayProfileListResponse"
            }
          }
        },
        "tags": [
          "paymentGatewayProfile"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": []
      }
    },
    "/service/paymentgatewayprofile/action/update": {
      "post": {
        "description": "Update payment gateway details",
        "operationId": "paymentGatewayProfile.update",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "paymentGateway": {
                  "$ref": "#/definitions/KalturaPaymentGatewayProfile"
                },
                "paymentGatewayId": {
                  "type": "integer"
                }
              },
              "required": [
                "paymentGatewayId",
                "paymentGateway"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPaymentGatewayProfile"
            }
          },
          "x-Errors": {
            "description": "* `ActionIsNotAllowed`: The action requested is not allowed\n* `PaymentGatewayIdRequired`: The mandatory Payment Gateway ID field is missing from the request.\n* `PaymentGatewayNotExist`: The requested Payment Gateway doesn't exist.\n* `PaymentGatewayNameRequired`: The mandatory Payment Gateway name field is missing from the request.\n* `PaymentGatewaySharedSecretRequired`: The mandatory Payment Gateway shared secret field is missing from the request.\n* `ExternalIdentifierRequired`: The mandatory external identifier field is missing from the request.\n* `ExternalIdentifierMustBeUnique`: External identifier must be unique."
          }
        },
        "tags": [
          "paymentGatewayProfile"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "paymentGatewayId",
          "paymentGateway"
        ]
      }
    },
    "/service/paymentmethodprofile/action/add": {
      "post": {
        "description": "TBD",
        "operationId": "paymentMethodProfile.add",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "paymentMethod": {
                  "$ref": "#/definitions/KalturaPaymentMethodProfile"
                }
              },
              "required": [
                "paymentMethod"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPaymentMethodProfile"
            }
          },
          "x-Errors": {
            "description": "* `PaymentGatewayIdRequired`: The mandatory Payment Gateway ID field is missing from the request.\n* `PaymentGatewayNotExist`: The requested Payment Gateway doesn't exist.\n* `PaymentMethodNameRequired`: The mandatory payment method name field is missing in the request."
          }
        },
        "tags": [
          "paymentMethodProfile"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "paymentMethod"
        ]
      }
    },
    "/service/paymentmethodprofile/action/delete": {
      "post": {
        "description": "Delete payment method profile",
        "operationId": "paymentMethodProfile.delete",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "paymentMethodId": {
                  "type": "integer"
                }
              },
              "required": [
                "paymentMethodId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `PaymentMethodNotExist`: The selected payment method doesn't exist.\n* `PaymentMethodIdRequired`: The mandatory payment method ID field is missing from the request."
          }
        },
        "tags": [
          "paymentMethodProfile"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "paymentMethodId"
        ]
      }
    },
    "/service/paymentmethodprofile/action/list": {
      "post": {
        "description": "TBD",
        "operationId": "paymentMethodProfile.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaPaymentMethodProfileFilter"
                }
              },
              "required": [
                "filter"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPaymentMethodProfileListResponse"
            }
          },
          "x-Errors": {
            "description": "* `PaymentGatewayIdRequired`: The mandatory Payment Gateway ID field is missing from the request.\n* `PaymentGatewayNotExist`: The requested Payment Gateway doesn't exist."
          }
        },
        "tags": [
          "paymentMethodProfile"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter"
        ]
      }
    },
    "/service/paymentmethodprofile/action/update": {
      "post": {
        "description": "Update payment method",
        "operationId": "paymentMethodProfile.update",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "paymentMethod": {
                  "$ref": "#/definitions/KalturaPaymentMethodProfile"
                },
                "paymentMethodId": {
                  "type": "integer"
                }
              },
              "required": [
                "paymentMethodId",
                "paymentMethod"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPaymentMethodProfile"
            }
          },
          "x-Errors": {
            "description": "* `PaymentMethodNotExist`: The selected payment method doesn't exist.\n* `PaymentMethodNotExist`: The selected payment method doesn't exist."
          }
        },
        "tags": [
          "paymentMethodProfile"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "paymentMethodId",
          "paymentMethod"
        ]
      }
    },
    "/service/permission/action/add": {
      "post": {
        "description": "Adds new permission",
        "operationId": "permission.add",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "permission": {
                  "$ref": "#/definitions/KalturaPermission"
                }
              },
              "required": [
                "permission"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPermission"
            }
          },
          "x-Errors": {
            "description": "* `PermissionNameAlreadyInUse`: Permission name already in use\n* `CanModifyOnlyNormalPermission`: Only permission type NORMAL can be modified\n* `CannotAddPermissionTypeGroup`: Permission type GROUP cannot be added\n* `PermissionItemNotFound`: Permission item cannot be found"
          }
        },
        "tags": [
          "permission"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "permission"
        ]
      }
    },
    "/service/permission/action/addPermissionItem": {
      "post": {
        "description": "Adds permission item to permission",
        "operationId": "permission.addPermissionItem",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "permissionId": {
                  "type": "integer"
                },
                "permissionItemId": {
                  "type": "integer"
                }
              },
              "required": [
                "permissionId",
                "permissionItemId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "x-Errors": {
            "description": "* `PermissionNotFound`: Permission not found\n* `PermissionItemNotFound`: Permission item cannot be found\n* `PermissionPermissionItemAlreadyExists`: Permission item is already associated with permission\n* `PermissionReadOnly`: Permission is readonly and cannot be updated"
          }
        },
        "tags": [
          "permission"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "permissionId",
          "permissionItemId"
        ]
      }
    },
    "/service/permission/action/delete": {
      "post": {
        "description": "Deletes an existing permission",
        "operationId": "permission.delete",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "x-Errors": {
            "description": "* `PermissionNotFound`: Permission not found"
          }
        },
        "tags": [
          "permission"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id"
        ]
      }
    },
    "/service/permission/action/getCurrentPermissions": {
      "post": {
        "description": "Returns permission names as comma separated string",
        "operationId": "permission.getCurrentPermissions",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "permission"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": []
      }
    },
    "/service/permission/action/list": {
      "post": {
        "description": "Retrieving permissions by identifiers, if filter is empty, returns all partner permissions",
        "operationId": "permission.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaBasePermissionFilter"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPermissionListResponse"
            }
          }
        },
        "tags": [
          "permission"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter"
        ]
      }
    },
    "/service/permission/action/removePermissionItem": {
      "post": {
        "description": "Removes permission item from permission",
        "operationId": "permission.removePermissionItem",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "permissionId": {
                  "type": "integer"
                },
                "permissionItemId": {
                  "type": "integer"
                }
              },
              "required": [
                "permissionId",
                "permissionItemId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "x-Errors": {
            "description": "* `PermissionNotFound`: Permission not found\n* `PermissionItemNotFound`: Permission item cannot be found\n* `PermissionPermissionItemNotFound`: Permission item is not associated with permission\n* `PermissionReadOnly`: Permission is readonly and cannot be updated"
          }
        },
        "tags": [
          "permission"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "permissionId",
          "permissionItemId"
        ]
      }
    },
    "/service/permission/action/update": {
      "post": {
        "description": "Update an existing permission.",
        "operationId": "permission.update",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                },
                "permission": {
                  "$ref": "#/definitions/KalturaPermission"
                }
              },
              "required": [
                "id",
                "permission"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPermission"
            }
          },
          "x-Errors": {
            "description": "* `PermissionNotFound`: Permission not found\n* `CanModifyOnlyNormalPermission`: Only permission type NORMAL can be modified\n* `PermissionItemNotFound`: Permission item cannot be found"
          }
        },
        "tags": [
          "permission"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id",
          "permission"
        ]
      }
    },
    "/service/permissionitem/action/list": {
      "post": {
        "description": "Return a list of permission items with filtering options",
        "operationId": "permissionItem.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaPermissionItemFilter"
                },
                "pager": {
                  "$ref": "#/definitions/KalturaFilterPager"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPermissionItemListResponse"
            }
          }
        },
        "tags": [
          "permissionItem"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter",
          "pager"
        ]
      }
    },
    "/service/personalactivitycleanup/action/getPartnerConfiguration": {
      "post": {
        "description": "PersonalActivityCleanupConfiguration get",
        "operationId": "personalActivityCleanup.getPartnerConfiguration",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPersonalActivityCleanupConfiguration"
            }
          }
        },
        "tags": [
          "personalActivityCleanup"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": []
      }
    },
    "/service/personalactivitycleanup/action/updatePartnerConfiguration": {
      "post": {
        "description": "PersonalActivityCleanupConfiguration Update",
        "operationId": "personalActivityCleanup.updatePartnerConfiguration",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "personalActivityCleanupConfiguration": {
                  "$ref": "#/definitions/KalturaPersonalActivityCleanupConfiguration"
                }
              },
              "required": [
                "personalActivityCleanupConfiguration"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPersonalActivityCleanupConfiguration"
            }
          }
        },
        "tags": [
          "personalActivityCleanup"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "personalActivityCleanupConfiguration"
        ]
      }
    },
    "/service/personalfeed/action/list": {
      "post": {
        "description": "List user&#39;s feeds.\r\n            Possible status codes:",
        "operationId": "personalFeed.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaPersonalFeedFilter"
                },
                "pager": {
                  "$ref": "#/definitions/KalturaFilterPager"
                }
              },
              "required": [
                "filter"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPersonalFeedListResponse"
            }
          }
        },
        "tags": [
          "personalFeed"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter",
          "pager"
        ]
      }
    },
    "/service/personallist/action/add": {
      "post": {
        "description": "Add a user&#39;s personal list item to follow.",
        "operationId": "personalList.add",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "personalList": {
                  "$ref": "#/definitions/KalturaPersonalList"
                }
              },
              "required": [
                "personalList"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPersonalList"
            }
          },
          "x-Errors": {
            "description": "* `UserAlreadyFollowing`: The user is already following the requested series.\n* `InvalidUser`: The user you selected for this action is not a valid user"
          }
        },
        "tags": [
          "personalList"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "personalList"
        ]
      }
    },
    "/service/personallist/action/delete": {
      "post": {
        "description": "Remove followed item from user&#39;s personal list",
        "operationId": "personalList.delete",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "personalListId": {
                  "type": "integer"
                }
              },
              "required": [
                "personalListId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "x-Errors": {
            "description": "* `UserNotFollowing`: The user is not following this series.\n* `InvalidUser`: The user you selected for this action is not a valid user"
          }
        },
        "tags": [
          "personalList"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "personalListId"
        ]
      }
    },
    "/service/personallist/action/list": {
      "post": {
        "description": "List user&#39;s tv personal item to follow.\r\n            Possible status codes:",
        "operationId": "personalList.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaPersonalListFilter"
                },
                "pager": {
                  "$ref": "#/definitions/KalturaFilterPager"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPersonalListListResponse"
            }
          },
          "x-Errors": {
            "description": "* `InvalidUser`: The user you selected for this action is not a valid user"
          }
        },
        "tags": [
          "personalList"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter",
          "pager"
        ]
      }
    },
    "/service/pin/action/get": {
      "post": {
        "description": "Retrieve the parental or purchase PIN that applies for the household or user. Includes specification of where the PIN was defined at – account, household or user  level",
        "operationId": "pin.get",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "by": {
                  "enum": [
                    "user",
                    "household"
                  ],
                  "type": "string",
                  "x-enumLabels": [
                    "USER",
                    "HOUSEHOLD"
                  ],
                  "x-enumType": "KalturaEntityReferenceBy"
                },
                "ruleId": {
                  "type": "integer"
                },
                "type": {
                  "enum": [
                    "purchase",
                    "parental"
                  ],
                  "type": "string",
                  "x-enumLabels": [
                    "PURCHASE",
                    "PARENTAL"
                  ],
                  "x-enumType": "KalturaPinType"
                }
              },
              "required": [
                "by",
                "type"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPin"
            }
          },
          "x-Errors": {
            "description": "* `DomainNotExists`: The household you selected does not exist\n* `UserDoesNotExist`: This user doesn't exist\n* `UserWithNoDomain`: This user is not associated with any household.\n* `UserSuspended`: Unable to perform this action due to a household suspension\n* `NoPinDefined`: No parental PIN was defined for this user/household"
          }
        },
        "tags": [
          "pin"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "by",
          "type",
          "ruleId"
        ]
      }
    },
    "/service/pin/action/update": {
      "post": {
        "description": "Set the parental or purchase PIN that applies for the user or the household.",
        "operationId": "pin.update",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "by": {
                  "enum": [
                    "user",
                    "household"
                  ],
                  "type": "string",
                  "x-enumLabels": [
                    "USER",
                    "HOUSEHOLD"
                  ],
                  "x-enumType": "KalturaEntityReferenceBy"
                },
                "pin": {
                  "$ref": "#/definitions/KalturaPin"
                },
                "ruleId": {
                  "type": "integer"
                },
                "type": {
                  "enum": [
                    "purchase",
                    "parental"
                  ],
                  "type": "string",
                  "x-enumLabels": [
                    "PURCHASE",
                    "PARENTAL"
                  ],
                  "x-enumType": "KalturaPinType"
                }
              },
              "required": [
                "by",
                "type",
                "pin"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPin"
            }
          },
          "x-Errors": {
            "description": "* `UserDoesNotExist`: This user doesn't exist\n* `UserWithNoDomain`: This user is not associated with any household.\n* `UserSuspended`: Unable to perform this action due to a household suspension"
          }
        },
        "tags": [
          "pin"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "by",
          "type",
          "pin",
          "ruleId"
        ]
      }
    },
    "/service/pin/action/validate": {
      "post": {
        "description": "Validate a purchase or parental PIN for a user.",
        "operationId": "pin.validate",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "pin": {
                  "type": "string"
                },
                "ruleId": {
                  "type": "integer"
                },
                "type": {
                  "enum": [
                    "purchase",
                    "parental"
                  ],
                  "type": "string",
                  "x-enumLabels": [
                    "PURCHASE",
                    "PARENTAL"
                  ],
                  "x-enumType": "KalturaPinType"
                }
              },
              "required": [
                "pin",
                "type"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `NoPinDefined`: No parental PIN was defined for this user/household\n* `PinMismatch`: The parental PIN provided doesn't match the user/household PIN\n* `UserDoesNotExist`: This user doesn't exist\n* `UserWithNoDomain`: This user is not associated with any household.\n* `UserSuspended`: Unable to perform this action due to a household suspension"
          }
        },
        "tags": [
          "pin"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "pin",
          "type",
          "ruleId"
        ]
      }
    },
    "/service/playbackprofile/action/add": {
      "post": {
        "description": "Insert new Playback adapter for partner",
        "operationId": "playbackProfile.add",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "playbackProfile": {
                  "$ref": "#/definitions/KalturaPlaybackProfile"
                }
              },
              "required": [
                "playbackProfile"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPlaybackProfile"
            }
          },
          "x-Errors": {
            "description": "* `NoAdapterToInsert`\n* `NameRequired`: The mandatory name field is missing from the request\n* `AdapterUrlRequired`: The mandatory adapter URL field is missing from the request\n* `ExternalIdentifierRequired`: The mandatory external identifier field is missing from the request.\n* `ExternalIdentifierMustBeUnique`: External identifier must be unique."
          }
        },
        "tags": [
          "playbackProfile"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "playbackProfile"
        ]
      }
    },
    "/service/playbackprofile/action/delete": {
      "post": {
        "description": "Delete Playback adapter by Playback adapter id",
        "operationId": "playbackProfile.delete",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `CanNotDeleteDefaultAdapter`\n* `AdapterNotExists`: The adapter you're trying to connect doesn't exist"
          }
        },
        "tags": [
          "playbackProfile"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id"
        ]
      }
    },
    "/service/playbackprofile/action/generateSharedSecret": {
      "post": {
        "description": "Generate playback adapter shared secret",
        "operationId": "playbackProfile.generateSharedSecret",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPlaybackProfile"
            }
          },
          "x-Errors": {
            "description": "* `AdapterIdentifierRequired`: The mandatory adapter ID field is missing from the request\n* `AdapterNotExists`: The adapter you're trying to connect doesn't exist"
          }
        },
        "tags": [
          "playbackProfile"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id"
        ]
      }
    },
    "/service/playbackprofile/action/list": {
      "post": {
        "description": "Returns all playback profiles for partner : id + name",
        "operationId": "playbackProfile.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaPlaybackProfileFilter"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPlaybackProfileListResponse"
            }
          }
        },
        "tags": [
          "playbackProfile"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter"
        ]
      }
    },
    "/service/playbackprofile/action/update": {
      "post": {
        "description": "Update Playback adapter details",
        "operationId": "playbackProfile.update",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                },
                "playbackProfile": {
                  "$ref": "#/definitions/KalturaPlaybackProfile"
                }
              },
              "required": [
                "id",
                "playbackProfile"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPlaybackProfile"
            }
          },
          "x-Errors": {
            "description": "* `AdapterNotExists`: The adapter you're trying to connect doesn't exist\n* `NameRequired`: The mandatory name field is missing from the request\n* `AdapterUrlRequired`: The mandatory adapter URL field is missing from the request\n* `ExternalIdentifierMustBeUnique`: External identifier must be unique."
          }
        },
        "tags": [
          "playbackProfile"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id",
          "playbackProfile"
        ]
      }
    },
    "/service/ppv/action/add": {
      "post": {
        "description": "Add new ppv",
        "operationId": "ppv.add",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "ppv": {
                  "$ref": "#/definitions/KalturaPpv"
                }
              },
              "required": [
                "ppv"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPpv"
            }
          },
          "x-Errors": {
            "description": "* `PriceDetailsDoesNotExist`: The price details doesn't exist in the database\n* `UsageModuleDoesNotExist`\n* `DiscountCodeNotExist`\n* `AssetUserRuleDoesNotExists`: Asset user rule does not exist"
          }
        },
        "tags": [
          "ppv"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "ppv"
        ]
      }
    },
    "/service/ppv/action/delete": {
      "post": {
        "description": "Delete Ppv",
        "operationId": "ppv.delete",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `PpvModuleNotExist`"
          }
        },
        "tags": [
          "ppv"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id"
        ]
      }
    },
    "/service/ppv/action/get": {
      "post": {
        "description": "Returns ppv object by internal identifier",
        "operationId": "ppv.get",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPpv"
            }
          },
          "x-Errors": {
            "description": "* `ModuleNotExists`: The PPV module doesn't exist in the database\n* `EntityIsNotAssociatedWithShop`"
          }
        },
        "tags": [
          "ppv"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id"
        ]
      }
    },
    "/service/ppv/action/list": {
      "post": {
        "description": "Returns all ppv objects",
        "operationId": "ppv.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaPpvFilter"
                },
                "pager": {
                  "$ref": "#/definitions/KalturaFilterPager"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPpvListResponse"
            }
          }
        },
        "tags": [
          "ppv"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter",
          "pager"
        ]
      }
    },
    "/service/ppv/action/update": {
      "post": {
        "description": "Update ppv",
        "operationId": "ppv.update",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                },
                "ppv": {
                  "$ref": "#/definitions/KalturaPpv"
                }
              },
              "required": [
                "id",
                "ppv"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPpv"
            }
          },
          "x-Errors": {
            "description": "* `PpvModuleNotExist`\n* `PriceDetailsDoesNotExist`: The price details doesn't exist in the database\n* `UsageModuleDoesNotExist`\n* `DiscountCodeNotExist`"
          }
        },
        "tags": [
          "ppv"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id",
          "ppv"
        ]
      }
    },
    "/service/previewmodule/action/add": {
      "post": {
        "description": "Insert new PreviewModule for partner",
        "operationId": "previewModule.add",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "previewModule": {
                  "$ref": "#/definitions/KalturaPreviewModule"
                }
              },
              "required": [
                "previewModule"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPreviewModule"
            }
          },
          "x-Errors": {
            "description": "* `AccountIsNotOpcSupported`"
          }
        },
        "tags": [
          "previewModule"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "previewModule"
        ]
      }
    },
    "/service/previewmodule/action/delete": {
      "post": {
        "description": "Internal API !!! Delete PreviewModule",
        "operationId": "previewModule.delete",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `PreviewModuleNotExist`\n* `AccountIsNotOpcSupported`"
          }
        },
        "tags": [
          "previewModule"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id"
        ]
      }
    },
    "/service/previewmodule/action/list": {
      "post": {
        "description": "Returns all PreviewModule",
        "operationId": "previewModule.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaPreviewModuleFilter"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPreviewModuleListResponse"
            }
          }
        },
        "tags": [
          "previewModule"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter"
        ]
      }
    },
    "/service/previewmodule/action/update": {
      "post": {
        "description": "Update PreviewModule",
        "operationId": "previewModule.update",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                },
                "previewModule": {
                  "$ref": "#/definitions/KalturaPreviewModule"
                }
              },
              "required": [
                "id",
                "previewModule"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPreviewModule"
            }
          },
          "x-Errors": {
            "description": "* `PreviewModuleNotExist`\n* `AccountIsNotOpcSupported`"
          }
        },
        "tags": [
          "previewModule"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id",
          "previewModule"
        ]
      }
    },
    "/service/pricedetails/action/add": {
      "post": {
        "description": "Insert new PriceDetails for partner",
        "operationId": "priceDetails.add",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "priceDetails": {
                  "$ref": "#/definitions/KalturaPriceDetails"
                }
              },
              "required": [
                "priceDetails"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPriceDetails"
            }
          },
          "x-Errors": {
            "description": "* `InvalidCurrency`: Invalid currency: The currency specified is not configured for this account\n* `CountryNotFound`: Unable to find the country code specified"
          }
        },
        "tags": [
          "priceDetails"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "priceDetails"
        ]
      }
    },
    "/service/pricedetails/action/delete": {
      "post": {
        "description": "Delete PriceDetails",
        "operationId": "priceDetails.delete",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `PriceDetailsDoesNotExist`: The price details doesn't exist in the database"
          }
        },
        "tags": [
          "priceDetails"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id"
        ]
      }
    },
    "/service/pricedetails/action/list": {
      "post": {
        "description": "Returns the list of available prices, can be filtered by price IDs",
        "operationId": "priceDetails.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaPriceDetailsFilter"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPriceDetailsListResponse"
            }
          },
          "x-Errors": {
            "description": "* `InvalidCurrency`: Invalid currency: The currency specified is not configured for this account"
          }
        },
        "tags": [
          "priceDetails"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter"
        ]
      }
    },
    "/service/pricedetails/action/update": {
      "post": {
        "description": "update existing PriceDetails",
        "operationId": "priceDetails.update",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                },
                "priceDetails": {
                  "$ref": "#/definitions/KalturaPriceDetails"
                }
              },
              "required": [
                "id",
                "priceDetails"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPriceDetails"
            }
          },
          "x-Errors": {
            "description": "* `InvalidCurrency`: Invalid currency: The currency specified is not configured for this account\n* `CountryNotFound`: Unable to find the country code specified\n* `PriceDetailsDoesNotExist`: The price details doesn't exist in the database"
          }
        },
        "tags": [
          "priceDetails"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id",
          "priceDetails"
        ]
      }
    },
    "/service/priceplan/action/add": {
      "post": {
        "description": "Insert new PricePlan",
        "operationId": "pricePlan.add",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "pricePlan": {
                  "$ref": "#/definitions/KalturaPricePlan"
                }
              },
              "required": [
                "pricePlan"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPricePlan"
            }
          },
          "x-Errors": {
            "description": "* `DiscountCodeNotExist`\n* `NameRequired`: The mandatory name field is missing from the request\n* `InvalidPriceCode`: Invalid price code: The price code entered doesn't exist for this account\n* `PriceCodeDoesNotExist`\n* `AccountIsNotOpcSupported`"
          }
        },
        "tags": [
          "pricePlan"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "pricePlan"
        ]
      }
    },
    "/service/priceplan/action/delete": {
      "post": {
        "description": "Delete PricePlan",
        "operationId": "pricePlan.delete",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `PricePlanDoesNotExist`: The price plan doesn't exist in the database\n* `AccountIsNotOpcSupported`"
          }
        },
        "tags": [
          "pricePlan"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id"
        ]
      }
    },
    "/service/priceplan/action/list": {
      "post": {
        "description": "Returns a list of price plans by IDs",
        "operationId": "pricePlan.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaPricePlanFilter"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPricePlanListResponse"
            }
          }
        },
        "tags": [
          "pricePlan"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter"
        ]
      }
    },
    "/service/priceplan/action/update": {
      "post": {
        "description": "Updates a price plan",
        "operationId": "pricePlan.update",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                },
                "pricePlan": {
                  "$ref": "#/definitions/KalturaPricePlan"
                }
              },
              "required": [
                "id",
                "pricePlan"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPricePlan"
            }
          },
          "x-Errors": {
            "description": "* `PricePlanDoesNotExist`: The price plan doesn't exist in the database\n* `PriceDetailsDoesNotExist`: The price details doesn't exist in the database\n* `DiscountCodeNotExist`\n* `AccountIsNotOpcSupported`"
          }
        },
        "tags": [
          "pricePlan"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id",
          "pricePlan"
        ]
      }
    },
    "/service/productprice/action/list": {
      "post": {
        "description": "Returns a price and a purchase status for each subscription or/and media file, for a given user (if passed) and with the consideration of a coupon code (if passed).",
        "operationId": "productPrice.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaProductPriceFilter"
                }
              },
              "required": [
                "filter"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaProductPriceListResponse"
            }
          }
        },
        "tags": [
          "productPrice"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter"
        ]
      }
    },
    "/service/programassetgroupoffer/action/add": {
      "post": {
        "description": "Insert new ProgramAssetGroupOffer for partner",
        "operationId": "programAssetGroupOffer.add",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "programAssetGroupOffer": {
                  "$ref": "#/definitions/KalturaProgramAssetGroupOffer"
                }
              },
              "required": [
                "programAssetGroupOffer"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaProgramAssetGroupOffer"
            }
          },
          "x-Errors": {
            "description": "* `AccountIsNotOpcSupported`\n* `PriceDetailsDoesNotExist`: The price details doesn't exist in the database\n* `InvalidFileTypes`: Invalid file type: This file type doesn't exist for this account\n* `ExternalIdAlreadyExists`: The external ID you are trying to add / update already exists\n* `ExternalOfferIdAlreadyExists`: The external offer Id you are trying to add / update already exists"
          }
        },
        "tags": [
          "programAssetGroupOffer"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "programAssetGroupOffer"
        ]
      }
    },
    "/service/programassetgroupoffer/action/delete": {
      "post": {
        "description": "Delete programAssetGroupOffer",
        "operationId": "programAssetGroupOffer.delete",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `ProgramAssetGroupOfferDoesNotExist`: The programAssetGroupOffer does not exist\n* `AccountIsNotOpcSupported`"
          }
        },
        "tags": [
          "programAssetGroupOffer"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id"
        ]
      }
    },
    "/service/programassetgroupoffer/action/list": {
      "post": {
        "description": "Gets all Program asset group offer",
        "operationId": "programAssetGroupOffer.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaProgramAssetGroupOfferFilter"
                },
                "pager": {
                  "$ref": "#/definitions/KalturaFilterPager"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaProgramAssetGroupOfferListResponse"
            }
          },
          "x-Errors": {
            "description": "* `AccountIsNotOpcSupported`"
          }
        },
        "tags": [
          "programAssetGroupOffer"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter",
          "pager"
        ]
      }
    },
    "/service/programassetgroupoffer/action/update": {
      "post": {
        "description": "Update ProgramAssetGroupOffer",
        "operationId": "programAssetGroupOffer.update",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                },
                "programAssetGroupOffer": {
                  "$ref": "#/definitions/KalturaProgramAssetGroupOffer"
                }
              },
              "required": [
                "id",
                "programAssetGroupOffer"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaProgramAssetGroupOffer"
            }
          },
          "x-Errors": {
            "description": "* `AccountIsNotOpcSupported`\n* `PriceDetailsDoesNotExist`: The price details doesn't exist in the database\n* `InvalidFileTypes`: Invalid file type: This file type doesn't exist for this account\n* `ExternalIdAlreadyExists`: The external ID you are trying to add / update already exists\n* `StartDateShouldBeLessThanEndDate`\n* `NameRequired`: The mandatory name field is missing from the request\n* `ProgramAssetGroupOfferDoesNotExist`: The programAssetGroupOffer does not exist\n* `ExternalOfferIdAlreadyExists`: The external offer Id you are trying to add / update already exists"
          }
        },
        "tags": [
          "programAssetGroupOffer"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id",
          "programAssetGroupOffer"
        ]
      }
    },
    "/service/purchasesettings/action/get": {
      "post": {
        "description": "Retrieve the purchase settings.\r\n            Includes specification of where these settings were defined – account, household or user",
        "operationId": "purchaseSettings.get",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "by": {
                  "enum": [
                    "user",
                    "household"
                  ],
                  "type": "string",
                  "x-enumLabels": [
                    "USER",
                    "HOUSEHOLD"
                  ],
                  "x-enumType": "KalturaEntityReferenceBy"
                }
              },
              "required": [
                "by"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPurchaseSettings"
            }
          },
          "x-Errors": {
            "description": "* `DomainNotExists`: The household you selected does not exist\n* `UserDoesNotExist`: This user doesn't exist\n* `UserWithNoDomain`: This user is not associated with any household.\n* `UserSuspended`: Unable to perform this action due to a household suspension\n* `UserNotInDomain`: The user you selected is not part of the current household"
          }
        },
        "tags": [
          "purchaseSettings"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "by"
        ]
      }
    },
    "/service/purchasesettings/action/update": {
      "post": {
        "description": "Set a purchase PIN for the household or user",
        "operationId": "purchaseSettings.update",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "entityReference": {
                  "enum": [
                    "user",
                    "household"
                  ],
                  "type": "string",
                  "x-enumLabels": [
                    "USER",
                    "HOUSEHOLD"
                  ],
                  "x-enumType": "KalturaEntityReferenceBy"
                },
                "settings": {
                  "$ref": "#/definitions/KalturaPurchaseSettings"
                }
              },
              "required": [
                "entityReference",
                "settings"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPurchaseSettings"
            }
          },
          "x-Errors": {
            "description": "* `DomainNotExists`: The household you selected does not exist\n* `UserDoesNotExist`: This user doesn't exist\n* `UserWithNoDomain`: This user is not associated with any household.\n* `UserNotInDomain`: The user you selected is not part of the current household\n* `UserSuspended`: Unable to perform this action due to a household suspension\n* `PurchaseSettingsTypeInvalid`: The specified purchase settings type is Invalid"
          }
        },
        "tags": [
          "purchaseSettings"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "entityReference",
          "settings"
        ]
      }
    },
    "/service/ratio/action/add": {
      "post": {
        "description": "Add new group ratio",
        "operationId": "ratio.add",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "ratio": {
                  "$ref": "#/definitions/KalturaRatio"
                }
              },
              "required": [
                "ratio"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaRatio"
            }
          },
          "x-Errors": {
            "description": "* `RatioAlreadyExist`"
          }
        },
        "tags": [
          "ratio"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "ratio"
        ]
      }
    },
    "/service/ratio/action/list": {
      "post": {
        "description": "Get the list of available ratios",
        "operationId": "ratio.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaRatioListResponse"
            }
          }
        },
        "tags": [
          "ratio"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": []
      }
    },
    "/service/ratio/action/update": {
      "post": {
        "description": "Update group ratio&#39;s PrecisionPrecentage",
        "operationId": "ratio.update",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                },
                "ratio": {
                  "$ref": "#/definitions/KalturaRatio"
                }
              },
              "required": [
                "id",
                "ratio"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaRatio"
            }
          },
          "x-Errors": {
            "description": "* `RatioDoesNotExist`"
          }
        },
        "tags": [
          "ratio"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id",
          "ratio"
        ]
      }
    },
    "/service/recommendationprofile/action/add": {
      "post": {
        "description": "Insert new recommendation engine for partner",
        "operationId": "recommendationProfile.add",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "recommendationEngine": {
                  "$ref": "#/definitions/KalturaRecommendationProfile"
                }
              },
              "required": [
                "recommendationEngine"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaRecommendationProfile"
            }
          },
          "x-Errors": {
            "description": "* `NameRequired`: The mandatory name field is missing from the request\n* `AdapterUrlRequired`: The mandatory adapter URL field is missing from the request\n* `ExternalIdentifierRequired`: The mandatory external identifier field is missing from the request.\n* `ExternalIdentifierMustBeUnique`: External identifier must be unique.\n* `NoRecommendationEngineToInsert`: There's no available recommendation engine to connect"
          }
        },
        "tags": [
          "recommendationProfile"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "recommendationEngine"
        ]
      }
    },
    "/service/recommendationprofile/action/delete": {
      "post": {
        "description": "Delete recommendation engine by recommendation engine id",
        "operationId": "recommendationProfile.delete",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `RecommendationEngineNotExist`: The recommendation engine specified doesn't exist\n* `RecommendationEngineIdentifierRequired`: The mandatory recommendation engine identifier field is missing from the request"
          }
        },
        "tags": [
          "recommendationProfile"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id"
        ]
      }
    },
    "/service/recommendationprofile/action/generateSharedSecret": {
      "post": {
        "description": "Generate recommendation engine  shared secret",
        "operationId": "recommendationProfile.generateSharedSecret",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "recommendationEngineId": {
                  "type": "integer"
                }
              },
              "required": [
                "recommendationEngineId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaRecommendationProfile"
            }
          },
          "x-Errors": {
            "description": "* `RecommendationEngineNotExist`: The recommendation engine specified doesn't exist\n* `RecommendationEngineIdentifierRequired`: The mandatory recommendation engine identifier field is missing from the request"
          }
        },
        "tags": [
          "recommendationProfile"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "recommendationEngineId"
        ]
      }
    },
    "/service/recommendationprofile/action/list": {
      "post": {
        "description": "Returns all recommendation engines for partner",
        "operationId": "recommendationProfile.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaRecommendationProfileListResponse"
            }
          }
        },
        "tags": [
          "recommendationProfile"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": []
      }
    },
    "/service/recommendationprofile/action/update": {
      "post": {
        "description": "Update recommendation engine details",
        "operationId": "recommendationProfile.update",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "recommendationEngine": {
                  "$ref": "#/definitions/KalturaRecommendationProfile"
                },
                "recommendationEngineId": {
                  "type": "integer"
                }
              },
              "required": [
                "recommendationEngineId",
                "recommendationEngine"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaRecommendationProfile"
            }
          },
          "x-Errors": {
            "description": "* `RecommendationEngineNotExist`: The recommendation engine specified doesn't exist\n* `RecommendationEngineIdentifierRequired`: The mandatory recommendation engine identifier field is missing from the request\n* `NameRequired`: The mandatory name field is missing from the request\n* `AdapterUrlRequired`: The mandatory adapter URL field is missing from the request\n* `ExternalIdentifierRequired`: The mandatory external identifier field is missing from the request.\n* `ExternalIdentifierMustBeUnique`: External identifier must be unique.\n* `NoRecommendationEngineToUpdate`: There's no recommendation engine to update"
          }
        },
        "tags": [
          "recommendationProfile"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "recommendationEngineId",
          "recommendationEngine"
        ]
      }
    },
    "/service/recording/action/add": {
      "post": {
        "description": "Issue a record request for a program",
        "operationId": "recording.add",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "recording": {
                  "$ref": "#/definitions/KalturaRecording"
                }
              },
              "required": [
                "recording"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaRecording"
            }
          },
          "x-Errors": {
            "description": "* `ArgumentCannotBeEmpty`: Argument [@argument@] cannot be empty\n* `UserNotInDomain`: The user you selected is not part of the current household\n* `UserDoesNotExist`: This user doesn't exist\n* `UserSuspended`: Unable to perform this action due to a household suspension\n* `UserWithNoDomain`: This user is not associated with any household.\n* `ServiceNotAllowed`: The user is not entitled to the premium service that he or she is trying to access\n* `NotEntitled`: The user does not have permission to access this content\n* `AccountCdvrNotEnabled`: Your account is not enabled for the C-DVR (recording) feature\n* `AccountCatchUpNotEnabled`: Your account is not enabled for the catch-up feature\n* `ProgramCdvrNotEnabled`: This program is not recordable\n* `ProgramCatchUpNotEnabled`: This program does not support catch-up\n* `CatchUpBufferLimitation`: You've reach the maximum limit for the catch up buffer\n* `ProgramNotInRecordingScheduleWindow`: This program cannot be recorded because it is not in the recording schedule window\n* `ExceededQuota`: You've reached the maximum quote buffer for your household\n* `AlreadyRecordedAsSeriesOrSeason`: This program has already been recorded as part of a series/season recording\n* `InvalidAssetId`: The specified asset ID is invalid\n* `InvalidParameters`: Invalid Parameters\n* `CanOnlyAddRecordingBeforeRecordingStart`: Can Only Add Recording Before Recording Start\n* `RecordingExceededConcurrency`: Recording Exceeded Concurrency"
          }
        },
        "tags": [
          "recording"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "recording"
        ]
      }
    },
    "/service/recording/action/bulkdelete": {
      "post": {
        "description": "Delete list of user&#39;s recordings. Recording can be deleted only in status Recorded.\r\n            Possible error codes for each recording: RecordingNotFound = 3039, RecordingStatusNotValid = 3043, Error = 1",
        "operationId": "recording.bulkdelete",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "recordingIds": {
                  "type": "string"
                }
              },
              "required": [
                "recordingIds"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/KalturaActionResult"
              },
              "type": "array"
            }
          },
          "x-Errors": {
            "description": "* `UserSuspended`: Unable to perform this action due to a household suspension\n* `UserWithNoDomain`: This user is not associated with any household.\n* `DomainNotExists`: The household you selected does not exist\n* `UserDoesNotExist`: This user doesn't exist\n* `UserNotInDomain`: The user you selected is not part of the current household\n* `RecordingIdsExceededLimit`"
          }
        },
        "tags": [
          "recording"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "recordingIds"
        ]
      }
    },
    "/service/recording/action/cancel": {
      "post": {
        "description": "Cancel a previously requested recording. Cancel recording can be called for recording in status Scheduled or Recording Only",
        "operationId": "recording.cancel",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaRecording"
            }
          },
          "x-Errors": {
            "description": "* `UserNotInDomain`: The user you selected is not part of the current household\n* `UserDoesNotExist`: This user doesn't exist\n* `UserSuspended`: Unable to perform this action due to a household suspension\n* `UserWithNoDomain`: This user is not associated with any household.\n* `RecordingNotFound`: The program ID provided is invalid\n* `RecordingStatusNotValid`: Unable to perform the action requested because of the current recording status. Actions are only allowed for these statuses:Recorded, Recording, Scheduled\n* `CanOnlyUpdatePaddingBeforeRecordingBeforeRecordingStart`: Can Only Update Padding Before Recording Before Recording Start"
          }
        },
        "tags": [
          "recording"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id"
        ]
      }
    },
    "/service/recording/action/delete": {
      "post": {
        "description": "Delete one or more user recording(s). Delete recording can be called only for recordings in status Recorded",
        "operationId": "recording.delete",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaRecording"
            }
          },
          "x-Errors": {
            "description": "* `UserSuspended`: Unable to perform this action due to a household suspension\n* `UserWithNoDomain`: This user is not associated with any household.\n* `RecordingNotFound`: The program ID provided is invalid\n* `RecordingStatusNotValid`: Unable to perform the action requested because of the current recording status. Actions are only allowed for these statuses:Recorded, Recording, Scheduled\n* `CanOnlyDeleteRecordingAfterRecordingEnd`: Can Only Delete Recording After Recording end"
          }
        },
        "tags": [
          "recording"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id"
        ]
      }
    },
    "/service/recording/action/get": {
      "post": {
        "description": "Returns recording object by internal identifier",
        "operationId": "recording.get",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaRecording"
            }
          },
          "x-Errors": {
            "description": "* `RecordingNotFound`: The program ID provided is invalid"
          }
        },
        "tags": [
          "recording"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id"
        ]
      }
    },
    "/service/recording/action/immediateRecord": {
      "post": {
        "description": "Immediate Record",
        "operationId": "recording.immediateRecord",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "assetId": {
                  "type": "integer"
                },
                "endPadding": {
                  "type": "integer"
                }
              },
              "required": [
                "assetId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaImmediateRecording"
            }
          },
          "x-Errors": {
            "description": "* `UserNotInDomain`: The user you selected is not part of the current household\n* `UserDoesNotExist`: This user doesn't exist\n* `UserSuspended`: Unable to perform this action due to a household suspension\n* `UserWithNoDomain`: This user is not associated with any household.\n* `DomainNotExists`: The household you selected does not exist\n* `RecordingNotFound`: The program ID provided is invalid\n* `RecordingStatusNotValid`: Unable to perform the action requested because of the current recording status. Actions are only allowed for these statuses:Recorded, Recording, Scheduled\n* `RecordingFailed`: The program recording failed\n* `InvalidParameters`: Invalid Parameters\n* `RecordingExceededConcurrency`: Recording Exceeded Concurrency\n* `ExceedingAllowedImmediateRecordingAttempts`: Exceeding Allowed Immediate Recording Attempts\n* `PersonalizedRecordingDisabled`: Personalized recording is disabled\n* `NotAllowed`: Action not allowed due to roleId [@roleId@]"
          }
        },
        "tags": [
          "recording"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "assetId",
          "endPadding"
        ]
      }
    },
    "/service/recording/action/list": {
      "post": {
        "description": "Return a list of recordings for the household with optional filter by status and KSQL.",
        "operationId": "recording.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaRecordingFilter"
                },
                "pager": {
                  "$ref": "#/definitions/KalturaFilterPager"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaRecordingListResponse"
            }
          },
          "x-Errors": {
            "description": "* `UserNotInDomain`: The user you selected is not part of the current household\n* `UserDoesNotExist`: This user doesn't exist\n* `UserSuspended`: Unable to perform this action due to a household suspension\n* `UserWithNoDomain`: This user is not associated with any household."
          }
        },
        "tags": [
          "recording"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter",
          "pager"
        ]
      }
    },
    "/service/recording/action/protect": {
      "post": {
        "description": "Deprecated, please use recording.update instead\r\n            Protects an existing recording from the cleanup process for the defined protection period",
        "operationId": "recording.protect",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaRecording"
            }
          },
          "x-Errors": {
            "description": "* `UserNotInDomain`: The user you selected is not part of the current household\n* `UserDoesNotExist`: This user doesn't exist\n* `UserSuspended`: Unable to perform this action due to a household suspension\n* `UserWithNoDomain`: This user is not associated with any household.\n* `DomainNotExists`: The household you selected does not exist\n* `RecordingNotFound`: The program ID provided is invalid\n* `RecordingStatusNotValid`: Unable to perform the action requested because of the current recording status. Actions are only allowed for these statuses:Recorded, Recording, Scheduled\n* `RecordingFailed`: The program recording failed\n* `InvalidParameters`: Invalid Parameters\n* `ExceededProtectionQuota`: You've reached the maximum quota on protected programs, and can't protect any additional programs\n* `AccountProtectRecordNotEnabled`: The account recording protection feature is disabled"
          }
        },
        "tags": [
          "recording"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id"
        ]
      }
    },
    "/service/recording/action/stop": {
      "post": {
        "description": "Stop ongoing household recording",
        "operationId": "recording.stop",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "assetId": {
                  "type": "integer"
                },
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "assetId",
                "id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaRecording"
            }
          },
          "x-Errors": {
            "description": "* `UserNotInDomain`: The user you selected is not part of the current household\n* `UserDoesNotExist`: This user doesn't exist\n* `UserSuspended`: Unable to perform this action due to a household suspension\n* `UserWithNoDomain`: This user is not associated with any household.\n* `DomainNotExists`: The household you selected does not exist\n* `RecordingNotFound`: The program ID provided is invalid\n* `RecordingStatusNotValid`: Unable to perform the action requested because of the current recording status. Actions are only allowed for these statuses:Recorded, Recording, Scheduled\n* `RecordingFailed`: The program recording failed\n* `InvalidParameters`: Invalid Parameters\n* `NotAllowed`: Action not allowed due to roleId [@roleId@]"
          }
        },
        "tags": [
          "recording"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "assetId",
          "id"
        ]
      }
    },
    "/service/recording/action/update": {
      "post": {
        "description": "Update an existing recording with is protected field",
        "operationId": "recording.update",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                },
                "recording": {
                  "$ref": "#/definitions/KalturaRecording"
                }
              },
              "required": [
                "id",
                "recording"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaRecording"
            }
          },
          "x-Errors": {
            "description": "* `UserNotInDomain`: The user you selected is not part of the current household\n* `UserDoesNotExist`: This user doesn't exist\n* `UserSuspended`: Unable to perform this action due to a household suspension\n* `UserWithNoDomain`: This user is not associated with any household.\n* `DomainNotExists`: The household you selected does not exist\n* `RecordingNotFound`: The program ID provided is invalid\n* `RecordingStatusNotValid`: Unable to perform the action requested because of the current recording status. Actions are only allowed for these statuses:Recorded, Recording, Scheduled\n* `ExceededProtectionQuota`: You've reached the maximum quota on protected programs, and can't protect any additional programs\n* `RecordingFailed`: The program recording failed\n* `AccountProtectRecordNotEnabled`: The account recording protection feature is disabled\n* `InvalidParameters`: Invalid Parameters\n* `CanOnlyUpdatePaddingAfterRecordingBeforeRecordingEnd`: Can Only Update Padding After Recording Before Recording End\n* `CanOnlyUpdatePaddingBeforeRecordingBeforeRecordingStart`: Can Only Update Padding Before Recording Before Recording Start"
          }
        },
        "tags": [
          "recording"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id",
          "recording"
        ]
      }
    },
    "/service/region/action/add": {
      "post": {
        "description": "Adds a new region for partner",
        "operationId": "region.add",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "region": {
                  "$ref": "#/definitions/KalturaRegion"
                }
              },
              "required": [
                "region"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaRegion"
            }
          },
          "x-Errors": {
            "description": "* `ExternalIdAlreadyExists`: The external ID you are trying to add / update already exists\n* `RegionNotFound`: Region was not found\n* `RegionCannotBeParent`: Region cannot be parent\n* `InputFormatIsInvalid`: The input format is invalid\n* `DuplicateRegionChannel`: The channel already in region channels list\n* `ParentAlreadyContainsChannel`: Parent region already contains channel"
          }
        },
        "tags": [
          "region"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "region"
        ]
      }
    },
    "/service/region/action/delete": {
      "post": {
        "description": "Delete an existing region",
        "operationId": "region.delete",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "x-Errors": {
            "description": "* `RegionNotFound`: Region was not found\n* `DefaultRegionCannotBeDeleted`: Default region cannot be deleted\n* `CannotDeleteRegionInUse`: Region in use by household and cannot be deleted\n* `CannotDeleteSubRegionInUse`: Region has sub-region in use by household and cannot be deleted"
          }
        },
        "tags": [
          "region"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id"
        ]
      }
    },
    "/service/region/action/linearchannelbulkadd": {
      "post": {
        "description": "Adds a linear channel to the list of regions.",
        "operationId": "region.linearchannelbulkadd",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "linearChannelId": {
                  "type": "integer"
                },
                "regionChannelNumbers": {
                  "items": {
                    "$ref": "#/definitions/KalturaRegionChannelNumber"
                  },
                  "type": "array"
                }
              },
              "required": [
                "linearChannelId",
                "regionChannelNumbers"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          }
        },
        "tags": [
          "region"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "linearChannelId",
          "regionChannelNumbers"
        ]
      }
    },
    "/service/region/action/linearchannelbulkdelete": {
      "post": {
        "description": "Deletes a linear channel from the list of regions.",
        "operationId": "region.linearchannelbulkdelete",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "linearChannelId": {
                  "type": "integer"
                },
                "regionIds": {
                  "type": "string"
                }
              },
              "required": [
                "linearChannelId",
                "regionIds"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          }
        },
        "tags": [
          "region"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "linearChannelId",
          "regionIds"
        ]
      }
    },
    "/service/region/action/list": {
      "post": {
        "description": "Returns all regions for the partner",
        "operationId": "region.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaBaseRegionFilter"
                },
                "pager": {
                  "$ref": "#/definitions/KalturaFilterPager"
                }
              },
              "required": [
                "filter"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaRegionListResponse"
            }
          }
        },
        "tags": [
          "region"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter",
          "pager"
        ]
      }
    },
    "/service/region/action/update": {
      "post": {
        "description": "Update an existing region",
        "operationId": "region.update",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                },
                "region": {
                  "$ref": "#/definitions/KalturaRegion"
                }
              },
              "required": [
                "id",
                "region"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaRegion"
            }
          },
          "x-Errors": {
            "description": "* `RegionNotFound`: Region was not found\n* `ExternalIdAlreadyExists`: The external ID you are trying to add / update already exists\n* `RegionCannotBeParent`: Region cannot be parent\n* `InputFormatIsInvalid`: The input format is invalid\n* `DuplicateRegionChannel`: The channel already in region channels list\n* `ParentAlreadyContainsChannel`: Parent region already contains channel"
          }
        },
        "tags": [
          "region"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id",
          "region"
        ]
      }
    },
    "/service/registrysettings/action/list": {
      "post": {
        "description": "Retrieve the registry settings.",
        "operationId": "registrySettings.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaRegistrySettingsListResponse"
            }
          }
        },
        "tags": [
          "registrySettings"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": []
      }
    },
    "/service/reminder/action/add": {
      "post": {
        "description": "Add a new future reminder",
        "operationId": "reminder.add",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "reminder": {
                  "$ref": "#/definitions/KalturaReminder"
                }
              },
              "required": [
                "reminder"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaReminder"
            }
          },
          "x-Errors": {
            "description": "* `UserAlreadySetReminder`\n* `FailCreateAnnouncement`: An error occurred while creating the announcement.\n* `PassedAsset`\n* `InvalidAssetId`: The specified asset ID is invalid\n* `FeatureDisabled`: This feature is disabled."
          }
        },
        "tags": [
          "reminder"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "reminder"
        ]
      }
    },
    "/service/reminder/action/delete": {
      "post": {
        "description": "Delete a reminder. Reminder cannot be delete while being sent.",
        "operationId": "reminder.delete",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                },
                "type": {
                  "enum": [
                    "ASSET",
                    "SERIES"
                  ],
                  "type": "string",
                  "x-enumLabels": [
                    "ASSET",
                    "SERIES"
                  ],
                  "x-enumType": "KalturaReminderType"
                }
              },
              "required": [
                "id",
                "type"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `ReminderNotFound`"
          }
        },
        "tags": [
          "reminder"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id",
          "type"
        ]
      }
    },
    "/service/reminder/action/deleteWithToken": {
      "post": {
        "description": "Delete a reminder. Reminder cannot be delete while being sent.",
        "operationId": "reminder.deleteWithToken",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                },
                "partnerId": {
                  "type": "integer"
                },
                "token": {
                  "type": "string"
                },
                "type": {
                  "enum": [
                    "ASSET",
                    "SERIES"
                  ],
                  "type": "string",
                  "x-enumLabels": [
                    "ASSET",
                    "SERIES"
                  ],
                  "x-enumType": "KalturaReminderType"
                }
              },
              "required": [
                "id",
                "type",
                "token",
                "partnerId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "x-Errors": {
            "description": "* `InvalidToken`\n* `ReminderNotFound`"
          }
        },
        "tags": [
          "reminder"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id",
          "type",
          "token",
          "partnerId"
        ]
      }
    },
    "/service/reminder/action/list": {
      "post": {
        "description": "Return a list of reminders with optional filter by KSQL.",
        "operationId": "reminder.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaReminderFilter"
                },
                "pager": {
                  "$ref": "#/definitions/KalturaFilterPager"
                }
              },
              "required": [
                "filter"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaReminderListResponse"
            }
          },
          "x-Errors": {
            "description": "* `FeatureDisabled`: This feature is disabled."
          }
        },
        "tags": [
          "reminder"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter",
          "pager"
        ]
      }
    },
    "/service/report/action/get": {
      "post": {
        "description": "Return a device configuration retrieval log request for a specific device.",
        "operationId": "report.get",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "udid": {
                  "type": "string"
                }
              },
              "required": [
                "udid"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaReport"
            }
          },
          "x-Errors": {
            "description": "* `MissingConfiguration`: Missing configuration [@configuration@]\n* `Forbidden`\n* `IllegalQueryParams`\n* `NotExist`\n* `PartnerMismatch`"
          }
        },
        "tags": [
          "report"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "udid"
        ]
      }
    },
    "/service/report/action/list": {
      "post": {
        "description": "Return device configurations retrieval log. Supports paging and can be filtered with the parameter &quot;FromData&quot;.",
        "operationId": "report.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaReportFilter"
                },
                "pager": {
                  "$ref": "#/definitions/KalturaFilterPager"
                }
              },
              "required": [
                "filter"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaReportListResponse"
            }
          },
          "x-Errors": {
            "description": "* `MissingConfiguration`: Missing configuration [@configuration@]\n* `Forbidden`\n* `IllegalQueryParams`"
          }
        },
        "tags": [
          "report"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter",
          "pager"
        ]
      }
    },
    "/service/searchhistory/action/clean": {
      "post": {
        "description": "Clean the user’s search history",
        "operationId": "searchHistory.clean",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaSearchHistoryFilter"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          }
        },
        "tags": [
          "searchHistory"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter"
        ]
      }
    },
    "/service/searchhistory/action/delete": {
      "post": {
        "description": "Delete a specific search history.\r\n            Possible error code: 2032 - ItemNotFound",
        "operationId": "searchHistory.delete",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "string"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          }
        },
        "tags": [
          "searchHistory"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id"
        ]
      }
    },
    "/service/searchhistory/action/list": {
      "post": {
        "description": "Get user&#39;s last search requests",
        "operationId": "searchHistory.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaSearchHistoryFilter"
                },
                "pager": {
                  "$ref": "#/definitions/KalturaFilterPager"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaSearchHistoryListResponse"
            }
          }
        },
        "tags": [
          "searchHistory"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter",
          "pager"
        ]
      }
    },
    "/service/searchprioritygroup/action/add": {
      "post": {
        "description": "Add a new priority group.",
        "operationId": "searchPriorityGroup.add",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "searchPriorityGroup": {
                  "$ref": "#/definitions/KalturaSearchPriorityGroup"
                }
              },
              "required": [
                "searchPriorityGroup"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaSearchPriorityGroup"
            }
          }
        },
        "tags": [
          "searchPriorityGroup"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "searchPriorityGroup"
        ]
      }
    },
    "/service/searchprioritygroup/action/delete": {
      "post": {
        "description": "Delete the existing priority group by its identifier.",
        "operationId": "searchPriorityGroup.delete",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `SearchPriorityGroupDoesNotExist`"
          }
        },
        "tags": [
          "searchPriorityGroup"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id"
        ]
      }
    },
    "/service/searchprioritygroup/action/list": {
      "post": {
        "description": "Gets list of search priority groups which meet the filter criteria.",
        "operationId": "searchPriorityGroup.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaSearchPriorityGroupFilter"
                },
                "pager": {
                  "$ref": "#/definitions/KalturaFilterPager"
                }
              },
              "required": [
                "filter"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaSearchPriorityGroupListResponse"
            }
          },
          "x-Errors": {
            "description": "* `SearchPriorityGroupDoesNotExist`"
          }
        },
        "tags": [
          "searchPriorityGroup"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter",
          "pager"
        ]
      }
    },
    "/service/searchprioritygroup/action/update": {
      "post": {
        "description": "Update an existing priority group.",
        "operationId": "searchPriorityGroup.update",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                },
                "searchPriorityGroup": {
                  "$ref": "#/definitions/KalturaSearchPriorityGroup"
                }
              },
              "required": [
                "id",
                "searchPriorityGroup"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaSearchPriorityGroup"
            }
          },
          "x-Errors": {
            "description": "* `SearchPriorityGroupDoesNotExist`"
          }
        },
        "tags": [
          "searchPriorityGroup"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id",
          "searchPriorityGroup"
        ]
      }
    },
    "/service/searchprioritygrouporderedidsset/action/get": {
      "post": {
        "description": "Return the current ordering of priority groups for the partner.",
        "operationId": "searchPriorityGroupOrderedIdsSet.get",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaSearchPriorityGroupOrderedIdsSet"
            }
          }
        },
        "tags": [
          "searchPriorityGroupOrderedIdsSet"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": []
      }
    },
    "/service/searchprioritygrouporderedidsset/action/set": {
      "post": {
        "description": "Set the ordering of priority groups for the partner.",
        "operationId": "searchPriorityGroupOrderedIdsSet.set",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "orderedList": {
                  "$ref": "#/definitions/KalturaSearchPriorityGroupOrderedIdsSet"
                }
              },
              "required": [
                "orderedList"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaSearchPriorityGroupOrderedIdsSet"
            }
          }
        },
        "tags": [
          "searchPriorityGroupOrderedIdsSet"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "orderedList"
        ]
      }
    },
    "/service/segmentationtype/action/add": {
      "post": {
        "description": "Adds a new segmentation type to the system",
        "operationId": "segmentationType.add",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "segmentationType": {
                  "$ref": "#/definitions/KalturaSegmentationType"
                }
              },
              "required": [
                "segmentationType"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaSegmentationType"
            }
          },
          "x-Errors": {
            "description": "* `InvalidParameters`: Invalid Parameters\n* `DynamicSegmentsExceeded`\n* `DynamicSegmentPeriodExceeded`\n* `DynamicSegmentConditionsExceeded`\n* `NameMustBeUnique`"
          }
        },
        "tags": [
          "segmentationType"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "segmentationType"
        ]
      }
    },
    "/service/segmentationtype/action/delete": {
      "post": {
        "description": "Delete a segmentation type from the system",
        "operationId": "segmentationType.delete",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `ObjectNotExist`: The object requested doesn't exist\n* `CannotDeleteAttachedSegment`"
          }
        },
        "tags": [
          "segmentationType"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id"
        ]
      }
    },
    "/service/segmentationtype/action/getPartnerConfiguration": {
      "post": {
        "description": "Gets existing partner segmentation configuration",
        "operationId": "segmentationType.getPartnerConfiguration",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaSegmentationPartnerConfiguration"
            }
          }
        },
        "tags": [
          "segmentationType"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": []
      }
    },
    "/service/segmentationtype/action/list": {
      "post": {
        "description": "Lists all segmentation types in group",
        "operationId": "segmentationType.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaBaseSegmentationTypeFilter"
                },
                "pager": {
                  "$ref": "#/definitions/KalturaFilterPager"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaSegmentationTypeListResponse"
            }
          }
        },
        "tags": [
          "segmentationType"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter",
          "pager"
        ]
      }
    },
    "/service/segmentationtype/action/update": {
      "post": {
        "description": "Updates an existing segmentation type",
        "operationId": "segmentationType.update",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "segmentationType": {
                  "$ref": "#/definitions/KalturaSegmentationType"
                },
                "segmentationTypeId": {
                  "type": "integer"
                }
              },
              "required": [
                "segmentationTypeId",
                "segmentationType"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaSegmentationType"
            }
          },
          "x-Errors": {
            "description": "* `ObjectNotExist`: The object requested doesn't exist\n* `DynamicSegmentPeriodExceeded`\n* `DynamicSegmentConditionsExceeded`\n* `NameMustBeUnique`"
          }
        },
        "tags": [
          "segmentationType"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "segmentationTypeId",
          "segmentationType"
        ]
      }
    },
    "/service/segmentationtype/action/updatePartnerConfiguration": {
      "post": {
        "description": "Sets partner configuration for segments configuration",
        "operationId": "segmentationType.updatePartnerConfiguration",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "configuration": {
                  "$ref": "#/definitions/KalturaSegmentationPartnerConfiguration"
                }
              },
              "required": [
                "configuration"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          }
        },
        "tags": [
          "segmentationType"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "configuration"
        ]
      }
    },
    "/service/seriesrecording/action/add": {
      "post": {
        "description": "Issue a record request for a complete season or series",
        "operationId": "seriesRecording.add",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "recording": {
                  "$ref": "#/definitions/KalturaSeriesRecording"
                }
              },
              "required": [
                "recording"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaSeriesRecording"
            }
          },
          "x-Errors": {
            "description": "* `UserNotInDomain`: The user you selected is not part of the current household\n* `UserDoesNotExist`: This user doesn't exist\n* `UserSuspended`: Unable to perform this action due to a household suspension\n* `UserWithNoDomain`: This user is not associated with any household.\n* `ServiceNotAllowed`: The user is not entitled to the premium service that he or she is trying to access\n* `NotEntitled`: The user does not have permission to access this content\n* `AccountCdvrNotEnabled`: Your account is not enabled for the C-DVR (recording) feature\n* `ProgramCdvrNotEnabled`: This program is not recordable\n* `AccountSeriesRecordingNotEnabled`: The account series recording feature is disabled\n* `AlreadyRecordedAsSeriesOrSeason`: This program has already been recorded as part of a series/season recording\n* `InvalidAssetId`: The specified asset ID is invalid\n* `ProgramNotInRecordingScheduleWindow`: This program cannot be recorded because it is not in the recording schedule window\n* `AccountCatchUpNotEnabled`: Your account is not enabled for the catch-up feature\n* `ProgramCatchUpNotEnabled`: This program does not support catch-up\n* `CatchUpBufferLimitation`: You've reach the maximum limit for the catch up buffer\n* `ExceededQuota`: You've reached the maximum quote buffer for your household"
          }
        },
        "tags": [
          "seriesRecording"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "recording"
        ]
      }
    },
    "/service/seriesrecording/action/cancel": {
      "post": {
        "description": "Cancel a previously requested series recording. Cancel series recording can be called for recording in status Scheduled or Recording Only",
        "operationId": "seriesRecording.cancel",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaSeriesRecording"
            }
          },
          "x-Errors": {
            "description": "* `UserNotInDomain`: The user you selected is not part of the current household\n* `UserDoesNotExist`: This user doesn't exist\n* `UserSuspended`: Unable to perform this action due to a household suspension\n* `UserWithNoDomain`: This user is not associated with any household.\n* `DomainNotExists`: The household you selected does not exist\n* `SeriesRecordingNotFound`: Unable to find the requested series recording"
          }
        },
        "tags": [
          "seriesRecording"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id"
        ]
      }
    },
    "/service/seriesrecording/action/cancelByEpgId": {
      "post": {
        "description": "Cancel EPG recording that was recorded as part of series",
        "operationId": "seriesRecording.cancelByEpgId",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "epgId": {
                  "type": "integer"
                },
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id",
                "epgId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaSeriesRecording"
            }
          },
          "x-Errors": {
            "description": "* `UserNotInDomain`: The user you selected is not part of the current household\n* `UserDoesNotExist`: This user doesn't exist\n* `UserSuspended`: Unable to perform this action due to a household suspension\n* `UserWithNoDomain`: This user is not associated with any household.\n* `DomainNotExists`: The household you selected does not exist\n* `SeriesRecordingNotFound`: Unable to find the requested series recording\n* `EpgIdNotPartOfSeries`: Unable to cancel or delete an EPG program that is not part of the series"
          }
        },
        "tags": [
          "seriesRecording"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id",
          "epgId"
        ]
      }
    },
    "/service/seriesrecording/action/cancelBySeasonNumber": {
      "post": {
        "description": "Cancel Season recording epgs that was recorded as part of series",
        "operationId": "seriesRecording.cancelBySeasonNumber",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                },
                "seasonNumber": {
                  "type": "integer"
                }
              },
              "required": [
                "id",
                "seasonNumber"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaSeriesRecording"
            }
          },
          "x-Errors": {
            "description": "* `UserNotInDomain`: The user you selected is not part of the current household\n* `UserDoesNotExist`: This user doesn't exist\n* `UserSuspended`: Unable to perform this action due to a household suspension\n* `UserWithNoDomain`: This user is not associated with any household.\n* `DomainNotExists`: The household you selected does not exist\n* `SeriesRecordingNotFound`: Unable to find the requested series recording\n* `SeasonNumberNotMatch`: The season number you entered doesn't match the season number that was recorded"
          }
        },
        "tags": [
          "seriesRecording"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id",
          "seasonNumber"
        ]
      }
    },
    "/service/seriesrecording/action/delete": {
      "post": {
        "description": "Delete series recording(s). Delete series recording can be called recordings in any status",
        "operationId": "seriesRecording.delete",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaSeriesRecording"
            }
          },
          "x-Errors": {
            "description": "* `UserNotInDomain`: The user you selected is not part of the current household\n* `UserDoesNotExist`: This user doesn't exist\n* `UserSuspended`: Unable to perform this action due to a household suspension\n* `UserWithNoDomain`: This user is not associated with any household.\n* `DomainNotExists`: The household you selected does not exist\n* `SeriesRecordingNotFound`: Unable to find the requested series recording"
          }
        },
        "tags": [
          "seriesRecording"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id"
        ]
      }
    },
    "/service/seriesrecording/action/deleteBySeasonNumber": {
      "post": {
        "description": "Delete Season recording epgs that was recorded as part of series",
        "operationId": "seriesRecording.deleteBySeasonNumber",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                },
                "seasonNumber": {
                  "type": "integer"
                }
              },
              "required": [
                "id",
                "seasonNumber"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaSeriesRecording"
            }
          },
          "x-Errors": {
            "description": "* `UserNotInDomain`: The user you selected is not part of the current household\n* `UserDoesNotExist`: This user doesn't exist\n* `UserSuspended`: Unable to perform this action due to a household suspension\n* `UserWithNoDomain`: This user is not associated with any household.\n* `DomainNotExists`: The household you selected does not exist\n* `SeriesRecordingNotFound`: Unable to find the requested series recording\n* `SeasonNumberNotMatch`: The season number you entered doesn't match the season number that was recorded"
          }
        },
        "tags": [
          "seriesRecording"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id",
          "seasonNumber"
        ]
      }
    },
    "/service/seriesrecording/action/list": {
      "post": {
        "description": "Return a list of series recordings for the household with optional filter by status and KSQL.",
        "operationId": "seriesRecording.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaSeriesRecordingFilter"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaSeriesRecordingListResponse"
            }
          },
          "x-Errors": {
            "description": "* `UserNotInDomain`: The user you selected is not part of the current household\n* `UserDoesNotExist`: This user doesn't exist\n* `UserSuspended`: Unable to perform this action due to a household suspension\n* `UserWithNoDomain`: This user is not associated with any household.\n* `DomainNotExists`: The household you selected does not exist\n* `SeriesRecordingNotFound`: Unable to find the requested series recording"
          }
        },
        "tags": [
          "seriesRecording"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter"
        ]
      }
    },
    "/service/seriesrecording/action/rebookCanceledByEpgId": {
      "post": {
        "description": "Enable EPG recording that was canceled as part of series",
        "operationId": "seriesRecording.rebookCanceledByEpgId",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "epgId": {
                  "type": "integer"
                }
              },
              "required": [
                "epgId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaSeriesRecording"
            }
          },
          "x-Errors": {
            "description": "* `UserNotInDomain`: The user you selected is not part of the current household\n* `UserDoesNotExist`: This user doesn't exist\n* `UserSuspended`: Unable to perform this action due to a household suspension\n* `UserWithNoDomain`: This user is not associated with any household.\n* `DomainNotExists`: The household you selected does not exist\n* `RecordingNotFound`: The program ID provided is invalid\n* `RecordingStatusNotValid`: Unable to perform the action requested because of the current recording status. Actions are only allowed for these statuses:Recorded, Recording, Scheduled\n* `SeriesRecordingNotFound`: Unable to find the requested series recording\n* `EpgIdNotPartOfSeries`: Unable to cancel or delete an EPG program that is not part of the series"
          }
        },
        "tags": [
          "seriesRecording"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "epgId"
        ]
      }
    },
    "/service/session/action/get": {
      "post": {
        "description": "Parses KS",
        "operationId": "session.get",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "session": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaSession"
            }
          }
        },
        "tags": [
          "session"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "session"
        ]
      }
    },
    "/service/session/action/revoke": {
      "post": {
        "description": "Revokes all the sessions (KS) of a given user",
        "operationId": "session.revoke",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          }
        },
        "tags": [
          "session"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": []
      }
    },
    "/service/session/action/switchUser": {
      "post": {
        "description": "Switching the user in the session by generating a new session for a new user within the same household",
        "operationId": "session.switchUser",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "userIdToSwitch": {
                  "type": "string"
                }
              },
              "required": [
                "userIdToSwitch"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaLoginSession"
            }
          },
          "x-Errors": {
            "description": "* `UserNotActivated`: The user must be activated to log in"
          }
        },
        "tags": [
          "session"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "userIdToSwitch"
        ]
      }
    },
    "/service/smsadapterprofile/action/add": {
      "post": {
        "description": "SmsAdapterProfile add",
        "operationId": "smsAdapterProfile.add",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "objectToAdd": {
                  "$ref": "#/definitions/KalturaSmsAdapterProfile"
                }
              },
              "required": [
                "objectToAdd"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaSmsAdapterProfile"
            }
          },
          "x-Errors": {
            "description": "* `RequestFailed`: The request you entered could not be completed at this time"
          }
        },
        "tags": [
          "smsAdapterProfile"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "objectToAdd"
        ]
      }
    },
    "/service/smsadapterprofile/action/delete": {
      "post": {
        "description": "Remove SmsAdapterProfile",
        "operationId": "smsAdapterProfile.delete",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "x-Errors": {
            "description": "* `AdapterIdentifierRequired`: The mandatory adapter ID field is missing from the request\n* `AdapterNotExists`: The adapter you're trying to connect doesn't exist"
          }
        },
        "tags": [
          "smsAdapterProfile"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id"
        ]
      }
    },
    "/service/smsadapterprofile/action/generateSharedSecret": {
      "post": {
        "description": "Generate Sms Adapter shared secret",
        "operationId": "smsAdapterProfile.generateSharedSecret",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "smsAdapterId": {
                  "type": "integer"
                }
              },
              "required": [
                "smsAdapterId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaSmsAdapterProfile"
            }
          },
          "x-Errors": {
            "description": "* `IdentifierRequired`: Please specify the channel ID identifier\n* `AdapterNotExists`: The adapter you're trying to connect doesn't exist\n* `NotExist`"
          }
        },
        "tags": [
          "smsAdapterProfile"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "smsAdapterId"
        ]
      }
    },
    "/service/smsadapterprofile/action/get": {
      "post": {
        "description": "Get SmsAdapterProfile",
        "operationId": "smsAdapterProfile.get",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaSmsAdapterProfile"
            }
          }
        },
        "tags": [
          "smsAdapterProfile"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id"
        ]
      }
    },
    "/service/smsadapterprofile/action/list": {
      "post": {
        "description": "Gets all SmsAdapterProfile items",
        "operationId": "smsAdapterProfile.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaSmsAdapterProfileFilter"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaSmsAdapterProfileListResponse"
            }
          }
        },
        "tags": [
          "smsAdapterProfile"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter"
        ]
      }
    },
    "/service/smsadapterprofile/action/update": {
      "post": {
        "description": "SmsAdapterProfile update",
        "operationId": "smsAdapterProfile.update",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                },
                "objectToUpdate": {
                  "$ref": "#/definitions/KalturaSmsAdapterProfile"
                }
              },
              "required": [
                "id",
                "objectToUpdate"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaSmsAdapterProfile"
            }
          },
          "x-Errors": {
            "description": "* `AdapterNotExists`: The adapter you're trying to connect doesn't exist"
          }
        },
        "tags": [
          "smsAdapterProfile"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id",
          "objectToUpdate"
        ]
      }
    },
    "/service/social/action/UpdateConfiguration": {
      "post": {
        "description": "Set the user social network’s configuration information",
        "operationId": "social.UpdateConfiguration",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "configuration": {
                  "$ref": "#/definitions/KalturaSocialConfig"
                }
              },
              "required": [
                "configuration"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaSocialConfig"
            }
          }
        },
        "tags": [
          "social"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "configuration"
        ]
      }
    },
    "/service/social/action/get": {
      "post": {
        "description": "List social accounts",
        "operationId": "social.get",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "type": {
                  "enum": [
                    "facebook"
                  ],
                  "type": "string",
                  "x-enumLabels": [
                    "FACEBOOK"
                  ],
                  "x-enumType": "KalturaSocialNetwork"
                }
              },
              "required": [
                "type"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaSocial"
            }
          },
          "x-Errors": {
            "description": "* `UserDoesNotExist`: This user doesn't exist"
          }
        },
        "tags": [
          "social"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "type"
        ]
      }
    },
    "/service/social/action/getByToken": {
      "post": {
        "description": "Return the user object with social information according to a provided external social token",
        "operationId": "social.getByToken",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "partnerId": {
                  "type": "integer"
                },
                "token": {
                  "type": "string"
                },
                "type": {
                  "enum": [
                    "facebook"
                  ],
                  "type": "string",
                  "x-enumLabels": [
                    "FACEBOOK"
                  ],
                  "x-enumType": "KalturaSocialNetwork"
                }
              },
              "required": [
                "partnerId",
                "token",
                "type"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaSocial"
            }
          },
          "x-Errors": {
            "description": "* `UserDoesNotExist`: This user doesn't exist\n* `UserEmailIsMissing`"
          }
        },
        "tags": [
          "social"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "partnerId",
          "token",
          "type"
        ]
      }
    },
    "/service/social/action/getConfiguration": {
      "post": {
        "description": "Retrieve the social network’s configuration information",
        "operationId": "social.getConfiguration",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "partnerId": {
                  "type": "integer"
                },
                "type": {
                  "enum": [
                    "facebook"
                  ],
                  "type": "string",
                  "x-enumLabels": [
                    "FACEBOOK"
                  ],
                  "x-enumType": "KalturaSocialNetwork"
                }
              },
              "required": [
                "type"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaSocialConfig"
            }
          }
        },
        "tags": [
          "social"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "type",
          "partnerId"
        ]
      }
    },
    "/service/social/action/login": {
      "post": {
        "description": "Login using social token",
        "operationId": "social.login",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "partnerId": {
                  "type": "integer"
                },
                "token": {
                  "type": "string"
                },
                "type": {
                  "enum": [
                    "facebook"
                  ],
                  "type": "string",
                  "x-enumLabels": [
                    "FACEBOOK"
                  ],
                  "x-enumType": "KalturaSocialNetwork"
                },
                "udid": {
                  "type": "string"
                }
              },
              "required": [
                "partnerId",
                "token",
                "type"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaLoginResponse"
            }
          },
          "x-Errors": {
            "description": "* `UserDoesNotExist`: This user doesn't exist\n* `NotAllowed`: Action not allowed due to roleId [@roleId@]"
          }
        },
        "tags": [
          "social"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "partnerId",
          "token",
          "type",
          "udid"
        ]
      }
    },
    "/service/social/action/merge": {
      "post": {
        "description": "Connect an existing user in the system to an external social network user",
        "operationId": "social.merge",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "token": {
                  "type": "string"
                },
                "type": {
                  "enum": [
                    "facebook"
                  ],
                  "type": "string",
                  "x-enumLabels": [
                    "FACEBOOK"
                  ],
                  "x-enumType": "KalturaSocialNetwork"
                }
              },
              "required": [
                "token",
                "type"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaSocial"
            }
          },
          "x-Errors": {
            "description": "* `WrongPasswordOrUserName`: Unable to authenticate this user - the user name or password are incorrect. Please re-enter this information\n* `Conflict`: A conflict has occurred.\n* `MinFriendsLimitation`: Minimum friends limitation\n* `UserDoesNotExist`: This user doesn't exist"
          }
        },
        "tags": [
          "social"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "token",
          "type"
        ]
      }
    },
    "/service/social/action/register": {
      "post": {
        "description": "Create a new user in the system using a provided external social token",
        "operationId": "social.register",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "email": {
                  "type": "string"
                },
                "partnerId": {
                  "type": "integer"
                },
                "token": {
                  "type": "string"
                },
                "type": {
                  "enum": [
                    "facebook"
                  ],
                  "type": "string",
                  "x-enumLabels": [
                    "FACEBOOK"
                  ],
                  "x-enumType": "KalturaSocialNetwork"
                }
              },
              "required": [
                "partnerId",
                "token",
                "type"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaSocial"
            }
          },
          "x-Errors": {
            "description": "* `MinFriendsLimitation`: Minimum friends limitation\n* `UserEmailIsMissing`"
          }
        },
        "tags": [
          "social"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "partnerId",
          "token",
          "type",
          "email"
        ]
      }
    },
    "/service/social/action/unmerge": {
      "post": {
        "description": "Disconnect an existing user in the system from its external social network user",
        "operationId": "social.unmerge",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "type": {
                  "enum": [
                    "facebook"
                  ],
                  "type": "string",
                  "x-enumLabels": [
                    "FACEBOOK"
                  ],
                  "x-enumType": "KalturaSocialNetwork"
                }
              },
              "required": [
                "type"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaSocial"
            }
          },
          "x-Errors": {
            "description": "* `MinFriendsLimitation`: Minimum friends limitation"
          }
        },
        "tags": [
          "social"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "type"
        ]
      }
    },
    "/service/socialaction/action/add": {
      "post": {
        "description": "Insert new user social action",
        "operationId": "socialAction.add",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "socialAction": {
                  "$ref": "#/definitions/KalturaSocialAction"
                }
              },
              "required": [
                "socialAction"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaUserSocialActionResponse"
            }
          },
          "x-Errors": {
            "description": "* `UserDoesNotExist`: This user doesn't exist\n* `AssetAlreadyLiked`\n* `AssetAlreadyRated`"
          }
        },
        "tags": [
          "socialAction"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "socialAction"
        ]
      }
    },
    "/service/socialaction/action/delete": {
      "post": {
        "description": "delete user social action",
        "operationId": "socialAction.delete",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "string"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/KalturaNetworkActionStatus"
              },
              "type": "array"
            }
          },
          "x-Errors": {
            "description": "* `UserDoesNotExist`: This user doesn't exist\n* `UserNotAllowed`: The user you selected for this action doesn't have the necessary permissions\n* `ActionIsNotAllowed`: The action requested is not allowed\n* `SocialActionIdDoseNotExists`"
          }
        },
        "tags": [
          "socialAction"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id"
        ]
      }
    },
    "/service/socialaction/action/list": {
      "post": {
        "description": "Get list of user social actions",
        "operationId": "socialAction.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaSocialActionFilter"
                },
                "pager": {
                  "$ref": "#/definitions/KalturaFilterPager"
                }
              },
              "required": [
                "filter"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaSocialActionListResponse"
            }
          }
        },
        "tags": [
          "socialAction"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter",
          "pager"
        ]
      }
    },
    "/service/socialcomment/action/list": {
      "post": {
        "description": "Get a list of all social comments filtered by asset ID and social platform",
        "operationId": "socialComment.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaSocialCommentFilter"
                },
                "pager": {
                  "$ref": "#/definitions/KalturaFilterPager"
                }
              },
              "required": [
                "filter"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaSocialCommentListResponse"
            }
          }
        },
        "tags": [
          "socialComment"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter",
          "pager"
        ]
      }
    },
    "/service/socialfriendactivity/action/list": {
      "post": {
        "description": "Get a list of the social friends activity for a user",
        "operationId": "socialFriendActivity.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaSocialFriendActivityFilter"
                },
                "pager": {
                  "$ref": "#/definitions/KalturaFilterPager"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaSocialFriendActivityListResponse"
            }
          }
        },
        "tags": [
          "socialFriendActivity"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter",
          "pager"
        ]
      }
    },
    "/service/ssoadapterprofile/action/add": {
      "post": {
        "description": "Insert new sso adapter for partner",
        "operationId": "ssoAdapterProfile.add",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "ssoAdapter": {
                  "$ref": "#/definitions/KalturaSSOAdapterProfile"
                }
              },
              "required": [
                "ssoAdapter"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaSSOAdapterProfile"
            }
          },
          "x-Errors": {
            "description": "* `NameRequired`: The mandatory name field is missing from the request\n* `SharedSecretRequired`: The mandatory shared secret field is missing from the request\n* `ExternalIdentifierRequired`: The mandatory external identifier field is missing from the request.\n* `ExternalIdentifierMustBeUnique`: External identifier must be unique.\n* `NoSSOAdapaterToInsert`"
          }
        },
        "tags": [
          "ssoAdapterProfile"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "ssoAdapter"
        ]
      }
    },
    "/service/ssoadapterprofile/action/delete": {
      "post": {
        "description": "Delete sso adapters by sso adapters id",
        "operationId": "ssoAdapterProfile.delete",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "ssoAdapterId": {
                  "type": "integer"
                }
              },
              "required": [
                "ssoAdapterId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `SSOAdapterNotExist`\n* `SSOAdapterIdRequired`"
          }
        },
        "tags": [
          "ssoAdapterProfile"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "ssoAdapterId"
        ]
      }
    },
    "/service/ssoadapterprofile/action/generateSharedSecret": {
      "post": {
        "description": "Generate SSO Adapter shared secret",
        "operationId": "ssoAdapterProfile.generateSharedSecret",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "ssoAdapterId": {
                  "type": "integer"
                }
              },
              "required": [
                "ssoAdapterId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaSSOAdapterProfile"
            }
          },
          "x-Errors": {
            "description": "* `SSOAdapterIdRequired`\n* `SSOAdapterNotExist`"
          }
        },
        "tags": [
          "ssoAdapterProfile"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "ssoAdapterId"
        ]
      }
    },
    "/service/ssoadapterprofile/action/invoke": {
      "post": {
        "description": "Request validation against 3rd party",
        "operationId": "ssoAdapterProfile.invoke",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "adapterData": {
                  "items": {
                    "$ref": "#/definitions/KalturaKeyValue"
                  },
                  "type": "array"
                },
                "intent": {
                  "type": "string"
                }
              },
              "required": [
                "intent",
                "adapterData"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaSSOAdapterProfileInvoke"
            }
          },
          "x-Errors": {
            "description": "* `SSOAdapterIdRequired`\n* `SSOAdapterNotExist`"
          }
        },
        "tags": [
          "ssoAdapterProfile"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "intent",
          "adapterData"
        ]
      }
    },
    "/service/ssoadapterprofile/action/list": {
      "post": {
        "description": "Returns all sso adapters for partner : id + name",
        "operationId": "ssoAdapterProfile.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaSSOAdapterProfileListResponse"
            }
          }
        },
        "tags": [
          "ssoAdapterProfile"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": []
      }
    },
    "/service/ssoadapterprofile/action/update": {
      "post": {
        "description": "Update sso adapter details",
        "operationId": "ssoAdapterProfile.update",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "ssoAdapter": {
                  "$ref": "#/definitions/KalturaSSOAdapterProfile"
                },
                "ssoAdapterId": {
                  "type": "integer"
                }
              },
              "required": [
                "ssoAdapterId",
                "ssoAdapter"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaSSOAdapterProfile"
            }
          },
          "x-Errors": {
            "description": "* `SSOAdapterIdRequired`\n* `SSOAdapterNotExist`\n* `NameRequired`: The mandatory name field is missing from the request\n* `SharedSecretRequired`: The mandatory shared secret field is missing from the request\n* `ExternalIdentifierRequired`: The mandatory external identifier field is missing from the request.\n* `ExternalIdentifierMustBeUnique`: External identifier must be unique.\n* `NoSSOAdapaterToInsert`"
          }
        },
        "tags": [
          "ssoAdapterProfile"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "ssoAdapterId",
          "ssoAdapter"
        ]
      }
    },
    "/service/streamingdevice/action/bookPlaybackSession": {
      "post": {
        "description": "Reserves a concurrency slot for the given asset-device combination",
        "operationId": "streamingDevice.bookPlaybackSession",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "assetId": {
                  "type": "string"
                },
                "assetType": {
                  "enum": [
                    "media",
                    "recording",
                    "epg"
                  ],
                  "type": "string",
                  "x-enumLabels": [
                    "MEDIA",
                    "RECORDING",
                    "EPG"
                  ],
                  "x-enumType": "KalturaAssetType"
                },
                "fileId": {
                  "type": "string"
                }
              },
              "required": [
                "fileId",
                "assetId",
                "assetType"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `ConcurrencyLimitation`: Concurrency limitation (according to DLM configuration)"
          }
        },
        "tags": [
          "streamingDevice"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "fileId",
          "assetId",
          "assetType"
        ]
      }
    },
    "/service/streamingdevice/action/list": {
      "post": {
        "description": "Lists of devices that are streaming at that moment",
        "operationId": "streamingDevice.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaStreamingDeviceFilter"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaStreamingDeviceListResponse"
            }
          },
          "x-Errors": {
            "description": "* `UserWithNoDomain`: This user is not associated with any household."
          }
        },
        "tags": [
          "streamingDevice"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter"
        ]
      }
    },
    "/service/subscription/action/add": {
      "post": {
        "description": "Insert new subscription for partner",
        "operationId": "subscription.add",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "subscription": {
                  "$ref": "#/definitions/KalturaSubscription"
                }
              },
              "required": [
                "subscription"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaSubscription"
            }
          },
          "x-Errors": {
            "description": "* `ChannelDoesNotExist`\n* `CouponGroupNotExist`\n* `ExternalIdAlreadyExists`: The external ID you are trying to add / update already exists\n* `InvalidFileTypes`: Invalid file type: This file type doesn't exist for this account\n* `DlmNotExist`: The device limitation module (DLM) you entered does not exist in the system\n* `InvalidDiscountCode`: Invalid discount code: The discount code entered doesn't exist for this account\n* `PricePlanDoesNotExist`: The price plan doesn't exist in the database\n* `AccountIsNotOpcSupported`"
          }
        },
        "tags": [
          "subscription"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "subscription"
        ]
      }
    },
    "/service/subscription/action/delete": {
      "post": {
        "description": "Delete subscription",
        "operationId": "subscription.delete",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `AccountIsNotOpcSupported`"
          }
        },
        "tags": [
          "subscription"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id"
        ]
      }
    },
    "/service/subscription/action/list": {
      "post": {
        "description": "Returns a list of subscriptions requested by Subscription ID or file ID",
        "operationId": "subscription.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaSubscriptionFilter"
                },
                "pager": {
                  "$ref": "#/definitions/KalturaFilterPager"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaSubscriptionListResponse"
            }
          }
        },
        "tags": [
          "subscription"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter",
          "pager"
        ]
      }
    },
    "/service/subscription/action/update": {
      "post": {
        "description": "Update Subscription",
        "operationId": "subscription.update",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                },
                "subscription": {
                  "$ref": "#/definitions/KalturaSubscription"
                }
              },
              "required": [
                "id",
                "subscription"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaSubscription"
            }
          },
          "x-Errors": {
            "description": "* `SubscriptionDoesNotExist`: The subscription does not exist\n* `NameRequired`: The mandatory name field is missing from the request\n* `ChannelDoesNotExist`\n* `CouponGroupNotExist`\n* `ExternalIdAlreadyExists`: The external ID you are trying to add / update already exists\n* `InvalidFileTypes`: Invalid file type: This file type doesn't exist for this account\n* `DlmNotExist`: The device limitation module (DLM) you entered does not exist in the system\n* `InvalidDiscountCode`: Invalid discount code: The discount code entered doesn't exist for this account\n* `PricePlanDoesNotExist`: The price plan doesn't exist in the database\n* `AccountIsNotOpcSupported`"
          }
        },
        "tags": [
          "subscription"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id",
          "subscription"
        ]
      }
    },
    "/service/subscription/action/validateCoupon": {
      "post": {
        "description": "Returns information about a coupon for subscription",
        "operationId": "subscription.validateCoupon",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "code": {
                  "type": "string"
                },
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id",
                "code"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaCoupon"
            }
          },
          "x-Errors": {
            "description": "* `CouponNotValid`: The coupon you entered is not valid\n* `CouponPromotionDateExpired`\n* `CouponPromotionDateNotStarted`"
          }
        },
        "tags": [
          "subscription"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id",
          "code"
        ]
      }
    },
    "/service/subscriptionset/action/add": {
      "post": {
        "description": "Add a new subscriptionSet",
        "operationId": "subscriptionSet.add",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "subscriptionSet": {
                  "$ref": "#/definitions/KalturaSubscriptionSet"
                }
              },
              "required": [
                "subscriptionSet"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaSubscriptionSet"
            }
          },
          "x-Errors": {
            "description": "* `SubscriptionAlreadyBelongsToAnotherSubscriptionSet`\n* `WrongSubscriptionType`\n* `BaseSubscriptionAlreadyBelongsToAnotherSubscriptionSet`"
          }
        },
        "tags": [
          "subscriptionSet"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "subscriptionSet"
        ]
      }
    },
    "/service/subscriptionset/action/delete": {
      "post": {
        "description": "Delete a subscriptionSet",
        "operationId": "subscriptionSet.delete",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `SubscriptionSetDoesNotExist`: The subscriptionSet does not exist"
          }
        },
        "tags": [
          "subscriptionSet"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id"
        ]
      }
    },
    "/service/subscriptionset/action/get": {
      "post": {
        "description": "Get the subscriptionSet according to the Identifier",
        "operationId": "subscriptionSet.get",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaSubscriptionSet"
            }
          },
          "x-Errors": {
            "description": "* `SubscriptionSetDoesNotExist`: The subscriptionSet does not exist"
          }
        },
        "tags": [
          "subscriptionSet"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id"
        ]
      }
    },
    "/service/subscriptionset/action/list": {
      "post": {
        "description": "Returns a list of subscriptionSets requested by ids or subscription ids",
        "operationId": "subscriptionSet.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaSubscriptionSetFilter"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaSubscriptionSetListResponse"
            }
          }
        },
        "tags": [
          "subscriptionSet"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter"
        ]
      }
    },
    "/service/subscriptionset/action/update": {
      "post": {
        "description": "Update the subscriptionSet",
        "operationId": "subscriptionSet.update",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                },
                "subscriptionSet": {
                  "$ref": "#/definitions/KalturaSubscriptionSet"
                }
              },
              "required": [
                "id",
                "subscriptionSet"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaSubscriptionSet"
            }
          },
          "x-Errors": {
            "description": "* `SubscriptionAlreadyBelongsToAnotherSubscriptionSet`\n* `SubscriptionSetDoesNotExist`: The subscriptionSet does not exist\n* `BaseSubscriptionAlreadyBelongsToAnotherSubscriptionSet`\n* `WrongSubscriptionType`"
          }
        },
        "tags": [
          "subscriptionSet"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id",
          "subscriptionSet"
        ]
      }
    },
    "/service/system/action/clearLocalServerCache": {
      "post": {
        "description": "Clear local server cache",
        "operationId": "system.clearLocalServerCache",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "clearCacheAction": {
                  "type": "string"
                },
                "key": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          }
        },
        "tags": [
          "system"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "clearCacheAction",
          "key"
        ]
      }
    },
    "/service/system/action/getInvalidationKeyValue": {
      "post": {
        "description": "Returns the epoch value of an invalidation key if it was found",
        "operationId": "system.getInvalidationKeyValue",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "groupId": {
                  "default": 0,
                  "type": "integer"
                },
                "invalidationKey": {
                  "type": "string"
                },
                "layeredCacheConfigName": {
                  "type": "string"
                }
              },
              "required": [
                "invalidationKey"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaLongValue"
            }
          }
        },
        "tags": [
          "system"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "invalidationKey",
          "layeredCacheConfigName",
          "groupId"
        ]
      }
    },
    "/service/system/action/getLayeredCacheGroupConfig": {
      "post": {
        "description": "Returns the current layered cache group config of the sent groupId. You need to send groupId only if you wish to get it for a specific groupId and not the one the KS belongs to.",
        "operationId": "system.getLayeredCacheGroupConfig",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "groupId": {
                  "default": 0,
                  "type": "integer"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaStringValue"
            }
          }
        },
        "tags": [
          "system"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "groupId"
        ]
      }
    },
    "/service/system/action/getTime": {
      "post": {
        "description": "Returns current server timestamp",
        "operationId": "system.getTime",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "integer"
            }
          }
        },
        "tags": [
          "system"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": []
      }
    },
    "/service/system/action/getVersion": {
      "post": {
        "description": "Returns current server version",
        "operationId": "system.getVersion",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "system"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": []
      }
    },
    "/service/system/action/incrementLayeredCacheGroupConfigVersion": {
      "post": {
        "description": "Returns true if version has been incremented successfully or false otherwise. You need to send groupId only if you wish to increment for a specific groupId and not the one the KS belongs to.",
        "operationId": "system.incrementLayeredCacheGroupConfigVersion",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "groupId": {
                  "default": 0,
                  "type": "integer"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          }
        },
        "tags": [
          "system"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "groupId"
        ]
      }
    },
    "/service/system/action/invalidateLayeredCacheInvalidationKey": {
      "post": {
        "description": "Returns true if the invalidation key was invalidated successfully or false otherwise.",
        "operationId": "system.invalidateLayeredCacheInvalidationKey",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "key": {
                  "type": "string"
                }
              },
              "required": [
                "key"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          }
        },
        "tags": [
          "system"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "key"
        ]
      }
    },
    "/service/system/action/ping": {
      "post": {
        "description": "Returns true",
        "operationId": "system.ping",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          }
        },
        "tags": [
          "system"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": []
      }
    },
    "/service/tag/action/add": {
      "post": {
        "description": "Add a new tag",
        "operationId": "tag.add",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "tag": {
                  "$ref": "#/definitions/KalturaTag"
                }
              },
              "required": [
                "tag"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaTag"
            }
          },
          "x-Errors": {
            "description": "* `TopicNotFound`\n* `TagAlreadyInUse`"
          }
        },
        "tags": [
          "tag"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "tag"
        ]
      }
    },
    "/service/tag/action/delete": {
      "post": {
        "description": "Delete an existing tag",
        "operationId": "tag.delete",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `TagDoesNotExist`"
          }
        },
        "tags": [
          "tag"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id"
        ]
      }
    },
    "/service/tag/action/list": {
      "post": {
        "description": "Get the list of tags for the partner",
        "operationId": "tag.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaTagFilter"
                },
                "pager": {
                  "$ref": "#/definitions/KalturaFilterPager"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaTagListResponse"
            }
          }
        },
        "tags": [
          "tag"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter",
          "pager"
        ]
      }
    },
    "/service/tag/action/update": {
      "post": {
        "description": "Update an existing tag",
        "operationId": "tag.update",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                },
                "tag": {
                  "$ref": "#/definitions/KalturaTag"
                }
              },
              "required": [
                "id",
                "tag"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaTag"
            }
          },
          "x-Errors": {
            "description": "* `TopicNotFound`\n* `TagAlreadyInUse`\n* `NoValuesToUpdate`"
          }
        },
        "tags": [
          "tag"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id",
          "tag"
        ]
      }
    },
    "/service/timeshiftedtvpartnersettings/action/get": {
      "post": {
        "description": "Retrieve the account’s time-shifted TV settings (catch-up and C-DVR, Trick-play, Start-over)",
        "operationId": "timeShiftedTvPartnerSettings.get",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaTimeShiftedTvPartnerSettings"
            }
          }
        },
        "tags": [
          "timeShiftedTvPartnerSettings"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": []
      }
    },
    "/service/timeshiftedtvpartnersettings/action/update": {
      "post": {
        "description": "Configure the account’s time-shifted TV settings (catch-up and C-DVR, Trick-play, Start-over)",
        "operationId": "timeShiftedTvPartnerSettings.update",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "settings": {
                  "$ref": "#/definitions/KalturaTimeShiftedTvPartnerSettings"
                }
              },
              "required": [
                "settings"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `TimeShiftedTvPartnerSettingsNotSent`: The TimeShiftedTvPartner settings specified are null\n* `TimeShiftedTvPartnerSettingsNegativeBufferSent`: You've configured a negative buffer value in the TimeShiftedTvPartnerr settings"
          }
        },
        "tags": [
          "timeShiftedTvPartnerSettings"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "settings"
        ]
      }
    },
    "/service/topic/action/delete": {
      "post": {
        "description": "Deleted a topic",
        "operationId": "topic.delete",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `AnnouncementNotFound`: The announcement requested couldn't be found."
          }
        },
        "tags": [
          "topic"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id"
        ]
      }
    },
    "/service/topic/action/get": {
      "post": {
        "description": "Gets a topic",
        "operationId": "topic.get",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaTopic"
            }
          },
          "x-Errors": {
            "description": "* `AnnouncementNotFound`: The announcement requested couldn't be found."
          }
        },
        "tags": [
          "topic"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id"
        ]
      }
    },
    "/service/topic/action/list": {
      "post": {
        "description": "Get list of topics",
        "operationId": "topic.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaTopicFilter"
                },
                "pager": {
                  "$ref": "#/definitions/KalturaFilterPager"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaTopicListResponse"
            }
          }
        },
        "tags": [
          "topic"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter",
          "pager"
        ]
      }
    },
    "/service/topic/action/updateStatus": {
      "post": {
        "description": "Updates a topic &quot;automatic issue notification&quot; behavior.",
        "operationId": "topic.updateStatus",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "automaticIssueNotification": {
                  "enum": [
                    "Inherit",
                    "Yes",
                    "No"
                  ],
                  "type": "string",
                  "x-enumLabels": [
                    "INHERIT",
                    "YES",
                    "NO"
                  ],
                  "x-enumType": "KalturaTopicAutomaticIssueNotification"
                },
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id",
                "automaticIssueNotification"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `AnnouncementNotFound`: The announcement requested couldn't be found."
          }
        },
        "tags": [
          "topic"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id",
          "automaticIssueNotification"
        ]
      }
    },
    "/service/topicnotification/action/add": {
      "post": {
        "description": "Add a new topic notification",
        "operationId": "topicNotification.add",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "topicNotification": {
                  "$ref": "#/definitions/KalturaTopicNotification"
                }
              },
              "required": [
                "topicNotification"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaTopicNotification"
            }
          },
          "x-Errors": {
            "description": "* `SubscriptionDoesNotExist`: The subscription does not exist\n* `FailCreateTopicNotification`: Fail to create topic notification"
          }
        },
        "tags": [
          "topicNotification"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "topicNotification"
        ]
      }
    },
    "/service/topicnotification/action/delete": {
      "post": {
        "description": "Delete an existing topic notification",
        "operationId": "topicNotification.delete",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "x-Errors": {
            "description": "* `TopicNotificationNotFound`: The topic notification requested couldn't be found."
          }
        },
        "tags": [
          "topicNotification"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id"
        ]
      }
    },
    "/service/topicnotification/action/list": {
      "post": {
        "description": "Lists all topic notifications in the system.",
        "operationId": "topicNotification.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaTopicNotificationFilter"
                }
              },
              "required": [
                "filter"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaTopicNotificationListResponse"
            }
          }
        },
        "tags": [
          "topicNotification"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter"
        ]
      }
    },
    "/service/topicnotification/action/subscribe": {
      "post": {
        "description": "Subscribe a user to a topic notification",
        "operationId": "topicNotification.subscribe",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "topicNotificationId": {
                  "type": "integer"
                }
              },
              "required": [
                "topicNotificationId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "x-Errors": {
            "description": "* `TopicNotificationNotFound`: The topic notification requested couldn't be found."
          }
        },
        "tags": [
          "topicNotification"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "topicNotificationId"
        ]
      }
    },
    "/service/topicnotification/action/unsubscribe": {
      "post": {
        "description": "Unubscribe a user from a topic notification",
        "operationId": "topicNotification.unsubscribe",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "topicNotificationId": {
                  "type": "integer"
                }
              },
              "required": [
                "topicNotificationId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "x-Errors": {
            "description": "* `TopicNotificationNotFound`: The topic notification requested couldn't be found.\n* `UserNotFollowing`: The user is not following this series."
          }
        },
        "tags": [
          "topicNotification"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "topicNotificationId"
        ]
      }
    },
    "/service/topicnotification/action/update": {
      "post": {
        "description": "Update an existing topic notification",
        "operationId": "topicNotification.update",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                },
                "topicNotification": {
                  "$ref": "#/definitions/KalturaTopicNotification"
                }
              },
              "required": [
                "id",
                "topicNotification"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaTopicNotification"
            }
          },
          "x-Errors": {
            "description": "* `TopicNotificationNotFound`: The topic notification requested couldn't be found."
          }
        },
        "tags": [
          "topicNotification"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id",
          "topicNotification"
        ]
      }
    },
    "/service/topicnotificationmessage/action/add": {
      "post": {
        "description": "Add a new topic notification message",
        "operationId": "topicNotificationMessage.add",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "topicNotificationMessage": {
                  "$ref": "#/definitions/KalturaTopicNotificationMessage"
                }
              },
              "required": [
                "topicNotificationMessage"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaTopicNotificationMessage"
            }
          },
          "x-Errors": {
            "description": "* `TopicNotificationNotFound`: The topic notification requested couldn't be found."
          }
        },
        "tags": [
          "topicNotificationMessage"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "topicNotificationMessage"
        ]
      }
    },
    "/service/topicnotificationmessage/action/delete": {
      "post": {
        "description": "Delete an existing topic notification message",
        "operationId": "topicNotificationMessage.delete",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "x-Errors": {
            "description": "* `TopicNotificationMessageNotFound`: The topic notification requested couldn't be found."
          }
        },
        "tags": [
          "topicNotificationMessage"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id"
        ]
      }
    },
    "/service/topicnotificationmessage/action/list": {
      "post": {
        "description": "Lists all topic notifications in the system.",
        "operationId": "topicNotificationMessage.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaTopicNotificationMessageFilter"
                },
                "pager": {
                  "$ref": "#/definitions/KalturaFilterPager"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaTopicNotificationMessageListResponse"
            }
          },
          "x-Errors": {
            "description": "* `TopicNotificationNotFound`: The topic notification requested couldn't be found."
          }
        },
        "tags": [
          "topicNotificationMessage"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter",
          "pager"
        ]
      }
    },
    "/service/topicnotificationmessage/action/update": {
      "post": {
        "description": "Update an existing topic notification message",
        "operationId": "topicNotificationMessage.update",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                },
                "topicNotificationMessage": {
                  "$ref": "#/definitions/KalturaTopicNotificationMessage"
                }
              },
              "required": [
                "id",
                "topicNotificationMessage"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaTopicNotificationMessage"
            }
          },
          "x-Errors": {
            "description": "* `TopicNotificationMessageNotFound`: The topic notification requested couldn't be found.\n* `WrongTopicNotification`: Wrong Topic Notification Identifier\n* `WrongTopicNotificationTrigger`: Wrong Topic Notification trigger"
          }
        },
        "tags": [
          "topicNotificationMessage"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id",
          "topicNotificationMessage"
        ]
      }
    },
    "/service/transaction/action/downgrade": {
      "post": {
        "description": "downgrade specific subscription for a household. entitlements will be updated on the existing subscription end date.",
        "operationId": "transaction.downgrade",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "purchase": {
                  "$ref": "#/definitions/KalturaPurchase"
                }
              },
              "required": [
                "purchase"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "x-Errors": {
            "description": "* `UserNotInDomain`: The user you selected is not part of the current household\n* `InvalidUser`: The user you selected for this action is not a valid user\n* `UserDoesNotExist`: This user doesn't exist\n* `UserSuspended`: Unable to perform this action due to a household suspension\n* `CouponNotValid`: The coupon you entered is not valid\n* `UnKnownPPVModule`: This PPVModule does not belong to the item.\n* `SubscriptionNotAllowedForUserType`: Subscription is not allowed for user type\n* `SubscriptionNotRenewable`: Unable to perform this action on a subscription that is not renewable\n* `CanOnlyUpgradeOrDowngradeRecurringSubscriptionInTheSameSubscriptionSet`\n* `CanOnlyUpgradeOrDowngradeSubscriptionOnce`\n* `CanOnlyDowngradeSubscriptionWithLowerPriority`\n* `PaymentGatewayNotValid`: The specified Payment Gateway is not valid."
          }
        },
        "tags": [
          "transaction"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "purchase"
        ]
      }
    },
    "/service/transaction/action/getPurchaseSessionId": {
      "post": {
        "description": "Retrieve the purchase session identifier",
        "operationId": "transaction.getPurchaseSessionId",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "purchaseSession": {
                  "$ref": "#/definitions/KalturaPurchaseSession"
                }
              },
              "required": [
                "purchaseSession"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "integer"
            }
          }
        },
        "tags": [
          "transaction"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "purchaseSession"
        ]
      }
    },
    "/service/transaction/action/purchase": {
      "post": {
        "description": "Purchase specific product, subscription or Program asset group offer (PAGO) for a household. Upon successful charge entitlements to use the requested product or subscription are granted.",
        "operationId": "transaction.purchase",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "purchase": {
                  "$ref": "#/definitions/KalturaPurchase"
                }
              },
              "required": [
                "purchase"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaTransaction"
            }
          },
          "x-Errors": {
            "description": "* `UserNotInDomain`: The user you selected is not part of the current household\n* `InvalidUser`: The user you selected for this action is not a valid user\n* `UserDoesNotExist`: This user doesn't exist\n* `UserSuspended`: Unable to perform this action due to a household suspension\n* `CouponNotValid`: The coupon you entered is not valid\n* `UnableToPurchasePPVPurchased`: Pay-Per-View was already purchased by this household\n* `UnableToPurchaseFree`: The product you are trying to purchase is free\n* `UnableToPurchaseForPurchaseSubscriptionOnly`: The product you are trying to purchase is restricted to subscription purchases only\n* `UnableToPurchaseSubscriptionPurchased`: This subscription was already purchased by this household.\n* `NotForPurchase`: The Content ID entered is not available for purchase.\n* `UnableToPurchaseCollectionPurchased`: This collection has already been purchased by this household\n* `AdapterUrlRequired`: The mandatory adapter URL field is missing from the request\n* `IncorrectPrice`: The price shown for the item in the request is not the actual price.\n* `UnKnownPPVModule`: This PPVModule does not belong to the item.\n* `PaymentGatewayNotSetForHousehold`: There's no Payment Gateway set up for this household.\n* `PaymentGatewayNotExist`: The requested Payment Gateway doesn't exist.\n* `PaymentGatewayChargeIdRequired`: The mandatory Payment Gateway charge ID field is missing from the request.\n* `NoConfigurationFound`: The configuration for the credit card clearing has not been set.\n* `SignatureMismatch`: The signature provide doesn't match the signature on record.\n* `UnknownTransactionState`: The transaction's state is currently unknown.\n* `PaymentMethodNotSetForHousehold`: No payment method was set for this household.\n* `PaymentMethodNotExist`: The selected payment method doesn't exist.\n* `CanOnlyBeEntitledToOneSubscriptionPerSubscriptionSet`: Can only be entitled to one subscription per subscriptionSet, please use Upgrade or Downgrade\n* `SubscriptionNotAllowedForUserType`: Subscription is not allowed for user type\n* `MissingBasePackage`: Missing base package\n* `PurchasePendingFailed`\n* `PendingEntitlement`: Entitlement is pending\n* `InvalidContentId`: Illegal content ID\n* `NoMediaRelatedToFile`: There is no media for the file you requested.\n* `PaymentGatewaySuspended`: Payment gateway suspended to this householdId.\n* `ActionBlocked`: Blocked by segment.\n* `SubscriptionSetDoesNotExist`: The subscriptionSet does not exist\n* `PurchasePassedEntitlementFailed`: purchase passed but entitlement failed\n* `PurchaseFailed`: purchase failed\n* `UnableToPurchaseProgramAssetGroupOfferPurchased`: This ProgramAssetGroupOffer has already been purchased by this household\n* `CollectionNotExist`: The collection does not exist"
          }
        },
        "tags": [
          "transaction"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "purchase"
        ]
      }
    },
    "/service/transaction/action/setWaiver": {
      "post": {
        "description": "This method shall set the waiver flag on the user entitlement table and the waiver date field to the current date.",
        "operationId": "transaction.setWaiver",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "assetId": {
                  "type": "integer"
                },
                "transactionType": {
                  "enum": [
                    "ppv",
                    "subscription",
                    "collection",
                    "programAssetGroupOffer"
                  ],
                  "type": "string",
                  "x-enumLabels": [
                    "PPV",
                    "SUBSCRIPTION",
                    "COLLECTION",
                    "PROGRAMASSETGROUPOFFER"
                  ],
                  "x-enumType": "KalturaTransactionType"
                }
              },
              "required": [
                "assetId",
                "transactionType"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `UserNotInDomain`: The user you selected is not part of the current household\n* `InvalidUser`: The user you selected for this action is not a valid user\n* `UserDoesNotExist`: This user doesn't exist\n* `UserSuspended`: Unable to perform this action due to a household suspension"
          }
        },
        "tags": [
          "transaction"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "assetId",
          "transactionType"
        ]
      }
    },
    "/service/transaction/action/updateStatus": {
      "post": {
        "description": "Updates a pending purchase transaction state.",
        "operationId": "transaction.updateStatus",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "externalTransactionId": {
                  "type": "string"
                },
                "paymentGatewayId": {
                  "type": "string"
                },
                "signature": {
                  "type": "string"
                },
                "status": {
                  "$ref": "#/definitions/KalturaTransactionStatus"
                }
              },
              "required": [
                "paymentGatewayId",
                "externalTransactionId",
                "signature",
                "status"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "x-Errors": {
            "description": "* `NoPaymentGateway`: No Payment Gateway specified in the request.\n* `UnknownTransactionState`: The transaction's state is currently unknown.\n* `PaymentGatewayAdapterFailReasonUnknown`: The Payment Gateway adapter failed for an unknown reason.\n* `PaymentGatewayNotExist`: The requested Payment Gateway doesn't exist.\n* `PaymentGatewayTransactionNotFound`: The requested Payment Gateway transaction was not found.\n* `PaymentGatewayTransactionIsNotPending`: This transaction isn't in a Pending state.\n* `ErrorUpdatingPendingTransaction`: An error occurred when updating the pending transaction.\n* `UnKnownPPVModule`: This PPVModule does not belong to the item."
          }
        },
        "tags": [
          "transaction"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "paymentGatewayId",
          "externalTransactionId",
          "signature",
          "status"
        ]
      }
    },
    "/service/transaction/action/upgrade": {
      "post": {
        "description": "upgrade specific subscription for a household. Upon successful charge entitlements to use the requested product or subscription are granted.",
        "operationId": "transaction.upgrade",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "purchase": {
                  "$ref": "#/definitions/KalturaPurchase"
                }
              },
              "required": [
                "purchase"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaTransaction"
            }
          },
          "x-Errors": {
            "description": "* `UserNotInDomain`: The user you selected is not part of the current household\n* `InvalidUser`: The user you selected for this action is not a valid user\n* `UserDoesNotExist`: This user doesn't exist\n* `UserSuspended`: Unable to perform this action due to a household suspension\n* `CouponNotValid`: The coupon you entered is not valid\n* `UnableToPurchasePPVPurchased`: Pay-Per-View was already purchased by this household\n* `UnableToPurchaseFree`: The product you are trying to purchase is free\n* `UnableToPurchaseForPurchaseSubscriptionOnly`: The product you are trying to purchase is restricted to subscription purchases only\n* `UnableToPurchaseSubscriptionPurchased`: This subscription was already purchased by this household.\n* `NotForPurchase`: The Content ID entered is not available for purchase.\n* `UnableToPurchaseCollectionPurchased`: This collection has already been purchased by this household\n* `AdapterUrlRequired`: The mandatory adapter URL field is missing from the request\n* `IncorrectPrice`: The price shown for the item in the request is not the actual price.\n* `PendingEntitlement`: Entitlement is pending\n* `PaymentGatewayNotSetForHousehold`: There's no Payment Gateway set up for this household.\n* `PaymentGatewayNotExist`: The requested Payment Gateway doesn't exist.\n* `PaymentGatewayChargeIdRequired`: The mandatory Payment Gateway charge ID field is missing from the request.\n* `NoConfigurationFound`: The configuration for the credit card clearing has not been set.\n* `SignatureMismatch`: The signature provide doesn't match the signature on record.\n* `UnknownTransactionState`: The transaction's state is currently unknown.\n* `PaymentMethodNotSetForHousehold`: No payment method was set for this household.\n* `PaymentMethodNotExist`: The selected payment method doesn't exist.\n* `SubscriptionNotRenewable`: Unable to perform this action on a subscription that is not renewable\n* `CanOnlyUpgradeOrDowngradeRecurringSubscriptionInTheSameSubscriptionSet`\n* `CanOnlyUpgradeSubscriptionWithHigherPriority`\n* `CanOnlyUpgradeOrDowngradeSubscriptionOnce`\n* `CanOnlyUpgradeSubscriptionWithTheSameCurrencyAsCurrentSubscription`\n* `SubscriptionNotAllowedForUserType`: Subscription is not allowed for user type\n* `PaymentGatewayNotValid`: The specified Payment Gateway is not valid.\n* `PaymentGatewaySuspended`: Payment gateway suspended to this householdId.\n* `PaymentGatewayAdapterFailReasonUnknown`: The Payment Gateway adapter failed for an unknown reason.\n* `PurchasePassedEntitlementFailed`: purchase passed but entitlement failed\n* `PurchaseFailed`: purchase failed"
          }
        },
        "tags": [
          "transaction"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "purchase"
        ]
      }
    },
    "/service/transaction/action/validateReceipt": {
      "post": {
        "description": "Verifies PPV/Subscription/Collection client purchase (such as InApp) and entitles the user.",
        "operationId": "transaction.validateReceipt",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "externalReceipt": {
                  "$ref": "#/definitions/KalturaExternalReceipt"
                }
              },
              "required": [
                "externalReceipt"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaTransaction"
            }
          },
          "x-Errors": {
            "description": "* `UserNotInDomain`: The user you selected is not part of the current household\n* `InvalidUser`: The user you selected for this action is not a valid user\n* `UserDoesNotExist`: This user doesn't exist\n* `UserSuspended`: Unable to perform this action due to a household suspension\n* `InvalidContentId`: Illegal content ID\n* `NoMediaRelatedToFile`: There is no media for the file you requested.\n* `UnKnownPPVModule`: This PPVModule does not belong to the item.\n* `PaymentGatewayNotExist`: The requested Payment Gateway doesn't exist.\n* `NoConfigurationFound`: The configuration for the credit card clearing has not been set.\n* `PurchasePassedEntitlementFailed`: purchase passed but entitlement failed\n* `PaymentGatewayAdapterFailReasonUnknown`: The Payment Gateway adapter failed for an unknown reason.\n* `UnknownTransactionState`: The transaction's state is currently unknown.\n* `UnableToPurchasePPVPurchased`: Pay-Per-View was already purchased by this household\n* `UnableToPurchaseFree`: The product you are trying to purchase is free\n* `UnableToPurchaseForPurchaseSubscriptionOnly`: The product you are trying to purchase is restricted to subscription purchases only\n* `UnableToPurchaseSubscriptionPurchased`: This subscription was already purchased by this household.\n* `NotForPurchase`: The Content ID entered is not available for purchase.\n* `UnableToPurchaseCollectionPurchased`: This collection has already been purchased by this household\n* `PendingEntitlement`: Entitlement is pending"
          }
        },
        "tags": [
          "transaction"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "externalReceipt"
        ]
      }
    },
    "/service/transactionhistory/action/list": {
      "post": {
        "description": "Gets user or household transaction history.",
        "operationId": "transactionHistory.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaTransactionHistoryFilter"
                },
                "pager": {
                  "$ref": "#/definitions/KalturaFilterPager"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaBillingTransactionListResponse"
            }
          }
        },
        "tags": [
          "transactionHistory"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter",
          "pager"
        ]
      }
    },
    "/service/tvmrule/action/list": {
      "post": {
        "description": "Get the list of tvm rules for the partner",
        "operationId": "tvmRule.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaTvmRuleFilter"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaTvmRuleListResponse"
            }
          }
        },
        "tags": [
          "tvmRule"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter"
        ]
      }
    },
    "/service/unifiedpayment/action/getNextRenewal": {
      "post": {
        "description": "Returns the data about the next renewal",
        "operationId": "unifiedPayment.getNextRenewal",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaUnifiedPaymentRenewal"
            }
          }
        },
        "tags": [
          "unifiedPayment"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id"
        ]
      }
    },
    "/service/uploadtoken/action/add": {
      "post": {
        "description": "Adds new upload token to upload a file",
        "operationId": "uploadToken.add",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "uploadToken": {
                  "$ref": "#/definitions/KalturaUploadToken"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaUploadToken"
            }
          }
        },
        "tags": [
          "uploadToken"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "uploadToken"
        ]
      }
    },
    "/service/uploadtoken/action/upload": {
      "post": {
        "description": "Upload a file using the upload token id",
        "operationId": "uploadToken.upload",
        "parameters": [
          {
            "$ref": "#/parameters/ks"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "description": "Identifier of existing upload-token",
            "in": "query",
            "name": "uploadTokenId",
            "required": true,
            "type": "string"
          },
          {
            "description": "File to upload",
            "in": "formData",
            "name": "fileData",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaUploadToken"
            }
          },
          "x-Errors": {
            "description": "* `FileExceededMaxSize`: File Exceeded Max Size\n* `FileExtensionNotSupported`: File Extension Not Supported\n* `FileMimeDifferentThanExpected`: File Mime Different Than Expected\n* `FileDoesNotExists`: The file does not exist in a given path\n* `InvalidFileType`: The file type provided is invalid\n* `FileIdNotInCorrectLength`: The file ID is not the correct length\n* `FileAlreadyExists`: The file already exists in a given path\n* `ErrorSavingFile`: Error occurred while saving file to File Server"
          }
        },
        "tags": [
          "uploadToken"
        ],
        "x-kaltura-format": "file",
        "x-kaltura-parameters": [
          "uploadTokenId",
          "fileData"
        ]
      }
    },
    "/service/usagemodule/action/add": {
      "post": {
        "description": "Insert new UsageModule",
        "operationId": "usageModule.add",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "usageModule": {
                  "$ref": "#/definitions/KalturaUsageModule"
                }
              },
              "required": [
                "usageModule"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaUsageModule"
            }
          }
        },
        "tags": [
          "usageModule"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "usageModule"
        ]
      }
    },
    "/service/usagemodule/action/delete": {
      "post": {
        "description": "Delete UsageModule",
        "operationId": "usageModule.delete",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `UsageModuleDoesNotExist`"
          }
        },
        "tags": [
          "usageModule"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id"
        ]
      }
    },
    "/service/usagemodule/action/list": {
      "post": {
        "description": "Returns the list of available usage module",
        "operationId": "usageModule.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaUsageModuleFilter"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaUsageModuleListResponse"
            }
          }
        },
        "tags": [
          "usageModule"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter"
        ]
      }
    },
    "/service/usagemodule/action/update": {
      "post": {
        "description": "Update usage module",
        "operationId": "usageModule.update",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                },
                "usageModule": {
                  "$ref": "#/definitions/KalturaUsageModule"
                }
              },
              "required": [
                "id",
                "usageModule"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaUsageModule"
            }
          },
          "x-Errors": {
            "description": "* `UsageModuleDoesNotExist`"
          }
        },
        "tags": [
          "usageModule"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id",
          "usageModule"
        ]
      }
    },
    "/service/userassetrule/action/list": {
      "post": {
        "description": "Retrieve all the rules (parental, geo, device or user-type) that applies for this user and asset.",
        "operationId": "userAssetRule.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaUserAssetRuleFilter"
                }
              },
              "required": [
                "filter"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaUserAssetRuleListResponse"
            }
          },
          "x-Errors": {
            "description": "* `UserDoesNotExist`: This user doesn't exist\n* `UserWithNoDomain`: This user is not associated with any household.\n* `UserSuspended`: Unable to perform this action due to a household suspension\n* `UserNotInDomain`: The user you selected is not part of the current household\n* `DomainNotExists`: The household you selected does not exist\n* `RecordingNotFound`: The program ID provided is invalid"
          }
        },
        "tags": [
          "userAssetRule"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter"
        ]
      }
    },
    "/service/userassetslistitem/action/add": {
      "post": {
        "description": "Adds a new item to user’s private asset list",
        "operationId": "userAssetsListItem.add",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "userAssetsListItem": {
                  "$ref": "#/definitions/KalturaUserAssetsListItem"
                }
              },
              "required": [
                "userAssetsListItem"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaUserAssetsListItem"
            }
          }
        },
        "tags": [
          "userAssetsListItem"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "userAssetsListItem"
        ]
      }
    },
    "/service/userassetslistitem/action/delete": {
      "post": {
        "description": "Deletes an item from user’s private asset list",
        "operationId": "userAssetsListItem.delete",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "assetId": {
                  "type": "string"
                },
                "listType": {
                  "enum": [
                    "all",
                    "watch",
                    "purchase",
                    "library"
                  ],
                  "type": "string",
                  "x-enumLabels": [
                    "ALL",
                    "WATCH",
                    "PURCHASE",
                    "LIBRARY"
                  ],
                  "x-enumType": "KalturaUserAssetsListType"
                }
              },
              "required": [
                "assetId",
                "listType"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `ItemNotFound`: Unable to find the item you requested"
          }
        },
        "tags": [
          "userAssetsListItem"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "assetId",
          "listType"
        ]
      }
    },
    "/service/userassetslistitem/action/get": {
      "post": {
        "description": "Get an item from user’s private asset list",
        "operationId": "userAssetsListItem.get",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "assetId": {
                  "type": "string"
                },
                "itemType": {
                  "enum": [
                    "all",
                    "media"
                  ],
                  "type": "string",
                  "x-enumLabels": [
                    "ALL",
                    "MEDIA"
                  ],
                  "x-enumType": "KalturaUserAssetsListItemType"
                },
                "listType": {
                  "enum": [
                    "all",
                    "watch",
                    "purchase",
                    "library"
                  ],
                  "type": "string",
                  "x-enumLabels": [
                    "ALL",
                    "WATCH",
                    "PURCHASE",
                    "LIBRARY"
                  ],
                  "x-enumType": "KalturaUserAssetsListType"
                }
              },
              "required": [
                "assetId",
                "listType",
                "itemType"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaUserAssetsListItem"
            }
          },
          "x-Errors": {
            "description": "* `ItemNotFound`: Unable to find the item you requested"
          }
        },
        "tags": [
          "userAssetsListItem"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "assetId",
          "listType",
          "itemType"
        ]
      }
    },
    "/service/userinterest/action/add": {
      "post": {
        "description": "Insert new user interest for partner user",
        "operationId": "userInterest.add",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "userInterest": {
                  "$ref": "#/definitions/KalturaUserInterest"
                }
              },
              "required": [
                "userInterest"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaUserInterest"
            }
          },
          "x-Errors": {
            "description": "* `PartnerTopicInterestIsMissing`\n* `NoUserInterestToInsert`\n* `UserInterestAlreadyExist`\n* `MetaIdRequired`\n* `TopicNotFound`\n* `MetaValueRequired`\n* `ParentTopicIsRequired`\n* `ParentTopicShouldNotHaveValue`\n* `ParentTopicMetaIdNotEqualToMetaParentMetaID`\n* `ParentTopicValueIsMissing`\n* `ParentIdNotAUserInterest`\n* `FailCreateAnnouncement`: An error occurred while creating the announcement.\n* `UserSuspended`: Unable to perform this action due to a household suspension"
          }
        },
        "tags": [
          "userInterest"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "userInterest"
        ]
      }
    },
    "/service/userinterest/action/delete": {
      "post": {
        "description": "Delete new user interest for partner user",
        "operationId": "userInterest.delete",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "string"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `UserSuspended`: Unable to perform this action due to a household suspension\n* `UserInterestNotExist`\n* `PartnerTopicInterestIsMissing`"
          }
        },
        "tags": [
          "userInterest"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id"
        ]
      }
    },
    "/service/userinterest/action/deleteWithToken": {
      "post": {
        "description": "Delete new user interest for partner user",
        "operationId": "userInterest.deleteWithToken",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "string"
                },
                "partnerId": {
                  "type": "integer"
                },
                "token": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "token",
                "partnerId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "x-Errors": {
            "description": "* `InvalidToken`\n* `UserSuspended`: Unable to perform this action due to a household suspension\n* `UserInterestNotExist`\n* `PartnerTopicInterestIsMissing`"
          }
        },
        "tags": [
          "userInterest"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id",
          "token",
          "partnerId"
        ]
      }
    },
    "/service/userinterest/action/list": {
      "post": {
        "description": "Returns all Engagement for partner",
        "operationId": "userInterest.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaUserInterestListResponse"
            }
          }
        },
        "tags": [
          "userInterest"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": []
      }
    },
    "/service/userloginpin/action/add": {
      "post": {
        "description": "Generate a time and usage expiry login-PIN that can allow a single/multiple login/s per PIN. \r\n            If an active login-PIN already exists. Calling this API again for same user will add another login-PIN",
        "operationId": "userLoginPin.add",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "pinDuration": {
                  "type": "integer"
                },
                "pinUsages": {
                  "type": "integer"
                },
                "secret": {
                  "type": "string",
                  "x-inputType": "password"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaUserLoginPin"
            }
          },
          "x-Errors": {
            "description": "* `UserDoesNotExist`: This user doesn't exist\n* `InvalidParameters`: Invalid Parameters\n* `LoginViaPinNotAllowed`: Log in using a PIN is not enabled for this account\n* `MissingSecurityParameter`: The security answer for the PIN code is missing"
          }
        },
        "tags": [
          "userLoginPin"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "secret",
          "pinUsages",
          "pinDuration"
        ]
      }
    },
    "/service/userloginpin/action/delete": {
      "post": {
        "description": "Immediately deletes a given pre set login pin code for the user.",
        "operationId": "userLoginPin.delete",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "pinCode": {
                  "type": "string"
                }
              },
              "required": [
                "pinCode"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `UserSuspended`: Unable to perform this action due to a household suspension\n* `UserDoesNotExist`: This user doesn't exist\n* `PinNotExists`: The PIN provided does not exist in the system"
          }
        },
        "tags": [
          "userLoginPin"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "pinCode"
        ]
      }
    },
    "/service/userloginpin/action/deleteAll": {
      "post": {
        "description": "Immediately expire all active login-PINs for a user",
        "operationId": "userLoginPin.deleteAll",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `UserSuspended`: Unable to perform this action due to a household suspension\n* `UserDoesNotExist`: This user doesn't exist"
          }
        },
        "tags": [
          "userLoginPin"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": []
      }
    },
    "/service/userloginpin/action/update": {
      "post": {
        "description": "Set a time and usage expiry login-PIN that can allow a single login per PIN. If an active login-PIN already exists. Calling this API again for same user will add another login-PIN",
        "operationId": "userLoginPin.update",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "pinCode": {
                  "type": "string"
                },
                "pinDuration": {
                  "type": "integer"
                },
                "pinUsages": {
                  "type": "integer"
                },
                "secret": {
                  "type": "string",
                  "x-inputType": "password"
                }
              },
              "required": [
                "pinCode"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaUserLoginPin"
            }
          },
          "x-Errors": {
            "description": "* `MissingSecurityParameter`: The security answer for the PIN code is missing\n* `LoginViaPinNotAllowed`: Log in using a PIN is not enabled for this account\n* `PinNotInTheRightLength`: The PIN provided is not valid.(does not match the required number of digits).\n* `PinAlreadyExists`: The PIN that you entered already exists in the system\n* `InvalidParameters`: Invalid Parameters"
          }
        },
        "tags": [
          "userLoginPin"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "pinCode",
          "secret",
          "pinUsages",
          "pinDuration"
        ]
      }
    },
    "/service/userrole/action/add": {
      "post": {
        "description": "Creates a new role",
        "operationId": "userRole.add",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "role": {
                  "$ref": "#/definitions/KalturaUserRole"
                }
              },
              "required": [
                "role"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaUserRole"
            }
          }
        },
        "tags": [
          "userRole"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "role"
        ]
      }
    },
    "/service/userrole/action/delete": {
      "post": {
        "description": "Delete role",
        "operationId": "userRole.delete",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `RoleDoesNotExists`: Role Does Not Exists"
          }
        },
        "tags": [
          "userRole"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id"
        ]
      }
    },
    "/service/userrole/action/list": {
      "post": {
        "description": "Retrieving user roles by identifiers, if filter is empty, returns all partner roles",
        "operationId": "userRole.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaUserRoleFilter"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaUserRoleListResponse"
            }
          }
        },
        "tags": [
          "userRole"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter"
        ]
      }
    },
    "/service/userrole/action/update": {
      "post": {
        "description": "Update role",
        "operationId": "userRole.update",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                },
                "role": {
                  "$ref": "#/definitions/KalturaUserRole"
                }
              },
              "required": [
                "id",
                "role"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaUserRole"
            }
          },
          "x-Errors": {
            "description": "* `PermissionNameNotExists`: Permission Name Not Exists\n* `RoleDoesNotExists`: Role Does Not Exists\n* `RoleReadOnly`: Role is readonly and cannot be updated"
          }
        },
        "tags": [
          "userRole"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id",
          "role"
        ]
      }
    },
    "/service/usersegment/action/add": {
      "post": {
        "description": "Adds a segment to a user",
        "operationId": "userSegment.add",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "userSegment": {
                  "$ref": "#/definitions/KalturaUserSegment"
                }
              },
              "required": [
                "userSegment"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaUserSegment"
            }
          },
          "x-Errors": {
            "description": "* `InvalidUser`: The user you selected for this action is not a valid user\n* `ObjectNotExist`: The object requested doesn't exist"
          }
        },
        "tags": [
          "userSegment"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "userSegment"
        ]
      }
    },
    "/service/usersegment/action/delete": {
      "post": {
        "description": "Deletes a segment from a user",
        "operationId": "userSegment.delete",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "segmentId": {
                  "type": "integer"
                },
                "userId": {
                  "type": "string"
                }
              },
              "required": [
                "userId",
                "segmentId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "x-Errors": {
            "description": "* `ObjectNotExist`: The object requested doesn't exist"
          }
        },
        "tags": [
          "userSegment"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "userId",
          "segmentId"
        ]
      }
    },
    "/service/usersegment/action/list": {
      "post": {
        "description": "Retrieve all the segments that apply for given user",
        "operationId": "userSegment.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaUserSegmentFilter"
                },
                "pager": {
                  "$ref": "#/definitions/KalturaFilterPager"
                }
              },
              "required": [
                "filter"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaUserSegmentListResponse"
            }
          }
        },
        "tags": [
          "userSegment"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter",
          "pager"
        ]
      }
    },
    "/service/usersessionprofile/action/add": {
      "post": {
        "description": "Add new UserSessionProfile",
        "operationId": "userSessionProfile.add",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "userSessionProfile": {
                  "$ref": "#/definitions/KalturaUserSessionProfile"
                }
              },
              "required": [
                "userSessionProfile"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaUserSessionProfile"
            }
          },
          "x-Errors": {
            "description": "* `ExceededMaxCapacity`\n* `DeviceBrandIdsDoesNotExist`\n* `NonExistingDeviceFamilyIds`\n* `SegmentsIdsDoesNotExist`\n* `DeviceManufacturerIdsDoesNotExist`"
          }
        },
        "tags": [
          "userSessionProfile"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "userSessionProfile"
        ]
      }
    },
    "/service/usersessionprofile/action/delete": {
      "post": {
        "description": "Delete existing UserSessionProfile",
        "operationId": "userSessionProfile.delete",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "x-Errors": {
            "description": "* `UserSessionProfileDoesNotExist`"
          }
        },
        "tags": [
          "userSessionProfile"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id"
        ]
      }
    },
    "/service/usersessionprofile/action/list": {
      "post": {
        "description": "Returns the list of available UserSessionProfiles",
        "operationId": "userSessionProfile.list",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "filter": {
                  "$ref": "#/definitions/KalturaUserSessionProfileFilter"
                },
                "pager": {
                  "$ref": "#/definitions/KalturaFilterPager"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaUserSessionProfileListResponse"
            }
          }
        },
        "tags": [
          "userSessionProfile"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "filter",
          "pager"
        ]
      }
    },
    "/service/usersessionprofile/action/update": {
      "post": {
        "description": "Update existing UserSessionProfile",
        "operationId": "userSessionProfile.update",
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/clientTag"
          },
          {
            "$ref": "#/parameters/partnerId"
          },
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/currency"
          },
          {
            "$ref": "#/parameters/responseProfile"
          },
          {
            "$ref": "#/parameters/abortOnError"
          },
          {
            "$ref": "#/parameters/abortAllOnError"
          },
          {
            "$ref": "#/parameters/skipCondition"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OTTRequest"
                }
              ],
              "properties": {
                "id": {
                  "type": "integer"
                },
                "userSessionProfile": {
                  "$ref": "#/definitions/KalturaUserSessionProfile"
                }
              },
              "required": [
                "id",
                "userSessionProfile"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaUserSessionProfile"
            }
          },
          "x-Errors": {
            "description": "* `UserSessionProfileDoesNotExist`\n* `DeviceBrandIdsDoesNotExist`\n* `NonExistingDeviceFamilyIds`\n* `SegmentsIdsDoesNotExist`\n* `DeviceManufacturerIdsDoesNotExist`"
          }
        },
        "tags": [
          "userSessionProfile"
        ],
        "x-kaltura-format": "post",
        "x-kaltura-parameters": [
          "id",
          "userSessionProfile"
        ]
      }
    }
  },
  "produces": [
    "application/json",
    "text/xml"
  ],
  "schemes": [
    "https"
  ],
  "security": [
    {
      "ks": []
    }
  ],
  "securityDefinitions": {
    "ks": {
      "description": "A Kaltura session ID",
      "in": "body",
      "name": "ks",
      "type": "apiKey"
    }
  },
  "swagger": "2.0",
  "tags": [
    {
      "name": "announcement"
    },
    {
      "name": "appToken"
    },
    {
      "name": "asset"
    },
    {
      "name": "assetComment"
    },
    {
      "name": "assetFile"
    },
    {
      "name": "assetFilePpv"
    },
    {
      "name": "assetHistory"
    },
    {
      "name": "assetPersonalMarkup"
    },
    {
      "name": "assetPersonalSelection"
    },
    {
      "name": "assetRule"
    },
    {
      "name": "assetStatistics"
    },
    {
      "name": "assetStruct"
    },
    {
      "name": "assetStructMeta"
    },
    {
      "name": "assetUserRule"
    },
    {
      "name": "bookmark"
    },
    {
      "name": "bulkUpload"
    },
    {
      "name": "bulkUploadStatistics"
    },
    {
      "name": "businessModuleRule"
    },
    {
      "name": "campaign"
    },
    {
      "name": "categoryItem"
    },
    {
      "name": "categoryTree"
    },
    {
      "name": "categoryVersion"
    },
    {
      "name": "cdnAdapterProfile"
    },
    {
      "name": "cdnPartnerSettings"
    },
    {
      "name": "cDVRAdapterProfile"
    },
    {
      "name": "channel"
    },
    {
      "name": "collection"
    },
    {
      "name": "compensation"
    },
    {
      "name": "configurationGroup"
    },
    {
      "name": "configurationGroupDevice"
    },
    {
      "name": "configurationGroupTag"
    },
    {
      "name": "configurations"
    },
    {
      "name": "country"
    },
    {
      "name": "coupon"
    },
    {
      "name": "couponsGroup"
    },
    {
      "name": "currency"
    },
    {
      "name": "deviceBrand"
    },
    {
      "name": "deviceFamily"
    },
    {
      "name": "deviceReferenceData"
    },
    {
      "name": "discountDetails"
    },
    {
      "name": "drmProfile"
    },
    {
      "name": "duration"
    },
    {
      "name": "dynamicList"
    },
    {
      "name": "email"
    },
    {
      "name": "engagement"
    },
    {
      "name": "engagementAdapter"
    },
    {
      "name": "entitlement"
    },
    {
      "name": "epg"
    },
    {
      "name": "epgServicePartnerConfiguration"
    },
    {
      "name": "eventNotification"
    },
    {
      "name": "eventNotificationAction"
    },
    {
      "name": "exportTask"
    },
    {
      "name": "externalChannelProfile"
    },
    {
      "name": "favorite"
    },
    {
      "name": "followTvSeries"
    },
    {
      "name": "homeNetwork"
    },
    {
      "name": "household"
    },
    {
      "name": "householdCoupon"
    },
    {
      "name": "householdDevice"
    },
    {
      "name": "householdLimitations"
    },
    {
      "name": "householdPaymentGateway"
    },
    {
      "name": "householdPaymentMethod"
    },
    {
      "name": "householdPremiumService"
    },
    {
      "name": "householdQuota"
    },
    {
      "name": "householdSegment"
    },
    {
      "name": "householdUser"
    },
    {
      "name": "image"
    },
    {
      "name": "imageType"
    },
    {
      "name": "inboxMessage"
    },
    {
      "name": "IngestProfile"
    },
    {
      "name": "ingestStatus"
    },
    {
      "name": "iot"
    },
    {
      "name": "iotProfile"
    },
    {
      "name": "label"
    },
    {
      "name": "language"
    },
    {
      "name": "licensedUrl"
    },
    {
      "name": "lineup"
    },
    {
      "name": "liveToVod"
    },
    {
      "name": "mediaConcurrencyRule"
    },
    {
      "name": "mediaFile"
    },
    {
      "name": "mediaFileDynamicData"
    },
    {
      "name": "mediaFileType"
    },
    {
      "name": "messageTemplate"
    },
    {
      "name": "meta"
    },
    {
      "name": "notification"
    },
    {
      "name": "notificationsPartnerSettings"
    },
    {
      "name": "notificationsSettings"
    },
    {
      "name": "ossAdapterProfile"
    },
    {
      "name": "ottCategory"
    },
    {
      "name": "ottUser"
    },
    {
      "name": "parentalRule"
    },
    {
      "name": "partner"
    },
    {
      "name": "partnerConfiguration"
    },
    {
      "name": "partnerPremiumServices"
    },
    {
      "name": "passwordPolicy"
    },
    {
      "name": "paymentGatewayProfile"
    },
    {
      "name": "paymentMethodProfile"
    },
    {
      "name": "permission"
    },
    {
      "name": "permissionItem"
    },
    {
      "name": "personalActivityCleanup"
    },
    {
      "name": "personalFeed"
    },
    {
      "name": "personalList"
    },
    {
      "name": "pin"
    },
    {
      "name": "playbackProfile"
    },
    {
      "name": "ppv"
    },
    {
      "name": "previewModule"
    },
    {
      "name": "priceDetails"
    },
    {
      "name": "pricePlan"
    },
    {
      "name": "productPrice"
    },
    {
      "name": "programAssetGroupOffer"
    },
    {
      "name": "purchaseSettings"
    },
    {
      "name": "ratio"
    },
    {
      "name": "recommendationProfile"
    },
    {
      "name": "recording"
    },
    {
      "name": "region"
    },
    {
      "name": "registrySettings"
    },
    {
      "name": "reminder"
    },
    {
      "name": "report"
    },
    {
      "name": "searchHistory"
    },
    {
      "name": "searchPriorityGroup"
    },
    {
      "name": "searchPriorityGroupOrderedIdsSet"
    },
    {
      "name": "segmentationType"
    },
    {
      "name": "seriesRecording"
    },
    {
      "name": "session"
    },
    {
      "name": "smsAdapterProfile"
    },
    {
      "name": "social"
    },
    {
      "name": "socialAction"
    },
    {
      "name": "socialComment"
    },
    {
      "name": "socialFriendActivity"
    },
    {
      "name": "ssoAdapterProfile"
    },
    {
      "name": "streamingDevice"
    },
    {
      "name": "subscription"
    },
    {
      "name": "subscriptionSet"
    },
    {
      "name": "system"
    },
    {
      "name": "tag"
    },
    {
      "name": "timeShiftedTvPartnerSettings"
    },
    {
      "name": "topic"
    },
    {
      "name": "topicNotification"
    },
    {
      "name": "topicNotificationMessage"
    },
    {
      "name": "transaction"
    },
    {
      "name": "transactionHistory"
    },
    {
      "name": "tvmRule"
    },
    {
      "name": "unifiedPayment"
    },
    {
      "name": "uploadToken"
    },
    {
      "name": "usageModule"
    },
    {
      "name": "userAssetRule"
    },
    {
      "name": "userAssetsListItem"
    },
    {
      "name": "userInterest"
    },
    {
      "name": "userLoginPin"
    },
    {
      "name": "userRole"
    },
    {
      "name": "userSegment"
    },
    {
      "name": "userSessionProfile"
    }
  ],
  "x-enums": {
    "KalturaAddDefaultIfEmptyResponseProfileOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        }
      ],
      "title": "KalturaAddDefaultIfEmptyResponseProfileOrderBy"
    },
    "KalturaAdsPolicy": {
      "oneOf": [
        {
          "enum": [
            "NO_ADS"
          ],
          "title": "NO_ADS"
        },
        {
          "enum": [
            "KEEP_ADS"
          ],
          "title": "KEEP_ADS"
        }
      ],
      "title": "KalturaAdsPolicy"
    },
    "KalturaAggregationCountOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        }
      ],
      "title": "KalturaAggregationCountOrderBy"
    },
    "KalturaAggregationType": {
      "oneOf": [
        {
          "enum": [
            "Count"
          ],
          "title": "COUNT"
        },
        {
          "enum": [
            "Sum"
          ],
          "title": "SUM"
        },
        {
          "enum": [
            "Avg"
          ],
          "title": "AVG"
        }
      ],
      "title": "KalturaAggregationType"
    },
    "KalturaAnnouncementOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        }
      ],
      "title": "KalturaAnnouncementOrderBy"
    },
    "KalturaAnnouncementRecipientsType": {
      "oneOf": [
        {
          "enum": [
            "All"
          ],
          "title": "ALL"
        },
        {
          "enum": [
            "LoggedIn"
          ],
          "title": "LOGGEDIN"
        },
        {
          "enum": [
            "Guests"
          ],
          "title": "GUESTS"
        },
        {
          "enum": [
            "Other"
          ],
          "title": "OTHER"
        }
      ],
      "title": "KalturaAnnouncementRecipientsType"
    },
    "KalturaAnnouncementStatus": {
      "oneOf": [
        {
          "enum": [
            "NotSent"
          ],
          "title": "NOTSENT"
        },
        {
          "enum": [
            "Sending"
          ],
          "title": "SENDING"
        },
        {
          "enum": [
            "Sent"
          ],
          "title": "SENT"
        },
        {
          "enum": [
            "Aborted"
          ],
          "title": "ABORTED"
        }
      ],
      "title": "KalturaAnnouncementStatus"
    },
    "KalturaApiAction": {
      "oneOf": [
        {
          "enum": [
            "ADD"
          ],
          "title": "ADD"
        }
      ],
      "title": "KalturaApiAction"
    },
    "KalturaApiParameterPermissionItemAction": {
      "oneOf": [
        {
          "enum": [
            "READ"
          ],
          "title": "READ"
        },
        {
          "enum": [
            "INSERT"
          ],
          "title": "INSERT"
        },
        {
          "enum": [
            "UPDATE"
          ],
          "title": "UPDATE"
        },
        {
          "enum": [
            "WRITE"
          ],
          "title": "WRITE"
        },
        {
          "enum": [
            "ALL"
          ],
          "title": "ALL"
        }
      ],
      "title": "KalturaApiParameterPermissionItemAction"
    },
    "KalturaApiService": {
      "oneOf": [
        {
          "enum": [
            "HOUSEHOLD_DEVICE"
          ],
          "title": "HOUSEHOLD_DEVICE"
        }
      ],
      "title": "KalturaApiService"
    },
    "KalturaAppTokenHashType": {
      "oneOf": [
        {
          "enum": [
            "SHA1"
          ],
          "title": "SHA1"
        },
        {
          "enum": [
            "SHA256"
          ],
          "title": "SHA256"
        },
        {
          "enum": [
            "SHA512"
          ],
          "title": "SHA512"
        },
        {
          "enum": [
            "MD5"
          ],
          "title": "MD5"
        }
      ],
      "title": "KalturaAppTokenHashType"
    },
    "KalturaAssetCommentOrderBy": {
      "oneOf": [
        {
          "enum": [
            "CREATE_DATE_DESC"
          ],
          "title": "CREATE_DATE_DESC"
        }
      ],
      "title": "KalturaAssetCommentOrderBy"
    },
    "KalturaAssetFilePpvOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        }
      ],
      "title": "KalturaAssetFilePpvOrderBy"
    },
    "KalturaAssetHistoryOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        }
      ],
      "title": "KalturaAssetHistoryOrderBy"
    },
    "KalturaAssetHistorySuppressFilterOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        }
      ],
      "title": "KalturaAssetHistorySuppressFilterOrderBy"
    },
    "KalturaAssetImagePerRatioOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        }
      ],
      "title": "KalturaAssetImagePerRatioOrderBy"
    },
    "KalturaAssetIndexStatus": {
      "oneOf": [
        {
          "enum": [
            "Ok"
          ],
          "title": "OK"
        },
        {
          "enum": [
            "Deleted"
          ],
          "title": "DELETED"
        },
        {
          "enum": [
            "NotUpdated"
          ],
          "title": "NOTUPDATED"
        }
      ],
      "title": "KalturaAssetIndexStatus"
    },
    "KalturaAssetInheritancePolicy": {
      "oneOf": [
        {
          "enum": [
            "Enable"
          ],
          "title": "ENABLE"
        },
        {
          "enum": [
            "Disable"
          ],
          "title": "DISABLE"
        }
      ],
      "title": "KalturaAssetInheritancePolicy"
    },
    "KalturaAssetLifeCycleRuleActionType": {
      "oneOf": [
        {
          "enum": [
            "ADD"
          ],
          "title": "ADD"
        },
        {
          "enum": [
            "REMOVE"
          ],
          "title": "REMOVE"
        }
      ],
      "title": "KalturaAssetLifeCycleRuleActionType"
    },
    "KalturaAssetLifeCycleRuleTransitionType": {
      "oneOf": [
        {
          "enum": [
            "TAG"
          ],
          "title": "TAG"
        },
        {
          "enum": [
            "BUSINESS_MODEL"
          ],
          "title": "BUSINESS_MODEL"
        }
      ],
      "title": "KalturaAssetLifeCycleRuleTransitionType"
    },
    "KalturaAssetOrderBy": {
      "oneOf": [
        {
          "enum": [
            "RELEVANCY_DESC"
          ],
          "title": "RELEVANCY_DESC"
        },
        {
          "enum": [
            "NAME_ASC"
          ],
          "title": "NAME_ASC"
        },
        {
          "enum": [
            "NAME_DESC"
          ],
          "title": "NAME_DESC"
        },
        {
          "enum": [
            "VIEWS_DESC"
          ],
          "title": "VIEWS_DESC"
        },
        {
          "enum": [
            "RATINGS_DESC"
          ],
          "title": "RATINGS_DESC"
        },
        {
          "enum": [
            "VOTES_DESC"
          ],
          "title": "VOTES_DESC"
        },
        {
          "enum": [
            "START_DATE_DESC"
          ],
          "title": "START_DATE_DESC"
        },
        {
          "enum": [
            "START_DATE_ASC"
          ],
          "title": "START_DATE_ASC"
        },
        {
          "enum": [
            "LIKES_DESC"
          ],
          "title": "LIKES_DESC"
        },
        {
          "enum": [
            "CREATE_DATE_ASC"
          ],
          "title": "CREATE_DATE_ASC"
        },
        {
          "enum": [
            "CREATE_DATE_DESC"
          ],
          "title": "CREATE_DATE_DESC"
        }
      ],
      "title": "KalturaAssetOrderBy"
    },
    "KalturaAssetOrderByStatistics": {
      "oneOf": [
        {
          "enum": [
            "VIEWS_DESC"
          ],
          "title": "VIEWS_DESC"
        }
      ],
      "title": "KalturaAssetOrderByStatistics"
    },
    "KalturaAssetOrderByType": {
      "oneOf": [
        {
          "enum": [
            "RELEVANCY_DESC"
          ],
          "title": "RELEVANCY_DESC"
        },
        {
          "enum": [
            "NAME_ASC"
          ],
          "title": "NAME_ASC"
        },
        {
          "enum": [
            "NAME_DESC"
          ],
          "title": "NAME_DESC"
        },
        {
          "enum": [
            "RATINGS_DESC"
          ],
          "title": "RATINGS_DESC"
        },
        {
          "enum": [
            "VOTES_DESC"
          ],
          "title": "VOTES_DESC"
        },
        {
          "enum": [
            "START_DATE_DESC"
          ],
          "title": "START_DATE_DESC"
        },
        {
          "enum": [
            "START_DATE_ASC"
          ],
          "title": "START_DATE_ASC"
        },
        {
          "enum": [
            "LIKES_DESC"
          ],
          "title": "LIKES_DESC"
        },
        {
          "enum": [
            "CREATE_DATE_ASC"
          ],
          "title": "CREATE_DATE_ASC"
        },
        {
          "enum": [
            "CREATE_DATE_DESC"
          ],
          "title": "CREATE_DATE_DESC"
        }
      ],
      "title": "KalturaAssetOrderByType"
    },
    "KalturaAssetPersonalMarkupSearchOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        },
        {
          "enum": [
            "REQUEST_ORDER"
          ],
          "title": "REQUEST_ORDER"
        }
      ],
      "title": "KalturaAssetPersonalMarkupSearchOrderBy"
    },
    "KalturaAssetReferenceType": {
      "oneOf": [
        {
          "enum": [
            "media"
          ],
          "title": "MEDIA"
        },
        {
          "enum": [
            "epg_internal"
          ],
          "title": "EPG_INTERNAL"
        },
        {
          "enum": [
            "epg_external"
          ],
          "title": "EPG_EXTERNAL"
        },
        {
          "enum": [
            "npvr"
          ],
          "title": "NPVR"
        }
      ],
      "title": "KalturaAssetReferenceType"
    },
    "KalturaAssetReminderOrderBy": {
      "oneOf": [
        {
          "enum": [
            "RELEVANCY_DESC"
          ],
          "title": "RELEVANCY_DESC"
        },
        {
          "enum": [
            "NAME_ASC"
          ],
          "title": "NAME_ASC"
        },
        {
          "enum": [
            "NAME_DESC"
          ],
          "title": "NAME_DESC"
        },
        {
          "enum": [
            "VIEWS_DESC"
          ],
          "title": "VIEWS_DESC"
        },
        {
          "enum": [
            "RATINGS_DESC"
          ],
          "title": "RATINGS_DESC"
        },
        {
          "enum": [
            "VOTES_DESC"
          ],
          "title": "VOTES_DESC"
        },
        {
          "enum": [
            "START_DATE_DESC"
          ],
          "title": "START_DATE_DESC"
        },
        {
          "enum": [
            "START_DATE_ASC"
          ],
          "title": "START_DATE_ASC"
        },
        {
          "enum": [
            "LIKES_DESC"
          ],
          "title": "LIKES_DESC"
        }
      ],
      "title": "KalturaAssetReminderOrderBy"
    },
    "KalturaAssetRuleOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        },
        {
          "enum": [
            "NAME_ASC"
          ],
          "title": "NAME_ASC"
        },
        {
          "enum": [
            "NAME_DESC"
          ],
          "title": "NAME_DESC"
        }
      ],
      "title": "KalturaAssetRuleOrderBy"
    },
    "KalturaAssetRuleStatus": {
      "oneOf": [
        {
          "enum": [
            "READY"
          ],
          "title": "READY"
        },
        {
          "enum": [
            "IN_PROGRESS"
          ],
          "title": "IN_PROGRESS"
        }
      ],
      "title": "KalturaAssetRuleStatus"
    },
    "KalturaAssetStructMetaOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        }
      ],
      "title": "KalturaAssetStructMetaOrderBy"
    },
    "KalturaAssetStructOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NAME_ASC"
          ],
          "title": "NAME_ASC"
        },
        {
          "enum": [
            "NAME_DESC"
          ],
          "title": "NAME_DESC"
        },
        {
          "enum": [
            "SYSTEM_NAME_ASC"
          ],
          "title": "SYSTEM_NAME_ASC"
        },
        {
          "enum": [
            "SYSTEM_NAME_DESC"
          ],
          "title": "SYSTEM_NAME_DESC"
        },
        {
          "enum": [
            "CREATE_DATE_ASC"
          ],
          "title": "CREATE_DATE_ASC"
        },
        {
          "enum": [
            "CREATE_DATE_DESC"
          ],
          "title": "CREATE_DATE_DESC"
        },
        {
          "enum": [
            "UPDATE_DATE_ASC"
          ],
          "title": "UPDATE_DATE_ASC"
        },
        {
          "enum": [
            "UPDATE_DATE_DESC"
          ],
          "title": "UPDATE_DATE_DESC"
        }
      ],
      "title": "KalturaAssetStructOrderBy"
    },
    "KalturaAssetType": {
      "oneOf": [
        {
          "enum": [
            "media"
          ],
          "title": "MEDIA"
        },
        {
          "enum": [
            "recording"
          ],
          "title": "RECORDING"
        },
        {
          "enum": [
            "epg"
          ],
          "title": "EPG"
        }
      ],
      "title": "KalturaAssetType"
    },
    "KalturaAssetUserRuleOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        }
      ],
      "title": "KalturaAssetUserRuleOrderBy"
    },
    "KalturaBillingAction": {
      "oneOf": [
        {
          "enum": [
            "unknown"
          ],
          "title": "UNKNOWN"
        },
        {
          "enum": [
            "purchase"
          ],
          "title": "PURCHASE"
        },
        {
          "enum": [
            "renew_payment"
          ],
          "title": "RENEW_PAYMENT"
        },
        {
          "enum": [
            "renew_canceled_subscription"
          ],
          "title": "RENEW_CANCELED_SUBSCRIPTION"
        },
        {
          "enum": [
            "cancel_subscription_order"
          ],
          "title": "CANCEL_SUBSCRIPTION_ORDER"
        },
        {
          "enum": [
            "subscription_date_changed"
          ],
          "title": "SUBSCRIPTION_DATE_CHANGED"
        },
        {
          "enum": [
            "pending"
          ],
          "title": "PENDING"
        }
      ],
      "title": "KalturaBillingAction"
    },
    "KalturaBillingItemsType": {
      "oneOf": [
        {
          "enum": [
            "unknown"
          ],
          "title": "UNKNOWN"
        },
        {
          "enum": [
            "ppv"
          ],
          "title": "PPV"
        },
        {
          "enum": [
            "subscription"
          ],
          "title": "SUBSCRIPTION"
        },
        {
          "enum": [
            "pre_paid"
          ],
          "title": "PRE_PAID"
        },
        {
          "enum": [
            "pre_paid_expired"
          ],
          "title": "PRE_PAID_EXPIRED"
        },
        {
          "enum": [
            "collection"
          ],
          "title": "COLLECTION"
        },
        {
          "enum": [
            "program_asset_group_offer"
          ],
          "title": "PROGRAM_ASSET_GROUP_OFFER"
        }
      ],
      "title": "KalturaBillingItemsType"
    },
    "KalturaBillingPriceType": {
      "oneOf": [
        {
          "enum": [
            "FullPeriod"
          ],
          "title": "FULLPERIOD"
        },
        {
          "enum": [
            "PartialPeriod"
          ],
          "title": "PARTIALPERIOD"
        }
      ],
      "title": "KalturaBillingPriceType"
    },
    "KalturaBookmarkActionType": {
      "oneOf": [
        {
          "enum": [
            "HIT"
          ],
          "title": "HIT"
        },
        {
          "enum": [
            "PLAY"
          ],
          "title": "PLAY"
        },
        {
          "enum": [
            "STOP"
          ],
          "title": "STOP"
        },
        {
          "enum": [
            "PAUSE"
          ],
          "title": "PAUSE"
        },
        {
          "enum": [
            "FIRST_PLAY"
          ],
          "title": "FIRST_PLAY"
        },
        {
          "enum": [
            "SWOOSH"
          ],
          "title": "SWOOSH"
        },
        {
          "enum": [
            "FULL_SCREEN"
          ],
          "title": "FULL_SCREEN"
        },
        {
          "enum": [
            "SEND_TO_FRIEND"
          ],
          "title": "SEND_TO_FRIEND"
        },
        {
          "enum": [
            "LOAD"
          ],
          "title": "LOAD"
        },
        {
          "enum": [
            "FULL_SCREEN_EXIT"
          ],
          "title": "FULL_SCREEN_EXIT"
        },
        {
          "enum": [
            "FINISH"
          ],
          "title": "FINISH"
        },
        {
          "enum": [
            "ERROR"
          ],
          "title": "ERROR"
        },
        {
          "enum": [
            "BITRATE_CHANGE"
          ],
          "title": "BITRATE_CHANGE"
        },
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        }
      ],
      "title": "KalturaBookmarkActionType"
    },
    "KalturaBookmarkOrderBy": {
      "oneOf": [
        {
          "enum": [
            "POSITION_ASC"
          ],
          "title": "POSITION_ASC"
        },
        {
          "enum": [
            "POSITION_DESC"
          ],
          "title": "POSITION_DESC"
        }
      ],
      "title": "KalturaBookmarkOrderBy"
    },
    "KalturaBooleanOperator": {
      "oneOf": [
        {
          "enum": [
            "And"
          ],
          "title": "AND"
        },
        {
          "enum": [
            "Or"
          ],
          "title": "OR"
        }
      ],
      "title": "KalturaBooleanOperator"
    },
    "KalturaBulkUploadJobAction": {
      "oneOf": [
        {
          "enum": [
            "Upsert"
          ],
          "title": "UPSERT"
        },
        {
          "enum": [
            "Delete"
          ],
          "title": "DELETE"
        }
      ],
      "title": "KalturaBulkUploadJobAction"
    },
    "KalturaBulkUploadJobStatus": {
      "oneOf": [
        {
          "enum": [
            "Pending"
          ],
          "title": "PENDING"
        },
        {
          "enum": [
            "Uploaded"
          ],
          "title": "UPLOADED"
        },
        {
          "enum": [
            "Queued"
          ],
          "title": "QUEUED"
        },
        {
          "enum": [
            "Parsing"
          ],
          "title": "PARSING"
        },
        {
          "enum": [
            "Processing"
          ],
          "title": "PROCESSING"
        },
        {
          "enum": [
            "Processed"
          ],
          "title": "PROCESSED"
        },
        {
          "enum": [
            "Success"
          ],
          "title": "SUCCESS"
        },
        {
          "enum": [
            "Partial"
          ],
          "title": "PARTIAL"
        },
        {
          "enum": [
            "Failed"
          ],
          "title": "FAILED"
        },
        {
          "enum": [
            "Fatal"
          ],
          "title": "FATAL"
        }
      ],
      "title": "KalturaBulkUploadJobStatus"
    },
    "KalturaBulkUploadOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        },
        {
          "enum": [
            "UPDATE_DATE_ASC"
          ],
          "title": "UPDATE_DATE_ASC"
        },
        {
          "enum": [
            "UPDATE_DATE_DESC"
          ],
          "title": "UPDATE_DATE_DESC"
        }
      ],
      "title": "KalturaBulkUploadOrderBy"
    },
    "KalturaBulkUploadResultStatus": {
      "oneOf": [
        {
          "enum": [
            "Error"
          ],
          "title": "ERROR"
        },
        {
          "enum": [
            "Ok"
          ],
          "title": "OK"
        },
        {
          "enum": [
            "InProgress"
          ],
          "title": "INPROGRESS"
        }
      ],
      "title": "KalturaBulkUploadResultStatus"
    },
    "KalturaBundleType": {
      "oneOf": [
        {
          "enum": [
            "subscription"
          ],
          "title": "SUBSCRIPTION"
        },
        {
          "enum": [
            "collection"
          ],
          "title": "COLLECTION"
        },
        {
          "enum": [
            "pago"
          ],
          "title": "PAGO"
        }
      ],
      "title": "KalturaBundleType"
    },
    "KalturaBusinessModuleOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        }
      ],
      "title": "KalturaBusinessModuleOrderBy"
    },
    "KalturaCampaignOrderBy": {
      "oneOf": [
        {
          "enum": [
            "START_DATE_DESC"
          ],
          "title": "START_DATE_DESC"
        },
        {
          "enum": [
            "START_DATE_ASC"
          ],
          "title": "START_DATE_ASC"
        },
        {
          "enum": [
            "UPDATE_DATE_DESC"
          ],
          "title": "UPDATE_DATE_DESC"
        },
        {
          "enum": [
            "UPDATE_DATE_ASC"
          ],
          "title": "UPDATE_DATE_ASC"
        },
        {
          "enum": [
            "END_DATE_DESC"
          ],
          "title": "END_DATE_DESC"
        },
        {
          "enum": [
            "END_DATE_ASC"
          ],
          "title": "END_DATE_ASC"
        }
      ],
      "title": "KalturaCampaignOrderBy"
    },
    "KalturaCatalogReferenceBy": {
      "oneOf": [
        {
          "enum": [
            "MEDIA"
          ],
          "title": "MEDIA"
        },
        {
          "enum": [
            "EPG_INTERNAL"
          ],
          "title": "EPG_INTERNAL"
        },
        {
          "enum": [
            "EPG_EXTERNAL"
          ],
          "title": "EPG_EXTERNAL"
        }
      ],
      "title": "KalturaCatalogReferenceBy"
    },
    "KalturaCatalogWith": {
      "oneOf": [
        {
          "enum": [
            "images"
          ],
          "title": "IMAGES"
        },
        {
          "enum": [
            "files"
          ],
          "title": "FILES"
        },
        {
          "enum": [
            "stats"
          ],
          "title": "STATS"
        }
      ],
      "title": "KalturaCatalogWith"
    },
    "KalturaCategoryItemOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NAME_ASC"
          ],
          "title": "NAME_ASC"
        },
        {
          "enum": [
            "NAME_DESC"
          ],
          "title": "NAME_DESC"
        },
        {
          "enum": [
            "CREATE_DATE_ASC"
          ],
          "title": "CREATE_DATE_ASC"
        },
        {
          "enum": [
            "CREATE_DATE_DESC"
          ],
          "title": "CREATE_DATE_DESC"
        },
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        },
        {
          "enum": [
            "UPDATE_DATE_ASC"
          ],
          "title": "UPDATE_DATE_ASC"
        },
        {
          "enum": [
            "UPDATE_DATE_DESC"
          ],
          "title": "UPDATE_DATE_DESC"
        }
      ],
      "title": "KalturaCategoryItemOrderBy"
    },
    "KalturaCategoryVersionOrderBy": {
      "oneOf": [
        {
          "enum": [
            "UPDATE_DATE_DESC"
          ],
          "title": "UPDATE_DATE_DESC"
        },
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        }
      ],
      "title": "KalturaCategoryVersionOrderBy"
    },
    "KalturaCategoryVersionState": {
      "oneOf": [
        {
          "enum": [
            "DRAFT"
          ],
          "title": "DRAFT"
        },
        {
          "enum": [
            "DEFAULT"
          ],
          "title": "DEFAULT"
        },
        {
          "enum": [
            "RELEASED"
          ],
          "title": "RELEASED"
        }
      ],
      "title": "KalturaCategoryVersionState"
    },
    "KalturaChannelEnrichment": {
      "oneOf": [
        {
          "enum": [
            "ClientLocation"
          ],
          "title": "CLIENTLOCATION"
        },
        {
          "enum": [
            "UserId"
          ],
          "title": "USERID"
        },
        {
          "enum": [
            "HouseholdId"
          ],
          "title": "HOUSEHOLDID"
        },
        {
          "enum": [
            "DeviceId"
          ],
          "title": "DEVICEID"
        },
        {
          "enum": [
            "DeviceType"
          ],
          "title": "DEVICETYPE"
        },
        {
          "enum": [
            "UTCOffset"
          ],
          "title": "UTCOFFSET"
        },
        {
          "enum": [
            "Language"
          ],
          "title": "LANGUAGE"
        },
        {
          "enum": [
            "DTTRegion"
          ],
          "title": "DTTREGION"
        }
      ],
      "title": "KalturaChannelEnrichment"
    },
    "KalturaChannelFieldOrderByType": {
      "oneOf": [
        {
          "enum": [
            "NAME_ASC"
          ],
          "title": "NAME_ASC"
        },
        {
          "enum": [
            "NAME_DESC"
          ],
          "title": "NAME_DESC"
        },
        {
          "enum": [
            "START_DATE_DESC"
          ],
          "title": "START_DATE_DESC"
        },
        {
          "enum": [
            "START_DATE_ASC"
          ],
          "title": "START_DATE_ASC"
        },
        {
          "enum": [
            "CREATE_DATE_ASC"
          ],
          "title": "CREATE_DATE_ASC"
        },
        {
          "enum": [
            "CREATE_DATE_DESC"
          ],
          "title": "CREATE_DATE_DESC"
        },
        {
          "enum": [
            "RELEVANCY_DESC"
          ],
          "title": "RELEVANCY_DESC"
        },
        {
          "enum": [
            "ORDER_NUM"
          ],
          "title": "ORDER_NUM"
        }
      ],
      "title": "KalturaChannelFieldOrderByType"
    },
    "KalturaChannelOrderBy": {
      "oneOf": [
        {
          "enum": [
            "ORDER_NUM"
          ],
          "title": "ORDER_NUM"
        },
        {
          "enum": [
            "RELEVANCY_DESC"
          ],
          "title": "RELEVANCY_DESC"
        },
        {
          "enum": [
            "NAME_ASC"
          ],
          "title": "NAME_ASC"
        },
        {
          "enum": [
            "NAME_DESC"
          ],
          "title": "NAME_DESC"
        },
        {
          "enum": [
            "VIEWS_DESC"
          ],
          "title": "VIEWS_DESC"
        },
        {
          "enum": [
            "RATINGS_DESC"
          ],
          "title": "RATINGS_DESC"
        },
        {
          "enum": [
            "VOTES_DESC"
          ],
          "title": "VOTES_DESC"
        },
        {
          "enum": [
            "START_DATE_DESC"
          ],
          "title": "START_DATE_DESC"
        },
        {
          "enum": [
            "START_DATE_ASC"
          ],
          "title": "START_DATE_ASC"
        },
        {
          "enum": [
            "LIKES_DESC"
          ],
          "title": "LIKES_DESC"
        },
        {
          "enum": [
            "CREATE_DATE_ASC"
          ],
          "title": "CREATE_DATE_ASC"
        },
        {
          "enum": [
            "CREATE_DATE_DESC"
          ],
          "title": "CREATE_DATE_DESC"
        }
      ],
      "title": "KalturaChannelOrderBy"
    },
    "KalturaChannelSlidingWindowOrderByType": {
      "oneOf": [
        {
          "enum": [
            "LIKES_DESC"
          ],
          "title": "LIKES_DESC"
        },
        {
          "enum": [
            "RATINGS_DESC"
          ],
          "title": "RATINGS_DESC"
        },
        {
          "enum": [
            "VOTES_DESC"
          ],
          "title": "VOTES_DESC"
        },
        {
          "enum": [
            "VIEWS_DESC"
          ],
          "title": "VIEWS_DESC"
        }
      ],
      "title": "KalturaChannelSlidingWindowOrderByType"
    },
    "KalturaChannelStruct": {
      "oneOf": [
        {
          "enum": [
            "Manual"
          ],
          "title": "MANUAL"
        },
        {
          "enum": [
            "Dynamic"
          ],
          "title": "DYNAMIC"
        }
      ],
      "title": "KalturaChannelStruct"
    },
    "KalturaChannelType": {
      "oneOf": [
        {
          "enum": [
            "Internal"
          ],
          "title": "INTERNAL"
        },
        {
          "enum": [
            "External"
          ],
          "title": "EXTERNAL"
        }
      ],
      "title": "KalturaChannelType"
    },
    "KalturaChannelsOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        },
        {
          "enum": [
            "NAME_ASC"
          ],
          "title": "NAME_ASC"
        },
        {
          "enum": [
            "NAME_DESC"
          ],
          "title": "NAME_DESC"
        },
        {
          "enum": [
            "CREATE_DATE_ASC"
          ],
          "title": "CREATE_DATE_ASC"
        },
        {
          "enum": [
            "CREATE_DATE_DESC"
          ],
          "title": "CREATE_DATE_DESC"
        },
        {
          "enum": [
            "UPDATE_DATE_ASC"
          ],
          "title": "UPDATE_DATE_ASC"
        },
        {
          "enum": [
            "UPDATE_DATE_DESC"
          ],
          "title": "UPDATE_DATE_DESC"
        }
      ],
      "title": "KalturaChannelsOrderBy"
    },
    "KalturaChronologicalRecordStartTime": {
      "oneOf": [
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        },
        {
          "enum": [
            "NOW"
          ],
          "title": "NOW"
        },
        {
          "enum": [
            "EPG_START_TIME"
          ],
          "title": "EPG_START_TIME"
        }
      ],
      "title": "KalturaChronologicalRecordStartTime"
    },
    "KalturaCollectionOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        },
        {
          "enum": [
            "NAME_ASC"
          ],
          "title": "NAME_ASC"
        },
        {
          "enum": [
            "NAME_DESC"
          ],
          "title": "NAME_DESC"
        },
        {
          "enum": [
            "UPDATE_DATE_ASC"
          ],
          "title": "UPDATE_DATE_ASC"
        },
        {
          "enum": [
            "UPDATE_DATE_DESC"
          ],
          "title": "UPDATE_DATE_DESC"
        }
      ],
      "title": "KalturaCollectionOrderBy"
    },
    "KalturaCompensationType": {
      "oneOf": [
        {
          "enum": [
            "PERCENTAGE"
          ],
          "title": "PERCENTAGE"
        },
        {
          "enum": [
            "FIXED_AMOUNT"
          ],
          "title": "FIXED_AMOUNT"
        }
      ],
      "title": "KalturaCompensationType"
    },
    "KalturaConcurrencyLimitationType": {
      "oneOf": [
        {
          "enum": [
            "Single"
          ],
          "title": "SINGLE"
        },
        {
          "enum": [
            "Group"
          ],
          "title": "GROUP"
        }
      ],
      "title": "KalturaConcurrencyLimitationType"
    },
    "KalturaConfigurationGroupDeviceOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        }
      ],
      "title": "KalturaConfigurationGroupDeviceOrderBy"
    },
    "KalturaConfigurationGroupTagOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        }
      ],
      "title": "KalturaConfigurationGroupTagOrderBy"
    },
    "KalturaConfigurationsOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        }
      ],
      "title": "KalturaConfigurationsOrderBy"
    },
    "KalturaContentAction": {
      "oneOf": [
        {
          "enum": [
            "watch_linear"
          ],
          "title": "WATCH_LINEAR"
        },
        {
          "enum": [
            "watch_vod"
          ],
          "title": "WATCH_VOD"
        },
        {
          "enum": [
            "catchup"
          ],
          "title": "CATCHUP"
        },
        {
          "enum": [
            "npvr"
          ],
          "title": "NPVR"
        },
        {
          "enum": [
            "favorite"
          ],
          "title": "FAVORITE"
        },
        {
          "enum": [
            "recording"
          ],
          "title": "RECORDING"
        },
        {
          "enum": [
            "social_action"
          ],
          "title": "SOCIAL_ACTION"
        }
      ],
      "title": "KalturaContentAction"
    },
    "KalturaContentActionConditionLengthType": {
      "oneOf": [
        {
          "enum": [
            "minutes"
          ],
          "title": "MINUTES"
        },
        {
          "enum": [
            "percentage"
          ],
          "title": "PERCENTAGE"
        }
      ],
      "title": "KalturaContentActionConditionLengthType"
    },
    "KalturaContextType": {
      "oneOf": [
        {
          "enum": [
            "none"
          ],
          "title": "NONE"
        },
        {
          "enum": [
            "recording"
          ],
          "title": "RECORDING"
        }
      ],
      "title": "KalturaContextType"
    },
    "KalturaCountryOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NAME_ASC"
          ],
          "title": "NAME_ASC"
        }
      ],
      "title": "KalturaCountryOrderBy"
    },
    "KalturaCouponGroupType": {
      "oneOf": [
        {
          "enum": [
            "COUPON"
          ],
          "title": "COUPON"
        },
        {
          "enum": [
            "GIFT_CARD"
          ],
          "title": "GIFT_CARD"
        }
      ],
      "title": "KalturaCouponGroupType"
    },
    "KalturaCouponStatus": {
      "oneOf": [
        {
          "enum": [
            "VALID"
          ],
          "title": "VALID"
        },
        {
          "enum": [
            "NOT_EXISTS"
          ],
          "title": "NOT_EXISTS"
        },
        {
          "enum": [
            "ALREADY_USED"
          ],
          "title": "ALREADY_USED"
        },
        {
          "enum": [
            "EXPIRED"
          ],
          "title": "EXPIRED"
        },
        {
          "enum": [
            "INACTIVE"
          ],
          "title": "INACTIVE"
        }
      ],
      "title": "KalturaCouponStatus"
    },
    "KalturaCurrencyOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NAME_ASC"
          ],
          "title": "NAME_ASC"
        },
        {
          "enum": [
            "NAME_DESC"
          ],
          "title": "NAME_DESC"
        },
        {
          "enum": [
            "CODE_ASC"
          ],
          "title": "CODE_ASC"
        },
        {
          "enum": [
            "CODE_DESC"
          ],
          "title": "CODE_DESC"
        }
      ],
      "title": "KalturaCurrencyOrderBy"
    },
    "KalturaCutWith": {
      "oneOf": [
        {
          "enum": [
            "or"
          ],
          "title": "OR"
        },
        {
          "enum": [
            "and"
          ],
          "title": "AND"
        }
      ],
      "title": "KalturaCutWith"
    },
    "KalturaDeleteMediaPolicy": {
      "oneOf": [
        {
          "enum": [
            "Disable"
          ],
          "title": "DISABLE"
        },
        {
          "enum": [
            "Delete"
          ],
          "title": "DELETE"
        }
      ],
      "title": "KalturaDeleteMediaPolicy"
    },
    "KalturaDeviceBrandOrderBy": {
      "oneOf": [
        {
          "enum": [
            "ID_ASC"
          ],
          "title": "ID_ASC"
        },
        {
          "enum": [
            "ID_DESC"
          ],
          "title": "ID_DESC"
        }
      ],
      "title": "KalturaDeviceBrandOrderBy"
    },
    "KalturaDeviceBrandType": {
      "oneOf": [
        {
          "enum": [
            "System"
          ],
          "title": "SYSTEM"
        },
        {
          "enum": [
            "Custom"
          ],
          "title": "CUSTOM"
        }
      ],
      "title": "KalturaDeviceBrandType"
    },
    "KalturaDeviceFamilyOrderBy": {
      "oneOf": [
        {
          "enum": [
            "ID_ASC"
          ],
          "title": "ID_ASC"
        },
        {
          "enum": [
            "ID_DESC"
          ],
          "title": "ID_DESC"
        }
      ],
      "title": "KalturaDeviceFamilyOrderBy"
    },
    "KalturaDeviceFamilyType": {
      "oneOf": [
        {
          "enum": [
            "System"
          ],
          "title": "SYSTEM"
        },
        {
          "enum": [
            "Custom"
          ],
          "title": "CUSTOM"
        }
      ],
      "title": "KalturaDeviceFamilyType"
    },
    "KalturaDeviceReferenceDataOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        }
      ],
      "title": "KalturaDeviceReferenceDataOrderBy"
    },
    "KalturaDeviceRegistrationStatus": {
      "oneOf": [
        {
          "enum": [
            "not_registered"
          ],
          "title": "NOT_REGISTERED"
        },
        {
          "enum": [
            "registered"
          ],
          "title": "REGISTERED"
        },
        {
          "enum": [
            "registered_to_another_household"
          ],
          "title": "REGISTERED_TO_ANOTHER_HOUSEHOLD"
        }
      ],
      "title": "KalturaDeviceRegistrationStatus"
    },
    "KalturaDeviceStatus": {
      "oneOf": [
        {
          "enum": [
            "PENDING"
          ],
          "title": "PENDING"
        },
        {
          "enum": [
            "ACTIVATED"
          ],
          "title": "ACTIVATED"
        },
        {
          "enum": [
            "NOT_ACTIVATED"
          ],
          "title": "NOT_ACTIVATED"
        }
      ],
      "title": "KalturaDeviceStatus"
    },
    "KalturaDiscountFilterOrderBy": {
      "oneOf": [
        {
          "enum": [
            "CODE_ASC"
          ],
          "title": "CODE_ASC"
        }
      ],
      "title": "KalturaDiscountFilterOrderBy"
    },
    "KalturaDowngradePolicy": {
      "oneOf": [
        {
          "enum": [
            "LIFO"
          ],
          "title": "LIFO"
        },
        {
          "enum": [
            "FIFO"
          ],
          "title": "FIFO"
        },
        {
          "enum": [
            "ACTIVE_DATE"
          ],
          "title": "ACTIVE_DATE"
        }
      ],
      "title": "KalturaDowngradePolicy"
    },
    "KalturaDrmSchemeName": {
      "oneOf": [
        {
          "enum": [
            "PLAYREADY_CENC"
          ],
          "title": "PLAYREADY_CENC"
        },
        {
          "enum": [
            "WIDEVINE_CENC"
          ],
          "title": "WIDEVINE_CENC"
        },
        {
          "enum": [
            "FAIRPLAY"
          ],
          "title": "FAIRPLAY"
        },
        {
          "enum": [
            "WIDEVINE"
          ],
          "title": "WIDEVINE"
        },
        {
          "enum": [
            "PLAYREADY"
          ],
          "title": "PLAYREADY"
        },
        {
          "enum": [
            "CUSTOM_DRM"
          ],
          "title": "CUSTOM_DRM"
        }
      ],
      "title": "KalturaDrmSchemeName"
    },
    "KalturaDummyOrderBy": {
      "oneOf": [],
      "title": "KalturaDummyOrderBy"
    },
    "KalturaDurationUnit": {
      "oneOf": [
        {
          "enum": [
            "Minutes"
          ],
          "title": "MINUTES"
        },
        {
          "enum": [
            "Hours"
          ],
          "title": "HOURS"
        },
        {
          "enum": [
            "Days"
          ],
          "title": "DAYS"
        },
        {
          "enum": [
            "Months"
          ],
          "title": "MONTHS"
        },
        {
          "enum": [
            "Years"
          ],
          "title": "YEARS"
        }
      ],
      "title": "KalturaDurationUnit"
    },
    "KalturaDynamicListOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        }
      ],
      "title": "KalturaDynamicListOrderBy"
    },
    "KalturaEncryptionType": {
      "oneOf": [
        {
          "enum": [
            "AES256"
          ],
          "title": "AES256"
        }
      ],
      "title": "KalturaEncryptionType"
    },
    "KalturaEngagementOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        }
      ],
      "title": "KalturaEngagementOrderBy"
    },
    "KalturaEngagementType": {
      "oneOf": [
        {
          "enum": [
            "Churn"
          ],
          "title": "CHURN"
        }
      ],
      "title": "KalturaEngagementType"
    },
    "KalturaEntitlementOrderBy": {
      "oneOf": [
        {
          "enum": [
            "PURCHASE_DATE_ASC"
          ],
          "title": "PURCHASE_DATE_ASC"
        },
        {
          "enum": [
            "PURCHASE_DATE_DESC"
          ],
          "title": "PURCHASE_DATE_DESC"
        }
      ],
      "title": "KalturaEntitlementOrderBy"
    },
    "KalturaEntityAttribute": {
      "oneOf": [
        {
          "enum": [
            "MEDIA_FILE_LABELS"
          ],
          "title": "MEDIA_FILE_LABELS"
        }
      ],
      "title": "KalturaEntityAttribute"
    },
    "KalturaEntityReferenceBy": {
      "oneOf": [
        {
          "enum": [
            "user"
          ],
          "title": "USER"
        },
        {
          "enum": [
            "household"
          ],
          "title": "HOUSEHOLD"
        }
      ],
      "title": "KalturaEntityReferenceBy"
    },
    "KalturaEpgOrderBy": {
      "oneOf": [],
      "title": "KalturaEpgOrderBy"
    },
    "KalturaEventNotificationOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        }
      ],
      "title": "KalturaEventNotificationOrderBy"
    },
    "KalturaEventNotificationStatus": {
      "oneOf": [
        {
          "enum": [
            "SENT"
          ],
          "title": "SENT"
        },
        {
          "enum": [
            "FAILED"
          ],
          "title": "FAILED"
        },
        {
          "enum": [
            "SUCCESS"
          ],
          "title": "SUCCESS"
        },
        {
          "enum": [
            "FAILED_TO_SEND"
          ],
          "title": "FAILED_TO_SEND"
        }
      ],
      "title": "KalturaEventNotificationStatus"
    },
    "KalturaEvictionPolicyType": {
      "oneOf": [
        {
          "enum": [
            "FIFO"
          ],
          "title": "FIFO"
        },
        {
          "enum": [
            "LIFO"
          ],
          "title": "LIFO"
        }
      ],
      "title": "KalturaEvictionPolicyType"
    },
    "KalturaExportDataType": {
      "oneOf": [
        {
          "enum": [
            "vod"
          ],
          "title": "VOD"
        },
        {
          "enum": [
            "epg"
          ],
          "title": "EPG"
        },
        {
          "enum": [
            "users"
          ],
          "title": "USERS"
        }
      ],
      "title": "KalturaExportDataType"
    },
    "KalturaExportTaskOrderBy": {
      "oneOf": [
        {
          "enum": [
            "CREATE_DATE_ASC"
          ],
          "title": "CREATE_DATE_ASC"
        },
        {
          "enum": [
            "CREATE_DATE_DESC"
          ],
          "title": "CREATE_DATE_DESC"
        }
      ],
      "title": "KalturaExportTaskOrderBy"
    },
    "KalturaExportType": {
      "oneOf": [
        {
          "enum": [
            "full"
          ],
          "title": "FULL"
        },
        {
          "enum": [
            "incremental"
          ],
          "title": "INCREMENTAL"
        }
      ],
      "title": "KalturaExportType"
    },
    "KalturaExternalChannelProfileOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        }
      ],
      "title": "KalturaExternalChannelProfileOrderBy"
    },
    "KalturaExternalRecordingResponseProfileOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        }
      ],
      "title": "KalturaExternalRecordingResponseProfileOrderBy"
    },
    "KalturaFavoriteOrderBy": {
      "oneOf": [
        {
          "enum": [
            "CREATE_DATE_ASC"
          ],
          "title": "CREATE_DATE_ASC"
        },
        {
          "enum": [
            "CREATE_DATE_DESC"
          ],
          "title": "CREATE_DATE_DESC"
        }
      ],
      "title": "KalturaFavoriteOrderBy"
    },
    "KalturaFollowTvSeriesOrderBy": {
      "oneOf": [
        {
          "enum": [
            "START_DATE_DESC"
          ],
          "title": "START_DATE_DESC"
        },
        {
          "enum": [
            "START_DATE_ASC"
          ],
          "title": "START_DATE_ASC"
        }
      ],
      "title": "KalturaFollowTvSeriesOrderBy"
    },
    "KalturaGroupByField": {
      "oneOf": [
        {
          "enum": [
            "media_type_id"
          ],
          "title": "MEDIA_TYPE_ID"
        },
        {
          "enum": [
            "suppressed"
          ],
          "title": "SUPPRESSED"
        },
        {
          "enum": [
            "crid"
          ],
          "title": "CRID"
        },
        {
          "enum": [
            "linear_media_id"
          ],
          "title": "LINEAR_MEDIA_ID"
        },
        {
          "enum": [
            "name"
          ],
          "title": "NAME"
        }
      ],
      "title": "KalturaGroupByField"
    },
    "KalturaGroupByOrder": {
      "oneOf": [
        {
          "enum": [
            "defaultOrder"
          ],
          "title": "DEFAULTORDER"
        },
        {
          "enum": [
            "count_asc"
          ],
          "title": "COUNT_ASC"
        },
        {
          "enum": [
            "count_desc"
          ],
          "title": "COUNT_DESC"
        },
        {
          "enum": [
            "value_asc"
          ],
          "title": "VALUE_ASC"
        },
        {
          "enum": [
            "value_desc"
          ],
          "title": "VALUE_DESC"
        }
      ],
      "title": "KalturaGroupByOrder"
    },
    "KalturaGroupingOption": {
      "oneOf": [
        {
          "enum": [
            "Omit"
          ],
          "title": "OMIT"
        },
        {
          "enum": [
            "Include"
          ],
          "title": "INCLUDE"
        }
      ],
      "title": "KalturaGroupingOption"
    },
    "KalturaHouseholdCouponOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        }
      ],
      "title": "KalturaHouseholdCouponOrderBy"
    },
    "KalturaHouseholdDeviceOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        },
        {
          "enum": [
            "CREATED_DATE_ASC"
          ],
          "title": "CREATED_DATE_ASC"
        },
        {
          "enum": [
            "CREATED_DATE_DESC"
          ],
          "title": "CREATED_DATE_DESC"
        }
      ],
      "title": "KalturaHouseholdDeviceOrderBy"
    },
    "KalturaHouseholdFrequencyType": {
      "oneOf": [
        {
          "enum": [
            "devices"
          ],
          "title": "DEVICES"
        },
        {
          "enum": [
            "users"
          ],
          "title": "USERS"
        }
      ],
      "title": "KalturaHouseholdFrequencyType"
    },
    "KalturaHouseholdOrderBy": {
      "oneOf": [
        {
          "enum": [
            "CREATE_DATE_DESC"
          ],
          "title": "CREATE_DATE_DESC"
        }
      ],
      "title": "KalturaHouseholdOrderBy"
    },
    "KalturaHouseholdPaymentGatewaySelectedBy": {
      "oneOf": [
        {
          "enum": [
            "none"
          ],
          "title": "NONE"
        },
        {
          "enum": [
            "account"
          ],
          "title": "ACCOUNT"
        },
        {
          "enum": [
            "household"
          ],
          "title": "HOUSEHOLD"
        }
      ],
      "title": "KalturaHouseholdPaymentGatewaySelectedBy"
    },
    "KalturaHouseholdRestriction": {
      "oneOf": [
        {
          "enum": [
            "not_restricted"
          ],
          "title": "NOT_RESTRICTED"
        },
        {
          "enum": [
            "user_master_restricted"
          ],
          "title": "USER_MASTER_RESTRICTED"
        },
        {
          "enum": [
            "device_master_restricted"
          ],
          "title": "DEVICE_MASTER_RESTRICTED"
        },
        {
          "enum": [
            "device_user_master_restricted"
          ],
          "title": "DEVICE_USER_MASTER_RESTRICTED"
        }
      ],
      "title": "KalturaHouseholdRestriction"
    },
    "KalturaHouseholdSegmentOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        }
      ],
      "title": "KalturaHouseholdSegmentOrderBy"
    },
    "KalturaHouseholdState": {
      "oneOf": [
        {
          "enum": [
            "ok"
          ],
          "title": "OK"
        },
        {
          "enum": [
            "created_without_npvr_account"
          ],
          "title": "CREATED_WITHOUT_NPVR_ACCOUNT"
        },
        {
          "enum": [
            "suspended"
          ],
          "title": "SUSPENDED"
        },
        {
          "enum": [
            "no_users_in_household"
          ],
          "title": "NO_USERS_IN_HOUSEHOLD"
        },
        {
          "enum": [
            "pending"
          ],
          "title": "PENDING"
        }
      ],
      "title": "KalturaHouseholdState"
    },
    "KalturaHouseholdSuspensionState": {
      "oneOf": [
        {
          "enum": [
            "NOT_SUSPENDED"
          ],
          "title": "NOT_SUSPENDED"
        },
        {
          "enum": [
            "SUSPENDED"
          ],
          "title": "SUSPENDED"
        }
      ],
      "title": "KalturaHouseholdSuspensionState"
    },
    "KalturaHouseholdUserOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        }
      ],
      "title": "KalturaHouseholdUserOrderBy"
    },
    "KalturaHouseholdUserStatus": {
      "oneOf": [
        {
          "enum": [
            "OK"
          ],
          "title": "OK"
        },
        {
          "enum": [
            "PENDING"
          ],
          "title": "PENDING"
        }
      ],
      "title": "KalturaHouseholdUserStatus"
    },
    "KalturaHouseholdWith": {
      "oneOf": [
        {
          "enum": [
            "users_base_info"
          ],
          "title": "USERS_BASE_INFO"
        },
        {
          "enum": [
            "users_full_info"
          ],
          "title": "USERS_FULL_INFO"
        }
      ],
      "title": "KalturaHouseholdWith"
    },
    "KalturaHouseoldCouponCodeOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        }
      ],
      "title": "KalturaHouseoldCouponCodeOrderBy"
    },
    "KalturaIdentifierTypeBy": {
      "oneOf": [
        {
          "enum": [
            "internal_id"
          ],
          "title": "INTERNAL_ID"
        },
        {
          "enum": [
            "external_id"
          ],
          "title": "EXTERNAL_ID"
        }
      ],
      "title": "KalturaIdentifierTypeBy"
    },
    "KalturaImageObjectType": {
      "oneOf": [
        {
          "enum": [
            "MEDIA_ASSET"
          ],
          "title": "MEDIA_ASSET"
        },
        {
          "enum": [
            "PROGRAM_ASSET"
          ],
          "title": "PROGRAM_ASSET"
        },
        {
          "enum": [
            "CHANNEL"
          ],
          "title": "CHANNEL"
        },
        {
          "enum": [
            "CATEGORY"
          ],
          "title": "CATEGORY"
        },
        {
          "enum": [
            "PARTNER"
          ],
          "title": "PARTNER"
        },
        {
          "enum": [
            "IMAGE_TYPE"
          ],
          "title": "IMAGE_TYPE"
        },
        {
          "enum": [
            "PROGRAM_GROUP"
          ],
          "title": "PROGRAM_GROUP"
        }
      ],
      "title": "KalturaImageObjectType"
    },
    "KalturaImageOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        }
      ],
      "title": "KalturaImageOrderBy"
    },
    "KalturaImageStatus": {
      "oneOf": [
        {
          "enum": [
            "PENDING"
          ],
          "title": "PENDING"
        },
        {
          "enum": [
            "READY"
          ],
          "title": "READY"
        },
        {
          "enum": [
            "FAILED"
          ],
          "title": "FAILED"
        }
      ],
      "title": "KalturaImageStatus"
    },
    "KalturaImageTypeOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        }
      ],
      "title": "KalturaImageTypeOrderBy"
    },
    "KalturaInboxMessageOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        }
      ],
      "title": "KalturaInboxMessageOrderBy"
    },
    "KalturaInboxMessageStatus": {
      "oneOf": [
        {
          "enum": [
            "Unread"
          ],
          "title": "UNREAD"
        },
        {
          "enum": [
            "Read"
          ],
          "title": "READ"
        },
        {
          "enum": [
            "Deleted"
          ],
          "title": "DELETED"
        }
      ],
      "title": "KalturaInboxMessageStatus"
    },
    "KalturaInboxMessageType": {
      "oneOf": [
        {
          "enum": [
            "SystemAnnouncement"
          ],
          "title": "SYSTEMANNOUNCEMENT"
        },
        {
          "enum": [
            "Followed"
          ],
          "title": "FOLLOWED"
        },
        {
          "enum": [
            "Engagement"
          ],
          "title": "ENGAGEMENT"
        },
        {
          "enum": [
            "Interest"
          ],
          "title": "INTEREST"
        },
        {
          "enum": [
            "Campaign"
          ],
          "title": "CAMPAIGN"
        }
      ],
      "title": "KalturaInboxMessageType"
    },
    "KalturaIngestEpgProgramResultOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        },
        {
          "enum": [
            "EXTERNAL_PROGRAM_ID_DESC"
          ],
          "title": "EXTERNAL_PROGRAM_ID_DESC"
        },
        {
          "enum": [
            "EXTERNAL_PROGRAM_ID_ASC"
          ],
          "title": "EXTERNAL_PROGRAM_ID_ASC"
        },
        {
          "enum": [
            "LINEAR_CHANNEL_ID_DESC"
          ],
          "title": "LINEAR_CHANNEL_ID_DESC"
        },
        {
          "enum": [
            "LINEAR_CHANNEL_ID_ASC"
          ],
          "title": "LINEAR_CHANNEL_ID_ASC"
        },
        {
          "enum": [
            "INDEX_IN_FILE_DESC"
          ],
          "title": "INDEX_IN_FILE_DESC"
        },
        {
          "enum": [
            "INDEX_IN_FILE_ASC"
          ],
          "title": "INDEX_IN_FILE_ASC"
        },
        {
          "enum": [
            "START_DATE_DESC"
          ],
          "title": "START_DATE_DESC"
        },
        {
          "enum": [
            "START_DATE_ASC"
          ],
          "title": "START_DATE_ASC"
        },
        {
          "enum": [
            "SEVERITY_DESC"
          ],
          "title": "SEVERITY_DESC"
        },
        {
          "enum": [
            "SEVERITY_ASC"
          ],
          "title": "SEVERITY_ASC"
        }
      ],
      "title": "KalturaIngestEpgProgramResultOrderBy"
    },
    "KalturaIngestEpgProgramStatus": {
      "oneOf": [
        {
          "enum": [
            "FAILURE"
          ],
          "title": "FAILURE"
        },
        {
          "enum": [
            "WARNING"
          ],
          "title": "WARNING"
        },
        {
          "enum": [
            "SUCCESS"
          ],
          "title": "SUCCESS"
        }
      ],
      "title": "KalturaIngestEpgProgramStatus"
    },
    "KalturaIngestProfileAutofillPolicy": {
      "oneOf": [
        {
          "enum": [
            "REJECT"
          ],
          "title": "REJECT"
        },
        {
          "enum": [
            "AUTOFILL"
          ],
          "title": "AUTOFILL"
        },
        {
          "enum": [
            "KEEP_HOLES"
          ],
          "title": "KEEP_HOLES"
        }
      ],
      "title": "KalturaIngestProfileAutofillPolicy"
    },
    "KalturaIngestProfileOverlapPolicy": {
      "oneOf": [
        {
          "enum": [
            "REJECT"
          ],
          "title": "REJECT"
        },
        {
          "enum": [
            "CUT_SOURCE"
          ],
          "title": "CUT_SOURCE"
        },
        {
          "enum": [
            "CUT_TARGET"
          ],
          "title": "CUT_TARGET"
        }
      ],
      "title": "KalturaIngestProfileOverlapPolicy"
    },
    "KalturaIngestStatus": {
      "oneOf": [
        {
          "enum": [
            "TOTAL_FAILURE"
          ],
          "title": "TOTAL_FAILURE"
        },
        {
          "enum": [
            "PARTIAL_FAILURE"
          ],
          "title": "PARTIAL_FAILURE"
        },
        {
          "enum": [
            "WARNING"
          ],
          "title": "WARNING"
        },
        {
          "enum": [
            "IN_PROGRESS"
          ],
          "title": "IN_PROGRESS"
        },
        {
          "enum": [
            "SUCCESS"
          ],
          "title": "SUCCESS"
        }
      ],
      "title": "KalturaIngestStatus"
    },
    "KalturaIngestStatusOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        },
        {
          "enum": [
            "CREATED_DATE_DESC"
          ],
          "title": "CREATED_DATE_DESC"
        },
        {
          "enum": [
            "CREATED_DATE_ASC"
          ],
          "title": "CREATED_DATE_ASC"
        },
        {
          "enum": [
            "NAME_DESC"
          ],
          "title": "NAME_DESC"
        },
        {
          "enum": [
            "NAME_ASC"
          ],
          "title": "NAME_ASC"
        },
        {
          "enum": [
            "SEVERITY_DESC"
          ],
          "title": "SEVERITY_DESC"
        },
        {
          "enum": [
            "SEVERITY_ASC"
          ],
          "title": "SEVERITY_ASC"
        }
      ],
      "title": "KalturaIngestStatusOrderBy"
    },
    "KalturaIotOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        }
      ],
      "title": "KalturaIotOrderBy"
    },
    "KalturaIotProfileOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        }
      ],
      "title": "KalturaIotProfileOrderBy"
    },
    "KalturaLabelOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        }
      ],
      "title": "KalturaLabelOrderBy"
    },
    "KalturaLanguageOrderBy": {
      "oneOf": [
        {
          "enum": [
            "SYSTEM_NAME_ASC"
          ],
          "title": "SYSTEM_NAME_ASC"
        },
        {
          "enum": [
            "SYSTEM_NAME_DESC"
          ],
          "title": "SYSTEM_NAME_DESC"
        },
        {
          "enum": [
            "CODE_ASC"
          ],
          "title": "CODE_ASC"
        },
        {
          "enum": [
            "CODE_DESC"
          ],
          "title": "CODE_DESC"
        }
      ],
      "title": "KalturaLanguageOrderBy"
    },
    "KalturaLinearChannelType": {
      "oneOf": [
        {
          "enum": [
            "UNKNOWN"
          ],
          "title": "UNKNOWN"
        },
        {
          "enum": [
            "DTT"
          ],
          "title": "DTT"
        },
        {
          "enum": [
            "OTT"
          ],
          "title": "OTT"
        },
        {
          "enum": [
            "DTT_AND_OTT"
          ],
          "title": "DTT_AND_OTT"
        },
        {
          "enum": [
            "VRM_EXPORT"
          ],
          "title": "VRM_EXPORT"
        }
      ],
      "title": "KalturaLinearChannelType"
    },
    "KalturaLineupRegionalChannelOrderBy": {
      "oneOf": [
        {
          "enum": [
            "LCN_ASC"
          ],
          "title": "LCN_ASC"
        },
        {
          "enum": [
            "LCN_DESC"
          ],
          "title": "LCN_DESC"
        },
        {
          "enum": [
            "NAME_ASC"
          ],
          "title": "NAME_ASC"
        },
        {
          "enum": [
            "NAME_DESC"
          ],
          "title": "NAME_DESC"
        }
      ],
      "title": "KalturaLineupRegionalChannelOrderBy"
    },
    "KalturaListGroupsRepresentativesOrderBy": {
      "oneOf": [
        {
          "enum": [
            "None"
          ],
          "title": "NONE"
        }
      ],
      "title": "KalturaListGroupsRepresentativesOrderBy"
    },
    "KalturaLogLevel": {
      "oneOf": [
        {
          "enum": [
            "TRACE"
          ],
          "title": "TRACE"
        },
        {
          "enum": [
            "DEBUG"
          ],
          "title": "DEBUG"
        },
        {
          "enum": [
            "INFO"
          ],
          "title": "INFO"
        },
        {
          "enum": [
            "WARN"
          ],
          "title": "WARN"
        },
        {
          "enum": [
            "ERROR"
          ],
          "title": "ERROR"
        },
        {
          "enum": [
            "ALL"
          ],
          "title": "ALL"
        }
      ],
      "title": "KalturaLogLevel"
    },
    "KalturaManualCollectionAssetType": {
      "oneOf": [
        {
          "enum": [
            "media"
          ],
          "title": "MEDIA"
        },
        {
          "enum": [
            "epg"
          ],
          "title": "EPG"
        }
      ],
      "title": "KalturaManualCollectionAssetType"
    },
    "KalturaMathemticalOperatorType": {
      "oneOf": [
        {
          "enum": [
            "count"
          ],
          "title": "COUNT"
        },
        {
          "enum": [
            "sum"
          ],
          "title": "SUM"
        },
        {
          "enum": [
            "avg"
          ],
          "title": "AVG"
        }
      ],
      "title": "KalturaMathemticalOperatorType"
    },
    "KalturaMediaFileDynamicDataOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        }
      ],
      "title": "KalturaMediaFileDynamicDataOrderBy"
    },
    "KalturaMediaFileOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        }
      ],
      "title": "KalturaMediaFileOrderBy"
    },
    "KalturaMediaFileStreamerType": {
      "oneOf": [
        {
          "enum": [
            "APPLE_HTTP"
          ],
          "title": "APPLE_HTTP"
        },
        {
          "enum": [
            "MPEG_DASH"
          ],
          "title": "MPEG_DASH"
        },
        {
          "enum": [
            "URL"
          ],
          "title": "URL"
        },
        {
          "enum": [
            "SMOOTH_STREAMING"
          ],
          "title": "SMOOTH_STREAMING"
        },
        {
          "enum": [
            "MULTICAST"
          ],
          "title": "MULTICAST"
        },
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        }
      ],
      "title": "KalturaMediaFileStreamerType"
    },
    "KalturaMediaFileTypeQuality": {
      "oneOf": [
        {
          "enum": [
            "ADAPTIVE"
          ],
          "title": "ADAPTIVE"
        },
        {
          "enum": [
            "SD"
          ],
          "title": "SD"
        },
        {
          "enum": [
            "HD_720"
          ],
          "title": "HD_720"
        },
        {
          "enum": [
            "HD_1080"
          ],
          "title": "HD_1080"
        },
        {
          "enum": [
            "UHD_4K"
          ],
          "title": "UHD_4K"
        }
      ],
      "title": "KalturaMediaFileTypeQuality"
    },
    "KalturaMessageTemplateType": {
      "oneOf": [
        {
          "enum": [
            "Series"
          ],
          "title": "SERIES"
        },
        {
          "enum": [
            "Reminder"
          ],
          "title": "REMINDER"
        },
        {
          "enum": [
            "Churn"
          ],
          "title": "CHURN"
        },
        {
          "enum": [
            "SeriesReminder"
          ],
          "title": "SERIESREMINDER"
        },
        {
          "enum": [
            "InterestVod"
          ],
          "title": "INTERESTVOD"
        },
        {
          "enum": [
            "InterestEPG"
          ],
          "title": "INTERESTEPG"
        }
      ],
      "title": "KalturaMessageTemplateType"
    },
    "KalturaMetaDataType": {
      "oneOf": [
        {
          "enum": [
            "STRING"
          ],
          "title": "STRING"
        },
        {
          "enum": [
            "MULTILINGUAL_STRING"
          ],
          "title": "MULTILINGUAL_STRING"
        },
        {
          "enum": [
            "NUMBER"
          ],
          "title": "NUMBER"
        },
        {
          "enum": [
            "BOOLEAN"
          ],
          "title": "BOOLEAN"
        },
        {
          "enum": [
            "DATE"
          ],
          "title": "DATE"
        },
        {
          "enum": [
            "RELEATED_ENTITY"
          ],
          "title": "RELEATED_ENTITY"
        }
      ],
      "title": "KalturaMetaDataType"
    },
    "KalturaMetaFieldName": {
      "oneOf": [
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        },
        {
          "enum": [
            "SERIES_ID"
          ],
          "title": "SERIES_ID"
        },
        {
          "enum": [
            "SEASON_NUMBER"
          ],
          "title": "SEASON_NUMBER"
        },
        {
          "enum": [
            "EPISODE_NUMBER"
          ],
          "title": "EPISODE_NUMBER"
        }
      ],
      "title": "KalturaMetaFieldName"
    },
    "KalturaMetaOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NAME_ASC"
          ],
          "title": "NAME_ASC"
        },
        {
          "enum": [
            "NAME_DESC"
          ],
          "title": "NAME_DESC"
        },
        {
          "enum": [
            "SYSTEM_NAME_ASC"
          ],
          "title": "SYSTEM_NAME_ASC"
        },
        {
          "enum": [
            "SYSTEM_NAME_DESC"
          ],
          "title": "SYSTEM_NAME_DESC"
        },
        {
          "enum": [
            "CREATE_DATE_ASC"
          ],
          "title": "CREATE_DATE_ASC"
        },
        {
          "enum": [
            "CREATE_DATE_DESC"
          ],
          "title": "CREATE_DATE_DESC"
        },
        {
          "enum": [
            "UPDATE_DATE_ASC"
          ],
          "title": "UPDATE_DATE_ASC"
        },
        {
          "enum": [
            "UPDATE_DATE_DESC"
          ],
          "title": "UPDATE_DATE_DESC"
        }
      ],
      "title": "KalturaMetaOrderBy"
    },
    "KalturaMetaTagOrderBy": {
      "oneOf": [
        {
          "enum": [
            "META_ASC"
          ],
          "title": "META_ASC"
        },
        {
          "enum": [
            "META_DESC"
          ],
          "title": "META_DESC"
        }
      ],
      "title": "KalturaMetaTagOrderBy"
    },
    "KalturaMetaType": {
      "oneOf": [
        {
          "enum": [
            "STRING"
          ],
          "title": "STRING"
        },
        {
          "enum": [
            "NUMBER"
          ],
          "title": "NUMBER"
        },
        {
          "enum": [
            "BOOLEAN"
          ],
          "title": "BOOLEAN"
        },
        {
          "enum": [
            "STRING_ARRAY"
          ],
          "title": "STRING_ARRAY"
        },
        {
          "enum": [
            "DATE"
          ],
          "title": "DATE"
        },
        {
          "enum": [
            "RELEATED_ENTITY"
          ],
          "title": "RELEATED_ENTITY"
        }
      ],
      "title": "KalturaMetaType"
    },
    "KalturaMonetizationType": {
      "oneOf": [
        {
          "enum": [
            "ppv"
          ],
          "title": "PPV"
        },
        {
          "enum": [
            "subscription"
          ],
          "title": "SUBSCRIPTION"
        },
        {
          "enum": [
            "boxset"
          ],
          "title": "BOXSET"
        },
        {
          "enum": [
            "any"
          ],
          "title": "ANY"
        },
        {
          "enum": [
            "ppv_live"
          ],
          "title": "PPV_LIVE"
        }
      ],
      "title": "KalturaMonetizationType"
    },
    "KalturaNotWatchedReturnStrategy": {
      "oneOf": [
        {
          "enum": [
            "RETURN_NO_NEXT_EPISODE"
          ],
          "title": "RETURN_NO_NEXT_EPISODE"
        },
        {
          "enum": [
            "RETURN_FIRST_EPISODE"
          ],
          "title": "RETURN_FIRST_EPISODE"
        }
      ],
      "title": "KalturaNotWatchedReturnStrategy"
    },
    "KalturaNotificationType": {
      "oneOf": [
        {
          "enum": [
            "announcement"
          ],
          "title": "ANNOUNCEMENT"
        },
        {
          "enum": [
            "system"
          ],
          "title": "SYSTEM"
        },
        {
          "enum": [
            "Reminder"
          ],
          "title": "REMINDER"
        },
        {
          "enum": [
            "series_reminder"
          ],
          "title": "SERIES_REMINDER"
        }
      ],
      "title": "KalturaNotificationType"
    },
    "KalturaOTTUserOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        }
      ],
      "title": "KalturaOTTUserOrderBy"
    },
    "KalturaObjectState": {
      "oneOf": [
        {
          "enum": [
            "INACTIVE"
          ],
          "title": "INACTIVE"
        },
        {
          "enum": [
            "ACTIVE"
          ],
          "title": "ACTIVE"
        },
        {
          "enum": [
            "ARCHIVE"
          ],
          "title": "ARCHIVE"
        }
      ],
      "title": "KalturaObjectState"
    },
    "KalturaObjectVirtualAssetInfoType": {
      "oneOf": [
        {
          "enum": [
            "Subscription"
          ],
          "title": "SUBSCRIPTION"
        },
        {
          "enum": [
            "Segment"
          ],
          "title": "SEGMENT"
        },
        {
          "enum": [
            "Category"
          ],
          "title": "CATEGORY"
        },
        {
          "enum": [
            "Tvod"
          ],
          "title": "TVOD"
        },
        {
          "enum": [
            "Boxset"
          ],
          "title": "BOXSET"
        },
        {
          "enum": [
            "PAGO"
          ],
          "title": "PAGO"
        }
      ],
      "title": "KalturaObjectVirtualAssetInfoType"
    },
    "KalturaParentalRuleOrderBy": {
      "oneOf": [
        {
          "enum": [
            "PARTNER_SORT_VALUE"
          ],
          "title": "PARTNER_SORT_VALUE"
        }
      ],
      "title": "KalturaParentalRuleOrderBy"
    },
    "KalturaParentalRuleType": {
      "oneOf": [
        {
          "enum": [
            "ALL"
          ],
          "title": "ALL"
        },
        {
          "enum": [
            "MOVIES"
          ],
          "title": "MOVIES"
        },
        {
          "enum": [
            "TV_SERIES"
          ],
          "title": "TV_SERIES"
        }
      ],
      "title": "KalturaParentalRuleType"
    },
    "KalturaPartnerConfigurationOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        }
      ],
      "title": "KalturaPartnerConfigurationOrderBy"
    },
    "KalturaPartnerConfigurationType": {
      "oneOf": [
        {
          "enum": [
            "DefaultPaymentGateway"
          ],
          "title": "DEFAULTPAYMENTGATEWAY"
        },
        {
          "enum": [
            "EnablePaymentGatewaySelection"
          ],
          "title": "ENABLEPAYMENTGATEWAYSELECTION"
        },
        {
          "enum": [
            "OSSAdapter"
          ],
          "title": "OSSADAPTER"
        },
        {
          "enum": [
            "Concurrency"
          ],
          "title": "CONCURRENCY"
        },
        {
          "enum": [
            "General"
          ],
          "title": "GENERAL"
        },
        {
          "enum": [
            "ObjectVirtualAsset"
          ],
          "title": "OBJECTVIRTUALASSET"
        },
        {
          "enum": [
            "Commerce"
          ],
          "title": "COMMERCE"
        },
        {
          "enum": [
            "Playback"
          ],
          "title": "PLAYBACK"
        },
        {
          "enum": [
            "Payment"
          ],
          "title": "PAYMENT"
        },
        {
          "enum": [
            "Catalog"
          ],
          "title": "CATALOG"
        },
        {
          "enum": [
            "Security"
          ],
          "title": "SECURITY"
        },
        {
          "enum": [
            "Opc"
          ],
          "title": "OPC"
        },
        {
          "enum": [
            "Base"
          ],
          "title": "BASE"
        },
        {
          "enum": [
            "CustomFields"
          ],
          "title": "CUSTOMFIELDS"
        },
        {
          "enum": [
            "DefaultParentalSettings"
          ],
          "title": "DEFAULTPARENTALSETTINGS"
        }
      ],
      "title": "KalturaPartnerConfigurationType"
    },
    "KalturaPartnerFilterOrderBy": {
      "oneOf": [
        {
          "enum": [
            "CODE_ASC"
          ],
          "title": "CODE_ASC"
        }
      ],
      "title": "KalturaPartnerFilterOrderBy"
    },
    "KalturaPasswordPolicyOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        }
      ],
      "title": "KalturaPasswordPolicyOrderBy"
    },
    "KalturaPaymentMethodProfileOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        }
      ],
      "title": "KalturaPaymentMethodProfileOrderBy"
    },
    "KalturaPaymentMethodType": {
      "oneOf": [
        {
          "enum": [
            "unknown"
          ],
          "title": "UNKNOWN"
        },
        {
          "enum": [
            "credit_card"
          ],
          "title": "CREDIT_CARD"
        },
        {
          "enum": [
            "sms"
          ],
          "title": "SMS"
        },
        {
          "enum": [
            "pay_pal"
          ],
          "title": "PAY_PAL"
        },
        {
          "enum": [
            "debit_card"
          ],
          "title": "DEBIT_CARD"
        },
        {
          "enum": [
            "ideal"
          ],
          "title": "IDEAL"
        },
        {
          "enum": [
            "incaso"
          ],
          "title": "INCASO"
        },
        {
          "enum": [
            "gift"
          ],
          "title": "GIFT"
        },
        {
          "enum": [
            "visa"
          ],
          "title": "VISA"
        },
        {
          "enum": [
            "master_card"
          ],
          "title": "MASTER_CARD"
        },
        {
          "enum": [
            "in_app"
          ],
          "title": "IN_APP"
        },
        {
          "enum": [
            "m1"
          ],
          "title": "M1"
        },
        {
          "enum": [
            "change_subscription"
          ],
          "title": "CHANGE_SUBSCRIPTION"
        },
        {
          "enum": [
            "offline"
          ],
          "title": "OFFLINE"
        }
      ],
      "title": "KalturaPaymentMethodType"
    },
    "KalturaPermissionItemOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        }
      ],
      "title": "KalturaPermissionItemOrderBy"
    },
    "KalturaPermissionOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        }
      ],
      "title": "KalturaPermissionOrderBy"
    },
    "KalturaPermissionType": {
      "oneOf": [
        {
          "enum": [
            "NORMAL"
          ],
          "title": "NORMAL"
        },
        {
          "enum": [
            "GROUP"
          ],
          "title": "GROUP"
        },
        {
          "enum": [
            "SPECIAL_FEATURE"
          ],
          "title": "SPECIAL_FEATURE"
        }
      ],
      "title": "KalturaPermissionType"
    },
    "KalturaPersonalAssetSelectionOrderBy": {
      "oneOf": [
        {
          "enum": [
            "ASSET_SELECTION_DATE_DESC"
          ],
          "title": "ASSET_SELECTION_DATE_DESC"
        }
      ],
      "title": "KalturaPersonalAssetSelectionOrderBy"
    },
    "KalturaPersonalFeedOrderBy": {
      "oneOf": [
        {
          "enum": [
            "RELEVANCY_DESC"
          ],
          "title": "RELEVANCY_DESC"
        },
        {
          "enum": [
            "NAME_ASC"
          ],
          "title": "NAME_ASC"
        },
        {
          "enum": [
            "NAME_DESC"
          ],
          "title": "NAME_DESC"
        },
        {
          "enum": [
            "VIEWS_DESC"
          ],
          "title": "VIEWS_DESC"
        },
        {
          "enum": [
            "RATINGS_DESC"
          ],
          "title": "RATINGS_DESC"
        },
        {
          "enum": [
            "VOTES_DESC"
          ],
          "title": "VOTES_DESC"
        },
        {
          "enum": [
            "START_DATE_DESC"
          ],
          "title": "START_DATE_DESC"
        },
        {
          "enum": [
            "START_DATE_ASC"
          ],
          "title": "START_DATE_ASC"
        }
      ],
      "title": "KalturaPersonalFeedOrderBy"
    },
    "KalturaPersonalListOrderBy": {
      "oneOf": [
        {
          "enum": [
            "CREATE_DATE_DESC"
          ],
          "title": "CREATE_DATE_DESC"
        },
        {
          "enum": [
            "CREATE_DATE_ASC"
          ],
          "title": "CREATE_DATE_ASC"
        }
      ],
      "title": "KalturaPersonalListOrderBy"
    },
    "KalturaPinType": {
      "oneOf": [
        {
          "enum": [
            "purchase"
          ],
          "title": "PURCHASE"
        },
        {
          "enum": [
            "parental"
          ],
          "title": "PARENTAL"
        }
      ],
      "title": "KalturaPinType"
    },
    "KalturaPlatform": {
      "oneOf": [
        {
          "enum": [
            "Android"
          ],
          "title": "ANDROID"
        },
        {
          "enum": [
            "iOS"
          ],
          "title": "IOS"
        },
        {
          "enum": [
            "WindowsPhone"
          ],
          "title": "WINDOWSPHONE"
        },
        {
          "enum": [
            "Blackberry"
          ],
          "title": "BLACKBERRY"
        },
        {
          "enum": [
            "STB"
          ],
          "title": "STB"
        },
        {
          "enum": [
            "CTV"
          ],
          "title": "CTV"
        },
        {
          "enum": [
            "Other"
          ],
          "title": "OTHER"
        }
      ],
      "title": "KalturaPlatform"
    },
    "KalturaPlaybackContextType": {
      "oneOf": [
        {
          "enum": [
            "TRAILER"
          ],
          "title": "TRAILER"
        },
        {
          "enum": [
            "CATCHUP"
          ],
          "title": "CATCHUP"
        },
        {
          "enum": [
            "START_OVER"
          ],
          "title": "START_OVER"
        },
        {
          "enum": [
            "PLAYBACK"
          ],
          "title": "PLAYBACK"
        },
        {
          "enum": [
            "DOWNLOAD"
          ],
          "title": "DOWNLOAD"
        }
      ],
      "title": "KalturaPlaybackContextType"
    },
    "KalturaPlaybackProfileOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NAME_ASC"
          ],
          "title": "NAME_ASC"
        }
      ],
      "title": "KalturaPlaybackProfileOrderBy"
    },
    "KalturaPositionOwner": {
      "oneOf": [
        {
          "enum": [
            "household"
          ],
          "title": "HOUSEHOLD"
        },
        {
          "enum": [
            "user"
          ],
          "title": "USER"
        }
      ],
      "title": "KalturaPositionOwner"
    },
    "KalturaPpvOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NAME_ASC"
          ],
          "title": "NAME_ASC"
        },
        {
          "enum": [
            "NAME_DESC"
          ],
          "title": "NAME_DESC"
        },
        {
          "enum": [
            "UPDATE_DATE_ASC"
          ],
          "title": "UPDATE_DATE_ASC"
        },
        {
          "enum": [
            "UPDATE_DATE_DESC"
          ],
          "title": "UPDATE_DATE_DESC"
        }
      ],
      "title": "KalturaPpvOrderBy"
    },
    "KalturaPreviewModuleOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        }
      ],
      "title": "KalturaPreviewModuleOrderBy"
    },
    "KalturaPriceDetailsOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NAME_ASC"
          ],
          "title": "NAME_ASC"
        }
      ],
      "title": "KalturaPriceDetailsOrderBy"
    },
    "KalturaPricePlanOrderBy": {
      "oneOf": [
        {
          "enum": [
            "CREATE_DATE_DESC"
          ],
          "title": "CREATE_DATE_DESC"
        }
      ],
      "title": "KalturaPricePlanOrderBy"
    },
    "KalturaPriorityGroupOrderByDummy": {
      "oneOf": [
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        }
      ],
      "title": "KalturaPriorityGroupOrderByDummy"
    },
    "KalturaProductPriceOrderBy": {
      "oneOf": [
        {
          "enum": [
            "PRODUCT_ID_ASC"
          ],
          "title": "PRODUCT_ID_ASC"
        },
        {
          "enum": [
            "PRODUCT_ID_DESC"
          ],
          "title": "PRODUCT_ID_DESC"
        }
      ],
      "title": "KalturaProductPriceOrderBy"
    },
    "KalturaProgramAssetGroupOfferOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NAME_ASC"
          ],
          "title": "NAME_ASC"
        },
        {
          "enum": [
            "NAME_DESC"
          ],
          "title": "NAME_DESC"
        },
        {
          "enum": [
            "UPDATE_DATE_ASC"
          ],
          "title": "UPDATE_DATE_ASC"
        },
        {
          "enum": [
            "UPDATE_DATE_DESC"
          ],
          "title": "UPDATE_DATE_DESC"
        }
      ],
      "title": "KalturaProgramAssetGroupOfferOrderBy"
    },
    "KalturaProtectionPolicy": {
      "oneOf": [
        {
          "enum": [
            "ExtendingRecordingLifetime"
          ],
          "title": "EXTENDINGRECORDINGLIFETIME"
        },
        {
          "enum": [
            "LimitedByRecordingLifetime"
          ],
          "title": "LIMITEDBYRECORDINGLIFETIME"
        }
      ],
      "title": "KalturaProtectionPolicy"
    },
    "KalturaPurchaseSettingsType": {
      "oneOf": [
        {
          "enum": [
            "block"
          ],
          "title": "BLOCK"
        },
        {
          "enum": [
            "ask"
          ],
          "title": "ASK"
        },
        {
          "enum": [
            "allow"
          ],
          "title": "ALLOW"
        }
      ],
      "title": "KalturaPurchaseSettingsType"
    },
    "KalturaPurchaseStatus": {
      "oneOf": [
        {
          "enum": [
            "ppv_purchased"
          ],
          "title": "PPV_PURCHASED"
        },
        {
          "enum": [
            "free"
          ],
          "title": "FREE"
        },
        {
          "enum": [
            "for_purchase_subscription_only"
          ],
          "title": "FOR_PURCHASE_SUBSCRIPTION_ONLY"
        },
        {
          "enum": [
            "subscription_purchased"
          ],
          "title": "SUBSCRIPTION_PURCHASED"
        },
        {
          "enum": [
            "for_purchase"
          ],
          "title": "FOR_PURCHASE"
        },
        {
          "enum": [
            "subscription_purchased_wrong_currency"
          ],
          "title": "SUBSCRIPTION_PURCHASED_WRONG_CURRENCY"
        },
        {
          "enum": [
            "pre_paid_purchased"
          ],
          "title": "PRE_PAID_PURCHASED"
        },
        {
          "enum": [
            "geo_commerce_blocked"
          ],
          "title": "GEO_COMMERCE_BLOCKED"
        },
        {
          "enum": [
            "entitled_to_preview_module"
          ],
          "title": "ENTITLED_TO_PREVIEW_MODULE"
        },
        {
          "enum": [
            "first_device_limitation"
          ],
          "title": "FIRST_DEVICE_LIMITATION"
        },
        {
          "enum": [
            "collection_purchased"
          ],
          "title": "COLLECTION_PURCHASED"
        },
        {
          "enum": [
            "user_suspended"
          ],
          "title": "USER_SUSPENDED"
        },
        {
          "enum": [
            "not_for_purchase"
          ],
          "title": "NOT_FOR_PURCHASE"
        },
        {
          "enum": [
            "invalid_currency"
          ],
          "title": "INVALID_CURRENCY"
        },
        {
          "enum": [
            "currency_not_defined_on_price_code"
          ],
          "title": "CURRENCY_NOT_DEFINED_ON_PRICE_CODE"
        },
        {
          "enum": [
            "pending_entitlement"
          ],
          "title": "PENDING_ENTITLEMENT"
        },
        {
          "enum": [
            "program_asset_group_offer_purchased"
          ],
          "title": "PROGRAM_ASSET_GROUP_OFFER_PURCHASED"
        }
      ],
      "title": "KalturaPurchaseStatus"
    },
    "KalturaQuotaOveragePolicy": {
      "oneOf": [
        {
          "enum": [
            "StopAtQuota"
          ],
          "title": "STOPATQUOTA"
        },
        {
          "enum": [
            "FIFOAutoDelete"
          ],
          "title": "FIFOAUTODELETE"
        }
      ],
      "title": "KalturaQuotaOveragePolicy"
    },
    "KalturaRecordingContextOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        }
      ],
      "title": "KalturaRecordingContextOrderBy"
    },
    "KalturaRecordingOrderBy": {
      "oneOf": [
        {
          "enum": [
            "TITLE_ASC"
          ],
          "title": "TITLE_ASC"
        },
        {
          "enum": [
            "TITLE_DESC"
          ],
          "title": "TITLE_DESC"
        },
        {
          "enum": [
            "START_DATE_ASC"
          ],
          "title": "START_DATE_ASC"
        },
        {
          "enum": [
            "START_DATE_DESC"
          ],
          "title": "START_DATE_DESC"
        }
      ],
      "title": "KalturaRecordingOrderBy"
    },
    "KalturaRecordingStatus": {
      "oneOf": [
        {
          "enum": [
            "SCHEDULED"
          ],
          "title": "SCHEDULED"
        },
        {
          "enum": [
            "RECORDING"
          ],
          "title": "RECORDING"
        },
        {
          "enum": [
            "RECORDED"
          ],
          "title": "RECORDED"
        },
        {
          "enum": [
            "CANCELED"
          ],
          "title": "CANCELED"
        },
        {
          "enum": [
            "FAILED"
          ],
          "title": "FAILED"
        },
        {
          "enum": [
            "DELETED"
          ],
          "title": "DELETED"
        }
      ],
      "title": "KalturaRecordingStatus"
    },
    "KalturaRecordingType": {
      "oneOf": [
        {
          "enum": [
            "SINGLE"
          ],
          "title": "SINGLE"
        },
        {
          "enum": [
            "SEASON"
          ],
          "title": "SEASON"
        },
        {
          "enum": [
            "SERIES"
          ],
          "title": "SERIES"
        },
        {
          "enum": [
            "OriginalBroadcast"
          ],
          "title": "ORIGINALBROADCAST"
        }
      ],
      "title": "KalturaRecordingType"
    },
    "KalturaRegionOrderBy": {
      "oneOf": [
        {
          "enum": [
            "CREATE_DATE_ASC"
          ],
          "title": "CREATE_DATE_ASC"
        },
        {
          "enum": [
            "CREATE_DATE_DESC"
          ],
          "title": "CREATE_DATE_DESC"
        }
      ],
      "title": "KalturaRegionOrderBy"
    },
    "KalturaRelatedEntityType": {
      "oneOf": [
        {
          "enum": [
            "CHANNEL"
          ],
          "title": "CHANNEL"
        },
        {
          "enum": [
            "EXTERNAL_CHANNEL"
          ],
          "title": "EXTERNAL_CHANNEL"
        },
        {
          "enum": [
            "MEDIA"
          ],
          "title": "MEDIA"
        },
        {
          "enum": [
            "PROGRAM"
          ],
          "title": "PROGRAM"
        }
      ],
      "title": "KalturaRelatedEntityType"
    },
    "KalturaReminderType": {
      "oneOf": [
        {
          "enum": [
            "ASSET"
          ],
          "title": "ASSET"
        },
        {
          "enum": [
            "SERIES"
          ],
          "title": "SERIES"
        }
      ],
      "title": "KalturaReminderType"
    },
    "KalturaReportOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        }
      ],
      "title": "KalturaReportOrderBy"
    },
    "KalturaResponseType": {
      "oneOf": [
        {
          "enum": [
            1
          ],
          "title": "JSON"
        },
        {
          "enum": [
            2
          ],
          "title": "XML"
        },
        {
          "enum": [
            9
          ],
          "title": "JSONP"
        },
        {
          "enum": [
            30
          ],
          "title": "ASSET_XML"
        },
        {
          "enum": [
            31
          ],
          "title": "EXCEL"
        }
      ],
      "title": "KalturaResponseType"
    },
    "KalturaRollingDevicePolicy": {
      "oneOf": [
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        },
        {
          "enum": [
            "LIFO"
          ],
          "title": "LIFO"
        },
        {
          "enum": [
            "FIFO"
          ],
          "title": "FIFO"
        },
        {
          "enum": [
            "ACTIVE_DEVICE_ASCENDING"
          ],
          "title": "ACTIVE_DEVICE_ASCENDING"
        }
      ],
      "title": "KalturaRollingDevicePolicy"
    },
    "KalturaRuleActionType": {
      "oneOf": [
        {
          "enum": [
            "BLOCK"
          ],
          "title": "BLOCK"
        },
        {
          "enum": [
            "START_DATE_OFFSET"
          ],
          "title": "START_DATE_OFFSET"
        },
        {
          "enum": [
            "END_DATE_OFFSET"
          ],
          "title": "END_DATE_OFFSET"
        },
        {
          "enum": [
            "USER_BLOCK"
          ],
          "title": "USER_BLOCK"
        },
        {
          "enum": [
            "ALLOW_PLAYBACK"
          ],
          "title": "ALLOW_PLAYBACK"
        },
        {
          "enum": [
            "BLOCK_PLAYBACK"
          ],
          "title": "BLOCK_PLAYBACK"
        },
        {
          "enum": [
            "APPLY_DISCOUNT_MODULE"
          ],
          "title": "APPLY_DISCOUNT_MODULE"
        },
        {
          "enum": [
            "APPLY_PLAYBACK_ADAPTER"
          ],
          "title": "APPLY_PLAYBACK_ADAPTER"
        },
        {
          "enum": [
            "FILTER"
          ],
          "title": "FILTER"
        },
        {
          "enum": [
            "ASSET_LIFE_CYCLE_TRANSITION"
          ],
          "title": "ASSET_LIFE_CYCLE_TRANSITION"
        },
        {
          "enum": [
            "APPLY_FREE_PLAYBACK"
          ],
          "title": "APPLY_FREE_PLAYBACK"
        },
        {
          "enum": [
            "FilterAssetByKsql"
          ],
          "title": "FILTERASSETBYKSQL"
        },
        {
          "enum": [
            "FilterFileByQualityInDiscovery"
          ],
          "title": "FILTERFILEBYQUALITYINDISCOVERY"
        },
        {
          "enum": [
            "FilterFileByQualityInPlayback"
          ],
          "title": "FILTERFILEBYQUALITYINPLAYBACK"
        },
        {
          "enum": [
            "FilterFileByFileTypeIdForAssetTypeInDiscovery"
          ],
          "title": "FILTERFILEBYFILETYPEIDFORASSETTYPEINDISCOVERY"
        },
        {
          "enum": [
            "FilterFileByFileTypeIdForAssetTypeInPlayback"
          ],
          "title": "FILTERFILEBYFILETYPEIDFORASSETTYPEINPLAYBACK"
        },
        {
          "enum": [
            "FilterFileByFileTypeIdInDiscovery"
          ],
          "title": "FILTERFILEBYFILETYPEIDINDISCOVERY"
        },
        {
          "enum": [
            "FilterFileByFileTypeIdInPlayback"
          ],
          "title": "FILTERFILEBYFILETYPEIDINPLAYBACK"
        },
        {
          "enum": [
            "FilterFileByAudioCodecInDiscovery"
          ],
          "title": "FILTERFILEBYAUDIOCODECINDISCOVERY"
        },
        {
          "enum": [
            "FilterFileByAudioCodecInPlayback"
          ],
          "title": "FILTERFILEBYAUDIOCODECINPLAYBACK"
        },
        {
          "enum": [
            "FilterFileByVideoCodecInDiscovery"
          ],
          "title": "FILTERFILEBYVIDEOCODECINDISCOVERY"
        },
        {
          "enum": [
            "FilterFileByVideoCodecInPlayback"
          ],
          "title": "FILTERFILEBYVIDEOCODECINPLAYBACK"
        },
        {
          "enum": [
            "FilterFileByStreamerTypeInDiscovery"
          ],
          "title": "FILTERFILEBYSTREAMERTYPEINDISCOVERY"
        },
        {
          "enum": [
            "FilterFileByStreamerTypeInPlayback"
          ],
          "title": "FILTERFILEBYSTREAMERTYPEINPLAYBACK"
        },
        {
          "enum": [
            "FilterFileByLabelInDiscovery"
          ],
          "title": "FILTERFILEBYLABELINDISCOVERY"
        },
        {
          "enum": [
            "FilterFileByLabelInPlayback"
          ],
          "title": "FILTERFILEBYLABELINPLAYBACK"
        },
        {
          "enum": [
            "FilterFileByDynamicDataInDiscovery"
          ],
          "title": "FILTERFILEBYDYNAMICDATAINDISCOVERY"
        },
        {
          "enum": [
            "FilterFileByDynamicDataInPlayback"
          ],
          "title": "FILTERFILEBYDYNAMICDATAINPLAYBACK"
        }
      ],
      "title": "KalturaRuleActionType"
    },
    "KalturaRuleConditionType": {
      "oneOf": [
        {
          "enum": [
            "ASSET"
          ],
          "title": "ASSET"
        },
        {
          "enum": [
            "COUNTRY"
          ],
          "title": "COUNTRY"
        },
        {
          "enum": [
            "CONCURRENCY"
          ],
          "title": "CONCURRENCY"
        },
        {
          "enum": [
            "IP_RANGE"
          ],
          "title": "IP_RANGE"
        },
        {
          "enum": [
            "BUSINESS_MODULE"
          ],
          "title": "BUSINESS_MODULE"
        },
        {
          "enum": [
            "SEGMENTS"
          ],
          "title": "SEGMENTS"
        },
        {
          "enum": [
            "DATE"
          ],
          "title": "DATE"
        },
        {
          "enum": [
            "OR"
          ],
          "title": "OR"
        },
        {
          "enum": [
            "HEADER"
          ],
          "title": "HEADER"
        },
        {
          "enum": [
            "USER_SUBSCRIPTION"
          ],
          "title": "USER_SUBSCRIPTION"
        },
        {
          "enum": [
            "ASSET_SUBSCRIPTION"
          ],
          "title": "ASSET_SUBSCRIPTION"
        },
        {
          "enum": [
            "USER_ROLE"
          ],
          "title": "USER_ROLE"
        },
        {
          "enum": [
            "DEVICE_BRAND"
          ],
          "title": "DEVICE_BRAND"
        },
        {
          "enum": [
            "DEVICE_FAMILY"
          ],
          "title": "DEVICE_FAMILY"
        },
        {
          "enum": [
            "DEVICE_MANUFACTURER"
          ],
          "title": "DEVICE_MANUFACTURER"
        },
        {
          "enum": [
            "DEVICE_MODEL"
          ],
          "title": "DEVICE_MODEL"
        },
        {
          "enum": [
            "DEVICE_UDID_DYNAMIC_LIST"
          ],
          "title": "DEVICE_UDID_DYNAMIC_LIST"
        },
        {
          "enum": [
            "DYNAMIC_KEYS"
          ],
          "title": "DYNAMIC_KEYS"
        },
        {
          "enum": [
            "USER_SESSION_PROFILE"
          ],
          "title": "USER_SESSION_PROFILE"
        },
        {
          "enum": [
            "DEVICE_DYNAMIC_DATA"
          ],
          "title": "DEVICE_DYNAMIC_DATA"
        },
        {
          "enum": [
            "IP_V6_RANGE"
          ],
          "title": "IP_V6_RANGE"
        },
        {
          "enum": [
            "ASSET_SHOP"
          ],
          "title": "ASSET_SHOP"
        },
        {
          "enum": [
            "CHANNEL"
          ],
          "title": "CHANNEL"
        },
        {
          "enum": [
            "FILE_TYPE"
          ],
          "title": "FILE_TYPE"
        }
      ],
      "title": "KalturaRuleConditionType"
    },
    "KalturaRuleLevel": {
      "oneOf": [
        {
          "enum": [
            "invalid"
          ],
          "title": "INVALID"
        },
        {
          "enum": [
            "user"
          ],
          "title": "USER"
        },
        {
          "enum": [
            "household"
          ],
          "title": "HOUSEHOLD"
        },
        {
          "enum": [
            "account"
          ],
          "title": "ACCOUNT"
        }
      ],
      "title": "KalturaRuleLevel"
    },
    "KalturaRuleType": {
      "oneOf": [
        {
          "enum": [
            "parental"
          ],
          "title": "PARENTAL"
        },
        {
          "enum": [
            "geo"
          ],
          "title": "GEO"
        },
        {
          "enum": [
            "user_type"
          ],
          "title": "USER_TYPE"
        },
        {
          "enum": [
            "device"
          ],
          "title": "DEVICE"
        },
        {
          "enum": [
            "assetUser"
          ],
          "title": "ASSETUSER"
        },
        {
          "enum": [
            "network"
          ],
          "title": "NETWORK"
        }
      ],
      "title": "KalturaRuleType"
    },
    "KalturaScheduledRecordingAssetType": {
      "oneOf": [
        {
          "enum": [
            "single"
          ],
          "title": "SINGLE"
        },
        {
          "enum": [
            "series"
          ],
          "title": "SERIES"
        },
        {
          "enum": [
            "all"
          ],
          "title": "ALL"
        }
      ],
      "title": "KalturaScheduledRecordingAssetType"
    },
    "KalturaSearchHistoryOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        }
      ],
      "title": "KalturaSearchHistoryOrderBy"
    },
    "KalturaSearchPriorityCriteriaType": {
      "oneOf": [
        {
          "enum": [
            "KSql"
          ],
          "title": "KSQL"
        }
      ],
      "title": "KalturaSearchPriorityCriteriaType"
    },
    "KalturaSearchPriorityGroupOrderBy": {
      "oneOf": [
        {
          "enum": [
            "PRIORITY_DESC"
          ],
          "title": "PRIORITY_DESC"
        },
        {
          "enum": [
            "NAME_ASC"
          ],
          "title": "NAME_ASC"
        },
        {
          "enum": [
            "NAME_DESC"
          ],
          "title": "NAME_DESC"
        }
      ],
      "title": "KalturaSearchPriorityGroupOrderBy"
    },
    "KalturaSegmentationTypeOrderBy": {
      "oneOf": [
        {
          "enum": [
            "UPDATE_DATE_DESC"
          ],
          "title": "UPDATE_DATE_DESC"
        },
        {
          "enum": [
            "UPDATE_DATE_ASC"
          ],
          "title": "UPDATE_DATE_ASC"
        },
        {
          "enum": [
            "CREATE_DATE_DESC"
          ],
          "title": "CREATE_DATE_DESC"
        },
        {
          "enum": [
            "CREATE_DATE_ASC"
          ],
          "title": "CREATE_DATE_ASC"
        },
        {
          "enum": [
            "EXECUTE_DATE_DESC"
          ],
          "title": "EXECUTE_DATE_DESC"
        },
        {
          "enum": [
            "EXECUTE_DATE_ASC"
          ],
          "title": "EXECUTE_DATE_ASC"
        },
        {
          "enum": [
            "AFFECTED_USERS_DESC"
          ],
          "title": "AFFECTED_USERS_DESC"
        },
        {
          "enum": [
            "AFFECTED_USERS_ASC"
          ],
          "title": "AFFECTED_USERS_ASC"
        },
        {
          "enum": [
            "AFFECTED_HOUSEHOLDS_DESC"
          ],
          "title": "AFFECTED_HOUSEHOLDS_DESC"
        },
        {
          "enum": [
            "AFFECTED_HOUSEHOLDS_ASC"
          ],
          "title": "AFFECTED_HOUSEHOLDS_ASC"
        }
      ],
      "title": "KalturaSegmentationTypeOrderBy"
    },
    "KalturaSeriesRecordingOrderBy": {
      "oneOf": [
        {
          "enum": [
            "START_DATE_ASC"
          ],
          "title": "START_DATE_ASC"
        },
        {
          "enum": [
            "START_DATE_DESC"
          ],
          "title": "START_DATE_DESC"
        },
        {
          "enum": [
            "ID_ASC"
          ],
          "title": "ID_ASC"
        },
        {
          "enum": [
            "ID_DESC"
          ],
          "title": "ID_DESC"
        },
        {
          "enum": [
            "SERIES_ID_ASC"
          ],
          "title": "SERIES_ID_ASC"
        },
        {
          "enum": [
            "SERIES_ID_DESC"
          ],
          "title": "SERIES_ID_DESC"
        }
      ],
      "title": "KalturaSeriesRecordingOrderBy"
    },
    "KalturaSeriesReminderOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        }
      ],
      "title": "KalturaSeriesReminderOrderBy"
    },
    "KalturaSkipOperators": {
      "oneOf": [
        {
          "enum": [
            "Equal"
          ],
          "title": "EQUAL"
        },
        {
          "enum": [
            "UnEqual"
          ],
          "title": "UNEQUAL"
        },
        {
          "enum": [
            "LessThan"
          ],
          "title": "LESSTHAN"
        },
        {
          "enum": [
            "GreaterThan"
          ],
          "title": "GREATERTHAN"
        }
      ],
      "title": "KalturaSkipOperators"
    },
    "KalturaSkipOptions": {
      "oneOf": [
        {
          "enum": [
            "No"
          ],
          "title": "NO"
        },
        {
          "enum": [
            "Previous"
          ],
          "title": "PREVIOUS"
        },
        {
          "enum": [
            "Any"
          ],
          "title": "ANY"
        }
      ],
      "title": "KalturaSkipOptions"
    },
    "KalturaSmsAdapterProfileOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        }
      ],
      "title": "KalturaSmsAdapterProfileOrderBy"
    },
    "KalturaSocialActionOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        }
      ],
      "title": "KalturaSocialActionOrderBy"
    },
    "KalturaSocialActionPrivacy": {
      "oneOf": [
        {
          "enum": [
            "ALLOW"
          ],
          "title": "ALLOW"
        },
        {
          "enum": [
            "DONT_ALLOW"
          ],
          "title": "DONT_ALLOW"
        }
      ],
      "title": "KalturaSocialActionPrivacy"
    },
    "KalturaSocialActionType": {
      "oneOf": [
        {
          "enum": [
            "LIKE"
          ],
          "title": "LIKE"
        },
        {
          "enum": [
            "WATCH"
          ],
          "title": "WATCH"
        },
        {
          "enum": [
            "RATE"
          ],
          "title": "RATE"
        },
        {
          "enum": [
            "SHARE"
          ],
          "title": "SHARE"
        }
      ],
      "title": "KalturaSocialActionType"
    },
    "KalturaSocialCommentOrderBy": {
      "oneOf": [
        {
          "enum": [
            "CREATE_DATE_ASC"
          ],
          "title": "CREATE_DATE_ASC"
        },
        {
          "enum": [
            "CREATE_DATE_DESC"
          ],
          "title": "CREATE_DATE_DESC"
        }
      ],
      "title": "KalturaSocialCommentOrderBy"
    },
    "KalturaSocialFriendActivityOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        },
        {
          "enum": [
            "UPDATE_DATE_DESC"
          ],
          "title": "UPDATE_DATE_DESC"
        }
      ],
      "title": "KalturaSocialFriendActivityOrderBy"
    },
    "KalturaSocialNetwork": {
      "oneOf": [
        {
          "enum": [
            "facebook"
          ],
          "title": "FACEBOOK"
        }
      ],
      "title": "KalturaSocialNetwork"
    },
    "KalturaSocialPlatform": {
      "oneOf": [
        {
          "enum": [
            "IN_APP"
          ],
          "title": "IN_APP"
        },
        {
          "enum": [
            "FACEBOOK"
          ],
          "title": "FACEBOOK"
        },
        {
          "enum": [
            "TWITTER"
          ],
          "title": "TWITTER"
        }
      ],
      "title": "KalturaSocialPlatform"
    },
    "KalturaSocialPrivacy": {
      "oneOf": [
        {
          "enum": [
            "UNKNOWN"
          ],
          "title": "UNKNOWN"
        },
        {
          "enum": [
            "EVERYONE"
          ],
          "title": "EVERYONE"
        },
        {
          "enum": [
            "ALL_FRIENDS"
          ],
          "title": "ALL_FRIENDS"
        },
        {
          "enum": [
            "FRIENDS_OF_FRIENDS"
          ],
          "title": "FRIENDS_OF_FRIENDS"
        },
        {
          "enum": [
            "SELF"
          ],
          "title": "SELF"
        },
        {
          "enum": [
            "CUSTOM"
          ],
          "title": "CUSTOM"
        }
      ],
      "title": "KalturaSocialPrivacy"
    },
    "KalturaSocialStatus": {
      "oneOf": [
        {
          "enum": [
            "error"
          ],
          "title": "ERROR"
        },
        {
          "enum": [
            "ok"
          ],
          "title": "OK"
        },
        {
          "enum": [
            "user_does_not_exist"
          ],
          "title": "USER_DOES_NOT_EXIST"
        },
        {
          "enum": [
            "no_user_social_settings_found"
          ],
          "title": "NO_USER_SOCIAL_SETTINGS_FOUND"
        },
        {
          "enum": [
            "asset_already_liked"
          ],
          "title": "ASSET_ALREADY_LIKED"
        },
        {
          "enum": [
            "not_allowed"
          ],
          "title": "NOT_ALLOWED"
        },
        {
          "enum": [
            "invalid_parameters"
          ],
          "title": "INVALID_PARAMETERS"
        },
        {
          "enum": [
            "no_facebook_action"
          ],
          "title": "NO_FACEBOOK_ACTION"
        },
        {
          "enum": [
            "asset_already_rated"
          ],
          "title": "ASSET_ALREADY_RATED"
        },
        {
          "enum": [
            "asset_dose_not_exists"
          ],
          "title": "ASSET_DOSE_NOT_EXISTS"
        },
        {
          "enum": [
            "invalid_platform_request"
          ],
          "title": "INVALID_PLATFORM_REQUEST"
        },
        {
          "enum": [
            "invalid_access_token"
          ],
          "title": "INVALID_ACCESS_TOKEN"
        }
      ],
      "title": "KalturaSocialStatus"
    },
    "KalturaStreamType": {
      "oneOf": [
        {
          "enum": [
            "catchup"
          ],
          "title": "CATCHUP"
        },
        {
          "enum": [
            "start_over"
          ],
          "title": "START_OVER"
        },
        {
          "enum": [
            "trick_play"
          ],
          "title": "TRICK_PLAY"
        }
      ],
      "title": "KalturaStreamType"
    },
    "KalturaStreamingDeviceOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        }
      ],
      "title": "KalturaStreamingDeviceOrderBy"
    },
    "KalturaSubscriptionDependencyType": {
      "oneOf": [
        {
          "enum": [
            "NOTAPPLICABLE"
          ],
          "title": "NOTAPPLICABLE"
        },
        {
          "enum": [
            "BASE"
          ],
          "title": "BASE"
        },
        {
          "enum": [
            "ADDON"
          ],
          "title": "ADDON"
        }
      ],
      "title": "KalturaSubscriptionDependencyType"
    },
    "KalturaSubscriptionOrderBy": {
      "oneOf": [
        {
          "enum": [
            "START_DATE_ASC"
          ],
          "title": "START_DATE_ASC"
        },
        {
          "enum": [
            "START_DATE_DESC"
          ],
          "title": "START_DATE_DESC"
        },
        {
          "enum": [
            "CREATE_DATE_ASC"
          ],
          "title": "CREATE_DATE_ASC"
        },
        {
          "enum": [
            "CREATE_DATE_DESC"
          ],
          "title": "CREATE_DATE_DESC"
        },
        {
          "enum": [
            "UPDATE_DATE_ASC"
          ],
          "title": "UPDATE_DATE_ASC"
        },
        {
          "enum": [
            "UPDATE_DATE_DESC"
          ],
          "title": "UPDATE_DATE_DESC"
        },
        {
          "enum": [
            "NAME_ASC"
          ],
          "title": "NAME_ASC"
        },
        {
          "enum": [
            "NAME_DESC"
          ],
          "title": "NAME_DESC"
        }
      ],
      "title": "KalturaSubscriptionOrderBy"
    },
    "KalturaSubscriptionSetOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NAME_ASC"
          ],
          "title": "NAME_ASC"
        },
        {
          "enum": [
            "NAME_DESC"
          ],
          "title": "NAME_DESC"
        }
      ],
      "title": "KalturaSubscriptionSetOrderBy"
    },
    "KalturaSubscriptionSetType": {
      "oneOf": [
        {
          "enum": [
            "SWITCH"
          ],
          "title": "SWITCH"
        },
        {
          "enum": [
            "DEPENDENCY"
          ],
          "title": "DEPENDENCY"
        }
      ],
      "title": "KalturaSubscriptionSetType"
    },
    "KalturaSubscriptionTriggerType": {
      "oneOf": [
        {
          "enum": [
            "START_DATE"
          ],
          "title": "START_DATE"
        },
        {
          "enum": [
            "END_DATE"
          ],
          "title": "END_DATE"
        }
      ],
      "title": "KalturaSubscriptionTriggerType"
    },
    "KalturaSuspensionProfileInheritanceType": {
      "oneOf": [
        {
          "enum": [
            "ALWAYS"
          ],
          "title": "ALWAYS"
        },
        {
          "enum": [
            "NEVER"
          ],
          "title": "NEVER"
        },
        {
          "enum": [
            "DEFAULT"
          ],
          "title": "DEFAULT"
        }
      ],
      "title": "KalturaSuspensionProfileInheritanceType"
    },
    "KalturaTagOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        }
      ],
      "title": "KalturaTagOrderBy"
    },
    "KalturaTimeShiftedTvState": {
      "oneOf": [
        {
          "enum": [
            "INHERITED"
          ],
          "title": "INHERITED"
        },
        {
          "enum": [
            "ENABLED"
          ],
          "title": "ENABLED"
        },
        {
          "enum": [
            "DISABLED"
          ],
          "title": "DISABLED"
        }
      ],
      "title": "KalturaTimeShiftedTvState"
    },
    "KalturaTopicAutomaticIssueNotification": {
      "oneOf": [
        {
          "enum": [
            "Inherit"
          ],
          "title": "INHERIT"
        },
        {
          "enum": [
            "Yes"
          ],
          "title": "YES"
        },
        {
          "enum": [
            "No"
          ],
          "title": "NO"
        }
      ],
      "title": "KalturaTopicAutomaticIssueNotification"
    },
    "KalturaTopicNotificationMessageOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        }
      ],
      "title": "KalturaTopicNotificationMessageOrderBy"
    },
    "KalturaTopicNotificationOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        }
      ],
      "title": "KalturaTopicNotificationOrderBy"
    },
    "KalturaTopicOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        }
      ],
      "title": "KalturaTopicOrderBy"
    },
    "KalturaTransactionAdapterStatus": {
      "oneOf": [
        {
          "enum": [
            "OK"
          ],
          "title": "OK"
        },
        {
          "enum": [
            "PENDING"
          ],
          "title": "PENDING"
        },
        {
          "enum": [
            "FAILED"
          ],
          "title": "FAILED"
        }
      ],
      "title": "KalturaTransactionAdapterStatus"
    },
    "KalturaTransactionHistoryOrderBy": {
      "oneOf": [
        {
          "enum": [
            "CREATE_DATE_ASC"
          ],
          "title": "CREATE_DATE_ASC"
        },
        {
          "enum": [
            "CREATE_DATE_DESC"
          ],
          "title": "CREATE_DATE_DESC"
        }
      ],
      "title": "KalturaTransactionHistoryOrderBy"
    },
    "KalturaTransactionType": {
      "oneOf": [
        {
          "enum": [
            "ppv"
          ],
          "title": "PPV"
        },
        {
          "enum": [
            "subscription"
          ],
          "title": "SUBSCRIPTION"
        },
        {
          "enum": [
            "collection"
          ],
          "title": "COLLECTION"
        },
        {
          "enum": [
            "programAssetGroupOffer"
          ],
          "title": "PROGRAMASSETGROUPOFFER"
        }
      ],
      "title": "KalturaTransactionType"
    },
    "KalturaTvmRuleOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        }
      ],
      "title": "KalturaTvmRuleOrderBy"
    },
    "KalturaTvmRuleType": {
      "oneOf": [
        {
          "enum": [
            "Geo"
          ],
          "title": "GEO"
        },
        {
          "enum": [
            "Device"
          ],
          "title": "DEVICE"
        }
      ],
      "title": "KalturaTvmRuleType"
    },
    "KalturaUnmatchedItemsPolicy": {
      "oneOf": [
        {
          "enum": [
            "OMIT"
          ],
          "title": "OMIT"
        },
        {
          "enum": [
            "GROUP"
          ],
          "title": "GROUP"
        },
        {
          "enum": [
            "INCLUDE_AND_MERGE"
          ],
          "title": "INCLUDE_AND_MERGE"
        }
      ],
      "title": "KalturaUnmatchedItemsPolicy"
    },
    "KalturaUploadTokenStatus": {
      "oneOf": [
        {
          "enum": [
            "PENDING"
          ],
          "title": "PENDING"
        },
        {
          "enum": [
            "FULL_UPLOAD"
          ],
          "title": "FULL_UPLOAD"
        },
        {
          "enum": [
            "CLOSED"
          ],
          "title": "CLOSED"
        }
      ],
      "title": "KalturaUploadTokenStatus"
    },
    "KalturaUrlType": {
      "oneOf": [
        {
          "enum": [
            "PLAYMANIFEST"
          ],
          "title": "PLAYMANIFEST"
        },
        {
          "enum": [
            "DIRECT"
          ],
          "title": "DIRECT"
        }
      ],
      "title": "KalturaUrlType"
    },
    "KalturaUsageModuleFilterOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        }
      ],
      "title": "KalturaUsageModuleFilterOrderBy"
    },
    "KalturaUserAssetRuleOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NAME_ASC"
          ],
          "title": "NAME_ASC"
        },
        {
          "enum": [
            "NAME_DESC"
          ],
          "title": "NAME_DESC"
        }
      ],
      "title": "KalturaUserAssetRuleOrderBy"
    },
    "KalturaUserAssetsListItemType": {
      "oneOf": [
        {
          "enum": [
            "all"
          ],
          "title": "ALL"
        },
        {
          "enum": [
            "media"
          ],
          "title": "MEDIA"
        }
      ],
      "title": "KalturaUserAssetsListItemType"
    },
    "KalturaUserAssetsListType": {
      "oneOf": [
        {
          "enum": [
            "all"
          ],
          "title": "ALL"
        },
        {
          "enum": [
            "watch"
          ],
          "title": "WATCH"
        },
        {
          "enum": [
            "purchase"
          ],
          "title": "PURCHASE"
        },
        {
          "enum": [
            "library"
          ],
          "title": "LIBRARY"
        }
      ],
      "title": "KalturaUserAssetsListType"
    },
    "KalturaUserRoleOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        }
      ],
      "title": "KalturaUserRoleOrderBy"
    },
    "KalturaUserRoleProfile": {
      "oneOf": [
        {
          "enum": [
            "USER"
          ],
          "title": "USER"
        },
        {
          "enum": [
            "PARTNER"
          ],
          "title": "PARTNER"
        },
        {
          "enum": [
            "PROFILE"
          ],
          "title": "PROFILE"
        },
        {
          "enum": [
            "SYSTEM"
          ],
          "title": "SYSTEM"
        },
        {
          "enum": [
            "PERMISSION_EMBEDDED"
          ],
          "title": "PERMISSION_EMBEDDED"
        }
      ],
      "title": "KalturaUserRoleProfile"
    },
    "KalturaUserRoleType": {
      "oneOf": [
        {
          "enum": [
            "SYSTEM"
          ],
          "title": "SYSTEM"
        },
        {
          "enum": [
            "CUSTOM"
          ],
          "title": "CUSTOM"
        }
      ],
      "title": "KalturaUserRoleType"
    },
    "KalturaUserSegmentOrder": {
      "oneOf": [
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        }
      ],
      "title": "KalturaUserSegmentOrder"
    },
    "KalturaUserSessionProfileFilterOrderBy": {
      "oneOf": [
        {
          "enum": [
            "ID_ASC"
          ],
          "title": "ID_ASC"
        }
      ],
      "title": "KalturaUserSessionProfileFilterOrderBy"
    },
    "KalturaUserState": {
      "oneOf": [
        {
          "enum": [
            "ok"
          ],
          "title": "OK"
        },
        {
          "enum": [
            "user_with_no_household"
          ],
          "title": "USER_WITH_NO_HOUSEHOLD"
        },
        {
          "enum": [
            "user_created_with_no_role"
          ],
          "title": "USER_CREATED_WITH_NO_ROLE"
        },
        {
          "enum": [
            "user_not_activated"
          ],
          "title": "USER_NOT_ACTIVATED"
        }
      ],
      "title": "KalturaUserState"
    },
    "KalturaVodIngestAssetResultOrderBy": {
      "oneOf": [
        {
          "enum": [
            "FILE_NAME_ASC"
          ],
          "title": "FILE_NAME_ASC"
        },
        {
          "enum": [
            "FILE_NAME_DESC"
          ],
          "title": "FILE_NAME_DESC"
        },
        {
          "enum": [
            "ASSET_NAME_ASC"
          ],
          "title": "ASSET_NAME_ASC"
        },
        {
          "enum": [
            "ASSET_NAME_DESC"
          ],
          "title": "ASSET_NAME_DESC"
        },
        {
          "enum": [
            "INGEST_DATE_ASC"
          ],
          "title": "INGEST_DATE_ASC"
        },
        {
          "enum": [
            "INGEST_DATE_DESC"
          ],
          "title": "INGEST_DATE_DESC"
        },
        {
          "enum": [
            "STATUS_ASC"
          ],
          "title": "STATUS_ASC"
        },
        {
          "enum": [
            "STATUS_DESC"
          ],
          "title": "STATUS_DESC"
        }
      ],
      "title": "KalturaVodIngestAssetResultOrderBy"
    },
    "KalturaVodIngestAssetResultStatus": {
      "oneOf": [
        {
          "enum": [
            "FAILURE"
          ],
          "title": "FAILURE"
        },
        {
          "enum": [
            "EXTERNAL_FAILURE"
          ],
          "title": "EXTERNAL_FAILURE"
        },
        {
          "enum": [
            "SUCCESS_WARNING"
          ],
          "title": "SUCCESS_WARNING"
        },
        {
          "enum": [
            "SUCCESS"
          ],
          "title": "SUCCESS"
        }
      ],
      "title": "KalturaVodIngestAssetResultStatus"
    },
    "KalturaWatchStatus": {
      "oneOf": [
        {
          "enum": [
            "progress"
          ],
          "title": "PROGRESS"
        },
        {
          "enum": [
            "done"
          ],
          "title": "DONE"
        },
        {
          "enum": [
            "all"
          ],
          "title": "ALL"
        }
      ],
      "title": "KalturaWatchStatus"
    },
    "KalturaWatchedAllReturnStrategy": {
      "oneOf": [
        {
          "enum": [
            "RETURN_NO_NEXT_EPISODE"
          ],
          "title": "RETURN_NO_NEXT_EPISODE"
        },
        {
          "enum": [
            "RETURN_FIRST_EPISODE"
          ],
          "title": "RETURN_FIRST_EPISODE"
        },
        {
          "enum": [
            "RETURN_LAST_EPISODE"
          ],
          "title": "RETURN_LAST_EPISODE"
        }
      ],
      "title": "KalturaWatchedAllReturnStrategy"
    }
  },
  "x-errors": [
    {
      "code": "1000",
      "description": "The household you entered already exists in the system",
      "name": "DomainAlreadyExists"
    },
    {
      "code": "1001",
      "description": "The number of devices or users has exceeded the household limit",
      "name": "ExceededLimit"
    },
    {
      "code": "1002",
      "description": "The device type you selected is not supported by the system",
      "name": "DeviceTypeNotAllowed"
    },
    {
      "code": "1003",
      "description": "The device you selected is not part of the current household",
      "name": "DeviceNotInDomain"
    },
    {
      "code": "1004",
      "description": "The master email address you entered already exists in the system",
      "name": "MasterEmailAlreadyExists"
    },
    {
      "code": "1005",
      "description": "The user you selected is not part of the current household",
      "name": "UserNotInDomain"
    },
    {
      "code": "1006",
      "description": "The household you selected does not exist",
      "name": "DomainNotExists"
    },
    {
      "code": "1007",
      "description": "The system was unable to register this household user",
      "name": "HouseholdUserFailed"
    },
    {
      "code": "1008",
      "description": "The household was created without an external NPVR account",
      "name": "DomainCreatedWithoutNPVRAccount"
    },
    {
      "code": "1009",
      "description": "Unable to perform the action requested because the household has been suspended",
      "name": "DomainSuspended"
    },
    {
      "code": "1010",
      "description": "The device limitation module (DLM) you entered does not exist in the system",
      "name": "DlmNotExist"
    },
    {
      "code": "1011",
      "description": "Unable to authenticate this user - the user name or password are incorrect. Please re-enter this information",
      "name": "WrongPasswordOrUserName"
    },
    {
      "code": "1012",
      "description": "This household has already been suspended",
      "name": "DomainAlreadySuspended"
    },
    {
      "code": "1013",
      "description": "This household has already been activated",
      "name": "DomainAlreadyActive"
    },
    {
      "code": "1014",
      "description": "Unable to remove the device or user from the household at this time because of the limitation period",
      "name": "LimitationPeriod"
    },
    {
      "code": "1015",
      "description": "The device you are trying to add already exists in the system",
      "name": "DeviceAlreadyExists"
    },
    {
      "code": "1016",
      "description": "Unable to add this device to this household because the device is already associated with another household",
      "name": "DeviceExistsInOtherDomains"
    },
    {
      "code": "1017",
      "description": "There are no users associated with this household",
      "name": "NoUsersInDomain"
    },
    {
      "code": "1018",
      "description": "Unable to add this user to this household because the user is already associated with another household",
      "name": "UserExistsInOtherDomains"
    },
    {
      "code": "1019",
      "description": "The device you selected for this action does not exist in the household",
      "name": "DeviceNotExists"
    },
    {
      "code": "1020",
      "description": "The user you selected for this action does not exist in the household",
      "name": "UserNotExistsInDomain"
    },
    {
      "code": "1021",
      "description": "Unable to perform this action: the user is not the household master",
      "name": "ActionUserNotMaster"
    },
    {
      "code": "1022",
      "description": "Unable to perform this action: you have exceeded the number of users for this household",
      "name": "ExceededUserLimit"
    },
    {
      "code": "1023",
      "description": "This household has not been initialized",
      "name": "DomainNotInitialized"
    },
    {
      "code": "1024",
      "description": "Unable to confirm this device",
      "name": "DeviceNotConfirmed"
    },
    {
      "code": "1025",
      "description": "The request you entered could not be completed at this time",
      "name": "RequestFailed"
    },
    {
      "code": "1026",
      "description": "The user you selected for this action is not a valid user",
      "name": "InvalidUser"
    },
    {
      "code": "1027",
      "description": "The user you selected for this action doesn't have the necessary permissions",
      "name": "UserNotAllowed"
    },
    {
      "code": "1028",
      "description": "The PIN number you entered is already being used in this household",
      "name": "DuplicatePin"
    },
    {
      "code": "1029",
      "description": "Unable to add a user to the same household twice",
      "name": "UserAlreadyInDomain"
    },
    {
      "code": "1030",
      "description": "Unable to delete this user from the account due to permission limitations",
      "name": "NotAllowedToDelete"
    },
    {
      "code": "1031",
      "description": "Unable to add a home network to the same household twice",
      "name": "HomeNetworkAlreadyExists"
    },
    {
      "code": "1032",
      "description": "The number of home networks in the household has been exceeded",
      "name": "HomeNetworkLimitation"
    },
    {
      "code": "1033",
      "description": "The home network you specified does not exis",
      "name": "HomeNetworkDoesNotExist"
    },
    {
      "code": "1034",
      "description": "Unable to remove the home network from the household because of the frequency limitation",
      "name": "HomeNetworkFrequency"
    },
    {
      "code": "1037",
      "description": "Region does not exist",
      "name": "RegionDoesNotExist"
    },
    {
      "code": "2000",
      "description": "This user doesn't exist",
      "name": "UserDoesNotExist"
    },
    {
      "code": "2001",
      "description": "Unable to perform this action due to a household suspension",
      "name": "UserSuspended"
    },
    {
      "code": "2003",
      "description": "The PIN provided does not exist in the system",
      "name": "PinNotExists"
    },
    {
      "code": "2004",
      "description": "The PIN provided has expired",
      "name": "PinExpired"
    },
    {
      "code": "2006",
      "description": "The PIN provided is not valid",
      "name": "NoValidPin"
    },
    {
      "code": "2007",
      "description": "The security answer for the PIN code is missing",
      "name": "MissingSecurityParameter"
    },
    {
      "code": "2008",
      "description": "The secret provided is incorrect",
      "name": "SecretIsWrong"
    },
    {
      "code": "2009",
      "description": "Log in using a PIN is not enabled for this account",
      "name": "LoginViaPinNotAllowed"
    },
    {
      "code": "2010",
      "description": "The PIN provided is not valid.(does not match the required number of digits).",
      "name": "PinNotInTheRightLength"
    },
    {
      "code": "2011",
      "description": "The PIN that you entered already exists in the system",
      "name": "PinAlreadyExists"
    },
    {
      "code": "2014",
      "description": "The user you are trying to add already exists",
      "name": "UserExists"
    },
    {
      "code": "2015",
      "description": "The account has been locked",
      "name": "InsideLockTime"
    },
    {
      "code": "2016",
      "description": "The user must be activated to log in",
      "name": "UserNotActivated"
    },
    {
      "code": "2017",
      "description": "This user is already logged in",
      "name": "UserAllreadyLoggedIn"
    },
    {
      "code": "2018",
      "description": "The user can't be logged in on more than one device",
      "name": "UserDoubleLogIn"
    },
    {
      "code": "2019",
      "description": "The device you are trying to connect is not registered",
      "name": "DeviceNotRegistered"
    },
    {
      "code": "2021",
      "description": "",
      "name": "ErrorOnInitUser"
    },
    {
      "code": "2023",
      "description": "The user must be approved by the household master",
      "name": "UserNotMasterApproved"
    },
    {
      "code": "2024",
      "description": "This user is not associated with any household.",
      "name": "UserWithNoDomain"
    },
    {
      "code": "2025",
      "description": "The specified user type does not exist",
      "name": "UserTypeDoesNotExist"
    },
    {
      "code": "2026",
      "description": "The activation token is incorrec",
      "name": "ActivationTokenNotFound"
    },
    {
      "code": "2027",
      "description": "This user has already been approved by the household master",
      "name": "UserAlreadyMasterApproved"
    },
    {
      "code": "2028",
      "description": "The login server is not available. Please try again",
      "name": "LoginServerDown"
    },
    {
      "code": "2029",
      "description": "This role has already been associated with this user",
      "name": "RoleAlreadyAssignedToUser"
    },
    {
      "code": "2030",
      "description": "Unable to delete the default household user",
      "name": "DefaultUserCannotBeDeleted"
    },
    {
      "code": "2031",
      "description": "The exclusive household master user can't be deleted",
      "name": "ExclusiveMasterUserCannotBeDeleted"
    },
    {
      "code": "2032",
      "description": "Unable to find the item you requested",
      "name": "ItemNotFound"
    },
    {
      "code": "2054",
      "description": "The external ID you are trying to add / update already exists",
      "name": "ExternalIdAlreadyExists"
    },
    {
      "code": "2041",
      "description": "ParentId should not point to itself",
      "name": "ParentIdShouldNotPointToItself"
    },
    {
      "code": "2059",
      "description": "",
      "name": "ParentIdNotExist"
    },
    {
      "code": "2060",
      "description": "",
      "name": "UserFavoriteNotDeleted"
    },
    {
      "code": "2062",
      "description": "Self deletion is not permitted.",
      "name": "UserSelfDeleteNotPermitted"
    },
    {
      "code": "2055",
      "description": "User External Error.",
      "name": "UserExternalError"
    },
    {
      "code": "2061",
      "description": "Blocked by segment.",
      "name": "ActionBlocked"
    },
    {
      "code": "3000",
      "description": "Unable to complete the purchase of the item requested",
      "name": "InvalidPurchase"
    },
    {
      "code": "3001",
      "description": "Unable to cancel the product request because the cancellation window has expired.",
      "name": "CancelationWindowPeriodExpired"
    },
    {
      "code": "3002",
      "description": "Unable to perform this action on a subscription that is not renewable",
      "name": "SubscriptionNotRenewable"
    },
    {
      "code": "3003",
      "description": "The user is not entitled to the premium service that he or she is trying to access",
      "name": "ServiceNotAllowed"
    },
    {
      "code": "3004",
      "description": "The CDN code that was provided is incorrect",
      "name": "InvalidBaseLink"
    },
    {
      "code": "3005",
      "description": "Unable to complete this request - content cannot be cancelled after being viewed.",
      "name": "ContentAlreadyConsumed"
    },
    {
      "code": "3011",
      "description": "The request failed for an unknown reason",
      "name": "ReasonUnknown"
    },
    {
      "code": "3015",
      "description": "The charge status for this purchase is unknown",
      "name": "ChargeStatusUnknown"
    },
    {
      "code": "3016",
      "description": "The Content ID is missing",
      "name": "ContentIDMissing"
    },
    {
      "code": "3017",
      "description": "There is no media for the file you requested.",
      "name": "NoMediaRelatedToFile"
    },
    {
      "code": "3018",
      "description": "Please enter the content ID and try again",
      "name": "NoContentID"
    },
    {
      "code": "3019",
      "description": "Please enter the product ID and try again",
      "name": "NoProductID"
    },
    {
      "code": "3020",
      "description": "The coupon you entered is not valid",
      "name": "CouponNotValid"
    },
    {
      "code": "3021",
      "description": "Pay-Per-View was already purchased by this household",
      "name": "UnableToPurchasePPVPurchased"
    },
    {
      "code": "3022",
      "description": "The product you are trying to purchase is free",
      "name": "UnableToPurchaseFree"
    },
    {
      "code": "3023",
      "description": "The product you are trying to purchase is restricted to subscription purchases only",
      "name": "UnableToPurchaseForPurchaseSubscriptionOnly"
    },
    {
      "code": "3024",
      "description": "This subscription was already purchased by this household.",
      "name": "UnableToPurchaseSubscriptionPurchased"
    },
    {
      "code": "3025",
      "description": "The Content ID entered is not available for purchase.",
      "name": "NotForPurchase"
    },
    {
      "code": "3026",
      "description": "",
      "name": "Fail"
    },
    {
      "code": "3027",
      "description": "This collection has already been purchased by this household",
      "name": "UnableToPurchaseCollectionPurchased"
    },
    {
      "code": "3028",
      "description": "The file and media don't match",
      "name": "FileToMediaMismatch"
    },
    {
      "code": "3029",
      "description": "",
      "name": "ReconciliationFrequencyLimitation"
    },
    {
      "code": "3030",
      "description": "The custom data identifier you entered is invalid",
      "name": "InvalidCustomDataIdentifier"
    },
    {
      "code": "3031",
      "description": "The file type provided is invalid",
      "name": "InvalidFileType"
    },
    {
      "code": "3032",
      "description": "The user does not have permission to access this content",
      "name": "NotEntitled"
    },
    {
      "code": "3033",
      "description": "Your account is not enabled for the C-DVR (recording) feature",
      "name": "AccountCdvrNotEnabled"
    },
    {
      "code": "3034",
      "description": "Your account is not enabled for the catch-up feature",
      "name": "AccountCatchUpNotEnabled"
    },
    {
      "code": "3035",
      "description": "This program is not recordable",
      "name": "ProgramCdvrNotEnabled"
    },
    {
      "code": "3036",
      "description": "This program does not support catch-up",
      "name": "ProgramCatchUpNotEnabled"
    },
    {
      "code": "3037",
      "description": "You've reach the maximum limit for the catch up buffer",
      "name": "CatchUpBufferLimitation"
    },
    {
      "code": "3038",
      "description": "This program cannot be recorded because it is not in the recording schedule window",
      "name": "ProgramNotInRecordingScheduleWindow"
    },
    {
      "code": "3039",
      "description": "The program ID provided is invalid",
      "name": "RecordingNotFound"
    },
    {
      "code": "3040",
      "description": "The program recording failed",
      "name": "RecordingFailed"
    },
    {
      "code": "3041",
      "description": "",
      "name": "PaymentMethodIsUsedByHousehold"
    },
    {
      "code": "3042",
      "description": "You've reached the maximum quote buffer for your household",
      "name": "ExceededQuota"
    },
    {
      "code": "3043",
      "description": "Unable to perform the action requested because of the current recording status. Actions are only allowed for these statuses:Recorded, Recording, Scheduled",
      "name": "RecordingStatusNotValid"
    },
    {
      "code": "3044",
      "description": "You've reached the maximum quota on protected programs, and can't protect any additional programs",
      "name": "ExceededProtectionQuota"
    },
    {
      "code": "3045",
      "description": "The account recording protection feature is disabled",
      "name": "AccountProtectRecordNotEnabled"
    },
    {
      "code": "3046",
      "description": "The account series recording feature is disabled",
      "name": "AccountSeriesRecordingNotEnabled"
    },
    {
      "code": "3047",
      "description": "This program has already been recorded as part of a series/season recording",
      "name": "AlreadyRecordedAsSeriesOrSeason"
    },
    {
      "code": "3048",
      "description": "Unable to find the requested series recording",
      "name": "SeriesRecordingNotFound"
    },
    {
      "code": "3049",
      "description": "Unable to cancel or delete an EPG program that is not part of the series",
      "name": "EpgIdNotPartOfSeries"
    },
    {
      "code": "3050",
      "description": "Recording playback is not allowed for a non-existing linear channel",
      "name": "RecordingPlaybackNotAllowedForNonExistingEpgChannel"
    },
    {
      "code": "3051",
      "description": "Recording playback is not allowed for non-entitled linear channels",
      "name": "RecordingPlaybackNotAllowedForNotEntitledEpgChannel"
    },
    {
      "code": "3052",
      "description": "The season number you entered doesn't match the season number that was recorded",
      "name": "SeasonNumberNotMatch"
    },
    {
      "code": "3074",
      "description": "",
      "name": "SubscriptionCancellationIsBlocked"
    },
    {
      "code": "3077",
      "description": "This offer is invalid",
      "name": "InvalidOffer"
    },
    {
      "code": "3081",
      "description": "The subscription does not exist",
      "name": "SubscriptionDoesNotExist"
    },
    {
      "code": "3082",
      "description": "Other coupon is already applied for subscription",
      "name": "OtherCouponIsAlreadyAppliedForSubscription"
    },
    {
      "code": "3085",
      "description": "Campaign is already applied for subscription",
      "name": "CampaignIsAlreadyAppliedForSubscription"
    },
    {
      "code": "3083",
      "description": "",
      "name": "PurchasePendingFailed"
    },
    {
      "code": "3084",
      "description": "Entitlement is pending",
      "name": "PendingEntitlement"
    },
    {
      "code": "3076",
      "description": "Illegal content ID",
      "name": "InvalidContentId"
    },
    {
      "code": "3061",
      "description": "Can only be entitled to one subscription per subscriptionSet, please use Upgrade or Downgrade",
      "name": "CanOnlyBeEntitledToOneSubscriptionPerSubscriptionSet"
    },
    {
      "code": "3070",
      "description": "Subscription is not allowed for user type",
      "name": "SubscriptionNotAllowedForUserType"
    },
    {
      "code": "3071",
      "description": "Missing base package",
      "name": "MissingBasePackage"
    },
    {
      "code": "3060",
      "description": "The subscriptionSet does not exist",
      "name": "SubscriptionSetDoesNotExist"
    },
    {
      "code": "3079",
      "description": "purchase passed but entitlement failed",
      "name": "PurchasePassedEntitlementFailed"
    },
    {
      "code": "3078",
      "description": "purchase failed",
      "name": "PurchaseFailed"
    },
    {
      "code": "3087",
      "description": "This program does not support start-over",
      "name": "ProgramStartOverNotEnabled"
    },
    {
      "code": "9043",
      "description": "The programAssetGroupOffer does not exist",
      "name": "ProgramAssetGroupOfferDoesNotExist"
    },
    {
      "code": "9044",
      "description": "The external offer Id you are trying to add / update already exists",
      "name": "ExternalOfferIdAlreadyExists"
    },
    {
      "code": "3088",
      "description": "This ProgramAssetGroupOffer has already been purchased by this household",
      "name": "UnableToPurchaseProgramAssetGroupOfferPurchased"
    },
    {
      "code": "9045",
      "description": "Only campaign in state INACTIVE can be updated",
      "name": "CampaignUpdateNotAllowed"
    },
    {
      "code": "9046",
      "description": "Campaign is already in given state",
      "name": "InvalidCampaignState"
    },
    {
      "code": "9047",
      "description": "Can update campaign state only from INACTIVE to ACTIVE or from ACTIVE to ARCHIVE",
      "name": "CampaignStateUpdateNotAllowed"
    },
    {
      "code": "9048",
      "description": "Can update campaign state only if its EndDate is in the future",
      "name": "InvalidCampaignEndDate"
    },
    {
      "code": "3089",
      "description": "Can Only Update Padding After Recording Before Recording End",
      "name": "CanOnlyUpdatePaddingAfterRecordingBeforeRecordingEnd"
    },
    {
      "code": "3090",
      "description": "Can Only Update Padding Before Recording Before Recording Start",
      "name": "CanOnlyUpdatePaddingBeforeRecordingBeforeRecordingStart"
    },
    {
      "code": "3091",
      "description": "Can Only Add Recording Before Recording Start",
      "name": "CanOnlyAddRecordingBeforeRecordingStart"
    },
    {
      "code": "3092",
      "description": "Can Only Cancel Recording Before Recording End",
      "name": "CanOnlyCancelRecordingBeforeRecordingEnd"
    },
    {
      "code": "3093",
      "description": "Can Only Delete Recording After Recording end",
      "name": "CanOnlyDeleteRecordingAfterRecordingEnd"
    },
    {
      "code": "3094",
      "description": "Recording Exceeded Concurrency",
      "name": "RecordingExceededConcurrency"
    },
    {
      "code": "3095",
      "description": "Exceeding Allowed Immediate Recording Attempts",
      "name": "ExceedingAllowedImmediateRecordingAttempts"
    },
    {
      "code": "4000",
      "description": "Media concurrency limitation (according to DLM configuration)",
      "name": "MediaConcurrencyLimitation"
    },
    {
      "code": "4001",
      "description": "Concurrency limitation (according to DLM configuration)",
      "name": "ConcurrencyLimitation"
    },
    {
      "code": "4002",
      "description": "",
      "name": "BadSearchRequest"
    },
    {
      "code": "4003",
      "description": "Relevant ElasticSearch index doesn't exist, either because it wasn't built or some other error.",
      "name": "IndexMissing"
    },
    {
      "code": "4004",
      "description": "KSQL query string contains a syntax error. It is not in the correct and expected format.",
      "name": "SyntaxError"
    },
    {
      "code": "4005",
      "description": "",
      "name": "InvalidSearchField"
    },
    {
      "code": "4006",
      "description": "There's no available recommendation engine to connect",
      "name": "NoRecommendationEngineToInsert"
    },
    {
      "code": "4007",
      "description": "The recommendation engine specified doesn't exist",
      "name": "RecommendationEngineNotExist"
    },
    {
      "code": "4008",
      "description": "The mandatory recommendation engine identifier field is missing from the request",
      "name": "RecommendationEngineIdentifierRequired"
    },
    {
      "code": "4009",
      "description": "The mandatory recommendation engine parameter fields are missing from the request",
      "name": "RecommendationEngineParamsRequired"
    },
    {
      "code": "4010",
      "description": "There's no external channel to connect",
      "name": "NoExternalChannelToInsert"
    },
    {
      "code": "4011",
      "description": "The external channel specified doesn't exist",
      "name": "ExternalChannelNotExist"
    },
    {
      "code": "4012",
      "description": "There's no external channel to update",
      "name": "NoExternalChannelToUpdate"
    },
    {
      "code": "4013",
      "description": "The mandatory external channel identifier field is missing from the request",
      "name": "ExternalChannelIdentifierRequired"
    },
    {
      "code": "4014",
      "description": "The external channel isn't connected to a recommendation engine",
      "name": "ExternalChannelHasNoRecommendationEngine"
    },
    {
      "code": "4015",
      "description": "There's no recommendation engine to update",
      "name": "NoRecommendationEngineToUpdate"
    },
    {
      "code": "4016",
      "description": "The specified external channel enrichment is not available",
      "name": "InactiveExternalChannelEnrichment"
    },
    {
      "code": "4017",
      "description": "Please specify the channel ID identifier",
      "name": "IdentifierRequired"
    },
    {
      "code": "4018",
      "description": "The object requested doesn't exist",
      "name": "ObjectNotExist"
    },
    {
      "code": "4019",
      "description": "There's no channel to add",
      "name": "NoObjectToInsert"
    },
    {
      "code": "4020",
      "description": "The asset type does not match one of the group asset types",
      "name": "InvalidMediaType"
    },
    {
      "code": "4021",
      "description": "The asset requested is not a valid asset type",
      "name": "InvalidAssetType"
    },
    {
      "code": "4022",
      "description": "The EPG program requested doesn't exist",
      "name": "ProgramDoesntExist"
    },
    {
      "code": "4023",
      "description": "Unable to recognize the action you specified",
      "name": "ActionNotRecognized"
    },
    {
      "code": "4024",
      "description": "The specified asset ID is invalid",
      "name": "InvalidAssetId"
    },
    {
      "code": "4025",
      "description": "Unable to find the country code specified",
      "name": "CountryNotFound"
    },
    {
      "code": "4026",
      "description": "The asset struct name is already in use",
      "name": "AssetStructNameAlreadyInUse"
    },
    {
      "code": "4027",
      "description": "The asset struct system name is already in use",
      "name": "AssetStructSystemNameAlreadyInUse"
    },
    {
      "code": "4031",
      "description": "One or more of the specified meta ids does not exist",
      "name": "MetaIdsDoesNotExist"
    },
    {
      "code": "4028",
      "description": "The specified asset strcut id does not exist",
      "name": "AssetStructDoesNotExist"
    },
    {
      "code": "4085",
      "description": "",
      "name": "AssetStructMetasConatinSystemNameDuplication"
    },
    {
      "code": "4029",
      "description": "can not change predefined asset struct name",
      "name": "CanNotChangePredefinedAssetStructSystemName"
    },
    {
      "code": "4030",
      "description": "can not delete predefined asset struct",
      "name": "CanNotDeletePredefinedAssetStruct"
    },
    {
      "code": "4032",
      "description": "The meta system name is already in use",
      "name": "MetaSystemNameAlreadyInUse"
    },
    {
      "code": "4036",
      "description": "",
      "name": "InvalidMutlipleValueForMetaType"
    },
    {
      "code": "4033",
      "description": "The specified meta id does not exist",
      "name": "MetaDoesNotExist"
    },
    {
      "code": "4034",
      "description": "can not change predefined meta name",
      "name": "CanNotChangePredefinedMetaSystemName"
    },
    {
      "code": "4035",
      "description": "can not delete predefined meta",
      "name": "CanNotDeletePredefinedMeta"
    },
    {
      "code": "4037",
      "description": "One or more of the basic meta ids was not sent",
      "name": "AssetStructMissingBasicMetaIds"
    },
    {
      "code": "4038",
      "description": "",
      "name": "AssetExternalIdMustBeUnique"
    },
    {
      "code": "4040",
      "description": "",
      "name": "InvalidMetaType"
    },
    {
      "code": "4041",
      "description": "",
      "name": "InvalidValueSentForMeta"
    },
    {
      "code": "4042",
      "description": "",
      "name": "DeviceRuleDoesNotExistForGroup"
    },
    {
      "code": "4043",
      "description": "",
      "name": "GeoBlockRuleDoesNotExistForGroup"
    },
    {
      "code": "4039",
      "description": "",
      "name": "AssetDoesNotExist"
    },
    {
      "code": "4050",
      "description": "One or more of the specified meta ids does not exist",
      "name": "MetaIdsDoesNotExistOnAsset"
    },
    {
      "code": "4051",
      "description": "",
      "name": "MediaFileTypeNameAlreadyInUse"
    },
    {
      "code": "4052",
      "description": "",
      "name": "MediaFileTypeDoesNotExist"
    },
    {
      "code": "4055",
      "description": "",
      "name": "CanNotRemoveBasicMetaIds"
    },
    {
      "code": "4049",
      "description": "",
      "name": "RatioAlreadyExist"
    },
    {
      "code": "4070",
      "description": "",
      "name": "RatioDoesNotExist"
    },
    {
      "code": "4066",
      "description": "",
      "name": "InvalidUrlForImage"
    },
    {
      "code": "4065",
      "description": "",
      "name": "MediaFileWithThisTypeAlreadyExistForAsset"
    },
    {
      "code": "4063",
      "description": "",
      "name": "DefaultCdnAdapterProfileNotConfigurd"
    },
    {
      "code": "4062",
      "description": "",
      "name": "CdnAdapterProfileDoesNotExist"
    },
    {
      "code": "4059",
      "description": "",
      "name": "InvalidRatioForImage"
    },
    {
      "code": "4058",
      "description": "",
      "name": "ExternaldAndAltExternalIdMustBeUnique"
    },
    {
      "code": "4057",
      "description": "",
      "name": "MediaFileAltExternalIdMustBeUnique"
    },
    {
      "code": "4056",
      "description": "",
      "name": "MediaFileExternalIdMustBeUnique"
    },
    {
      "code": "4054",
      "description": "",
      "name": "MediaFileNotBelongToAsset"
    },
    {
      "code": "4053",
      "description": "",
      "name": "MediaFileDoesNotExist"
    },
    {
      "code": "4048",
      "description": "",
      "name": "ImageDoesNotExist"
    },
    {
      "code": "4069",
      "description": "",
      "name": "DefaultImageInvalidImageType"
    },
    {
      "code": "4047",
      "description": "",
      "name": "ImageTypeDoesNotExist"
    },
    {
      "code": "4046",
      "description": "",
      "name": "ImageTypeAlreadyInUse"
    },
    {
      "code": "4045",
      "description": "",
      "name": "TagDoesNotExist"
    },
    {
      "code": "4044",
      "description": "",
      "name": "TagAlreadyInUse"
    },
    {
      "code": "4060",
      "description": "The channel system name is already in use",
      "name": "ChannelSystemNameAlreadyInUse"
    },
    {
      "code": "4064",
      "description": "",
      "name": "ChannelDoesNotExist"
    },
    {
      "code": "4061",
      "description": "",
      "name": "ChannelMetaOrderByIsInvalid"
    },
    {
      "code": "4074",
      "description": "",
      "name": "AccountIsNotOpcSupported"
    },
    {
      "code": "4072",
      "description": "",
      "name": "CanNotDeleteParentAssetStruct"
    },
    {
      "code": "4086",
      "description": "Invalid BulkUpload Structure",
      "name": "InvalidBulkUploadStructure"
    },
    {
      "code": "4082",
      "description": "BulkUpload Does Not Exist",
      "name": "BulkUploadDoesNotExist"
    },
    {
      "code": "4083",
      "description": "BulkUploadResult Is Missing",
      "name": "BulkUploadResultIsMissing"
    },
    {
      "code": "4087",
      "description": "Related entities exceed limitation",
      "name": "RelatedEntitiesExceedLimitation"
    },
    {
      "code": "4088",
      "description": "Account Epg Ingest Version does not support ingest using bulk upload",
      "name": "AccountEpgIngestVersionDoesNotSupportBulk"
    },
    {
      "code": "4090",
      "description": "can not delete object virtual asset meta",
      "name": "CanNotDeleteObjectVirtualAssetMeta"
    },
    {
      "code": "4091",
      "description": "The category you selected does not exist",
      "name": "CategoryNotExist"
    },
    {
      "code": "4092",
      "description": "Child category does not exist",
      "name": "ChildCategoryNotExist"
    },
    {
      "code": "4093",
      "description": "Child Category already belongs to another category",
      "name": "ChildCategoryAlreadyBelongsToAnotherCategory"
    },
    {
      "code": "4094",
      "description": "A child category cannot be the category itself",
      "name": "ChildCategoryCannotBeTheCategoryItself"
    },
    {
      "code": "4098",
      "description": "Invalid asset struct",
      "name": "InvalidAssetStruct"
    },
    {
      "code": "4099",
      "description": "User have not started watching this TV series",
      "name": "NoNextEpisode"
    },
    {
      "code": "4100",
      "description": "Cannot delete asset struct",
      "name": "CannotDeleteAssetStruct"
    },
    {
      "code": "4101",
      "description": "Category type does not exist",
      "name": "CategoryTypeNotExist"
    },
    {
      "code": "4102",
      "description": "ExtendedType value cannot be changed",
      "name": "ExtendedTypeValueCannotBeChanged"
    },
    {
      "code": "5078",
      "description": "The input format is invalid",
      "name": "InputFormatIsInvalid"
    },
    {
      "code": "5076",
      "description": "The channel already in region channels list",
      "name": "DuplicateRegionChannel"
    },
    {
      "code": "5077",
      "description": "Parent region already contains channel",
      "name": "ParentAlreadyContainsChannel"
    },
    {
      "code": "4111",
      "description": "",
      "name": "StartDateShouldBeLessThanEndDate"
    },
    {
      "code": "4112",
      "description": "",
      "name": "LabelAlreadyInUse"
    },
    {
      "code": "4113",
      "description": "",
      "name": "LabelDoesNotExist"
    },
    {
      "code": "4114",
      "description": "",
      "name": "PremiumServiceDoesNotExist"
    },
    {
      "code": "4115",
      "description": "",
      "name": "VideoCodecsDoesNotExist"
    },
    {
      "code": "4116",
      "description": "",
      "name": "AudioCodecsDoesNotExist"
    },
    {
      "code": "4117",
      "description": "",
      "name": "SearchPriorityGroupDoesNotExist"
    },
    {
      "code": "4120",
      "description": "",
      "name": "DynamicDataKeyDoesNotExist"
    },
    {
      "code": "4121",
      "description": "",
      "name": "DynamicDataKeyValueDoesNotExist"
    },
    {
      "code": "4122",
      "description": "",
      "name": "LiveAssetToProgramAssetMismatch"
    },
    {
      "code": "4123",
      "description": "",
      "name": "EpgStartDateToProgramAssetMismatch"
    },
    {
      "code": "4124",
      "description": "",
      "name": "EpgEndDateToProgramAssetMismatch"
    },
    {
      "code": "4125",
      "description": "",
      "name": "CridToProgramAssetMismatch"
    },
    {
      "code": "4126",
      "description": "",
      "name": "CannotImportRecordingWithinCatchUpBuffer"
    },
    {
      "code": "5001",
      "description": "No parental PIN was defined for this user/household",
      "name": "NoPinDefined"
    },
    {
      "code": "5002",
      "description": "The parental PIN provided doesn't match the user/household PIN",
      "name": "PinMismatch"
    },
    {
      "code": "5003",
      "description": "This rule doesn't exist in the system",
      "name": "RuleNotExists"
    },
    {
      "code": "5004",
      "description": "There's no OSS Adapater Profile to add to the system",
      "name": "NoOSSAdapterToInsert"
    },
    {
      "code": "5005",
      "description": "The mandatory name field is missing from the request",
      "name": "NameRequired"
    },
    {
      "code": "5006",
      "description": "The mandatory shared secret field is missing from the request",
      "name": "SharedSecretRequired"
    },
    {
      "code": "5007",
      "description": "The mandatory OSS adapter identifier field is missing from the request",
      "name": "OSSAdapterIdentifierRequired"
    },
    {
      "code": "5008",
      "description": "The requested OSS adapter doesn't exist",
      "name": "OSSAdapterNotExist"
    },
    {
      "code": "5009",
      "description": "The mandatory OSS adapter parameter fields are missing from the request",
      "name": "OSSAdapterParamsRequired"
    },
    {
      "code": "5010",
      "description": "The status of the OSS adapter is unknown",
      "name": "UnknownOSSAdapterState"
    },
    {
      "code": "5011",
      "description": "The action requested is not allowed",
      "name": "ActionIsNotAllowed"
    },
    {
      "code": "5012",
      "description": "There's no OSS adapter to update",
      "name": "NoOSSAdapterToUpdate"
    },
    {
      "code": "5013",
      "description": "The mandatory adapter URL field is missing from the request",
      "name": "AdapterUrlRequired"
    },
    {
      "code": "5014",
      "description": "The system has detected conflicts between parameters",
      "name": "ConflictedParams"
    },
    {
      "code": "5015",
      "description": "The specified purchase settings type is Invalid",
      "name": "PurchaseSettingsTypeInvalid"
    },
    {
      "code": "5016",
      "description": "The requested export task wasn't found",
      "name": "ExportTaskNotFound"
    },
    {
      "code": "5017",
      "description": "The mandatory export notification URL field is missing from the request",
      "name": "ExportNotificationUrlRequired"
    },
    {
      "code": "5018",
      "description": "The export frequency set is below the minimum allowed",
      "name": "ExportFrequencyMinValue"
    },
    {
      "code": "5019",
      "description": "Invalid entry: the alias value must be unique",
      "name": "AliasMustBeUnique"
    },
    {
      "code": "5020",
      "description": "The mandatory alias value field is missing from the request",
      "name": "AliasRequired"
    },
    {
      "code": "5021",
      "description": "There is no parental rule associated with this user",
      "name": "UserParentalRuleNotExists"
    },
    {
      "code": "5022",
      "description": "The system did not find any TimeShiftedTvPartner-related settings",
      "name": "TimeShiftedTvPartnerSettingsNotFound"
    },
    {
      "code": "5023",
      "description": "The TimeShiftedTvPartner settings specified are null",
      "name": "TimeShiftedTvPartnerSettingsNotSent"
    },
    {
      "code": "5024",
      "description": "You've configured a negative buffer value in the TimeShiftedTvPartnerr settings",
      "name": "TimeShiftedTvPartnerSettingsNegativeBufferSent"
    },
    {
      "code": "5025",
      "description": "The system didn't find any CDN partner -related settings for the group account",
      "name": "CDNPartnerSettingsNotFound"
    },
    {
      "code": "5028",
      "description": "Permission Name Not Exists",
      "name": "PermissionNameNotExists"
    },
    {
      "code": "5030",
      "description": "Asset rule doesn't exist",
      "name": "AssetRuleNotExists"
    },
    {
      "code": "5031",
      "description": "Asset user rule does not exist",
      "name": "AssetUserRuleDoesNotExists"
    },
    {
      "code": "5032",
      "description": "User already attached to this AssetUserRule",
      "name": "UserAlreadyAttachedToAssetUserRule"
    },
    {
      "code": "5033",
      "description": "AssetUserRule operations are disabled for this partner",
      "name": "AssetUserRulesOperationsDisable"
    },
    {
      "code": "5038",
      "description": "Role Does Not Exists",
      "name": "RoleDoesNotExists"
    },
    {
      "code": "5096",
      "description": "Embedded permission role modification is not allowed",
      "name": "EmbeddedPermissionRoleModificationNotAllowed"
    },
    {
      "code": "5098",
      "description": "Personalized recording is disabled",
      "name": "PersonalizedRecordingDisabled"
    },
    {
      "code": "5040",
      "description": "The file does not exist in a given path",
      "name": "FileDoesNotExists"
    },
    {
      "code": "5041",
      "description": "The file already exists in a given path",
      "name": "FileAlreadyExists"
    },
    {
      "code": "5042",
      "description": "Error occurred while saving file to File Server",
      "name": "ErrorSavingFile"
    },
    {
      "code": "5043",
      "description": "The file ID is not the correct length",
      "name": "FileIdNotInCorrectLength"
    },
    {
      "code": "5045",
      "description": "The Excel is formatted incorrectly. Please check the file for format errors",
      "name": "IllegalExcelFile"
    },
    {
      "code": "5044",
      "description": "Enqueue object to Celery queue failed",
      "name": "EnqueueFailed"
    },
    {
      "code": "5046",
      "description": "One of the mandatory values in the excel is missing",
      "name": "ExcelMandatoryValueIsMissing"
    },
    {
      "code": "5061",
      "description": "Cannot update or delete asset rule when in progress",
      "name": "AssetRuleStatusNotWritable"
    },
    {
      "code": "5062",
      "description": "Permission not found",
      "name": "PermissionNotFound"
    },
    {
      "code": "5063",
      "description": "Permission name already in use",
      "name": "PermissionNameAlreadyInUse"
    },
    {
      "code": "5064",
      "description": "event notification id is missing",
      "name": "EventNotificationIdIsMissing"
    },
    {
      "code": "5065",
      "description": "Event notification id not found",
      "name": "EventNotificationIdNotFound"
    },
    {
      "code": "5066",
      "description": "Region was not found",
      "name": "RegionNotFound"
    },
    {
      "code": "5067",
      "description": "Region cannot be parent",
      "name": "RegionCannotBeParent"
    },
    {
      "code": "5068",
      "description": "Default region cannot be deleted",
      "name": "DefaultRegionCannotBeDeleted"
    },
    {
      "code": "5069",
      "description": "Region in use by household and cannot be deleted",
      "name": "CannotDeleteRegionInUse"
    },
    {
      "code": "4095",
      "description": "File Exceeded Max Size",
      "name": "FileExceededMaxSize"
    },
    {
      "code": "4096",
      "description": "File Extension Not Supported",
      "name": "FileExtensionNotSupported"
    },
    {
      "code": "4097",
      "description": "File Mime Different Than Expected",
      "name": "FileMimeDifferentThanExpected"
    },
    {
      "code": "5071",
      "description": "Permission item cannot be found",
      "name": "PermissionItemNotFound"
    },
    {
      "code": "5072",
      "description": "Permission is readonly and cannot be updated",
      "name": "PermissionReadOnly"
    },
    {
      "code": "5073",
      "description": "Permission item is not associated with permission",
      "name": "PermissionPermissionItemNotFound"
    },
    {
      "code": "5074",
      "description": "Permission item is already associated with permission",
      "name": "PermissionPermissionItemAlreadyExists"
    },
    {
      "code": "5075",
      "description": "Role is readonly and cannot be updated",
      "name": "RoleReadOnly"
    },
    {
      "code": "5079",
      "description": "Only permission type NORMAL can be modified",
      "name": "CanModifyOnlyNormalPermission"
    },
    {
      "code": "5080",
      "description": "Permission type GROUP cannot be added",
      "name": "CannotAddPermissionTypeGroup"
    },
    {
      "code": "5081",
      "description": "",
      "name": "DeviceBrandIdsDoesNotExist"
    },
    {
      "code": "5082",
      "description": "",
      "name": "SegmentsIdsDoesNotExist"
    },
    {
      "code": "5083",
      "description": "",
      "name": "DeviceManufacturerIdsDoesNotExist"
    },
    {
      "code": "5084",
      "description": "",
      "name": "UserSessionProfileDoesNotExist"
    },
    {
      "code": "5085",
      "description": "",
      "name": "CannotDeleteUserSessionProfile"
    },
    {
      "code": "5086",
      "description": "",
      "name": "DeviceFamilyIdAlreadyInUse"
    },
    {
      "code": "5087",
      "description": "",
      "name": "DeviceFamilyDoesNotExist"
    },
    {
      "code": "5088",
      "description": "",
      "name": "DeviceBrandIdAlreadyInUse"
    },
    {
      "code": "5089",
      "description": "",
      "name": "DeviceBrandDoesNotExist"
    },
    {
      "code": "5090",
      "description": "",
      "name": "CannotDeleteAttachedSegment"
    },
    {
      "code": "5091",
      "description": "",
      "name": "DynamicSegmentsExceeded"
    },
    {
      "code": "5092",
      "description": "",
      "name": "DynamicSegmentPeriodExceeded"
    },
    {
      "code": "5093",
      "description": "",
      "name": "DynamicSegmentConditionsExceeded"
    },
    {
      "code": "5094",
      "description": "",
      "name": "NameMustBeUnique"
    },
    {
      "code": "5095",
      "description": "",
      "name": "EntityIsNotAssociatedWithShop"
    },
    {
      "code": "5097",
      "description": "Region has sub-region in use by household and cannot be deleted",
      "name": "CannotDeleteSubRegionInUse"
    },
    {
      "code": "6000",
      "description": "The price shown for the item in the request is not the actual price.",
      "name": "IncorrectPrice"
    },
    {
      "code": "6001",
      "description": "This PPVModule does not belong to the item.",
      "name": "UnKnownPPVModule"
    },
    {
      "code": "6002",
      "description": "The specified credit card has expired.",
      "name": "ExpiredCard"
    },
    {
      "code": "6003",
      "description": "Cellular Permissions Error",
      "name": "CellularPermissionsError"
    },
    {
      "code": "6004",
      "description": "The billing provider specified is not a recognized provider.",
      "name": "UnKnownBillingProvider"
    },
    {
      "code": "6005",
      "description": "The mandatory Payment Gateway ID field is missing from the request.",
      "name": "PaymentGatewayIdRequired"
    },
    {
      "code": "6006",
      "description": "The mandatory Payment Gateway settings field is missing from the request.",
      "name": "PaymentGatewayParamsRequired"
    },
    {
      "code": "6007",
      "description": "There's no Payment Gateway set up for this household.",
      "name": "PaymentGatewayNotSetForHousehold"
    },
    {
      "code": "6008",
      "description": "The requested Payment Gateway doesn't exist.",
      "name": "PaymentGatewayNotExist"
    },
    {
      "code": "6009",
      "description": "The mandatory Payment Gateway charge ID field is missing from the request.",
      "name": "PaymentGatewayChargeIdRequired"
    },
    {
      "code": "6011",
      "description": "The configuration for the credit card clearing has not been set.",
      "name": "NoConfigurationFound"
    },
    {
      "code": "6012",
      "description": "The adapter failed to complete the request.",
      "name": "AdapterAppFailure"
    },
    {
      "code": "6013",
      "description": "The signature provide doesn't match the signature on record.",
      "name": "SignatureMismatch"
    },
    {
      "code": "6014",
      "description": "An error occurred while trying to save the Payment Gateway transaction.",
      "name": "ErrorSavingPaymentGatewayTransaction"
    },
    {
      "code": "6015",
      "description": "An error occurred while trying to save the pending Payment Gateway",
      "name": "ErrorSavingPaymentGatewayPending"
    },
    {
      "code": "6016",
      "description": "The mandatory external identifier field is missing from the request.",
      "name": "ExternalIdentifierRequired"
    },
    {
      "code": "6017",
      "description": "An error occurred while trying to set a Payment Gateway for this household.",
      "name": "ErrorSavingPaymentGatewayHousehold"
    },
    {
      "code": "6018",
      "description": "No Payment Gateway specified in the request.",
      "name": "NoPaymentGateway"
    },
    {
      "code": "6020",
      "description": "The mandatory Payment Gateway name field is missing from the request.",
      "name": "PaymentGatewayNameRequired"
    },
    {
      "code": "6021",
      "description": "The mandatory Payment Gateway shared secret field is missing from the request.",
      "name": "PaymentGatewaySharedSecretRequired"
    },
    {
      "code": "6024",
      "description": "The household is already set to a Payment Gateway.",
      "name": "HouseholdAlreadySetToPaymentGateway"
    },
    {
      "code": "6025",
      "description": "The charge ID was already set for the household Payment Gateway.",
      "name": "ChargeIdAlreadySetToHouseholdPaymentGateway"
    },
    {
      "code": "6026",
      "description": "There's no charge ID set for this household.",
      "name": "ChargeIdNotSetToHousehold"
    },
    {
      "code": "6027",
      "description": "There's no Payment Gateway set for this household.",
      "name": "HouseholdNotSetToPaymentGateway"
    },
    {
      "code": "6028",
      "description": "The multiple Payment Gateway selection feature is disabled.",
      "name": "PaymentGatewaySelectionIsDisabled"
    },
    {
      "code": "6030",
      "description": "The Payment Gateway failed to respond to the request because of a problem with the Payment Gateway adapter.",
      "name": "NoResponseFromPaymentGateway"
    },
    {
      "code": "6031",
      "description": "The account specified is invalid: there is a problem with the Payment Gateway adapter.",
      "name": "InvalidAccount"
    },
    {
      "code": "6032",
      "description": "The payment method selected doesn't have sufficient funds for the transaction requested.",
      "name": "InsufficientFunds"
    },
    {
      "code": "6033",
      "description": "An unknown error occurred with the Payment Gateway adapter.",
      "name": "UnknownPaymentGatewayResponse"
    },
    {
      "code": "6034",
      "description": "",
      "name": "PaymentGatewayAdapterUserKnown"
    },
    {
      "code": "6035",
      "description": "",
      "name": "PaymentGatewayAdapterReasonUnknown"
    },
    {
      "code": "6036",
      "description": "The payment method signatures don't match.",
      "name": "SignatureDoesNotMatch"
    },
    {
      "code": "6037",
      "description": "An error occurred when updating the pending transaction.",
      "name": "ErrorUpdatingPendingTransaction"
    },
    {
      "code": "6038",
      "description": "The requested Payment Gateway transaction was not found.",
      "name": "PaymentGatewayTransactionNotFound"
    },
    {
      "code": "6039",
      "description": "This transaction isn't in a Pending state.",
      "name": "PaymentGatewayTransactionIsNotPending"
    },
    {
      "code": "6040",
      "description": "External identifier must be unique.",
      "name": "ExternalIdentifierMustBeUnique"
    },
    {
      "code": "6041",
      "description": "Unable to complete the request: there's no new Payment Gateway to insert.",
      "name": "NoPaymentGatewayToInsert"
    },
    {
      "code": "6042",
      "description": "The transaction's state is currently unknown.",
      "name": "UnknownTransactionState"
    },
    {
      "code": "6043",
      "description": "The specified Payment Gateway is not valid.",
      "name": "PaymentGatewayNotValid"
    },
    {
      "code": "6044",
      "description": "The mandatory household field is missing from the request.",
      "name": "HouseholdRequired"
    },
    {
      "code": "6045",
      "description": "The Payment Gateway adapter failed for an unknown reason.",
      "name": "PaymentGatewayAdapterFailReasonUnknown"
    },
    {
      "code": "6046",
      "description": "The partner configuration pair (type and configuration value) you've asked to update is an empty pair.",
      "name": "NoPartnerConfigurationToUpdate"
    },
    {
      "code": "6047",
      "description": "The configuration value being updated is empty.",
      "name": "NoConfigurationValueToUpdate"
    },
    {
      "code": "6048",
      "description": "No payment method was set for this household.",
      "name": "PaymentMethodNotSetForHousehold"
    },
    {
      "code": "6049",
      "description": "The selected payment method doesn't exist.",
      "name": "PaymentMethodNotExist"
    },
    {
      "code": "6050",
      "description": "The mandatory payment method ID field is missing from the request.",
      "name": "PaymentMethodIdRequired"
    },
    {
      "code": "6057",
      "description": "The mandatory payment method external ID field is missing from the request.",
      "name": "PaymentMethodExternalIdRequired"
    },
    {
      "code": "6058",
      "description": "An error occurred while trying to save the payment method of the household  Payment Gateway. Please try again.",
      "name": "ErrorSavingPaymentGatewayHouseholdPaymentMethod"
    },
    {
      "code": "6054",
      "description": "A payment method was already set for the household Payment Gateway.",
      "name": "PaymentMethodAlreadySetToHouseholdPaymentGateway"
    },
    {
      "code": "6055",
      "description": "The mandatory payment method name field is missing in the request.",
      "name": "PaymentMethodNameRequired"
    },
    {
      "code": "6056",
      "description": "The Payment Gateway doesn't support this payment method.",
      "name": "PaymentGatewayNotSupportPaymentMethod"
    },
    {
      "code": "6051",
      "description": "Payment gateway suspended to this householdId.",
      "name": "PaymentGatewaySuspended"
    },
    {
      "code": "7000",
      "description": "A conflict has occurred.",
      "name": "Conflict"
    },
    {
      "code": "7001",
      "description": "Minimum friends limitation",
      "name": "MinFriendsLimitation"
    },
    {
      "code": "7010",
      "description": "Invalid Parameters",
      "name": "InvalidParameters"
    },
    {
      "code": "8000",
      "description": "The updated or new notification settings weren't received by the Web service because of an internal error.",
      "name": "NoNotificationSettingsSent"
    },
    {
      "code": "8001",
      "description": "Push notifications are disabled.",
      "name": "PushNotificationFalse"
    },
    {
      "code": "8002",
      "description": "The updated or new partner notification settings weren't received by the Web service because of an internal error.",
      "name": "NoNotificationPartnerSettings"
    },
    {
      "code": "8003",
      "description": "The updated or new notification settings weren't received by the Web service because of an internal error.",
      "name": "NoNotificationSettings"
    },
    {
      "code": "8004",
      "description": "The mandatory message field in the announcement message Is empty.",
      "name": "AnnouncementMessageIsEmpty"
    },
    {
      "code": "8005",
      "description": "The announcement start time is invalid. Please check and try again.",
      "name": "AnnouncementInvalidStartTime"
    },
    {
      "code": "8006",
      "description": "The announcement requested couldn't be found.",
      "name": "AnnouncementNotFound"
    },
    {
      "code": "8007",
      "description": "Unable to update the announcement; the announcement was already sent.",
      "name": "AnnouncementUpdateNotAllowed"
    },
    {
      "code": "8008",
      "description": "The announcement time zone is invalid (for example 'UTC' or 'Pacific Standard Time').",
      "name": "AnnouncementInvalidTimezone"
    },
    {
      "code": "8009",
      "description": "This feature is disabled.",
      "name": "FeatureDisabled"
    },
    {
      "code": "8010",
      "description": "The announcement message exceeds the permitted message length.",
      "name": "AnnouncementMessageTooLong"
    },
    {
      "code": "8011",
      "description": "An error occurred while creating the announcement.",
      "name": "FailCreateAnnouncement"
    },
    {
      "code": "8012",
      "description": "The user is not following this series.",
      "name": "UserNotFollowing"
    },
    {
      "code": "8013",
      "description": "The user is already following the requested series.",
      "name": "UserAlreadyFollowing"
    },
    {
      "code": "8014",
      "description": "The message placeholder is invalid.",
      "name": "MessagePlaceholdersInvalid"
    },
    {
      "code": "8015",
      "description": "The message date-time format Is Invalid.",
      "name": "DatetimeFormatIsInvalid"
    },
    {
      "code": "8016",
      "description": "Unable to find the message template.",
      "name": "MessageTemplateNotFound"
    },
    {
      "code": "8017",
      "description": "The URL placeholder specified is invalid.",
      "name": "URLPlaceholdersInvalid"
    },
    {
      "code": "8018",
      "description": "Invalid message TTL",
      "name": "InvalidMessageTTL"
    },
    {
      "code": "8019",
      "description": "The mandatory message ID field is missing in the request.",
      "name": "MessageIdentifierRequired"
    },
    {
      "code": "8020",
      "description": "Requested inbox message was not found.",
      "name": "UserInboxMessagesNotExist"
    },
    {
      "code": "8041",
      "description": "Fail to create topic notification",
      "name": "FailCreateTopicNotification"
    },
    {
      "code": "8042",
      "description": "The topic notification requested couldn't be found.",
      "name": "TopicNotificationNotFound"
    },
    {
      "code": "8043",
      "description": "The topic notification requested couldn't be found.",
      "name": "TopicNotificationMessageNotFound"
    },
    {
      "code": "8044",
      "description": "Wrong Topic Notification Identifier",
      "name": "WrongTopicNotification"
    },
    {
      "code": "8045",
      "description": "Wrong Topic Notification trigger",
      "name": "WrongTopicNotificationTrigger"
    },
    {
      "code": "9000",
      "description": "Invalid price code: The price code entered doesn't exist for this account",
      "name": "InvalidPriceCode"
    },
    {
      "code": "9001",
      "description": "The value specified, such as FullLifeCycle/ ViewLifeCycle, is invalid",
      "name": "InvalidValue"
    },
    {
      "code": "9002",
      "description": "Invalid discount code: The discount code entered doesn't exist for this account",
      "name": "InvalidDiscountCode"
    },
    {
      "code": "9003",
      "description": "Invalid price plan: The price plan entered isn't in use with this account",
      "name": "InvalidPricePlan"
    },
    {
      "code": "9004",
      "description": "The billing code entered must be unique",
      "name": "CodeMustBeUnique"
    },
    {
      "code": "9005",
      "description": "The billing code entered doesn't exist",
      "name": "CodeNotExist"
    },
    {
      "code": "9006",
      "description": "The code entered is invalid",
      "name": "InvalidCodeNotExist"
    },
    {
      "code": "9008",
      "description": "Invalid channel: This channel doesn't exist in this account",
      "name": "InvalidChannels"
    },
    {
      "code": "9009",
      "description": "Invalid file type: This file type doesn't exist for this account",
      "name": "InvalidFileTypes"
    },
    {
      "code": "9010",
      "description": "Invalid preview module: The preview module doesn't exist in this account",
      "name": "InvalidPreviewModule"
    },
    {
      "code": "9011",
      "description": "Mandatory fields in a request must be completed",
      "name": "MandatoryField"
    },
    {
      "code": "9012",
      "description": "",
      "name": "UniqueFiled"
    },
    {
      "code": "9013",
      "description": "The usage module specified related to PPV doesn't exist in this account",
      "name": "InvalidUsageModule"
    },
    {
      "code": "9014",
      "description": "Invalid coupon group: The coupon group specified doesn't exist in this account",
      "name": "InvalidCouponGroup"
    },
    {
      "code": "9015",
      "description": "Invalid currency: The currency specified is not configured for this account",
      "name": "InvalidCurrency"
    },
    {
      "code": "9016",
      "description": "The PPV module doesn't exist in the database",
      "name": "ModuleNotExists"
    },
    {
      "code": "9017",
      "description": "The price plan doesn't exist in the database",
      "name": "PricePlanDoesNotExist"
    },
    {
      "code": "9018",
      "description": "The price details doesn't exist in the database",
      "name": "PriceDetailsDoesNotExist"
    },
    {
      "code": "9023",
      "description": "Coupon code is missing",
      "name": "CouponCodeIsMissing"
    },
    {
      "code": "9024",
      "description": "Coupon code already loaded",
      "name": "CouponCodeAlreadyLoaded"
    },
    {
      "code": "9025",
      "description": "The coupon code is not in household",
      "name": "CouponCodeNotInHousehold"
    },
    {
      "code": "9026",
      "description": "Exceeded household coupon limit",
      "name": "ExceededHouseholdCouponLimit"
    },
    {
      "code": "10000",
      "description": "The adapter you're trying to connect doesn't exist",
      "name": "AdapterNotExists"
    },
    {
      "code": "10001",
      "description": "The mandatory adapter ID field is missing from the request",
      "name": "AdapterIdentifierRequired"
    },
    {
      "code": "10002",
      "description": "",
      "name": "AdapterIsRequired"
    },
    {
      "code": "10003",
      "description": "",
      "name": "NoAdapterToInsert"
    },
    {
      "code": "10004",
      "description": "",
      "name": "CanNotDeleteDefaultAdapter"
    },
    {
      "code": "11000",
      "description": "The XML is formatted incorrectly. Please check the file for format errors",
      "name": "IllegalXml"
    },
    {
      "code": "11001",
      "description": "The external ID is missing",
      "name": "MissingExternalIdentifier"
    },
    {
      "code": "11002",
      "description": "The Ingest type is not known",
      "name": "UnknownIngestType"
    },
    {
      "code": "11003",
      "description": "The EPG program dates specified are incorrectly formatted",
      "name": "EPGSProgramDatesError"
    },
    {
      "code": "5048",
      "description": "",
      "name": "IngestProfileNotExists"
    },
    {
      "code": "5060",
      "description": "",
      "name": "IngestProfileIdRequired"
    },
    {
      "code": "5049",
      "description": "",
      "name": "NoIngestProfileToInsert"
    },
    {
      "code": "11004",
      "description": "The EPG program does not have the required language or the required default language as a fallback option",
      "name": "EPGLanguageNotFound"
    },
    {
      "code": "11005",
      "description": "",
      "name": "EPGProgramOverlapFixed"
    },
    {
      "code": "1035",
      "description": "",
      "name": "DlmExist"
    },
    {
      "code": "1036",
      "description": "",
      "name": "MasterUserNotFound"
    },
    {
      "code": "1038",
      "description": "",
      "name": "PasswordPolicyDoesNotExist"
    },
    {
      "code": "1039",
      "description": "",
      "name": "PasswordPolicyViolation"
    },
    {
      "code": "1040",
      "description": "",
      "name": "PasswordExpired"
    },
    {
      "code": "1041",
      "description": "",
      "name": "PasswordCannotBeReused"
    },
    {
      "code": "1042",
      "description": "",
      "name": "InvalidPasswordComplexity"
    },
    {
      "code": "1043",
      "description": "",
      "name": "InternalConnectionIssue"
    },
    {
      "code": "2002",
      "description": "",
      "name": "GenerateNewLoginPIN"
    },
    {
      "code": "2020",
      "description": "",
      "name": "NotActivated"
    },
    {
      "code": "2033",
      "description": "",
      "name": "UserInterestNotExist"
    },
    {
      "code": "2034",
      "description": "",
      "name": "UserInterestAlreadyExist"
    },
    {
      "code": "2035",
      "description": "",
      "name": "NoUserInterestToInsert"
    },
    {
      "code": "2036",
      "description": "",
      "name": "MetaIdRequired"
    },
    {
      "code": "2037",
      "description": "",
      "name": "MetaValueRequired"
    },
    {
      "code": "2038",
      "description": "",
      "name": "TopicNotFound"
    },
    {
      "code": "2039",
      "description": "",
      "name": "ParentDuplicateAssociation"
    },
    {
      "code": "2040",
      "description": "",
      "name": "MetaNotAUserinterest"
    },
    {
      "code": "2042",
      "description": "",
      "name": "ParentIdNotAUserInterest"
    },
    {
      "code": "2043",
      "description": "",
      "name": "ParentAssetTypeDiffrentFromMeta"
    },
    {
      "code": "2044",
      "description": "",
      "name": "MetaNotFound"
    },
    {
      "code": "2045",
      "description": "",
      "name": "MetaNotBelongtoPartner"
    },
    {
      "code": "2046",
      "description": "",
      "name": "WrongMetaName"
    },
    {
      "code": "2048",
      "description": "",
      "name": "ParentParnerDiffrentFromMetaPartner"
    },
    {
      "code": "2049",
      "description": "",
      "name": "PartnerTopicInterestIsMissing"
    },
    {
      "code": "2050",
      "description": "",
      "name": "ParentTopicIsRequired"
    },
    {
      "code": "2051",
      "description": "",
      "name": "ParentTopicShouldNotHaveValue"
    },
    {
      "code": "2052",
      "description": "",
      "name": "ParentTopicMetaIdNotEqualToMetaParentMetaID"
    },
    {
      "code": "2053",
      "description": "",
      "name": "ParentTopicValueIsMissing"
    },
    {
      "code": "2056",
      "description": "",
      "name": "SSOAdapterNotExist"
    },
    {
      "code": "2057",
      "description": "",
      "name": "NoSSOAdapaterToInsert"
    },
    {
      "code": "2058",
      "description": "",
      "name": "SSOAdapterIdRequired"
    },
    {
      "code": "3053",
      "description": "",
      "name": "ServiceAlreadyExists"
    },
    {
      "code": "3054",
      "description": "",
      "name": "NoFilesFound"
    },
    {
      "code": "3055",
      "description": "",
      "name": "CompensationAlreadyExists"
    },
    {
      "code": "3056",
      "description": "",
      "name": "CompensationNotFound"
    },
    {
      "code": "3057",
      "description": "",
      "name": "CouponPromotionDateExpired"
    },
    {
      "code": "3058",
      "description": "",
      "name": "CouponPromotionDateNotStarted"
    },
    {
      "code": "3059",
      "description": "",
      "name": "SubscriptionAlreadyBelongsToAnotherSubscriptionSet"
    },
    {
      "code": "3062",
      "description": "",
      "name": "CanOnlyUpgradeOrDowngradeRecurringSubscriptionInTheSameSubscriptionSet"
    },
    {
      "code": "3063",
      "description": "",
      "name": "CanOnlyUpgradeSubscriptionWithHigherPriority"
    },
    {
      "code": "3064",
      "description": "",
      "name": "CanOnlyDowngradeSubscriptionWithLowerPriority"
    },
    {
      "code": "3065",
      "description": "",
      "name": "CanOnlyUpgradeOrDowngradeSubscriptionOnce"
    },
    {
      "code": "3066",
      "description": "",
      "name": "CanOnlyUpgradeSubscriptionWithTheSameCurrencyAsCurrentSubscription"
    },
    {
      "code": "3067",
      "description": "",
      "name": "ScheduledSubscriptionNotFound"
    },
    {
      "code": "3068",
      "description": "",
      "name": "CanNotCancelSubscriptionWhileDowngradeIsPending"
    },
    {
      "code": "3069",
      "description": "",
      "name": "CanNotCancelSubscriptionRenewalWhileDowngradeIsPending"
    },
    {
      "code": "3072",
      "description": "",
      "name": "BaseSubscriptionAlreadyBelongsToAnotherSubscriptionSet"
    },
    {
      "code": "3073",
      "description": "",
      "name": "WrongSubscriptionType"
    },
    {
      "code": "3075",
      "description": "",
      "name": "InvalidProductType"
    },
    {
      "code": "3080",
      "description": "",
      "name": "NetworkRuleBlock"
    },
    {
      "code": "3086",
      "description": "",
      "name": "RecordingIdsExceededLimit"
    },
    {
      "code": "4067",
      "description": "",
      "name": "ElasticSearchReturnedDeleteItem"
    },
    {
      "code": "4068",
      "description": "",
      "name": "ElasticSearchReturnedUnupdatedItem"
    },
    {
      "code": "4071",
      "description": "",
      "name": "MissingBasicValueForAsset"
    },
    {
      "code": "4073",
      "description": "",
      "name": "CanNotDeleteConnectingAssetStructMeta"
    },
    {
      "code": "4075",
      "description": "",
      "name": "NoParentAssociatedToTopic"
    },
    {
      "code": "4076",
      "description": "",
      "name": "WrongParentAssociation"
    },
    {
      "code": "4077",
      "description": "",
      "name": "MetaDoesNotBelongToParentAssetStruct"
    },
    {
      "code": "4079",
      "description": "",
      "name": "MetaIdsDuplication"
    },
    {
      "code": "4118",
      "description": "",
      "name": "CanNotRemoveMetaIdsForLiveToVod"
    },
    {
      "code": "4119",
      "description": "",
      "name": "L2VMetadataClassifierIsNotValid"
    },
    {
      "code": "4080",
      "description": "",
      "name": "AssetFilePPVNotExist"
    },
    {
      "code": "4081",
      "description": "",
      "name": "GroupDoesNotContainCurrency"
    },
    {
      "code": "4084",
      "description": "",
      "name": "NoValuesToUpdate"
    },
    {
      "code": "4089",
      "description": "",
      "name": "ImageUrlRequired"
    },
    {
      "code": "4103",
      "description": "",
      "name": "CategoryVersionDoesNotExist"
    },
    {
      "code": "4104",
      "description": "",
      "name": "CategoryVersionIsNotDraft"
    },
    {
      "code": "4105",
      "description": "",
      "name": "CategoryIsAlreadyAssociatedToVersion"
    },
    {
      "code": "4106",
      "description": "",
      "name": "CategoryIsNotRoot"
    },
    {
      "code": "4107",
      "description": "",
      "name": "CategoryTreeDoesNotExist"
    },
    {
      "code": "4108",
      "description": "",
      "name": "CategoryItemIsRoot"
    },
    {
      "code": "4109",
      "description": "",
      "name": "CategoryVersionIsOlderThanDefault"
    },
    {
      "code": "4110",
      "description": "",
      "name": "CategoryIsAlreadyAssociatedToVersionTree"
    },
    {
      "code": "5026",
      "description": "",
      "name": "NoMetaToUpdate"
    },
    {
      "code": "5027",
      "description": "",
      "name": "NotaTopicInterestMeta"
    },
    {
      "code": "5029",
      "description": "",
      "name": "RoleAlreadyExists"
    },
    {
      "code": "5034",
      "description": "",
      "name": "NonExistingDeviceFamilyIds"
    },
    {
      "code": "5035",
      "description": "",
      "name": "ParentalRuleNameAlreadyInUse"
    },
    {
      "code": "5036",
      "description": "",
      "name": "ParentalRuleDoesNotExist"
    },
    {
      "code": "5037",
      "description": "",
      "name": "CanNotDeleteDefaultParentalRule"
    },
    {
      "code": "5039",
      "description": "",
      "name": "InvalidLanguage"
    },
    {
      "code": "5070",
      "description": "",
      "name": "PartnerConfigurationDoesNotExist"
    },
    {
      "code": "6052",
      "description": "",
      "name": "PaymentGatewayExternalVerification"
    },
    {
      "code": "7002",
      "description": "",
      "name": "NoUserSocialSettingsFound"
    },
    {
      "code": "7003",
      "description": "",
      "name": "AssetAlreadyLiked"
    },
    {
      "code": "7004",
      "description": "",
      "name": "SocialActionPrivacyDontAllow"
    },
    {
      "code": "7005",
      "description": "",
      "name": "EmptyFacebookObjectId"
    },
    {
      "code": "7006",
      "description": "",
      "name": "UnknownAction"
    },
    {
      "code": "7007",
      "description": "",
      "name": "InvalidAccessToken"
    },
    {
      "code": "7008",
      "description": "",
      "name": "InvalidPlatformRequest"
    },
    {
      "code": "7009",
      "description": "",
      "name": "AssetDoseNotExists"
    },
    {
      "code": "7011",
      "description": "",
      "name": "UserDoseNotExists"
    },
    {
      "code": "7012",
      "description": "",
      "name": "NoFacebookAction"
    },
    {
      "code": "7013",
      "description": "Action not allowed due to roleId [@roleId@]",
      "name": "NotAllowed"
    },
    {
      "code": "7014",
      "description": "",
      "name": "AssetAlreadyRated"
    },
    {
      "code": "7015",
      "description": "",
      "name": "AssetNeverLiked"
    },
    {
      "code": "7016",
      "description": "",
      "name": "SocialActionIdDoseNotExists"
    },
    {
      "code": "7017",
      "description": "",
      "name": "UserEmailIsMissing"
    },
    {
      "code": "8021",
      "description": "",
      "name": "InvalidReminderPrePaddingSec"
    },
    {
      "code": "8022",
      "description": "",
      "name": "ReminderNotFound"
    },
    {
      "code": "8023",
      "description": "",
      "name": "UserAlreadySetReminder"
    },
    {
      "code": "8024",
      "description": "",
      "name": "PassedAsset"
    },
    {
      "code": "8025",
      "description": "",
      "name": "EngagementAdapterIdentifierRequired"
    },
    {
      "code": "8026",
      "description": "",
      "name": "EngagementAdapterNotExist"
    },
    {
      "code": "8027",
      "description": "",
      "name": "EngagementAdapterParamsRequired"
    },
    {
      "code": "8028",
      "description": "",
      "name": "NoEngagementAdapterToInsert"
    },
    {
      "code": "8029",
      "description": "",
      "name": "NoEngagementAdapterToUpdate"
    },
    {
      "code": "8030",
      "description": "",
      "name": "NoEngagementToInsert"
    },
    {
      "code": "8031",
      "description": "",
      "name": "EngagementRequired"
    },
    {
      "code": "8032",
      "description": "",
      "name": "EngagementNotExist"
    },
    {
      "code": "8033",
      "description": "",
      "name": "ProviderUrlRequired"
    },
    {
      "code": "8034",
      "description": "",
      "name": "EngagementTimeDifference"
    },
    {
      "code": "8035",
      "description": "",
      "name": "EngagementIllegalSendTime"
    },
    {
      "code": "8036",
      "description": "",
      "name": "FutureScheduledEngagementDetected"
    },
    {
      "code": "8037",
      "description": "",
      "name": "EngagementTemplateNotFound"
    },
    {
      "code": "8038",
      "description": "",
      "name": "EngagementScheduleWithoutAdapter"
    },
    {
      "code": "8039",
      "description": "",
      "name": "MailNotificationAdapterNotExist"
    },
    {
      "code": "8040",
      "description": "",
      "name": "InvalidToken"
    },
    {
      "code": "8046",
      "description": "",
      "name": "InvalidNotificationSettingsSetup"
    },
    {
      "code": "9019",
      "description": "",
      "name": "CouponCodeAlreadyExists"
    },
    {
      "code": "9020",
      "description": "",
      "name": "CouponGroupNotExist"
    },
    {
      "code": "9021",
      "description": "",
      "name": "CouponCodeNotInTheRightLength"
    },
    {
      "code": "9022",
      "description": "",
      "name": "DiscountCodeNotExist"
    },
    {
      "code": "9027",
      "description": "",
      "name": "CampaignDoesNotExist"
    },
    {
      "code": "9028",
      "description": "",
      "name": "ExceededMaxCapacity"
    },
    {
      "code": "9029",
      "description": "",
      "name": "CanDeleteOnlyInactiveCampaign"
    },
    {
      "code": "9030",
      "description": "",
      "name": "DynamicListDoesNotExist"
    },
    {
      "code": "9031",
      "description": "",
      "name": "ExceededMaxLength"
    },
    {
      "code": "9032",
      "description": "",
      "name": "PriceIsMissing"
    },
    {
      "code": "9033",
      "description": "",
      "name": "AmountIsMissing"
    },
    {
      "code": "9034",
      "description": "",
      "name": "CurrencyIsMissing"
    },
    {
      "code": "9035",
      "description": "",
      "name": "PriceCodeDoesNotExist"
    },
    {
      "code": "9036",
      "description": "",
      "name": "UsageModuleDoesNotExist"
    },
    {
      "code": "9037",
      "description": "",
      "name": "DrmAdapterNotExist"
    },
    {
      "code": "9038",
      "description": "",
      "name": "PreviewModuleNotExist"
    },
    {
      "code": "9039",
      "description": "The collection does not exist",
      "name": "CollectionNotExist"
    },
    {
      "code": "9040",
      "description": "",
      "name": "PartnerDoesNotExist"
    },
    {
      "code": "9041",
      "description": "",
      "name": "PpvModuleNotExist"
    },
    {
      "code": "9042",
      "description": "",
      "name": "UsageModuleExistInPpv"
    },
    {
      "code": "12000",
      "description": "",
      "name": "Forbidden"
    },
    {
      "code": "12001",
      "description": "",
      "name": "IllegalQueryParams"
    },
    {
      "code": "12002",
      "description": "",
      "name": "IllegalPostData"
    },
    {
      "code": "12003",
      "description": "",
      "name": "NotExist"
    },
    {
      "code": "12004",
      "description": "",
      "name": "PartnerMismatch"
    },
    {
      "code": "12005",
      "description": "",
      "name": "ItemAlreadyExist"
    },
    {
      "code": "12006",
      "description": "",
      "name": "Registered"
    },
    {
      "code": "12007",
      "description": "",
      "name": "VersionNotFound"
    },
    {
      "code": "12008",
      "description": "",
      "name": "AlreadyExist"
    },
    {
      "code": "13000",
      "description": "",
      "name": "FailedToDeleteGroupCanaryDeploymentConfiguration"
    },
    {
      "code": "13001",
      "description": "",
      "name": "FailedToSetAllGroupCanaryDeploymentMigrationEventsStatus"
    },
    {
      "code": "13002",
      "description": "",
      "name": "FailedToEnableCanaryDeploymentMigrationEvent"
    },
    {
      "code": "13003",
      "description": "",
      "name": "FailedToDisableCanaryDeploymentMigrationEvent"
    },
    {
      "code": "13004",
      "description": "",
      "name": "FailedToSetRouteAppTokenController"
    },
    {
      "code": "13005",
      "description": "",
      "name": "FailedToSetRouteUserLoginPinController"
    },
    {
      "code": "13006",
      "description": "",
      "name": "GroupCanaryDeploymentConfigurationNotSetYet"
    },
    {
      "code": "13007",
      "description": "",
      "name": "FailedToSetRouteSessionController"
    },
    {
      "code": "13008",
      "description": "",
      "name": "FailedToSetRouteHouseHoldDevicePinActions"
    },
    {
      "code": "13009",
      "description": "",
      "name": "FailedToSetRouteRefreshToken"
    },
    {
      "code": "13010",
      "description": "",
      "name": "FailedToSetAllRoutingActions"
    },
    {
      "code": "13011",
      "description": "",
      "name": "CanaryDeploymentConfigurationIsDisabledOnTheEnvironment"
    },
    {
      "code": "500003",
      "message": "Bad request",
      "name": "BadRequest"
    },
    {
      "code": "500057",
      "message": "Invalid version [@version@]",
      "name": "InvalidVersion"
    },
    {
      "code": "500004",
      "message": "Service Forbidden",
      "name": "ServiceForbidden"
    },
    {
      "code": "500051",
      "message": "Action [@action@] is forbidden for property [@type@].[@property@]",
      "name": "PropertyActionForbidden"
    },
    {
      "code": "500052",
      "message": "Argument [@argument@] in action [@service@].[@action@] is forbidden",
      "name": "ActionArgumentForbidden"
    },
    {
      "code": "500015",
      "message": "Invalid KS format",
      "name": "InvalidKS"
    },
    {
      "code": "500016",
      "message": "KS expired",
      "name": "ExpiredKS"
    },
    {
      "code": "500008",
      "message": "Partner invalid",
      "name": "PartnerInvalid"
    },
    {
      "code": "500017",
      "message": "Invalid refresh token",
      "name": "InvalidRefreshToken"
    },
    {
      "code": "500034",
      "message": "Refresh token failed",
      "name": "RefreshTokenFailed"
    },
    {
      "code": "500035",
      "message": "Invalid user [@id@]",
      "name": "UnauthorizedUser"
    },
    {
      "code": "500060",
      "message": "Invalid UDID [@id@]",
      "name": "InvalidUdid"
    },
    {
      "code": "500011",
      "message": "Service [@service@] not found",
      "name": "InvalidService"
    },
    {
      "code": "500012",
      "message": "Action [@service@.@action@] not found",
      "name": "InvalidAction"
    },
    {
      "code": "500033",
      "message": "Action not specified",
      "name": "ActionNotSpecified"
    },
    {
      "code": "500054",
      "message": "Invalid action parameter [@parameter@]",
      "name": "InvalidActionParameter"
    },
    {
      "code": "500013",
      "message": "Invalid action parameters",
      "name": "InvalidActionParameters"
    },
    {
      "code": "500079",
      "message": "This request aborted because there was an error in request number [@index@]",
      "name": "RequestAborted"
    },
    {
      "code": "500080",
      "message": "This request skipped [@reason@]",
      "name": "RequestSkipped"
    },
    {
      "code": "50026",
      "message": "Argument [@argument@] is invalid",
      "name": "InvalidArgument"
    },
    {
      "code": "500031",
      "message": "Argument [@argument@] must be numeric",
      "name": "ArgumentMustBeNumeric"
    },
    {
      "code": "50027",
      "message": "Argument [@argument@] cannot be empty",
      "name": "ArgumentCannotBeEmpty"
    },
    {
      "code": "500036",
      "message": "Argument [@argument@] is not writeable",
      "name": "ArgumentReadonly"
    },
    {
      "code": "500037",
      "message": "Argument [@argument@] is not updateable",
      "name": "ArgumentInsertonly"
    },
    {
      "code": "500041",
      "message": "Enumerator value [@value@] is not supported for argument [@argument@]",
      "name": "EnumValueNotSupported"
    },
    {
      "code": "500044",
      "message": "Argument [@argument@] values must be of type [@enum@]",
      "name": "ArgumentShouldBeEnum"
    },
    {
      "code": "500058",
      "message": "Argument [@argument@] values must have minimum value of [@value@]",
      "name": "ArgumentShouldContainMinValueCrossed"
    },
    {
      "code": "500059",
      "message": "Argument [@argument@] values must have max value of [@value@]",
      "name": "ArgumentShouldContainMaxValueCrossed"
    },
    {
      "code": "500056",
      "message": "One of the arguments [@arguments@] must have a value",
      "name": "ArgumentsCannotBeEmpty"
    },
    {
      "code": "500038",
      "message": "Only one of @argument1@ or @argument2@ can be used, not both of them",
      "name": "ArgumentsConflictsEachOther"
    },
    {
      "code": "500095",
      "message": "Only one of the arguments [@arguments@] can be used, not all of them",
      "name": "MultipleArgumentsConflictsEachOther"
    },
    {
      "code": "500039",
      "message": "Argument [@argument@] time have passed",
      "name": "TimeInPast"
    },
    {
      "code": "500045",
      "message": "Argument [@argument@] maximum length is [@value@]",
      "name": "ArgumentMaxLengthCrossed"
    },
    {
      "code": "500046",
      "message": "Argument [@argument@] minimum length is [@value@]",
      "name": "ArgumentMinLengthCrossed"
    },
    {
      "code": "500047",
      "message": "Argument [@argument@] maximum value is [@value@]",
      "name": "ArgumentMaxValueCrossed"
    },
    {
      "code": "500048",
      "message": "Argument [@argument@] minimum value is [@value@]",
      "name": "ArgumentMinValueCrossed"
    },
    {
      "code": "500092",
      "message": "Argument [@argument@] not in predefined range [@value@]",
      "name": "ArgumentNotInPredefinedRange"
    },
    {
      "code": "500061",
      "message": "Argument [@argument1@] value conflicts Argument [@argument2@] value",
      "name": "ArgumentsValuesConflictEachOther"
    },
    {
      "code": "500066",
      "message": "Argument [@argument@] can not appear twice",
      "name": "ArgumentsDuplicate"
    },
    {
      "code": "500067",
      "message": "Argument [@argument@] value must be of type [@value@]",
      "name": "InvalidArgumentValue"
    },
    {
      "code": "500069",
      "message": "languageCode: @lngCode@ has been sent more than once",
      "name": "DuplicateLanguageSent"
    },
    {
      "code": "500070",
      "message": "Invalid value for feature: @feature@. feature can only contain alphanumeric values and/or underscore up until 64 characters",
      "name": "InvalidValueForFeature"
    },
    {
      "code": "500071",
      "message": "Default language must be one of the values sent for @object@",
      "name": "DefaultLanguageMustBeSent"
    },
    {
      "code": "500072",
      "message": "language: @lng@ is not part of group supported languages",
      "name": "GroupDoesNotContainLanguage"
    },
    {
      "code": "500073",
      "message": "Global language parameter must be asterisk for write actions of multilingualName",
      "name": "GlobalLanguageParameterMustBeAsterisk"
    },
    {
      "code": "500074",
      "message": "multipleValue property must have a value when KalturaMetaDataType equals STRING",
      "name": "MultiValueWasNotSentForMetaDataTypeString"
    },
    {
      "code": "500075",
      "message": "Tag translations are not allowed using asset controller, please use tag controller",
      "name": "TagTranslationNotAllowed"
    },
    {
      "code": "500081",
      "message": "Argument [@argument1@] cannot be empty if [@argument2@] not empty",
      "name": "OneOfArgumentsCannotBeEmpty"
    },
    {
      "code": "500083",
      "message": "Type [@value@] is not supported for argument [@argument@]",
      "name": "TypeNotSupported"
    },
    {
      "code": "500084",
      "message": "Format @formatName@(@format@) is not supported.",
      "name": "FormatNotSupported"
    },
    {
      "code": "500029",
      "message": "Media ids must be numeric",
      "name": "MediaIdsMustBeNumeric"
    },
    {
      "code": "500030",
      "message": "EPG internal ids must be numeric",
      "name": "EpgInternalIdsMustBeNumeric"
    },
    {
      "code": "500032",
      "message": "Argument [@argument@] cannot be empty or all",
      "name": "ListTypeCannotBeEmptyOrAll"
    },
    {
      "code": "500049",
      "message": "Duplicate asset: id [@id@] type = [@type@]",
      "name": "DuplicateAsset"
    },
    {
      "code": "500050",
      "message": "Duplicate file: id [@id@]",
      "name": "DuplicateFile"
    },
    {
      "code": "500062",
      "message": "Unable to create household for role",
      "name": "UnableToCreateHouseholdForRole"
    },
    {
      "code": "500063",
      "message": "externalCode: [@externalCode@], externalMessage: [@externalMessage@]",
      "name": "ExternalError"
    },
    {
      "code": "500065",
      "message": "HTTP [@argument@] method not supported",
      "name": "HttpMethodNotSupported"
    },
    {
      "code": "500082",
      "message": "Property [@property@] is supported only for OPC accounts",
      "name": "PropertyIsOpcSupported"
    },
    {
      "code": "500086",
      "message": "Key of [@property@] cannot be empty or null",
      "name": "KeyCannotBeEmptyOrNull"
    },
    {
      "code": "500087",
      "message": "[@property@] must contain one argument from type [@type@]",
      "name": "MissingMandatoryArgumentInProperty"
    },
    {
      "code": "500088",
      "message": "Argument [@argument@] maximum items is [@value@]",
      "name": "ArgumentMaxItemsCrossed"
    },
    {
      "code": "500090",
      "message": "Argument [@argument@] value must be match with in pattern [@pattern@]",
      "name": "ArgumentMatchPatternCrossed"
    },
    {
      "code": "500091",
      "message": "Argument [@argument@] minimum items is [@value@]",
      "name": "ArgumentMinItemsCrossed"
    },
    {
      "code": "500093",
      "message": "Argument [@argument@] minimum properties is [@value@]",
      "name": "ArgumentMinPropertiesCrossed"
    },
    {
      "code": "500094",
      "message": "Argument [@argument@] maximum properties is [@value@]",
      "name": "ArgumentMaxPropertiesCrossed"
    },
    {
      "code": "500028",
      "message": "Household [@household@] forbidden",
      "name": "HouseholdForbidden"
    },
    {
      "code": "50024",
      "message": "Switching users is not allowed for partner",
      "name": "SwitchingUsersIsNotAllowedForPartner"
    },
    {
      "code": "50023",
      "message": "Application-token [@id@] is not active",
      "name": "NotActiveAppToken"
    },
    {
      "code": "50022",
      "message": "Invalid application-token hash",
      "name": "InvalidAppTokenHash"
    },
    {
      "code": "50021",
      "message": "Application-token is expired",
      "name": "ExpiredAppToken"
    },
    {
      "code": "500085",
      "message": "KS and session are not from the same group",
      "name": "GroupMissMatch"
    },
    {
      "code": "500096",
      "message": "Too many requests",
      "name": "RateLimitExceeded"
    },
    {
      "code": "1",
      "message": "error",
      "name": "Error"
    },
    {
      "code": "500006",
      "message": "Missing configuration [@configuration@]",
      "name": "MissingConfiguration"
    },
    {
      "code": "500007",
      "message": "@objectType@ not found",
      "name": "NotFound"
    },
    {
      "code": "500055",
      "message": "@objectType@ id [@id@] not found",
      "name": "ObjectIdNotFound"
    },
    {
      "code": "50025",
      "message": "Invalid multirequest token",
      "name": "InvalidMultirequestToken"
    },
    {
      "code": "500076",
      "message": "Invalid object type [@type@]",
      "name": "InvalidObjectType"
    },
    {
      "code": "500018",
      "message": "Abstract parameter type [@type@]",
      "name": "AbstractParameter"
    },
    {
      "code": "500053",
      "message": "Missing parameter [@parameter@]",
      "name": "MissingParameter"
    },
    {
      "code": "500042",
      "message": "Invalid multirequest token, response index is not zero based",
      "name": "MultirequestIndexNotZeroBased"
    },
    {
      "code": "500043",
      "message": "Invalid multirequest token, invalid response index",
      "name": "MultirequestInvalidIndex"
    },
    {
      "code": "500064",
      "message": "Invalid multirequest service, invalid service: [@service@], action: [@action@]",
      "name": "MultirequestGenericMethod"
    },
    {
      "code": "500078",
      "message": "Invalid multirequest token, invalid operator [@operator@] for condition type [@conditionType@]",
      "name": "MultirequestInvalidOperatorForConditionType"
    },
    {
      "code": "500077",
      "message": "Invalid multirequest token, invalid condition value [@conditionValue@] for condition type [@conditionType@]",
      "name": "MultirequestInvalidConditionValue"
    }
  ]
}